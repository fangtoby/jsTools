cscope 15 $HOME/Desktop/T/yiban -q 0000004979 0001381513
	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/fsevents.cc

6 
	~"«n.h
"

7 
	~"uv.h
"

8 
	~"v8.h
"

9 
	~"±hªad.h
"

10 
	~"C‹eFound©i⁄/C‹eFound©i⁄.h
"

11 
	~"C‹eSîvi˚s/C‹eSîvi˚s.h
"

12 
	~<io°ªam
>

13 
	~<ve˘‹
>

15 
	~"§c/°‹age.cc
"

16 
«me•a˚
 
	gf£
 {

17 ˛as†
	cFSEvíts
 : 
public
 
node
::
Obje˘Wøp
 {

18 
public
:

19 
FSEvíts
(c⁄° *
∑th
, 
N™
::
CÆlback
 *
h™dÀr
);

20 ~
FSEvíts
();

23 
boﬁ
 
	glockSèπed
;

24 
±hªad_muãx_t
 
	glockmuãx
;

25 
lockögSèπ
();

26 
lock
();

27 
u∆ock
();

28 
lockögSt›
();

31 
uv_async_t
 
	gasync
;

32 
asyncSèπ
();

33 
asyncTriggî
();

34 
asyncSt›
();

37 
±hªad_t
 
	gthªad
;

38 
CFRunLo›Ref
 
	gthªadlo›
;

39 
thªadSèπ
();

40 *
thªadRun
(*
˘x
);

41 
thªadSt›
();

44 
	gN™
::
CÆlback
 *
h™dÀr
;

45 
emôEvít
(c⁄° *
∑th
, 
UI¡32
 
Êags
, 
UI¡64
 
id
);

48 
CFAºayRef
 
	g∑ths
;

49 
	g°d
::
ve˘‹
<
f£_evít
*> 
evíts
;

50 
Inôülize
(
v8
::
H™dÀ
<v8::
Obje˘
> 
exp‹ts
);

53 
NAN_METHOD
(
New
);

54 
NAN_METHOD
(
St›
);

55 
NAN_METHOD
(
Sèπ
);

60 
usög
 
«me•a˚
 
	gf£
;

62 
	gFSEvíts
::
	$FSEvíts
(c⁄° *
∑th
, 
N™
::
CÆlback
 *
h™dÀr
): 
	$h™dÀr
(
h™dÀr
) {

63 
CFSåögRef
 
dús
[] = { 
	`CFSåögCª©eWôhCSåög
(
NULL
, 
∑th
, 
kCFSåögEncodögUTF8
) };

64 
∑ths
 = 
	`CFAºayCª©e
(
NULL
, (c⁄° **)&
dús
, 1, NULL);

65 
thªadlo›
 = 
NULL
;

66 
	`lockögSèπ
();

67 
	}
}

68 
	gFSEvíts
::~
	$FSEvíts
() {

69 
°d
::
cout
 << "YIKES" << std::
ídl
;

70 
	`lockögSt›
();

71 
dñëe
 
h™dÀr
;

72 
h™dÀr
 = 
NULL
;

74 
	`CFRñó£
(
∑ths
);

75 
	}
}

77 #i‚de‡
kFSEvítSåómEvítFœgIãmCª©ed


78 
	#kFSEvítSåómEvítFœgIãmCª©ed
 0x00000010

	)

81 
	~"§c/lockög.cc
"

82 
	~"§c/async.cc
"

83 
	~"§c/thªad.cc
"

84 
	~"§c/c⁄°™ts.cc
"

85 
	~"§c/mëhods.cc
"

87 
	gFSEvíts
::
Inôülize
(
v8
::
H™dÀ
<v8::
Obje˘
> 
exp‹ts
) {

88 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::Fun˘i⁄Tem∂©e>(
FSEvíts
::New);

89 
	gçl
->
SëCœssName
(
N™
::
New
<
v8
::
Såög
>("FSEvíts").
ToLoˇlChecked
());

90 
	gçl
->
In°™˚Tem∂©e
()->
SëI¡î«lFõldCou¡
(1);

91 
	gçl
->
PrŸŸy≥Tem∂©e
()->
Së
(

92 
N™
::
New
<
v8
::
Såög
>("°¨t").
ToLoˇlChecked
(),

93 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
FSEvíts
::
Sèπ
));

94 
	gçl
->
PrŸŸy≥Tem∂©e
()->
Së
(

95 
N™
::
New
<
v8
::
Såög
>("°›").
ToLoˇlChecked
(),

96 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
FSEvíts
::
St›
));

97 
	gexp‹ts
->
Së
(
N™
::
New
<
v8
::
Såög
>("C⁄°™ts").
ToLoˇlChecked
(), 
C⁄°™ts
());

98 
	gexp‹ts
->
Së
(
N™
::
New
<
v8
::
Såög
>("FSEvíts").
ToLoˇlChecked
(),

99 
çl
->
GëFun˘i⁄
());

102 
NODE_MODULE
(
f£
, 
FSEvíts
::
Inôülize
)

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan.h

20 #i‚de‡
NAN_H_


21 
	#NAN_H_


	)

23 
	~<node_vîsi⁄.h
>

25 
	#NODE_0_10_MODULE_VERSION
 11

	)

26 
	#NODE_0_12_MODULE_VERSION
 14

	)

27 
	#ATOM_0_21_MODULE_VERSION
 41

	)

28 
	#IOJS_1_0_MODULE_VERSION
 42

	)

29 
	#IOJS_1_1_MODULE_VERSION
 43

	)

30 
	#IOJS_2_0_MODULE_VERSION
 44

	)

31 
	#IOJS_3_0_MODULE_VERSION
 45

	)

32 
	#NODE_4_0_MODULE_VERSION
 46

	)

33 
	#NODE_5_0_MODULE_VERSION
 47

	)

34 
	#NODE_6_0_MODULE_VERSION
 48

	)

36 #ifde‡
_MSC_VER


37 
	#NAN_HAS_CPLUSPLUS_11
 (
_MSC_VER
 >1800)

	)

39 
	#NAN_HAS_CPLUSPLUS_11
 (
__˝lu•lus
 >201103L)

	)

42 #i‡
NODE_MODULE_VERSION
 >
IOJS_3_0_MODULE_VERSION
 && !
NAN_HAS_CPLUSPLUS_11


43 #îr‹ 
This
 
vîsi⁄
 
of
 
node
/
NAN
/
v8
 
ªquúes
 
a
 
C
++11 
compûî


46 
	~<uv.h
>

47 
	~<node.h
>

48 
	~<node_buf„r.h
>

49 
	~<node_obje˘_wøp.h
>

50 
	~<Æg‹ôhm
>

51 
	~<c°rög
>

52 
	~<˛imôs
>

53 
	~<c°dlib
>

54 #i‡
deföed
(
_MSC_VER
)

55 #¥agm®
w¨nög
–
push
 )

56 #¥agm®
w¨nög
–
dißbÀ
 : 4530 )

57 
	~<°rög
>

58 
	~<ve˘‹
>

59 #¥agm®
w¨nög
–
p›
 )

61 
	~<°rög
>

62 
	~<ve˘‹
>

66 #ifde‡
UV_VERSION_MAJOR


67 #i‚de‡
UV_VERSION_PATCH


68 
	#UV_VERSION_PATCH
 0

	)

70 
	#NAUV_UVVERSION
 ((
UV_VERSION_MAJOR
 << 16) | \

71 (
UV_VERSION_MINOR
 << 8) | \

72 (
UV_VERSION_PATCH
))

	)

74 
	#NAUV_UVVERSION
 0x000b00

	)

77 #i‡
NAUV_UVVERSION
 < 0x000b0b

78 #ifde‡
WIN32


79 
	~<wödows.h
>

81 
	~<±hªad.h
>

85 
«me•a˚
 
	gN™
 {

87 #i‡
deföed
(
__GNUC__
Ë&& !(deföed(
DEBUG
) && DEBUG)

88 
	#NAN_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

89 #ñi‡
deföed
(
_MSC_VER
Ë&& !(deföed(
DEBUG
) && DEBUG)

90 
	#NAN_INLINE
 
__f‹˚ölöe


	)

92 
	#NAN_INLINE
 
ölöe


	)

95 #i‡
deföed
(
__GNUC__
) && \

96 !(
deföed
(
V8_DISABLE_DEPRECATIONS
Ë&& 
	gV8_DISABLE_DEPRECATIONS
)

97 
	#NAN_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

98 #ñi‡
deföed
(
_MSC_VER
) && \

99 !(
deföed
(
V8_DISABLE_DEPRECATIONS
Ë&& 
	gV8_DISABLE_DEPRECATIONS
)

100 
	#NAN_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

102 
	#NAN_DEPRECATED


	)

105 #i‡
NAN_HAS_CPLUSPLUS_11


106 
	#NAN_DISALLOW_ASSIGN
(
CLASS
Ë
›î©‹
=(c⁄° CLASS&Ë
dñëe
;

	)

107 
	#NAN_DISALLOW_COPY
(
CLASS
Ë
	`CLASS
(c⁄° CLASS&Ë
dñëe
;

	)

108 
	#NAN_DISALLOW_MOVE
(
CLASS
) \

109 
	`CLASS
(
CLASS
&&Ë
dñëe
; \

110 
›î©‹
=(
CLASS
&&Ë
dñëe
;

	)

112 
	#NAN_DISALLOW_ASSIGN
(
CLASS
Ë
›î©‹
=(c⁄° CLASS&);

	)

113 
	#NAN_DISALLOW_COPY
(
CLASS
Ë
	`CLASS
(c⁄° CLASS&);

	)

114 
	#NAN_DISALLOW_MOVE
(
CLASS
)

	)

117 
	#NAN_DISALLOW_ASSIGN_COPY
(
CLASS
) \

118 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

119 
	`NAN_DISALLOW_COPY
(
CLASS
)

	)

121 
	#NAN_DISALLOW_ASSIGN_MOVE
(
CLASS
) \

122 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

123 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

125 
	#NAN_DISALLOW_COPY_MOVE
(
CLASS
) \

126 
	`NAN_DISALLOW_COPY
(
CLASS
) \

127 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

129 
	#NAN_DISALLOW_ASSIGN_COPY_MOVE
(
CLASS
) \

130 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

131 
	`NAN_DISALLOW_COPY
(
CLASS
) \

132 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

134 
	#TYPE_CHECK
(
T
, 
S
) \

135 
Ál£
) { \

136 *(
°©ic_ˇ°
<
T
 *vﬁ©ûê*>(0)Ë°©ic_ˇ°<
S
*>(0); \

137 }

	)

141 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


142 
	gv8
::
	tH™dÀ
<
	tv8
::
	tObje˘
> 
	tADDON_REGISTER_FUNCTION_ARGS_TYPE
;

144 
	gv8
::
	tLoˇl
<
	tv8
::
	tObje˘
> 
	tADDON_REGISTER_FUNCTION_ARGS_TYPE
;

147 
	#NAN_MODULE_INIT
(
«me
) \

148 
	`«me
(
N™
::
ADDON_REGISTER_FUNCTION_ARGS_TYPE
 
èrgë
)

	)

152 
	~"«n_ˇŒbacks.h
"

156 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_12_MODULE_VERSION
)

157 
	gv8
::
	tS¸ùt
 
	tUnboundS¸ùt
;

158 
	gv8
::
	tS¸ùt
 
	tBoundS¸ùt
;

160 
	gv8
::
	tUnboundS¸ùt
 UnboundScript;

161 
	gv8
::
	tS¸ùt
 
	tBoundS¸ùt
;

164 #i‡(
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION
)

165 
	gv8
::
	tSåög
::
	tExã∫ÆAsciiSåögResour˚


166 
	tExã∫ÆO√ByãSåögResour˚
;

168 
	gv8
::
	tSåög
::
	tExã∫ÆO√ByãSåögResour˚


169 
	tExã∫ÆO√ByãSåögResour˚
;

172 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

173 
	gãm∂©e
<
ty≥«me
 
	gT
>

174 
˛ass
 
	gN⁄C›yabÀPîsi°ítTøôs
 :

175 
public
 
v8
::
N⁄C›yabÀPîsi°ítTøôs
<
T
> {};

176 
	gãm∂©e
<
ty≥«me
 
	gT
>

177 
˛ass
 
	gC›yabÀPîsi°ítTøôs
 :

178 
public
 
v8
::
C›yabÀPîsi°ítTøôs
<
T
> {};

180 
	gãm∂©e
<
ty≥«me
 
	gT
>

181 
˛ass
 
	gPîsi°ítBa£
 :

182 
public
 
v8
::
Pîsi°ítBa£
<
T
> {};

184 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
 = 
v8
::
N⁄C›yabÀPîsi°ítTøôs
<
T
> >

185 
˛ass
 
Pîsi°ít
;

187 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gN⁄C›yabÀPîsi°ítTøôs
;

188 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPîsi°ítBa£
;

189 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gP
> 
˛ass
 
	gWókCÆlbackD©a
;

190 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
 = 
N⁄C›yabÀPîsi°ítTøôs
<
T
> >

191 
˛ass
 
Pîsi°ít
;

194 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

195 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

196 
	~"«n_maybe_43_öl.h
"

198 
	~"«n_maybe_¥e_43_öl.h
"

201 
	~"«n_c⁄vîãrs.h
"

202 
	~"«n_√w.h
"

204 #i‡
NAUV_UVVERSION
 < 0x000b17

205 
	#NAUV_WORK_CB
(
func
) \

206 
	`func
(
uv_async_t
 *
async
, )

	)

208 
	#NAUV_WORK_CB
(
func
) \

209 
	`func
(
uv_async_t
 *
async
)

	)

212 #i‡
NAUV_UVVERSION
 >= 0x000b0b

214 
uv_key_t
 
	t«uv_key_t
;

216 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
 *
key
) {

217  
uv_key_¸óã
(
key
);

220 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
 *
key
) {

221 
uv_key_dñëe
(
key
);

224 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
 *
key
) {

225  
uv_key_gë
(
key
);

228 
ölöe
 
«uv_key_£t
(
«uv_key_t
 *
key
, *
vÆue
) {

229 
uv_key_£t
(
key
, 
vÆue
);

239 #i‚de‡
WIN32


241 
±hªad_key_t
 
	t«uv_key_t
;

243 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
* 
key
) {

244  -
±hªad_key_¸óã
(
key
, 
NULL
);

247 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
* 
key
) {

248 i‡(
±hªad_key_dñëe
(*
key
))

249 
ab‹t
();

252 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
* 
key
) {

253  
±hªad_gë•ecific
(*
key
);

256 
ölöe
 
«uv_key_£t
(
«uv_key_t
* 
key
, * 
vÆue
) {

257 i‡(
±hªad_£t•ecific
(*
key
, 
vÆue
))

258 
ab‹t
();

264 
DWORD
 
	gés_ödex
;

265 } 
	t«uv_key_t
;

267 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
* 
key
) {

268 
	gkey
->
	gés_ödex
 = 
TlsAŒoc
();

269 i‡(
	gkey
->
	gés_ödex
 =
TLS_OUT_OF_INDEXES
)

270  
UV_ENOMEM
;

274 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
* 
key
) {

275 i‡(
TlsFªe
(
key
->
és_ödex
Ë=
FALSE
)

276 
ab‹t
();

277 
	gkey
->
	gés_ödex
 = 
TLS_OUT_OF_INDEXES
;

280 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
* 
key
) {

281 * 
	gvÆue
 = 
TlsGëVÆue
(
key
->
és_ödex
);

282 i‡(
	gvÆue
 =
NULL
)

283 i‡(
GëLa°Eº‹
(Ë!
ERROR_SUCCESS
)

284 
ab‹t
();

285  
	gvÆue
;

288 
ölöe
 
«uv_key_£t
(
«uv_key_t
* 
key
, * 
vÆue
) {

289 i‡(
TlsSëVÆue
(
key
->
és_ödex
, 
vÆue
Ë=
FALSE
)

290 
ab‹t
();

296 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


297 
	gãm∂©e
<
ty≥«me
 
	gT
>

298 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T>);

301 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

302 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

303 
v8
::
	tWókCÆlbackTy≥
 WeakCallbackType;

305 
	sWókCÆlbackTy≥
 {

306 
	eE
 {
	gkP¨amëî
, 
	gkI¡î«lFõlds
};

307 
E
 
	gty≥
;

308 
WókCÆlbackTy≥
(
E
 
Ÿhî
Ë: 
ty≥
(other) {}

309 
ölöe
 
boﬁ
 
›î©‹
==(
E
 
Ÿhî
Ë{  othî =
this
->
ty≥
; }

310 
ölöe
 
boﬁ
 
	g›î©‹
!=(
E
 
Ÿhî
Ë{  !
›î©‹
==(other); }

314 
	gãm∂©e
<
ty≥«me
 
	gP
> 
˛ass
 
	gWókCÆlbackInfo
;

316 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


317 
	~"«n_≥rsi°ít_12_öl.h
"

319 
	~"«n_≥rsi°ít_¥e_12_öl.h
"

322 
«me•a˚
 
	gimp
 {

323 c⁄° 
size_t
 
	gkMaxLígth
 = 0x3fffffff;

326 #i‡
NODE_MAJOR_VERSION
 > 0 || \

327 
	gNODE_MINOR_VERSION
 > 10 || \

328 
	gNODE_MINOR_VERSION
 =10 && 
NODE_PATCH_VERSION
 >= 29 || \

329 
NODE_MINOR_VERSION
 =8 && 
NODE_PATCH_VERSION
 >= 27

330 c⁄° 
kRïœ˚InvÆidUtf8
 = 
v8
::
Såög
::
REPLACE_INVALID_UTF8
;

332 c⁄° 
	gkRïœ˚InvÆidUtf8
 = 0;

338 ˛as†
	cH™dÀSc›e
 {

339 
	gv8
::
H™dÀSc›e
 
sc›e
;

341 
	gpublic
:

342 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


343 
ölöe
 
H™dÀSc›e
(Ë: 
sc›e
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

344 
ölöe
 
NumbîOfH™dÀs
() {

345  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
(v8::
Isﬁ©e
::
GëCuºít
());

348 
ölöe
 
H™dÀSc›e
(Ë: 
sc›e
() {}

349 
ölöe
 
NumbîOfH™dÀs
() {

350  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
();

354 
	g¥iv©e
:

357 
H™dÀSc›e
(const HandleScope &);

358 
	g›î©‹
=(c⁄° 
H™dÀSc›e
 &);

359 *
›î©‹
 
√w
(
size_t
 
size
);

360 
›î©‹
 
dñëe
(*, 
size_t
);

363 ˛as†
	cEsˇ∑bÀH™dÀSc›e
 {

364 
	gpublic
:

365 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


366 
ölöe
 
Esˇ∑bÀH™dÀSc›e
(Ë: 
sc›e
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

368 
ölöe
 
NumbîOfH™dÀs
() {

369  
v8
::
Esˇ∑bÀH™dÀSc›e
::
NumbîOfH™dÀs
(v8::
Isﬁ©e
::
GëCuºít
());

372 
	gãm∂©e
<
ty≥«me
 
	gT
>

373 
ölöe
 
	gv8
::
Loˇl
<
T
> 
Esˇ≥
(
v8
::Loˇl<T> 
vÆue
) {

374  
sc›e
.
Esˇ≥
(
vÆue
);

377 
	g¥iv©e
:

378 
v8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

380 
ölöe
 
Esˇ∑bÀH™dÀSc›e
(Ë: 
sc›e
() {}

382 
ölöe
 
NumbîOfH™dÀs
() {

383  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
();

386 
	gãm∂©e
<
ty≥«me
 
	gT
>

387 
ölöe
 
	gv8
::
Loˇl
<
T
> 
Esˇ≥
(
v8
::Loˇl<T> 
vÆue
) {

388  
sc›e
.
Clo£
(
vÆue
);

391 
	g¥iv©e
:

392 
v8
::
H™dÀSc›e
 
sc›e
;

395 
	g¥iv©e
:

398 
Esˇ∑bÀH™dÀSc›e
(const EscapableHandleScope &);

399 
	g›î©‹
=(c⁄° 
Esˇ∑bÀH™dÀSc›e
 &);

400 *
›î©‹
 
√w
(
size_t
 
size
);

401 
›î©‹
 
dñëe
(*, 
size_t
);

406 ˛as†
	cTryC©ch
 {

407 
	gv8
::
TryC©ch
 
åy_ˇtch_
;

408 
‰õnd
 
F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
&);

410 
	gpublic
:

411 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


412 
TryC©ch
(Ë: 
åy_ˇtch_
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

415 
NAN_INLINE
 
boﬁ
 
HasCaught
(Ëc⁄° {  
åy_ˇtch_
.HasCaught(); }

417 
NAN_INLINE
 
boﬁ
 
C™C⁄töue
(Ëc⁄° {  
	gåy_ˇtch_
.CanContinue(); }

419 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
ReThrow
() {

420 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


421  
New
(
åy_ˇtch_
.
ReThrow
());

423  
	gåy_ˇtch_
.
ReThrow
();

427 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
Ex˚±i⁄
() const {

428  
åy_ˇtch_
.
Ex˚±i⁄
();

431 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

432 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

433 
NAN_INLINE
 
v8
::
MaybeLoˇl
<v8::
VÆue
> 
SèckTø˚
() const {

434  
åy_ˇtch_
.
SèckTø˚
(
GëCuºítC⁄ãxt
());

437 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
SèckTø˚
() const {

438  
MaybeLoˇl
<
v8
::
VÆue
>(
åy_ˇtch_
.
SèckTø˚
());

442 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Mesßge
> Message() const {

443  
åy_ˇtch_
.
Mesßge
();

446 
NAN_INLINE
 
Re£t
(Ë{ 
	gåy_ˇtch_
.Reset(); }

448 
NAN_INLINE
 
SëVîbo£
(
boﬁ
 
vÆue
Ë{ 
	gåy_ˇtch_
.SetVerbose(value); }

450 
NAN_INLINE
 
SëC≠tuªMesßge
(
boﬁ
 
vÆue
) {

451 
	gåy_ˇtch_
.
SëC≠tuªMesßge
(
vÆue
);

458 #i‡
NODE_MODULE_VERSION
 >
NODE_0_12_MODULE_VERSION


459 
NAN_INLINE


460 
	$SëCou¡îFun˘i⁄
(
v8
::
Cou¡îLookupCÆlback
 
cb
) {

461 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëCou¡îFun˘i⁄
(
cb
);

462 
	}
}

464 
NAN_INLINE


465 
	$SëCª©eHi°ogømFun˘i⁄
(
v8
::
Cª©eHi°ogømCÆlback
 
cb
) {

466 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëCª©eHi°ogømFun˘i⁄
(
cb
);

467 
	}
}

469 
NAN_INLINE


470 
	$SëAddHi°ogømSam∂eFun˘i⁄
(
v8
::
AddHi°ogømSam∂eCÆlback
 
cb
) {

471 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëAddHi°ogømSam∂eFun˘i⁄
(
cb
);

472 
	}
}

474 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

475 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

476 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

477  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`IdÀNŸifiˇti⁄Dódlöe
(

478 
idÀ_time_ö_ms
 * 0.001);

479 
	}
}

481 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

482  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
);

483 
	}
}

486 
NAN_INLINE
 
	$LowMem‹yNŸifiˇti⁄
() {

487 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`LowMem‹yNŸifiˇti⁄
();

488 
	}
}

490 
NAN_INLINE
 
	$C⁄ãxtDi•o£dNŸifiˇti⁄
() {

491 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`C⁄ãxtDi•o£dNŸifiˇti⁄
();

492 
	}
}

494 
NAN_INLINE


495 
	$SëCou¡îFun˘i⁄
(
v8
::
Cou¡îLookupCÆlback
 
cb
) {

496 
v8
::
V8
::
	`SëCou¡îFun˘i⁄
(
cb
);

497 
	}
}

499 
NAN_INLINE


500 
	$SëCª©eHi°ogømFun˘i⁄
(
v8
::
Cª©eHi°ogømCÆlback
 
cb
) {

501 
v8
::
V8
::
	`SëCª©eHi°ogømFun˘i⁄
(
cb
);

502 
	}
}

504 
NAN_INLINE


505 
	$SëAddHi°ogømSam∂eFun˘i⁄
(
v8
::
AddHi°ogømSam∂eCÆlback
 
cb
) {

506 
v8
::
V8
::
	`SëAddHi°ogømSam∂eFun˘i⁄
(
cb
);

507 
	}
}

509 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

510  
v8
::
V8
::
	`IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
);

511 
	}
}

513 
NAN_INLINE
 
	$LowMem‹yNŸifiˇti⁄
() {

514 
v8
::
V8
::
	`LowMem‹yNŸifiˇti⁄
();

515 
	}
}

517 
NAN_INLINE
 
	$C⁄ãxtDi•o£dNŸifiˇti⁄
() {

518 
v8
::
V8
::
	`C⁄ãxtDi•o£dNŸifiˇti⁄
();

519 
	}
}

522 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

523 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$Undeföed
() {

524 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


525 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

526  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`Undeföed
(v8::
Isﬁ©e
::
	`GëCuºít
())));

528  
v8
::
	`Undeföed
(v8::
Isﬁ©e
::
	`GëCuºít
());

530 
	}
}

532 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$NuŒ
() {

533 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


534 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

535  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`NuŒ
(v8::
Isﬁ©e
::
	`GëCuºít
())));

537  
v8
::
	`NuŒ
(v8::
Isﬁ©e
::
	`GëCuºít
());

539 
	}
}

541 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$True
() {

542 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


543 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

544  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`True
(v8::
Isﬁ©e
::
	`GëCuºít
())));

546  
v8
::
	`True
(v8::
Isﬁ©e
::
	`GëCuºít
());

548 
	}
}

550 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$FÆ£
() {

551 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


552 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

553  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`FÆ£
(v8::
Isﬁ©e
::
	`GëCuºít
())));

555  
v8
::
	`FÆ£
(v8::
Isﬁ©e
::
	`GëCuºít
());

557 
	}
}

559 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Såög
> 
	$Em±ySåög
() {

560  
v8
::
Såög
::
	`Em±y
(v8::
Isﬁ©e
::
	`GëCuºít
());

561 
	}
}

563 
NAN_INLINE
 
	$Adju°Exã∫ÆMem‹y
(
bc
) {

564  
°©ic_ˇ°
<>(

565 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`Adju°Amou¡OfExã∫ÆAŒoˇãdMem‹y
(
bc
));

566 
	}
}

568 
NAN_INLINE
 
SëTem∂©e
(

569 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


570 , c⁄° *
«me


571 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue
) {

572 
ãm∂
->
Së
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
«me
, 
vÆue
);

575 
NAN_INLINE
 
SëTem∂©e
(

576 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


577 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


578 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


579 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs
) {

580 
ãm∂
->
Së
(
«me
, 
vÆue
, 
©åibuãs
);

583 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
	$GëCuºítC⁄ãxt
() {

584  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`GëCuºítC⁄ãxt
();

585 
	}
}

587 
NAN_INLINE
 * 
GëI¡î«lFõldPoöãr
(

588 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


589 , 
ödex
) {

590  
	gobje˘
->
GëAlig√dPoöãrFromI¡î«lFõld
(
ödex
);

593 
NAN_INLINE
 
SëI¡î«lFõldPoöãr
(

594 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


595 , 
ödex


596 , * 
vÆue
) {

597 
	gobje˘
->
SëAlig√dPoöãrInI¡î«lFõld
(
ödex
, 
vÆue
);

600 
	#NAN_GC_CALLBACK
(
«me
) \

601 
	$«me
(
v8
::
Isﬁ©e
 *
isﬁ©e
, v8::
GCTy≥
 
ty≥
, v8::
GCCÆlbackFœgs
 
Êags
)

	)

603 #i‡
NODE_MODULE_VERSION
 <
NODE_4_0_MODULE_VERSION


604 
v8
::
	tIsﬁ©e
::
	tGCEpûogueCÆlback
 GCEpilogueCallback;

605 
v8
::
	tIsﬁ©e
::
	tGCPrﬁogueCÆlback
 GCPrologueCallback;

607 
v8
::
	tIsﬁ©e
::
	tGCCÆlback
 
	tGCEpûogueCÆlback
;

608 
v8
::
	tIsﬁ©e
::
	tGCCÆlback
 
	tGCPrﬁogueCÆlback
;

611 
NAN_INLINE
 
	$AddGCEpûogueCÆlback
(

612 
GCEpûogueCÆlback
 
ˇŒback


613 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

614 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`AddGCEpûogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

615 
	}
}

617 
NAN_INLINE
 
	$RemoveGCEpûogueCÆlback
(

618 
GCEpûogueCÆlback
 
ˇŒback
) {

619 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`RemoveGCEpûogueCÆlback
(
ˇŒback
);

620 
	}
}

622 
NAN_INLINE
 
	$AddGCPrﬁogueCÆlback
(

623 
GCPrﬁogueCÆlback
 
ˇŒback


624 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

625 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`AddGCPrﬁogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

626 
	}
}

628 
NAN_INLINE
 
	$RemoveGCPrﬁogueCÆlback
(

629 
GCPrﬁogueCÆlback
 
ˇŒback
) {

630 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`RemoveGCPrﬁogueCÆlback
(
ˇŒback
);

631 
	}
}

633 
NAN_INLINE
 
	$GëHópSèti°ics
(

634 
v8
::
HópSèti°ics
 *
hóp_°©i°ics
) {

635 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`GëHópSèti°ics
(
hóp_°©i°ics
);

636 
	}
}

638 
	#X
(
NAME
) \

639 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	$NAME
(c⁄° *
msg
) { \

640 
Esˇ∑bÀH™dÀSc›e
 
sc›e
; \

641  
sc›e
.
	`Esˇ≥
(
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

642 
	}
} \

644 
NAN_INLINE
 \

645 
v8
::
Loˇl
<v8::
VÆue
> 
	`NAME
(v8::Loˇl<v8::
Såög
> 
msg
) { \

646  
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
); \

649 
NAN_INLINE
 
Throw
 ## 
	$NAME
(c⁄° *
msg
) { \

650 
H™dÀSc›e
 
sc›e
; \

651 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
( \

652 
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

653 
	}
} \

655 
NAN_INLINE
 
Throw
 ## 
	`NAME
(
v8
::
Loˇl
<v8::
Såög
> 
msg
) { \

656 
H™dÀSc›e
 
sc›e
; \

657 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
( \

658 
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
)); \

659 }

	)

661 
	$X
(
Eº‹
)

662 
	$X
(
R™geEº‹
)

663 
	$X
(
Re„ªn˚Eº‹
)

664 
	$X
(
Sy¡axEº‹
)

665 
	$X
(
Ty≥Eº‹
)

667 #unde‡
X


669 
NAN_INLINE
 
	`ThrowEº‹
(
v8
::
Loˇl
<v8::
VÆue
> 
îr‹
) {

670 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
(
îr‹
);

671 
	}
}

673 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewBuf„r
(

674 *
d©a


675 , 
size_t
 
Àngth


676 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


677 , 
node
::
Buf„r
::
FªeCÆlback
 
ˇŒback


679 , 
node
::
smÆloc
::
FªeCÆlback
 
ˇŒback


681 , *
höt


685 
as£π
(
Àngth
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

686 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


687  
	gnode
::
Buf„r
::
New
(

688 
v8
::
Isﬁ©e
::
GëCuºít
(), 
d©a
, 
Àngth
, 
ˇŒback
, 
höt
);

690  
	gMaybeLoˇl
<
	gv8
::
Obje˘
>(
node
::
Buf„r
::
New
(

691 
v8
::
Isﬁ©e
::
GëCuºít
(), 
d©a
, 
Àngth
, 
ˇŒback
, 
höt
));

695 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$C›yBuf„r
(

696 c⁄° *
d©a


697 , 
uöt32_t
 
size


701 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

702 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


703  
node
::
Buf„r
::
	`C›y
(

704 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
);

706  
MaybeLoˇl
<
v8
::
Obje˘
>(
node
::
Buf„r
::
	`New
(

707 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
));

709 
	}
}

711 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(
uöt32_t
 
size
) {

714 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

715 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


716  
node
::
Buf„r
::
	`New
(

717 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
size
);

719  
MaybeLoˇl
<
v8
::
Obje˘
>(
node
::
Buf„r
::
	`New
(

720 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
size
));

722 
	}
}

724 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

725 * 
d©a


726 , 
uöt32_t
 
size


730 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

731 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


732  
node
::
Buf„r
::
	`New
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
);

734  
MaybeLoˇl
<
v8
::
Obje˘
>(

735 
node
::
Buf„r
::
	`U£
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
));

737 
	}
}

739 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

740 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

741 
NAN_INLINE
 
MaybeLoˇl
<
v8
::
Såög
>

742 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

743  
v8
::
Såög
::
NewFromO√Byã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
,

744 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

747 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

748 
v8
::
Loˇl
<v8::
Såög
> 
s


749 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


751 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
, 
‹igö
);

752  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
sour˚
);

755 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

756 
v8
::
Loˇl
<v8::
Såög
> 
s


758 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
);

759  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
sour˚
);

762 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

763 
v8
::
Loˇl
<
UnboundS¸ùt
> 
s¸ùt


765  
s¸ùt
->
BödToCuºítC⁄ãxt
()->
Run
(
GëCuºítC⁄ãxt
());

768 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

769 
v8
::
Loˇl
<
BoundS¸ùt
> 
s¸ùt


771  
s¸ùt
->
Run
(
GëCuºítC⁄ãxt
());

774 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
>

775 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

776  
MaybeLoˇl
<
v8
::
Såög
>(

777 
v8
::
Såög
::
NewFromO√Byã
(

778 
v8
::
Isﬁ©e
::
GëCuºít
()

779 , 
vÆue


780 , 
v8
::
Såög
::
kN‹mÆSåög
, 
Àngth
));

783 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

784 
v8
::
Loˇl
<v8::
Såög
> 
s


785 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


787 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
, 
‹igö
);

788  
	gMaybeLoˇl
<
	gBoundS¸ùt
>(

789 
	gv8
::
S¸ùtCompûî
::
Compûe
(
v8
::
Isﬁ©e
::
GëCuºít
(), &
sour˚
));

792 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

793 
v8
::
Loˇl
<v8::
Såög
> 
s


795 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
);

796  
	gMaybeLoˇl
<
	gBoundS¸ùt
>(

797 
	gv8
::
S¸ùtCompûî
::
Compûe
(
v8
::
Isﬁ©e
::
GëCuºít
(), &
sour˚
));

800 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

801 
v8
::
Loˇl
<
UnboundS¸ùt
> 
s¸ùt


803  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
BödToCuºítC⁄ãxt
()->
Run
());

806 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

807 
v8
::
Loˇl
<
BoundS¸ùt
> 
s¸ùt


809  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
Run
());

813 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

814 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


815 , 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
func


816 , 
¨gc


817 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

818 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


819  
New
(
node
::
MakeCÆlback
(

820 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
func
, 
¨gc
, 
¨gv
));

822  
	gnode
::
MakeCÆlback
(

823 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
func
, 
¨gc
, 
¨gv
);

827 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

828 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


829 , 
v8
::
Loˇl
<v8::
Såög
> 
symbﬁ


830 , 
¨gc


831 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

832 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


833  
New
(
node
::
MakeCÆlback
(

834 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
));

836  
	gnode
::
MakeCÆlback
(

837 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
);

841 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

842 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


843 , c⁄° * 
mëhod


844 , 
¨gc


845 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

846 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


847  
New
(
node
::
MakeCÆlback
(

848 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
));

850  
	gnode
::
MakeCÆlback
(

851 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
);

855 
NAN_INLINE
 
	$F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
& 
åy_ˇtch
) {

856 
node
::
	`F©ÆEx˚±i⁄
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
åy_ˇtch
.
åy_ˇtch_
);

857 
	}
}

859 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$EºnoEx˚±i⁄
(

860 
îr‹no


861 , c⁄° * 
sysˇŒ
 = 
NULL


862 , c⁄° * 
mesßge
 = 
NULL


863 , c⁄° * 
∑th
 = 
NULL
) {

864  
node
::
	`EºnoEx˚±i⁄
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
îr‹no
, 
sysˇŒ
,

865 
mesßge
, 
∑th
);

866 
	}
}

868 
NAN_DEPRECATED
 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$N™EºnoEx˚±i⁄
(

869 
îr‹no


870 , c⁄° * 
sysˇŒ
 = 
NULL


871 , c⁄° * 
mesßge
 = 
NULL


872 , c⁄° * 
∑th
 = 
NULL
) {

873  
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

874 
	}
}

876 
	gãm∂©e
<
ty≥«me
 
	gT
>

877 
NAN_INLINE
 
	$SëIsﬁ©eD©a
(

878 
v8
::
Isﬁ©e
 *
isﬁ©e


879 , 
T
 *
d©a


881 
isﬁ©e
->
	`SëD©a
(0, 
d©a
);

882 
	}
}

884 
	gãm∂©e
<
ty≥«me
 
	gT
>

885 
NAN_INLINE
 
T
 *
	$GëIsﬁ©eD©a
(

886 
v8
::
Isﬁ©e
 *
isﬁ©e


888  
°©ic_ˇ°
<
T
*>(
isﬁ©e
->
	`GëD©a
(0));

889 
	}
}

891 ˛as†
	cUtf8Såög
 {

892 
	gpublic
:

893 
NAN_INLINE
 
ex∂icô
 
Utf8Såög
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

894 
Àngth_
(0), 
°r_
(
°r_°_
) {

895 i‡(!
	g‰om
.
IsEm±y
()) {

896 
	gv8
::
Loˇl
<
v8
::
Såög
> 
°rög
 = 
‰om
->
ToSåög
();

897 i‡(!
	g°rög
.
IsEm±y
()) {

898 
size_t
 
	gÀn
 = 3 * 
°rög
->
Lígth
() + 1;

899 
as£π
(
Àn
 <
INT_MAX
);

900 i‡(
	gÀn
 >  (
	g°r_°_
)) {

901 
	g°r_
 = 
°©ic_ˇ°
<*>(
mÆloc
(
Àn
));

902 
as£π
(
°r_
 != 0);

904 c⁄° 
	gÊags
 =

905 
v8
::
Såög
::
NO_NULL_TERMINATION
 | 
imp
::
kRïœ˚InvÆidUtf8
;

906 
	gÀngth_
 = 
°rög
->
WrôeUtf8
(
°r_
, 
°©ic_ˇ°
<>(
Àn
), 0, 
Êags
);

907 
	g°r_
[
Àngth_
] = '\0';

912 
NAN_INLINE
 
Àngth
() const {

913  
	gÀngth_
;

916 
NAN_INLINE
 * 
	g›î©‹
*(Ë{  
	g°r_
; }

917 
NAN_INLINE
 c⁄° * 
	g›î©‹
*(Ëc⁄° {  
	g°r_
; }

919 
	gNAN_INLINE
 ~
Utf8Såög
() {

920 i‡(
	g°r_
 !
°r_°_
) {

921 
‰ì
(
°r_
);

925 
	g¥iv©e
:

926 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Utf8Såög
)

928 
Àngth_
;

929 *
	g°r_
;

930 
	g°r_°_
[1024];

934 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$Undeföed
() {

935 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

936  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`Undeföed
()));

937 
	}
}

939 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$NuŒ
() {

940 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

941  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`NuŒ
()));

942 
	}
}

944 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$True
() {

945 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

946  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`True
()));

947 
	}
}

949 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$FÆ£
() {

950 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

951  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`FÆ£
()));

952 
	}
}

954 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Såög
> 
	$Em±ySåög
() {

955  
v8
::
Såög
::
	`Em±y
();

956 
	}
}

958 
NAN_INLINE
 
	$Adju°Exã∫ÆMem‹y
(
bc
) {

959  
°©ic_ˇ°
<>(
v8
::
V8
::
	`Adju°Amou¡OfExã∫ÆAŒoˇãdMem‹y
(
bc
));

960 
	}
}

962 
NAN_INLINE
 
SëTem∂©e
(

963 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


964 , c⁄° *
«me


965 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue
) {

966 
ãm∂
->
Së
(
«me
, 
vÆue
);

969 
NAN_INLINE
 
SëTem∂©e
(

970 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


971 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


972 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


973 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs
) {

974 
ãm∂
->
Së
(
«me
, 
vÆue
, 
©åibuãs
);

977 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
	$GëCuºítC⁄ãxt
() {

978  
v8
::
C⁄ãxt
::
	`GëCuºít
();

979 
	}
}

981 
NAN_INLINE
 * 
GëI¡î«lFõldPoöãr
(

982 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


983 , 
ödex
) {

984  
	gobje˘
->
GëPoöãrFromI¡î«lFõld
(
ödex
);

987 
NAN_INLINE
 
SëI¡î«lFõldPoöãr
(

988 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


989 , 
ödex


990 , * 
vÆue
) {

991 
	gobje˘
->
SëPoöãrInI¡î«lFõld
(
ödex
, 
vÆue
);

994 
	#NAN_GC_CALLBACK
(
«me
) \

995 
	$«me
(
v8
::
GCTy≥
 
ty≥
, v8::
GCCÆlbackFœgs
 
Êags
)

	)

997 
NAN_INLINE
 
	$AddGCEpûogueCÆlback
(

998 
v8
::
GCEpûogueCÆlback
 
ˇŒback


999 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

1000 
v8
::
V8
::
	`AddGCEpûogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

1001 
	}
}

1002 
NAN_INLINE
 
	$RemoveGCEpûogueCÆlback
(

1003 
v8
::
GCEpûogueCÆlback
 
ˇŒback
) {

1004 
v8
::
V8
::
	`RemoveGCEpûogueCÆlback
(
ˇŒback
);

1005 
	}
}

1006 
NAN_INLINE
 
	$AddGCPrﬁogueCÆlback
(

1007 
v8
::
GCPrﬁogueCÆlback
 
ˇŒback


1008 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

1009 
v8
::
V8
::
	`AddGCPrﬁogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

1010 
	}
}

1011 
NAN_INLINE
 
	$RemoveGCPrﬁogueCÆlback
(

1012 
v8
::
GCPrﬁogueCÆlback
 
ˇŒback
) {

1013 
v8
::
V8
::
	`RemoveGCPrﬁogueCÆlback
(
ˇŒback
);

1014 
	}
}

1015 
NAN_INLINE
 
	$GëHópSèti°ics
(

1016 
v8
::
HópSèti°ics
 *
hóp_°©i°ics
) {

1017 
v8
::
V8
::
	`GëHópSèti°ics
(
hóp_°©i°ics
);

1018 
	}
}

1020 
	#X
(
NAME
) \

1021 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	$NAME
(c⁄° *
msg
) { \

1022 
Esˇ∑bÀH™dÀSc›e
 
sc›e
; \

1023  
sc›e
.
	`Esˇ≥
(
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

1024 
	}
} \

1026 
NAN_INLINE
 \

1027 
v8
::
Loˇl
<v8::
VÆue
> 
	`NAME
(v8::Loˇl<v8::
Såög
> 
msg
) { \

1028  
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
); \

1031 
NAN_INLINE
 
Throw
 ## 
	$NAME
(c⁄° *
msg
) { \

1032 
H™dÀSc›e
 
sc›e
; \

1033 
v8
::
	`ThrowEx˚±i⁄
(v8::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

1034 
	}
} \

1036 
NAN_INLINE
 \

1037 
Throw
 ## 
	`NAME
(
v8
::
Loˇl
<v8::
Såög
> 
îrmsg
) { \

1038 
v8
::
	`ThrowEx˚±i⁄
(v8::
Ex˚±i⁄
::
	`NAME
(
îrmsg
)); \

1039 }

	)

1041 
	$X
(
Eº‹
)

1042 
	$X
(
R™geEº‹
)

1043 
	$X
(
Re„ªn˚Eº‹
)

1044 
	$X
(
Sy¡axEº‹
)

1045 
	$X
(
Ty≥Eº‹
)

1047 #unde‡
X


1049 
NAN_INLINE
 
	`ThrowEº‹
(
v8
::
Loˇl
<v8::
VÆue
> 
îr‹
) {

1050 
v8
::
	`ThrowEx˚±i⁄
(
îr‹
);

1051 
	}
}

1053 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

1054 *
d©a


1055 , 
size_t
 
Àngth


1056 , 
node
::
Buf„r
::
‰ì_ˇŒback
 
ˇŒback


1057 , *
höt


1059 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1062 
	`as£π
(
Àngth
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1063  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(

1064 
	`New
(
node
::
Buf„r
::New(
d©a
, 
Àngth
, 
ˇŒback
, 
höt
)->
h™dÀ_
)));

1065 
	}
}

1067 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$C›yBuf„r
(

1068 c⁄° *
d©a


1069 , 
uöt32_t
 
size


1071 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1074 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1075 #i‡
NODE_MODULE_VERSION
 >
NODE_0_10_MODULE_VERSION


1076  
MaybeLoˇl
<
v8
::
Obje˘
>(

1077 
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
Buf„r
::New(
d©a
, 
size
)->
h™dÀ_
)));

1079  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(

1080 
	`New
(
node
::
Buf„r
::New(
c⁄°_ˇ°
<*>(
d©a
), 
size
)->
h™dÀ_
)));

1082 
	}
}

1084 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(
uöt32_t
 
size
) {

1087 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1088 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1089  
MaybeLoˇl
<
v8
::
Obje˘
>(

1090 
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
Buf„r
::New(
size
)->
h™dÀ_
)));

1091 
	}
}

1093 
NAN_INLINE
 
	$FªeD©a
(*
d©a
, *
höt
) {

1094 (Ë
höt
;

1095 
dñëe
[] 
d©a
;

1096 
	}
}

1098 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

1099 * 
d©a


1100 , 
uöt32_t
 
size


1102 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1105 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1106  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(
	`New
(

1107 
node
::
Buf„r
::
	`New
(
d©a
, 
size
, 
FªeD©a
, 
NULL
)->
h™dÀ_
)));

1108 
	}
}

1110 
«me•a˚
 
	gimp
 {

1111 
NAN_INLINE
 

1112 
widíSåög
(
°d
::
ve˘‹
<
uöt16_t
> *
ws
, c⁄° 
uöt8_t
 *
s
, 
l
) {

1113 
size_t
 
	gÀn
 = 
°©ic_ˇ°
<size_t>(
l
);

1114 i‡(
	gl
 < 0) {

1115 
	gÀn
 = 
°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
s
));

1117 
as£π
(
Àn
 <
INT_MAX
 && "stringÅooÜong");

1118 
	gws
->
ªsize
(
Àn
);

1119 
	g°d
::
c›y
(
s
, s + 
Àn
, 
ws
->
begö
());

1123 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
>

1124 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

1125 
°d
::
ve˘‹
<
uöt16_t
> 
wideSåög
;

1126 
	gimp
::
widíSåög
(&
wideSåög
, 
vÆue
, 
Àngth
);

1127  
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
New
(

1128 &
wideSåög
.
‰⁄t
(), 
°©ic_ˇ°
<>(wideSåög.
size
())));

1131 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

1132 
v8
::
Loˇl
<v8::
Såög
> 
s


1133 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


1135  
MaybeLoˇl
<
BoundS¸ùt
>(

1136 
v8
::
S¸ùt
::
Compûe
(
s
, 
c⁄°_ˇ°
<v8::
S¸ùtOrigö
 *>(&
‹igö
)));

1139 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

1140 
v8
::
Loˇl
<v8::
Såög
> 
s


1142  
MaybeLoˇl
<
BoundS¸ùt
>(
v8
::
S¸ùt
::
Compûe
(
s
));

1145 
NAN_INLINE


1146 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(
v8
::
Loˇl
<v8::
S¸ùt
> 
s¸ùt
) {

1147  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
Run
());

1150 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1151 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1152 , 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
func


1153 , 
¨gc


1154 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1155  
New
(
node
::
MakeCÆlback
(
èrgë
, 
func
, 
¨gc
, 
¨gv
));

1158 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1159 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1160 , 
v8
::
Loˇl
<v8::
Såög
> 
symbﬁ


1161 , 
¨gc


1162 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1163  
New
(
node
::
MakeCÆlback
(
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
));

1166 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1167 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1168 , c⁄° * 
mëhod


1169 , 
¨gc


1170 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1171  
New
(
node
::
MakeCÆlback
(
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
));

1174 
NAN_INLINE
 
	$F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
& 
åy_ˇtch
) {

1175 
node
::
	`F©ÆEx˚±i⁄
(
c⁄°_ˇ°
<
v8
::
TryC©ch
 &>(
åy_ˇtch
.
åy_ˇtch_
));

1176 
	}
}

1178 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$EºnoEx˚±i⁄
(

1179 
îr‹no


1180 , c⁄° * 
sysˇŒ
 = 
NULL


1181 , c⁄° * 
mesßge
 = 
NULL


1182 , c⁄° * 
∑th
 = 
NULL
) {

1183  
node
::
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

1184 
	}
}

1186 
NAN_DEPRECATED
 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$N™EºnoEx˚±i⁄
(

1187 
îr‹no


1188 , c⁄° * 
sysˇŒ
 = 
NULL


1189 , c⁄° * 
mesßge
 = 
NULL


1190 , c⁄° * 
∑th
 = 
NULL
) {

1191  
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

1192 
	}
}

1195 
	gãm∂©e
<
ty≥«me
 
	gT
>

1196 
NAN_INLINE
 
	$SëIsﬁ©eD©a
(

1197 
v8
::
Isﬁ©e
 *
isﬁ©e


1198 , 
T
 *
d©a


1200 
isﬁ©e
->
	`SëD©a
(
d©a
);

1201 
	}
}

1203 
	gãm∂©e
<
ty≥«me
 
	gT
>

1204 
NAN_INLINE
 
T
 *
	$GëIsﬁ©eD©a
(

1205 
v8
::
Isﬁ©e
 *
isﬁ©e


1207  
°©ic_ˇ°
<
T
*>(
isﬁ©e
->
	`GëD©a
());

1208 
	}
}

1210 ˛as†
	cUtf8Såög
 {

1211 
	gpublic
:

1212 
NAN_INLINE
 
ex∂icô
 
Utf8Såög
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

1213 
Àngth_
(0), 
°r_
(
°r_°_
) {

1214 i‡(!
	g‰om
.
IsEm±y
()) {

1215 
	gv8
::
Loˇl
<
v8
::
Såög
> 
°rög
 = 
‰om
->
ToSåög
();

1216 i‡(!
	g°rög
.
IsEm±y
()) {

1217 
size_t
 
	gÀn
 = 3 * 
°rög
->
Lígth
() + 1;

1218 
as£π
(
Àn
 <
INT_MAX
);

1219 i‡(
	gÀn
 >  (
	g°r_°_
)) {

1220 
	g°r_
 = 
°©ic_ˇ°
<*>(
mÆloc
(
Àn
));

1221 
as£π
(
°r_
 != 0);

1223 c⁄° 
	gÊags
 =

1224 
v8
::
Såög
::
NO_NULL_TERMINATION
 | 
imp
::
kRïœ˚InvÆidUtf8
;

1225 
	gÀngth_
 = 
°rög
->
WrôeUtf8
(
°r_
, 
°©ic_ˇ°
<>(
Àn
), 0, 
Êags
);

1226 
	g°r_
[
Àngth_
] = '\0';

1231 
NAN_INLINE
 
Àngth
() const {

1232  
	gÀngth_
;

1235 
NAN_INLINE
 * 
	g›î©‹
*(Ë{  
	g°r_
; }

1236 
NAN_INLINE
 c⁄° * 
	g›î©‹
*(Ëc⁄° {  
	g°r_
; }

1238 
	gNAN_INLINE
 ~
Utf8Såög
() {

1239 i‡(
	g°r_
 !
°r_°_
) {

1240 
‰ì
(
°r_
);

1244 
	g¥iv©e
:

1245 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Utf8Såög
)

1247 
Àngth_
;

1248 *
	g°r_
;

1249 
	g°r_°_
[1024];

1254 (*
	tFªeCÆlback
)(*
	td©a
, *
	thöt
);

1256 c⁄° 
	tFun˘i⁄CÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_METHOD_ARGS_TYPE
;

1257 
	tNAN_METHOD_RETURN_TYPE
;

1259 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_GETTER_ARGS_TYPE
;

1260 
	tNAN_GETTER_RETURN_TYPE
;

1262 c⁄° 
	tPr›îtyCÆlbackInfo
<>& 
	tNAN_SETTER_ARGS_TYPE
;

1263 
	tNAN_SETTER_RETURN_TYPE
;

1265 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&

1266 
	tNAN_PROPERTY_GETTER_ARGS_TYPE
;

1267 
	tNAN_PROPERTY_GETTER_RETURN_TYPE
;

1269 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&

1270 
	tNAN_PROPERTY_SETTER_ARGS_TYPE
;

1271 
	tNAN_PROPERTY_SETTER_RETURN_TYPE
;

1273 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&

1274 
	tNAN_PROPERTY_ENUMERATOR_ARGS_TYPE
;

1275 
	tNAN_PROPERTY_ENUMERATOR_RETURN_TYPE
;

1277 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&

1278 
	tNAN_PROPERTY_DELETER_ARGS_TYPE
;

1279 
	tNAN_PROPERTY_DELETER_RETURN_TYPE
;

1281 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&

1282 
	tNAN_PROPERTY_QUERY_ARGS_TYPE
;

1283 
	tNAN_PROPERTY_QUERY_RETURN_TYPE
;

1285 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_INDEX_GETTER_ARGS_TYPE
;

1286 
	tNAN_INDEX_GETTER_RETURN_TYPE
;

1288 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_INDEX_SETTER_ARGS_TYPE
;

1289 
	tNAN_INDEX_SETTER_RETURN_TYPE
;

1291 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&

1292 
	tNAN_INDEX_ENUMERATOR_ARGS_TYPE
;

1293 
	tNAN_INDEX_ENUMERATOR_RETURN_TYPE
;

1295 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&

1296 
	tNAN_INDEX_DELETER_ARGS_TYPE
;

1297 
	tNAN_INDEX_DELETER_RETURN_TYPE
;

1299 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&

1300 
	tNAN_INDEX_QUERY_ARGS_TYPE
;

1301 
	tNAN_INDEX_QUERY_RETURN_TYPE
;

1303 
	#NAN_METHOD
(
«me
) \

1304 
N™
::
NAN_METHOD_RETURN_TYPE
 
	$«me
(
N™
::
NAN_METHOD_ARGS_TYPE
 
öfo
)

	)

1305 
	#NAN_GETTER
(
«me
) \

1306 
N™
::
NAN_GETTER_RETURN_TYPE
 
	`«me
( \

1307 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1308 , 
N™
::
NAN_GETTER_ARGS_TYPE
 
öfo
)

	)

1309 
	#NAN_SETTER
(
«me
) \

1310 
N™
::
NAN_SETTER_RETURN_TYPE
 
	`«me
( \

1311 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1312 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1313 , 
N™
::
NAN_SETTER_ARGS_TYPE
 
öfo
)

	)

1314 
	#NAN_PROPERTY_GETTER
(
«me
) \

1315 
N™
::
NAN_PROPERTY_GETTER_RETURN_TYPE
 
	`«me
( \

1316 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1317 , 
N™
::
NAN_PROPERTY_GETTER_ARGS_TYPE
 
öfo
)

	)

1318 
	#NAN_PROPERTY_SETTER
(
«me
) \

1319 
N™
::
NAN_PROPERTY_SETTER_RETURN_TYPE
 
	`«me
( \

1320 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1321 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1322 , 
N™
::
NAN_PROPERTY_SETTER_ARGS_TYPE
 
öfo
)

	)

1323 
	#NAN_PROPERTY_ENUMERATOR
(
«me
) \

1324 
N™
::
NAN_PROPERTY_ENUMERATOR_RETURN_TYPE
 
	`«me
( \

1325 
N™
::
NAN_PROPERTY_ENUMERATOR_ARGS_TYPE
 
öfo
)

	)

1326 
	#NAN_PROPERTY_DELETER
(
«me
) \

1327 
N™
::
NAN_PROPERTY_DELETER_RETURN_TYPE
 
	`«me
( \

1328 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1329 , 
N™
::
NAN_PROPERTY_DELETER_ARGS_TYPE
 
öfo
)

	)

1330 
	#NAN_PROPERTY_QUERY
(
«me
) \

1331 
N™
::
NAN_PROPERTY_QUERY_RETURN_TYPE
 
	`«me
( \

1332 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1333 , 
N™
::
NAN_PROPERTY_QUERY_ARGS_TYPE
 
öfo
)

	)

1334 
	#NAN_INDEX_GETTER
(
«me
) \

1335 
N™
::
NAN_INDEX_GETTER_RETURN_TYPE
 
	`«me
( \

1336 
uöt32_t
 
ödex
 \

1337 , 
N™
::
NAN_INDEX_GETTER_ARGS_TYPE
 
öfo
)

	)

1338 
	#NAN_INDEX_SETTER
(
«me
) \

1339 
N™
::
NAN_INDEX_SETTER_RETURN_TYPE
 
	`«me
( \

1340 
uöt32_t
 
ödex
 \

1341 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1342 , 
N™
::
NAN_INDEX_SETTER_ARGS_TYPE
 
öfo
)

	)

1343 
	#NAN_INDEX_ENUMERATOR
(
«me
) \

1344 
N™
::
NAN_INDEX_ENUMERATOR_RETURN_TYPE
 \

1345 
	$«me
(
N™
::
NAN_INDEX_ENUMERATOR_ARGS_TYPE
 
öfo
)

	)

1346 
	#NAN_INDEX_DELETER
(
«me
) \

1347 
N™
::
NAN_INDEX_DELETER_RETURN_TYPE
 
	`«me
( \

1348 
uöt32_t
 
ödex
 \

1349 , 
N™
::
NAN_INDEX_DELETER_ARGS_TYPE
 
öfo
)

	)

1350 
	#NAN_INDEX_QUERY
(
«me
) \

1351 
N™
::
NAN_INDEX_QUERY_RETURN_TYPE
 
	`«me
( \

1352 
uöt32_t
 
ödex
 \

1353 , 
N™
::
NAN_INDEX_QUERY_ARGS_TYPE
 
öfo
)

	)

1355 ˛as†
	cCÆlback
 {

1356 
public
:

1357 
	`CÆlback
() {

1358 
H™dÀSc›e
 
sc›e
;

1359 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1360 
h™dÀ
.
	`Re£t
(
obj
);

1363 
ex∂icô
 
	`CÆlback
(c⁄° 
v8
::
Loˇl
<v8::
Fun˘i⁄
> &
‚
) {

1364 
H™dÀSc›e
 
sc›e
;

1365 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1366 
h™dÀ
.
	`Re£t
(
obj
);

1367 
	`SëFun˘i⁄
(
‚
);

1370 ~
	`CÆlback
() {

1371 i‡(
h™dÀ
.
	`IsEm±y
()) ;

1372 
h™dÀ
.
	`Re£t
();

1375 
boﬁ
 
›î©‹
==(c⁄° 
CÆlback
 &
Ÿhî
) const {

1376 
H™dÀSc›e
 
sc›e
;

1377 
v8
::
Loˇl
<v8::
VÆue
> 
a
 = 
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
);

1378 
v8
::
Loˇl
<v8::
VÆue
> 
b
 = 
	`New
(
Ÿhî
.
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
);

1379  
a
->
	`Såi˘EquÆs
(
b
);

1382 
boﬁ
 
›î©‹
!=(c⁄° 
CÆlback
 &
Ÿhî
) const {

1383  !
this
->
›î©‹
==(
Ÿhî
);

1386 
NAN_INLINE


1387 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
›î©‹
*(Ëc⁄° {  
this
->
	`GëFun˘i⁄
(); }

1389 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	`›î©‹
()(

1390 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1391 , 
¨gc
 = 0

1392 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = 0) const {

1393  
this
->
	`CÆl
(
èrgë
, 
¨gc
, 
¨gv
);

1396 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	`›î©‹
()(

1397 
¨gc
 = 0

1398 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = 0) const {

1399  
this
->
	`CÆl
(
¨gc
, 
¨gv
);

1402 
NAN_INLINE
 
	`SëFun˘i⁄
(c⁄° 
v8
::
Loˇl
<v8::
Fun˘i⁄
> &
‚
) {

1403 
H™dÀSc›e
 
sc›e
;

1404 
	`Së
(
	`New
(
h™dÀ
), 
kCÆlbackIndex
, 
‚
);

1407 
NAN_INLINE
 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
	`GëFun˘i⁄
() const {

1408 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1409  
sc›e
.
	`Esˇ≥
(
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
)

1410 .
As
<
v8
::
Fun˘i⁄
>());

1413 
NAN_INLINE
 
boﬁ
 
	`IsEm±y
() const {

1414 
H™dÀSc›e
 
sc›e
;

1415  
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
)->
	`IsUndeföed
();

1418 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
>

1419 
	`CÆl
(
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1420 , 
¨gc


1421 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1422 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1423 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1424  
	`CÆl_
(
isﬁ©e
, 
èrgë
, 
¨gc
, 
¨gv
);

1426  
	`CÆl_
(
èrgë
, 
¨gc
, 
¨gv
);

1430 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
>

1431 
	`CÆl
(
¨gc
, 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1432 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1433 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1434  
	`CÆl_
(
isﬁ©e
, isﬁ©e->
	`GëCuºítC⁄ãxt
()->
	`GlobÆ
(), 
¨gc
, 
¨gv
);

1436  
	`CÆl_
(
v8
::
C⁄ãxt
::
	`GëCuºít
()->
	`GlobÆ
(), 
¨gc
, 
¨gv
);

1440 
¥iv©e
:

1441 
	`NAN_DISALLOW_ASSIGN_COPY_MOVE
(
CÆlback
)

1442 
Pîsi°ít
<
v8
::
Obje˘
> 
h™dÀ
;

1443 c⁄° 
uöt32_t
 
kCÆlbackIndex
 = 0;

1445 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1446 
v8
::
Loˇl
<v8::
VÆue
> 
	`CÆl_
(v8::
Isﬁ©e
 *
isﬁ©e


1447 , 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1448 , 
¨gc


1449 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1450 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1452 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
ˇŒback
 = 
	`New
(
h™dÀ
)->

1453 
	`Gë
(
kCÆlbackIndex
).
As
<
v8
::
Fun˘i⁄
>();

1454 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


1455  
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
	`MakeCÆlback
(

1456 
isﬁ©e


1457 , 
èrgë


1458 , 
ˇŒback


1459 , 
¨gc


1460 , 
¨gv


1463  
sc›e
.
	`Esˇ≥
(
node
::
	`MakeCÆlback
(

1464 
isﬁ©e


1465 , 
èrgë


1466 , 
ˇŒback


1467 , 
¨gc


1468 , 
¨gv


1473 
v8
::
Loˇl
<v8::
VÆue
> 
	`CÆl_
(v8::Loˇl<v8::
Obje˘
> 
èrgë


1474 , 
¨gc


1475 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1476 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1478 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
ˇŒback
 = 
	`New
(
h™dÀ
)->

1479 
	`Gë
(
kCÆlbackIndex
).
As
<
v8
::
Fun˘i⁄
>();

1480  
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
	`MakeCÆlback
(

1481 
èrgë


1482 , 
ˇŒback


1483 , 
¨gc


1484 , 
¨gv


1488 
	}
};

1490  cœs†
	cAsyncW‹kî
 {

1491 
	gpublic
:

1492 
ex∂icô
 
AsyncW‹kî
(
CÆlback
 *
ˇŒback_
)

1493 : 
ˇŒback
(
ˇŒback_
), 
îrmsg_
(
NULL
) {

1494 
	gªque°
.
	gd©a
 = 
this
;

1496 
H™dÀSc›e
 
	gsc›e
;

1497 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1498 
	g≥rsi°ítH™dÀ
.
Re£t
(
obj
);

1501 
	gvútuÆ
 ~
AsyncW‹kî
() {

1502 
H™dÀSc›e
 
	gsc›e
;

1504 i‡(!
	g≥rsi°ítH™dÀ
.
IsEm±y
())

1505 
	g≥rsi°ítH™dÀ
.
Re£t
();

1506 
dñëe
 
	gˇŒback
;

1507 
	gdñëe
[] 
	gîrmsg_
;

1510 
vútuÆ
 
W‹kCom∂ëe
() {

1511 
H™dÀSc›e
 
	gsc›e
;

1513 i‡(
	gîrmsg_
 =
NULL
)

1514 
H™dÀOKCÆlback
();

1516 
H™dÀEº‹CÆlback
();

1517 
dñëe
 
	gˇŒback
;

1518 
	gˇŒback
 = 
NULL
;

1521 
NAN_INLINE
 
SaveToPîsi°ít
(

1522 c⁄° *
key
, c⁄° 
v8
::
Loˇl
<v8::
VÆue
> &
vÆue
) {

1523 
H™dÀSc›e
 
sc›e
;

1524 
New
(
≥rsi°ítH™dÀ
)->
Së
(New(
key
).
ToLoˇlChecked
(), 
vÆue
);

1527 
NAN_INLINE
 
SaveToPîsi°ít
(

1528 c⁄° 
v8
::
Loˇl
<v8::
Såög
> &
key
, c⁄° v8::Loˇl<v8::
VÆue
> &
vÆue
) {

1529 
H™dÀSc›e
 
sc›e
;

1530 
New
(
≥rsi°ítH™dÀ
)->
Së
(
key
, 
vÆue
);

1533 
NAN_INLINE
 
SaveToPîsi°ít
(

1534 
uöt32_t
 
ödex
, c⁄° 
v8
::
Loˇl
<v8::
VÆue
> &
vÆue
) {

1535 
H™dÀSc›e
 
sc›e
;

1536 
New
(
≥rsi°ítH™dÀ
)->
Së
(
ödex
, 
vÆue
);

1539 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
GëFromPîsi°ít
(c⁄° *
key
) const {

1540 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1541  
	gsc›e
.
Esˇ≥
(

1542 
New
(
≥rsi°ítH™dÀ
)->
Gë
(New(
key
).
ToLoˇlChecked
()));

1545 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
>

1546 
GëFromPîsi°ít
(c⁄° 
v8
::
Loˇl
<v8::
Såög
> &
key
) const {

1547 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1548  
	gsc›e
.
Esˇ≥
(
New
(
≥rsi°ítH™dÀ
)->
Gë
(
key
));

1551 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
GëFromPîsi°ít
(
uöt32_t
 
ödex
) const {

1552 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1553  
	gsc›e
.
Esˇ≥
(
New
(
≥rsi°ítH™dÀ
)->
Gë
(
ödex
));

1556 
vútuÆ
 
Execuã
() = 0;

1558 
uv_w‹k_t
 
	gªque°
;

1560 
vútuÆ
 
De°roy
() {

1561 
dñëe
 
	gthis
;

1564 
	g¥Ÿe˘ed
:

1565 
Pîsi°ít
<
v8
::
Obje˘
> 
≥rsi°ítH™dÀ
;

1566 
CÆlback
 *
	gˇŒback
;

1568 
vútuÆ
 
H™dÀOKCÆlback
() {

1569 
	gˇŒback
->
CÆl
(0, 
NULL
);

1572 
vútuÆ
 
H™dÀEº‹CÆlback
() {

1573 
H™dÀSc›e
 
	gsc›e
;

1575 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
¨gv
[] = {

1576 
v8
::
Ex˚±i⁄
::
Eº‹
(
New
<v8::
Såög
>(
Eº‹Mesßge
()).
ToLoˇlChecked
())

1578 
	gˇŒback
->
CÆl
(1, 
¨gv
);

1581 
SëEº‹Mesßge
(c⁄° *
msg
) {

1582 
	gdñëe
[] 
	gîrmsg_
;

1584 
size_t
 
	gsize
 = 
°æí
(
msg
) + 1;

1585 
	gîrmsg_
 = 
√w
 [
size
];

1586 
mem˝y
(
îrmsg_
, 
msg
, 
size
);

1589 c⁄° * 
Eº‹Mesßge
() const {

1590  
	gîrmsg_
;

1593 
	g¥iv©e
:

1594 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
AsyncW‹kî
)

1595 *
îrmsg_
;

1598  cœs†
	cAsyncProgªssW‹kî
 : 
public
 
AsyncW‹kî
 {

1599 
public
:

1600 
ex∂icô
 
AsyncProgªssW‹kî
(
CÆlback
 *
ˇŒback_
)

1601 : 
AsyncW‹kî
(
ˇŒback_
), 
asyncd©a_
(
NULL
), 
asyncsize_
(0) {

1602 
	gasync
 = 
√w
 
uv_async_t
;

1603 
uv_async_öô
(

1604 
uv_deÁu…_lo›
()

1605 , 
async


1606 , 
AsyncProgªss_


1608 
	gasync
->
	gd©a
 = 
this
;

1610 
uv_muãx_öô
(&
async_lock
);

1613 
	gvútuÆ
 ~
AsyncProgªssW‹kî
() {

1614 
uv_muãx_de°roy
(&
async_lock
);

1616 
	gdñëe
[] 
	gasyncd©a_
;

1619 
W‹kProgªss
() {

1620 
uv_muãx_lock
(&
async_lock
);

1621 *
	gd©a
 = 
asyncd©a_
;

1622 
size_t
 
	gsize
 = 
asyncsize_
;

1623 
	gasyncd©a_
 = 
NULL
;

1624 
uv_muãx_u∆ock
(&
async_lock
);

1627 i‡(
	gˇŒback
) {

1628 
H™dÀProgªssCÆlback
(
d©a
, 
size
);

1630 
	gdñëe
[] 
	gd©a
;

1633 ˛as†
	cExecuti⁄Progªss
 {

1634 
‰õnd
 
˛ass
 
	gAsyncProgªssW‹kî
;

1635 
	gpublic
:

1636 
Sig«l
() const {

1637 
uv_async_£nd
(
th©_
->
async
);

1640 
Síd
(c⁄° * 
d©a
, 
size_t
 
size
) const {

1641 
	gth©_
->
SídProgªss_
(
d©a
, 
size
);

1644 
	g¥iv©e
:

1645 
ex∂icô
 
Executi⁄Progªss
(
AsyncProgªssW‹kî
* 
th©
Ë: 
th©_
(that) {}

1646 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Executi⁄Progªss
)

1647 
AsyncProgªssW‹kî
* c⁄° 
th©_
;

1650 
vútuÆ
 
Execuã
(c⁄° 
Executi⁄Progªss
& 
¥ogªss
) = 0;

1651 
vútuÆ
 
H™dÀProgªssCÆlback
(c⁄° *
d©a
, 
size_t
 
size
) = 0;

1653 
vútuÆ
 
De°roy
() {

1654 
uv_˛o£
(
ªöãΩªt_ˇ°
<
uv_h™dÀ_t
*>(
async
), 
AsyncClo£_
);

1657 
	g¥iv©e
:

1658 
Execuã
() {

1659 
Executi⁄Progªss
 
¥ogªss
(
this
);

1660 
Execuã
(
¥ogªss
);

1663 
SídProgªss_
(c⁄° *
d©a
, 
size_t
 
size
) {

1664 *
	g√w_d©a
 = 
√w
 [
size
];

1665 
mem˝y
(
√w_d©a
, 
d©a
, 
size
);

1667 
uv_muãx_lock
(&
async_lock
);

1668 *
	gﬁd_d©a
 = 
asyncd©a_
;

1669 
	gasyncd©a_
 = 
√w_d©a
;

1670 
	gasyncsize_
 = 
size
;

1671 
uv_muãx_u∆ock
(&
async_lock
);

1673 
	gdñëe
[] 
	gﬁd_d©a
;

1674 
uv_async_£nd
(
async
);

1677 
NAN_INLINE
 
NAUV_WORK_CB
(
AsyncProgªss_
) {

1678 
AsyncProgªssW‹kî
 *
	gw‹kî
 =

1679 
°©ic_ˇ°
<
AsyncProgªssW‹kî
*>(
async
->
d©a
);

1680 
	gw‹kî
->
W‹kProgªss
();

1683 
NAN_INLINE
 
AsyncClo£_
(
uv_h™dÀ_t
* 
h™dÀ
) {

1684 
AsyncProgªssW‹kî
 *
	gw‹kî
 =

1685 
°©ic_ˇ°
<
AsyncProgªssW‹kî
*>(
h™dÀ
->
d©a
);

1686 
dñëe
 
	gªöãΩªt_ˇ°
<
	guv_async_t
*>(
	gh™dÀ
);

1687 
dñëe
 
	gw‹kî
;

1690 
uv_async_t
 *
	gasync
;

1691 
uv_muãx_t
 
	gasync_lock
;

1692 *
	gasyncd©a_
;

1693 
size_t
 
	gasyncsize_
;

1696 
NAN_INLINE
 
	$AsyncExecuã
 (
uv_w‹k_t
* 
ªq
) {

1697 
AsyncW‹kî
 *
w‹kî
 = 
°©ic_ˇ°
<AsyncW‹kî*>(
ªq
->
d©a
);

1698 
w‹kî
->
	`Execuã
();

1699 
	}
}

1701 
NAN_INLINE
 
	$AsyncExecuãCom∂ëe
 (
uv_w‹k_t
* 
ªq
) {

1702 
AsyncW‹kî
* 
w‹kî
 = 
°©ic_ˇ°
<AsyncW‹kî*>(
ªq
->
d©a
);

1703 
w‹kî
->
	`W‹kCom∂ëe
();

1704 
w‹kî
->
	`De°roy
();

1705 
	}
}

1707 
NAN_INLINE
 
	$AsyncQueueW‹kî
 (
AsyncW‹kî
* 
w‹kî
) {

1708 
	`uv_queue_w‹k
(

1709 
	`uv_deÁu…_lo›
()

1710 , &
w‹kî
->
ªque°


1711 , 
AsyncExecuã


1712 , 
ªöãΩªt_ˇ°
<
uv_a·î_w‹k_cb
>(
AsyncExecuãCom∂ëe
)

1714 
	}
}

1716 
«me•a˚
 
	gimp
 {

1718 
ölöe


1719 
Exã∫ÆO√ByãSåögResour˚
 const*

1720 
GëExã∫ÆResour˚
(
v8
::
Loˇl
<v8::
Såög
> 
°r
) {

1721 #i‡
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION


1722  
°r
->
GëExã∫ÆAsciiSåögResour˚
();

1724  
	g°r
->
GëExã∫ÆO√ByãSåögResour˚
();

1728 
ölöe


1729 
boﬁ


1730 
IsExã∫Æ
(
v8
::
Loˇl
<v8::
Såög
> 
°r
) {

1731 #i‡
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION


1732  
°r
->
IsExã∫ÆAscii
();

1734  
	g°r
->
IsExã∫ÆO√Byã
();

1740 
	eEncodög
 {
	gASCII
, 
	gUTF8
, 
	gBASE64
, 
	gUCS2
, 
	gBINARY
, 
	gHEX
, 
	gBUFFER
};

1742 #i‡
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION


1743 
	~"«n_°rög_byãs.h
"

1746 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$Encode
(

1747 c⁄° *
buf
, 
size_t
 
Àn
, 
Encodög
 
ícodög
 = 
BINARY
) {

1748 #i‡(
NODE_MODULE_VERSION
 >
ATOM_0_21_MODULE_VERSION
)

1749 
v8
::
Isﬁ©e
* 
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1750 
node
::
ícodög
 
node_íc
 = 
°©ic_ˇ°
<node::encoding>(encoding);

1752 i‡(
ícodög
 =
UCS2
) {

1753  
node
::
	`Encode
(

1754 
isﬁ©e


1755 , 
ªöãΩªt_ˇ°
<c⁄° 
uöt16_t
 *>(
buf
)

1756 , 
Àn
 / 2);

1758  
node
::
	`Encode
(

1759 
isﬁ©e


1760 , 
ªöãΩªt_ˇ°
<c⁄° *>(
buf
)

1761 , 
Àn


1762 , 
node_íc
);

1764 #ñi‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1765  
node
::
	`Encode
(

1766 
v8
::
Isﬁ©e
::
	`GëCuºít
()

1767 , 
buf
, 
Àn


1768 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1770 #i‡
NODE_MODULE_VERSION
 >
NODE_0_10_MODULE_VERSION


1771  
node
::
	`Encode
(
buf
, 
Àn
, 
°©ic_ˇ°
<node::
ícodög
>(encoding));

1773  
imp
::
	`Encode
(
ªöãΩªt_ˇ°
<c⁄° *>(
buf
), 
Àn
, 
ícodög
);

1776 
	}
}

1778 
NAN_INLINE
 
ssize_t
 
DecodeByãs
(

1779 
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
, 
Encodög
 
ícodög
 = 
BINARY
) {

1780 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1781  
node
::
DecodeByãs
(

1782 
v8
::
Isﬁ©e
::
GëCuºít
()

1783 , 
vÆ


1784 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1786 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION
)

1787 i‡(
	gícodög
 =
BUFFER
) {

1788  
node
::
DecodeByãs
(
vÆ
,Çode::
BINARY
);

1791  
	gnode
::
DecodeByãs
(
vÆ
, 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1795 
NAN_INLINE
 
ssize_t
 
DecodeWrôe
(

1796 *
buf


1797 , 
size_t
 
Àn


1798 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆ


1799 , 
Encodög
 
ícodög
 = 
BINARY
) {

1800 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1801  
node
::
DecodeWrôe
(

1802 
v8
::
Isﬁ©e
::
GëCuºít
()

1803 , 
buf


1804 , 
Àn


1805 , 
vÆ


1806 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1808 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION
)

1809 i‡(
	gícodög
 =
BUFFER
) {

1810  
node
::
DecodeWrôe
(
buf
, 
Àn
, 
vÆ
,Çode::
BINARY
);

1813  
	gnode
::
DecodeWrôe
(

1814 
buf


1815 , 
Àn


1816 , 
vÆ


1817 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1821 
NAN_INLINE
 
SëPrŸŸy≥Tem∂©e
(

1822 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1823 , c⁄° *
«me


1824 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1826 
SëTem∂©e
(
ãm∂
->
PrŸŸy≥Tem∂©e
(), 
«me
, 
vÆue
);

1829 
NAN_INLINE
 
SëPrŸŸy≥Tem∂©e
(

1830 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1831 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1832 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1833 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs


1835 
SëTem∂©e
(
ãm∂
->
PrŸŸy≥Tem∂©e
(), 
«me
, 
vÆue
, 
©åibuãs
);

1838 
NAN_INLINE
 
SëIn°™˚Tem∂©e
(

1839 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1840 , c⁄° *
«me


1841 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1843 
SëTem∂©e
(
ãm∂
->
In°™˚Tem∂©e
(), 
«me
, 
vÆue
);

1846 
NAN_INLINE
 
SëIn°™˚Tem∂©e
(

1847 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1848 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1849 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1850 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs


1852 
SëTem∂©e
(
ãm∂
->
In°™˚Tem∂©e
(), 
«me
, 
vÆue
, 
©åibuãs
);

1855 
«me•a˚
 
	gimp
 {

1861 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1862 
NAN_INLINE


1864 
SëMëhodAux
(
T
 
ªcv
,

1865 
v8
::
Loˇl
<v8::
Såög
> 
«me
,

1866 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
,

1867 
v8
::
Tem∂©e
 *) {

1868 
ªcv
->
Së
(
«me
, 
çl
);

1871 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1872 
NAN_INLINE


1874 
SëMëhodAux
(
T
 
ªcv
,

1875 
v8
::
Loˇl
<v8::
Såög
> 
«me
,

1876 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
,

1878 
	gªcv
->
Së
(
«me
, 
GëFun˘i⁄
(
çl
).
ToLoˇlChecked
());

1883 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åem∂©ê<
	gty≥«me
> 
˛ass
 
	gH™dÀTy≥
>

1884 
NAN_INLINE
 
SëMëhod
(

1885 
H™dÀTy≥
<
T
> 
ªcv


1886 , c⁄° *
«me


1887 , 
Fun˘i⁄CÆlback
 
ˇŒback
) {

1888 
H™dÀSc›e
 
	gsc›e
;

1889 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
t
 = 
New
<v8::Fun˘i⁄Tem∂©e>(
ˇŒback
);

1890 
	gv8
::
Loˇl
<
v8
::
Såög
> 
‚_«me
 = 
New
(
«me
).
ToLoˇlChecked
();

1891 
	gt
->
SëCœssName
(
‚_«me
);

1894 
	gimp
::
SëMëhodAux
(
ªcv
, 
‚_«me
, 
t
, 
°©ic_ˇ°
<
T
*>(0));

1897 
NAN_INLINE
 
SëPrŸŸy≥Mëhod
(

1898 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ªcv


1899 , c⁄° * 
«me
, 
Fun˘i⁄CÆlback
 
ˇŒback
) {

1900 
H™dÀSc›e
 
	gsc›e
;

1901 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
t
 = 
New
<v8::FunctionTemplate>(

1902 
ˇŒback


1903 , 
	gv8
::
Loˇl
<
v8
::
VÆue
>()

1904 , 
	gNew
<
	gv8
::
Sig«tuª
>(
ªcv
));

1905 
	gv8
::
Loˇl
<
v8
::
Såög
> 
‚_«me
 = 
New
(
«me
).
ToLoˇlChecked
();

1906 
	gªcv
->
PrŸŸy≥Tem∂©e
()->
Së
(
‚_«me
, 
t
);

1907 
	gt
->
SëCœssName
(
‚_«me
);

1912 
ölöe
 
SëAc˚ss‹
(

1913 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


1914 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1915 , 
GëãrCÆlback
 
gëãr


1916 , 
SëãrCÆlback
 
£âî
 = 0

1917 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

1918 , 
v8
::
Ac˚ssC⁄åﬁ
 
£âögs
 = v8::
DEFAULT


1919 , 
v8
::
Pr›îtyAâribuã
 
©åibuã
 = v8::
N⁄e


1920 , 
imp
::
Sig
 
sig«tuª
 = imp::
	$Sig
()) {

1921 
H™dÀSc›e
 
sc›e
;

1923 
imp
::
N©iveGëãr
 
gëãr_
 =

1924 
imp
::
GëãrCÆlbackWøµî
;

1925 
imp
::
N©iveSëãr
 
£âî_
 =

1926 
£âî
 ? 
imp
::
SëãrCÆlbackWøµî
 : 0;

1928 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

1929 
Ÿ∂
->
	`SëI¡î«lFõldCou¡
(
imp
::
kAc˚ss‹FõldCou¡
);

1930 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
	`NewIn°™˚
(
Ÿ∂
).
	`ToLoˇlChecked
();

1932 
obj
->
	`SëI¡î«lFõld
(

1933 
imp
::
kGëãrIndex


1934 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

1936 i‡(
£âî
 != 0) {

1937 
obj
->
	`SëI¡î«lFõld
(

1938 
imp
::
kSëãrIndex


1939 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

1942 i‡(!
d©a
.
	`IsEm±y
()) {

1943 
obj
->
	`SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

1946 
çl
->
	`SëAc˚ss‹
(

1947 
«me


1948 , 
gëãr_


1949 , 
£âî_


1950 , 
obj


1951 , 
£âögs


1952 , 
©åibuã


1953 , 
sig«tuª
);

1954 
	}
}

1956 
ölöe
 
boﬁ
 
SëAc˚ss‹
(

1957 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


1958 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1959 , 
GëãrCÆlback
 
gëãr


1960 , 
SëãrCÆlback
 
£âî
 = 0

1961 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

1962 , 
v8
::
Ac˚ssC⁄åﬁ
 
£âögs
 = v8::
DEFAULT


1963 , 
v8
::
Pr›îtyAâribuã
 
©åibuã
 = v8::
N⁄e
) {

1964 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1966 
	gimp
::
N©iveGëãr
 
gëãr_
 =

1967 
imp
::
GëãrCÆlbackWøµî
;

1968 
	gimp
::
N©iveSëãr
 
£âî_
 =

1969 
£âî
 ? 
imp
::
SëãrCÆlbackWøµî
 : 0;

1971 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

1972 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kAc˚ss‹FõldCou¡
);

1973 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
d©aobj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

1975 
	gd©aobj
->
SëI¡î«lFõld
(

1976 
imp
::
kGëãrIndex


1977 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

1979 i‡(!
	gd©a
.
IsEm±y
()) {

1980 
	gd©aobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

1983 i‡(
	g£âî
) {

1984 
	gd©aobj
->
SëI¡î«lFõld
(

1985 
imp
::
kSëãrIndex


1986 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

1989  
	gobj
->
SëAc˚ss‹
(

1990 
«me


1991 , 
gëãr_


1992 , 
£âî_


1993 , 
d©aobj


1994 , 
£âögs


1995 , 
©åibuã
);

1998 
ölöe
 
SëNamedPr›îtyH™dÀr
(

1999 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


2000 , 
Pr›îtyGëãrCÆlback
 
gëãr


2001 , 
Pr›îtySëãrCÆlback
 
£âî
 = 0

2002 , 
Pr›îtyQuîyCÆlback
 
quîy
 = 0

2003 , 
Pr›îtyDñëîCÆlback
 
dñëî
 = 0

2004 , 
Pr›îtyEnumî©‹CÆlback
 
íumî©‹
 = 0

2005 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2006 
H™dÀSc›e
 
sc›e
;

2008 
	gimp
::
N©ivePr›îtyGëãr
 
gëãr_
 =

2009 
imp
::
Pr›îtyGëãrCÆlbackWøµî
;

2010 
	gimp
::
N©ivePr›îtySëãr
 
£âî_
 =

2011 
£âî
 ? 
imp
::
Pr›îtySëãrCÆlbackWøµî
 : 0;

2012 
	gimp
::
N©ivePr›îtyQuîy
 
quîy_
 =

2013 
quîy
 ? 
imp
::
Pr›îtyQuîyCÆlbackWøµî
 : 0;

2014 
	gimp
::
N©ivePr›îtyDñëî
 *
dñëî_
 =

2015 
dñëî
 ? 
imp
::
Pr›îtyDñëîCÆlbackWøµî
 : 0;

2016 
	gimp
::
N©ivePr›îtyEnumî©‹
 
íumî©‹_
 =

2017 
íumî©‹
 ? 
imp
::
Pr›îtyEnumî©‹CÆlbackWøµî
 : 0;

2019 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2020 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kPr›îtyFõldCou¡
);

2021 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2022 
	gobj
->
SëI¡î«lFõld
(

2023 
imp
::
kPr›îtyGëãrIndex


2024 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

2026 i‡(
	g£âî
) {

2027 
	gobj
->
SëI¡î«lFõld
(

2028 
imp
::
kPr›îtySëãrIndex


2029 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

2032 i‡(
	gquîy
) {

2033 
	gobj
->
SëI¡î«lFõld
(

2034 
imp
::
kPr›îtyQuîyIndex


2035 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
quîy
)));

2038 i‡(
	gdñëî
) {

2039 
	gobj
->
SëI¡î«lFõld
(

2040 
imp
::
kPr›îtyDñëîIndex


2041 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
dñëî
)));

2044 i‡(
	gíumî©‹
) {

2045 
	gobj
->
SëI¡î«lFõld
(

2046 
imp
::
kPr›îtyEnumî©‹Index


2047 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
íumî©‹
)));

2050 i‡(!
	gd©a
.
IsEm±y
()) {

2051 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2054 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


2055 
	gçl
->
SëH™dÀr
(
v8
::
NamedPr›îtyH™dÀrC⁄figuøti⁄
(

2056 
gëãr_
, 
£âî_
, 
quîy_
, 
dñëî_
, 
íumî©‹_
, 
obj
));

2058 
	gçl
->
SëNamedPr›îtyH™dÀr
(

2059 
gëãr_


2060 , 
£âî_


2061 , 
quîy_


2062 , 
dñëî_


2063 , 
íumî©‹_


2064 , 
obj
);

2068 
ölöe
 
SëIndexedPr›îtyH™dÀr
(

2069 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


2070 , 
IndexGëãrCÆlback
 
gëãr


2071 , 
IndexSëãrCÆlback
 
£âî
 = 0

2072 , 
IndexQuîyCÆlback
 
quîy
 = 0

2073 , 
IndexDñëîCÆlback
 
dñëî
 = 0

2074 , 
IndexEnumî©‹CÆlback
 
íumî©‹
 = 0

2075 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2076 
H™dÀSc›e
 
sc›e
;

2078 
	gimp
::
N©iveIndexGëãr
 
gëãr_
 =

2079 
imp
::
IndexGëãrCÆlbackWøµî
;

2080 
	gimp
::
N©iveIndexSëãr
 
£âî_
 =

2081 
£âî
 ? 
imp
::
IndexSëãrCÆlbackWøµî
 : 0;

2082 
	gimp
::
N©iveIndexQuîy
 
quîy_
 =

2083 
quîy
 ? 
imp
::
IndexQuîyCÆlbackWøµî
 : 0;

2084 
	gimp
::
N©iveIndexDñëî
 
dñëî_
 =

2085 
dñëî
 ? 
imp
::
IndexDñëîCÆlbackWøµî
 : 0;

2086 
	gimp
::
N©iveIndexEnumî©‹
 
íumî©‹_
 =

2087 
íumî©‹
 ? 
imp
::
IndexEnumî©‹CÆlbackWøµî
 : 0;

2089 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2090 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kIndexPr›îtyFõldCou¡
);

2091 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2092 
	gobj
->
SëI¡î«lFõld
(

2093 
imp
::
kIndexPr›îtyGëãrIndex


2094 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

2096 i‡(
	g£âî
) {

2097 
	gobj
->
SëI¡î«lFõld
(

2098 
imp
::
kIndexPr›îtySëãrIndex


2099 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

2102 i‡(
	gquîy
) {

2103 
	gobj
->
SëI¡î«lFõld
(

2104 
imp
::
kIndexPr›îtyQuîyIndex


2105 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
quîy
)));

2108 i‡(
	gdñëî
) {

2109 
	gobj
->
SëI¡î«lFõld
(

2110 
imp
::
kIndexPr›îtyDñëîIndex


2111 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
dñëî
)));

2114 i‡(
	gíumî©‹
) {

2115 
	gobj
->
SëI¡î«lFõld
(

2116 
imp
::
kIndexPr›îtyEnumî©‹Index


2117 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
íumî©‹
)));

2120 i‡(!
	gd©a
.
IsEm±y
()) {

2121 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2124 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


2125 
	gçl
->
SëH™dÀr
(
v8
::
IndexedPr›îtyH™dÀrC⁄figuøti⁄
(

2126 
gëãr_
, 
£âî_
, 
quîy_
, 
dñëî_
, 
íumî©‹_
, 
obj
));

2128 
	gçl
->
SëIndexedPr›îtyH™dÀr
(

2129 
gëãr_


2130 , 
£âî_


2131 , 
quîy_


2132 , 
dñëî_


2133 , 
íumî©‹_


2134 , 
obj
);

2138 
ölöe
 
SëCÆlH™dÀr
(

2139 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl


2140 , 
Fun˘i⁄CÆlback
 
ˇŒback


2141 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2142 
H™dÀSc›e
 
sc›e
;

2144 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2145 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

2146 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2148 
	gobj
->
SëI¡î«lFõld
(

2149 
imp
::
kFun˘i⁄Index


2150 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

2152 i‡(!
	gd©a
.
IsEm±y
()) {

2153 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2156 
	gçl
->
SëCÆlH™dÀr
(
imp
::
Fun˘i⁄CÆlbackWøµî
, 
obj
);

2160 
ölöe
 
SëCÆlAsFun˘i⁄H™dÀr
(

2161 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl
,

2162 
Fun˘i⁄CÆlback
 
ˇŒback
,

2163 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2164 
H™dÀSc›e
 
sc›e
;

2166 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2167 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

2168 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2170 
	gobj
->
SëI¡î«lFõld
(

2171 
imp
::
kFun˘i⁄Index


2172 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

2174 i‡(!
	gd©a
.
IsEm±y
()) {

2175 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2178 
	gçl
->
SëCÆlAsFun˘i⁄H™dÀr
(
imp
::
Fun˘i⁄CÆlbackWøµî
, 
obj
);

2183 
	~"«n_wók.h
"

2187 
	~"«n_obje˘_wøp.h
"

2191 
ölöe


2193 
	$Exp‹t
(
ADDON_REGISTER_FUNCTION_ARGS_TYPE
 
èrgë
, c⁄° *
«me
,

2194 
Fun˘i⁄CÆlback
 
f
) {

2195 
	`Së
(
èrgë
, 
New
<
v8
::
Såög
>(
«me
).
	`ToLoˇlChecked
(),

2196 
	`GëFun˘i⁄
(
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
f
)).
	`ToLoˇlChecked
());

2197 
	}
}

2201 
	sT≠
 {

2202 
ex∂icô
 
T≠
(
v8
::
Loˇl
<v8::
VÆue
> 
t
Ë: 
t_
() {

2203 
t_
.
Re£t
(
To
<
v8
::
Obje˘
>(
t
).
ToLoˇlChecked
());

2206 ~
T≠
(Ë{ 
	gt_
.
Re£t
(); }

2208 
ölöe
 
∂™
(
i
) {

2209 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
¨g
 = 
New
(
i
);

2210 
MakeCÆlback
(
New
(
t_
), "∂™", 1, &
¨g
);

2213 
ölöe
 
ok
(
boﬁ
 
isOk
, c⁄° *
msg
 = 
NULL
) {

2214 
v8
::
Loˇl
<v8::
VÆue
> 
¨gs
[2];

2215 
	g¨gs
[0] = 
New
(
isOk
);

2216 i‡(
	gmsg
Ë
	g¨gs
[1] = 
New
(
msg
).
ToLoˇlChecked
();

2217 
MakeCÆlback
(
New
(
t_
), "ok", 
msg
 ? 2 : 1, 
¨gs
);

2220 
ölöe
 
∑ss
(c⁄° * 
msg
 = 
NULL
) {

2221 
v8
::
Loˇl
<v8::
VÆue
> 
hmsg
;

2222 i‡(
	gmsg
Ë
	ghmsg
 = 
New
(
msg
).
ToLoˇlChecked
();

2223 
MakeCÆlback
(
New
(
t_
), "∑ss", 
msg
 ? 1 : 0, &
hmsg
);

2226 
	g¥iv©e
:

2227 
Pîsi°ít
<
v8
::
Obje˘
> 
t_
;

2230 
	#NAN_STRINGIZE2
(
x
Ë#x

	)

2231 
	#NAN_STRINGIZE
(
x
Ë
	$NAN_STRINGIZE2
(
x
)

	)

2232 
	#NAN_TEST_EXPRESSION
(
ex¥essi⁄
) \

2233 –
ex¥essi⁄
 ), 
__FILE__
 ":" 
	`NAN_STRINGIZE
(
__LINE__
Ë": " #ex¥essi⁄

	)

2235 
	#NAN_EXPORT
(
èrgë
, 
fun˘i⁄
Ë
	`Exp‹t
—¨gë, #fun˘i⁄, fun˘i⁄)

	)

2237 #unde‡
TYPE_CHECK


2241 
«me•a˚
 
imp
 {

2243 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
;

2245 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
<
v8
::
Loˇl
<T> > {

2246 
MaybeLoˇl
<
T
> 
	`c⁄vît
(
v8
::
Loˇl
<T> 
v
) {

2247  
MaybeLoˇl
<
T
>(
v
);

2251 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
<
MaybeLoˇl
<T> > {

2252 
MaybeLoˇl
<
T
> 
	`c⁄vît
(MaybeLoˇl<T> 
v
) {

2253  
v
;

2257 
	}
}

2259 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åem∂©ê<
	gty≥«me
> 
˛ass
 
	gMaybeMaybe
>

2260 
	gMaybeLoˇl
<
	gT
>

2261 
MakeMaybe
(
MaybeMaybe
<
T
> 
v
) {

2262  
	gimp
::
Maybefõr
<
MaybeMaybe
<
T
> >::
c⁄vît
(
v
);

2267 
	~"«n_ty≥d¨øy_c⁄ã¡s.h
"

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks.h

9 #i‚de‡
NAN_CALLBACKS_H_


10 
	#NAN_CALLBACKS_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gFun˘i⁄CÆlbackInfo
;

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPr›îtyCÆlbackInfo
;

14 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gGlobÆ
;

16 (*
	tFun˘i⁄CÆlback
)(c⁄° 
	tFun˘i⁄CÆlbackInfo
<
	tv8
::
	tVÆue
>&);

17 (*
	tGëãrCÆlback
)

18 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° 
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
>&);

19 (*
	tSëãrCÆlback
)(

20 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

21 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

22 c⁄° 
	tPr›îtyCÆlbackInfo
<>&);

23 (*
	tPr›îtyGëãrCÆlback
)(

24 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

25 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

26 (*
	tPr›îtySëãrCÆlback
)(

27 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

28 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

29 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

30 (*
	tPr›îtyEnumî©‹CÆlback
)

31 (c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&);

32 (*
	tPr›îtyDñëîCÆlback
)(

33 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

34 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&);

35 (*
	tPr›îtyQuîyCÆlback
)(

36 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

37 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&);

38 (*
	tIndexGëãrCÆlback
)(

39 
	tuöt32_t
,

40 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

41 (*
	tIndexSëãrCÆlback
)(

42 
	tuöt32_t
,

43 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

44 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

45 (*
	tIndexEnumî©‹CÆlback
)

46 (c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&);

47 (*
	tIndexDñëîCÆlback
)(

48 
	tuöt32_t
,

49 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&);

50 (*
	tIndexQuîyCÆlback
)(

51 
	tuöt32_t
,

52 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&);

54 
«me•a˚
 
imp
 {

55 
v8
::
	tLoˇl
<
	tv8
::
	tAc˚ss‹Sig«tuª
> 
	tSig
;

57 c⁄° 
kD©aIndex
 = 0;

59 c⁄° 
kFun˘i⁄Index
 = 1;

60 c⁄° 
kFun˘i⁄FõldCou¡
 = 2;

62 c⁄° 
kGëãrIndex
 = 1;

63 c⁄° 
kSëãrIndex
 = 2;

64 c⁄° 
kAc˚ss‹FõldCou¡
 = 3;

66 c⁄° 
kPr›îtyGëãrIndex
 = 1;

67 c⁄° 
kPr›îtySëãrIndex
 = 2;

68 c⁄° 
kPr›îtyEnumî©‹Index
 = 3;

69 c⁄° 
kPr›îtyDñëîIndex
 = 4;

70 c⁄° 
kPr›îtyQuîyIndex
 = 5;

71 c⁄° 
kPr›îtyFõldCou¡
 = 6;

73 c⁄° 
kIndexPr›îtyGëãrIndex
 = 1;

74 c⁄° 
kIndexPr›îtySëãrIndex
 = 2;

75 c⁄° 
kIndexPr›îtyEnumî©‹Index
 = 3;

76 c⁄° 
kIndexPr›îtyDñëîIndex
 = 4;

77 c⁄° 
kIndexPr›îtyQuîyIndex
 = 5;

78 c⁄° 
kIndexPr›îtyFõldCou¡
 = 6;

80 
	}
}

82 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


83 
	~"«n_ˇŒbacks_12_öl.h
"

85 
	~"«n_ˇŒbacks_¥e_12_öl.h
"

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks_12_inl.h

9 #i‚de‡
NAN_CALLBACKS_12_INL_H_


10 
	#NAN_CALLBACKS_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cRëu∫VÆue
 {

14 
	mv8
::
Rëu∫VÆue
<
T
> 
vÆue_
;

16 
	mpublic
:

17 
ãm∂©e
 <
˛ass
 
S
>

18 
ex∂icô
 
ölöe
 
Rëu∫VÆue
(c⁄° 
v8
::Rëu∫VÆue<
S
> &
vÆue
) :

19 
	$vÆue_
(
vÆue
) {}

20 
ãm∂©e
 <
˛ass
 
S
>

21 
ex∂icô
 
ölöe
 
	`Rëu∫VÆue
(c⁄° 
Rëu∫VÆue
<
S
>& 
th©
)

22 : 
	$vÆue_
(
th©
.
vÆue_
) {

23 
	`TYPE_CHECK
(
T
, 
S
);

24 
	}
}

27 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
v8
::
Loˇl
<
S
> &
h™dÀ
) {

28 
TYPE_CHECK
(
T
, 
S
);

29 
	gvÆue_
.
Së
(
h™dÀ
);

32 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
GlobÆ
<
S
> &
h™dÀ
) {

33 
TYPE_CHECK
(
T
, 
S
);

34 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

35 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && \

36 (
V8_MINOR_VERSION
 > 5 || (V8_MINOR_VERSION == 5 && \

37 
deföed
(
V8_BUILD_NUMBER
) && V8_BUILD_NUMBER >= 8))))

38 
vÆue_
.
Së
(
h™dÀ
);

40 
	gvÆue_
.
Së
(*
ªöãΩªt_ˇ°
<c⁄° 
v8
::
Pîsi°ít
<
S
>*>(&
h™dÀ
));

41 
	gc⁄°_ˇ°
<
	gGlobÆ
<
	gS
> &>(
	gh™dÀ
).
Re£t
();

46 
ölöe
 
	$Së
(
boﬁ
 
vÆue
) {

47 
	`TYPE_CHECK
(
T
, 
v8
::
Boﬁón
);

48 
vÆue_
.
	`Së
(
vÆue
);

49 
	}
}

51 
ölöe
 
	$Së
(
i
) {

52 
	`TYPE_CHECK
(
T
, 
v8
::
Numbî
);

53 
vÆue_
.
	`Së
(
i
);

54 
	}
}

56 
ölöe
 
	$Së
(
öt32_t
 
i
) {

57 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

58 
vÆue_
.
	`Së
(
i
);

59 
	}
}

61 
ölöe
 
	$Së
(
uöt32_t
 
i
) {

62 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

63 
vÆue_
.
	`Së
(
i
);

64 
	}
}

67 
ölöe
 
	$SëNuŒ
() {

68 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

69 
vÆue_
.
	`SëNuŒ
();

70 
	}
}

72 
ölöe
 
	$SëUndeföed
() {

73 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

74 
vÆue_
.
	`SëUndeföed
();

75 
	}
}

77 
ölöe
 
	$SëEm±ySåög
() {

78 
	`TYPE_CHECK
(
T
, 
v8
::
Såög
);

79 
vÆue_
.
	`SëEm±ySåög
();

80 
	}
}

83 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
() const {

84  
vÆue_
.
	`GëIsﬁ©e
();

85 
	}
}

88 
	gãm∂©e
<
ty≥«me
 
	gS
>

89 
ölöe
 
	$Së
(
S
 *
wh©evî
Ë{ 
	`TYPE_CHECK
(S*, 
v8
::
Primôive
); 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gT
>

93 ˛as†
	cFun˘i⁄CÆlbackInfo
 {

94 c⁄° 
	mv8
::
Fun˘i⁄CÆlbackInfo
<
T
> &
öfo_
;

95 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

97 
	mpublic
:

98 
ex∂icô
 
ölöe
 
Fun˘i⁄CÆlbackInfo
(

99 c⁄° 
v8
::
Fun˘i⁄CÆlbackInfo
<
T
> &
öfo


100 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

101 
öfo_
(
öfo
)

102 , 
	$d©a_
(
d©a
) {}

104 
ölöe
 
Rëu∫VÆue
<
T
> 
	$GëRëu∫VÆue
() const {

105  
Rëu∫VÆue
<
T
>(
öfo_
.
	`GëRëu∫VÆue
());

106 
	}
}

108 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
	$CÆÀe
(Ëc⁄° {  
öfo_
.
	`CÆÀe
(); 
	}
}

109 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

110 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

111 
ölöe
 
boﬁ
 
	$IsC⁄°ru˘CÆl
(Ëc⁄° {  
öfo_
.
	`IsC⁄°ru˘CÆl
(); 
	}
}

112 
ölöe
 
	$Lígth
(Ëc⁄° {  
öfo_
.
	`Lígth
(); 
	}
}

113 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
›î©‹
[](
i
Ëc⁄° {  
öfo_
[i]; }

114 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

115 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

118 
	g¥Ÿe˘ed
:

119 c⁄° 
kHﬁdîIndex
 = 0;

120 c⁄° 
	gkIsﬁ©eIndex
 = 1;

121 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

122 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

123 c⁄° 
	gkD©aIndex
 = 4;

124 c⁄° 
	gkCÆÀeIndex
 = 5;

125 c⁄° 
	gkC⁄ãxtSaveIndex
 = 6;

126 c⁄° 
	gkArgsLígth
 = 7;

128 
	g¥iv©e
:

129 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Fun˘i⁄CÆlbackInfo
)

132 
	gãm∂©e
<
ty≥«me
 
	gT
>

133 ˛as†
	cPr›îtyCÆlbackInfo
 {

134 c⁄° 
	mv8
::
Pr›îtyCÆlbackInfo
<
T
> &
öfo_
;

135 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

137 
	mpublic
:

138 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

139 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<
T
> &
öfo


140 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

141 
öfo_
(
öfo
)

142 , 
	$d©a_
(
d©a
) {}

144 
ölöe
 
v8
::
Isﬁ©e
* 
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

145 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

146 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

147 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

148 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
	$GëRëu∫VÆue
() const {

149  
Rëu∫VÆue
<
T
>(
öfo_
.
	`GëRëu∫VÆue
());

150 
	}
}

152 
	g¥Ÿe˘ed
:

153 c⁄° 
kHﬁdîIndex
 = 0;

154 c⁄° 
	gkIsﬁ©eIndex
 = 1;

155 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

156 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

157 c⁄° 
	gkD©aIndex
 = 4;

158 c⁄° 
	gkThisIndex
 = 5;

159 c⁄° 
	gkArgsLígth
 = 6;

161 
	g¥iv©e
:

162 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Pr›îtyCÆlbackInfo
)

165 
«me•a˚
 
	gimp
 {

167 
Fun˘i⁄CÆlbackWøµî
(c⁄° 
v8
::
Fun˘i⁄CÆlbackInfo
<v8::
VÆue
> &
öfo
) {

168 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

169 
Fun˘i⁄CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<FunctionCallback>(

170 
ªöãΩªt_ˇ°
<
öçå_t
>(

171 
obj
->
GëI¡î«lFõld
(
kFun˘i⁄Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

172 
	gFun˘i⁄CÆlbackInfo
<
	gv8
::
VÆue
>

173 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

174 
ˇŒback
(
cböfo
);

177 (*
	gN©iveFun˘i⁄
)(c⁄° 
	tv8
::
	tFun˘i⁄CÆlbackInfo
<v8::
	tVÆue
> &);

179 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


181 
GëãrCÆlbackWøµî
(

182 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


183 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

184 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

185 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

186 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

187 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

188 
ªöãΩªt_ˇ°
<
öçå_t
>(

189 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

190 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

193 (*
	gN©iveGëãr
)

194 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

197 
SëãrCÆlbackWøµî
(

198 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


199 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


200 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<> &
öfo
) {

201 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

202 
	gPr›îtyCÆlbackInfo
<>

203 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

204 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

205 
ªöãΩªt_ˇ°
<
öçå_t
>(

206 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

207 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
vÆue
, 
cböfo
);

210 (*
	gN©iveSëãr
)(

211 
	tv8
::
	tLoˇl
<v8::
	tName
>

212 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

213 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<> &);

216 
GëãrCÆlbackWøµî
(

217 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


218 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

219 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

220 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

221 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

222 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

223 
ªöãΩªt_ˇ°
<
öçå_t
>(

224 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

225 
ˇŒback
(
¥›îty
, 
cböfo
);

228 (*
	gN©iveGëãr
)

229 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

232 
SëãrCÆlbackWøµî
(

233 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


234 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


235 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<> &
öfo
) {

236 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

237 
	gPr›îtyCÆlbackInfo
<>

238 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

239 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

240 
ªöãΩªt_ˇ°
<
öçå_t
>(

241 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

242 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

245 (*
	gN©iveSëãr
)(

246 
	tv8
::
	tLoˇl
<v8::
	tSåög
>

247 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

248 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<> &);

251 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


253 
Pr›îtyGëãrCÆlbackWøµî
(

254 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


255 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

256 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

257 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

258 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

259 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

260 
ªöãΩªt_ˇ°
<
öçå_t
>(

261 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

262 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

263 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

266 (*
	gN©ivePr›îtyGëãr
)

267 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

270 
Pr›îtySëãrCÆlbackWøµî
(

271 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


272 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


273 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

274 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

275 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

276 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

277 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

278 
ªöãΩªt_ˇ°
<
öçå_t
>(

279 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

280 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

281 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
vÆue
, 
cböfo
);

284 (*
	gN©ivePr›îtySëãr
)(

285 
	tv8
::
	tLoˇl
<v8::
	tName
>

286 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

287 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

290 
Pr›îtyEnumî©‹CÆlbackWøµî
(

291 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

292 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

293 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

294 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

295 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

296 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

297 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

298 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

299 
ˇŒback
(
cböfo
);

302 (*
	gN©ivePr›îtyEnumî©‹
)

303 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

306 
Pr›îtyDñëîCÆlbackWøµî
(

307 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


308 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

309 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

310 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

311 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

312 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

313 
ªöãΩªt_ˇ°
<
öçå_t
>(

314 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

315 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

316 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

319 (
	gN©ivePr›îtyDñëî
)

320 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

323 
Pr›îtyQuîyCÆlbackWøµî
(

324 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


325 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

326 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

327 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

328 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

329 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

330 
ªöãΩªt_ˇ°
<
öçå_t
>(

331 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

332 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

333 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

336 (*
	gN©ivePr›îtyQuîy
)

337 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

340 
Pr›îtyGëãrCÆlbackWøµî
(

341 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


342 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

343 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

344 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

345 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

346 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

347 
ªöãΩªt_ˇ°
<
öçå_t
>(

348 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

349 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

350 
ˇŒback
(
¥›îty
, 
cböfo
);

353 (*
	gN©ivePr›îtyGëãr
)

354 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

357 
Pr›îtySëãrCÆlbackWøµî
(

358 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


359 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


360 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

361 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

362 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

363 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

364 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

365 
ªöãΩªt_ˇ°
<
öçå_t
>(

366 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

367 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

368 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

371 (*
	gN©ivePr›îtySëãr
)(

372 
	tv8
::
	tLoˇl
<v8::
	tSåög
>

373 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

374 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

377 
Pr›îtyEnumî©‹CÆlbackWøµî
(

378 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

379 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

380 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

381 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

382 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

383 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

384 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

385 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

386 
ˇŒback
(
cböfo
);

389 (*
	gN©ivePr›îtyEnumî©‹
)

390 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

393 
Pr›îtyDñëîCÆlbackWøµî
(

394 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


395 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

396 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

397 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

398 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

399 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

400 
ªöãΩªt_ˇ°
<
öçå_t
>(

401 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

402 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

403 
ˇŒback
(
¥›îty
, 
cböfo
);

406 (
	gN©ivePr›îtyDñëî
)

407 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

410 
Pr›îtyQuîyCÆlbackWøµî
(

411 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


412 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

413 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

414 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

415 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

416 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

417 
ªöãΩªt_ˇ°
<
öçå_t
>(

418 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

419 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

420 
ˇŒback
(
¥›îty
, 
cböfo
);

423 (*
	gN©ivePr›îtyQuîy
)

424 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

428 
IndexGëãrCÆlbackWøµî
(

429 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

430 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

431 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

432 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

433 
IndexGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexGetterCallback>(

434 
ªöãΩªt_ˇ°
<
öçå_t
>(

435 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyGëãrIndex
)

436 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

437 
ˇŒback
(
ödex
, 
cböfo
);

440 (*
	gN©iveIndexGëãr
)

441 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

444 
IndexSëãrCÆlbackWøµî
(

445 
uöt32_t
 
ödex


446 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


447 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

448 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

449 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

450 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

451 
IndexSëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexSetterCallback>(

452 
ªöãΩªt_ˇ°
<
öçå_t
>(

453 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtySëãrIndex
)

454 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

455 
ˇŒback
(
ödex
, 
vÆue
, 
cböfo
);

458 (*
	gN©iveIndexSëãr
)(

459 
	tuöt32_t


460 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

461 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

464 
IndexEnumî©‹CÆlbackWøµî
(

465 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

466 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

467 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

468 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

469 
IndexEnumî©‹CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexEnumeratorCallback>(

470 
ªöãΩªt_ˇ°
<
öçå_t
>(

471 
obj
->
GëI¡î«lFõld
(

472 
kIndexPr›îtyEnumî©‹Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

473 
ˇŒback
(
cböfo
);

476 (*
	gN©iveIndexEnumî©‹
)

477 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

480 
IndexDñëîCÆlbackWøµî
(

481 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

482 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

483 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

484 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

485 
IndexDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexDeleterCallback>(

486 
ªöãΩªt_ˇ°
<
öçå_t
>(

487 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyDñëîIndex
)

488 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

489 
ˇŒback
(
ödex
, 
cböfo
);

492 (*
	gN©iveIndexDñëî
)

493 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

496 
IndexQuîyCÆlbackWøµî
(

497 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

498 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

499 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

500 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

501 
IndexQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexQueryCallback>(

502 
ªöãΩªt_ˇ°
<
öçå_t
>(

503 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyQuîyIndex
)

504 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

505 
ˇŒback
(
ödex
, 
cböfo
);

508 (*
	gN©iveIndexQuîy
)

509 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks_pre_12_inl.h

9 #i‚de‡
NAN_CALLBACKS_PRE_12_INL_H_


10 
	#NAN_CALLBACKS_PRE_12_INL_H_


	)

12 
«me•a˚
 
	gimp
 {

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRëu∫VÆueImp
;

16 
	gãm∂©e
<
ty≥«me
 
	gT
>

17 ˛as†
	cRëu∫VÆue
 {

18 
	mv8
::
Isﬁ©e
 *
isﬁ©e_
;

19 
	mv8
::
Pîsi°ít
<
T
> *
vÆue_
;

20 
‰õnd
 
˛ass
 
	mimp
::
Rëu∫VÆueImp
<
T
>;

22 
	mpublic
:

23 
ãm∂©e
 <
˛ass
 
S
>

24 
ex∂icô
 
ölöe
 
Rëu∫VÆue
(
v8
::
Isﬁ©e
 *
isﬁ©e
, v8::
Pîsi°ít
<
S
> *
p
) :

25 
isﬁ©e_
(
isﬁ©e
), 
	$vÆue_
(
p
) {}

26 
ãm∂©e
 <
˛ass
 
S
>

27 
ex∂icô
 
ölöe
 
	`Rëu∫VÆue
(c⁄° 
Rëu∫VÆue
<
S
>& 
th©
)

28 : 
	`isﬁ©e_
(
th©
.
isﬁ©e_
), 
	$vÆue_
(
th©
.
vÆue_
) {

29 
	`TYPE_CHECK
(
T
, 
S
);

30 
	}
}

33 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
v8
::
Loˇl
<
S
> &
h™dÀ
) {

34 
TYPE_CHECK
(
T
, 
S
);

35 
	gvÆue_
->
Di•o£
();

36 *
	gvÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
h™dÀ
);

39 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
GlobÆ
<
S
> &
h™dÀ
) {

40 
TYPE_CHECK
(
T
, 
S
);

41 
	gvÆue_
->
Di•o£
();

42 *
	gvÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
h™dÀ
.
≥rsi°ít
);

43 
	gc⁄°_ˇ°
<
	gGlobÆ
<
	gS
> &>(
	gh™dÀ
).
Re£t
();

47 
ölöe
 
	$Së
(
boﬁ
 
vÆue
) {

48 
	`TYPE_CHECK
(
T
, 
v8
::
Boﬁón
);

49 
vÆue_
->
	`Di•o£
();

50 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Boﬁón
::New(
vÆue
));

51 
	}
}

53 
ölöe
 
	$Së
(
i
) {

54 
	`TYPE_CHECK
(
T
, 
v8
::
Numbî
);

55 
vÆue_
->
	`Di•o£
();

56 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Numbî
::New(
i
));

57 
	}
}

59 
ölöe
 
	$Së
(
öt32_t
 
i
) {

60 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

61 
vÆue_
->
	`Di•o£
();

62 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
I¡32
::New(
i
));

63 
	}
}

65 
ölöe
 
	$Së
(
uöt32_t
 
i
) {

66 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

67 
vÆue_
->
	`Di•o£
();

68 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Uöt32
::
	`NewFromUnsig√d
(
i
));

69 
	}
}

72 
ölöe
 
	$SëNuŒ
() {

73 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

74 
vÆue_
->
	`Di•o£
();

75 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
	`NuŒ
());

76 
	}
}

78 
ölöe
 
	$SëUndeföed
() {

79 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

80 
vÆue_
->
	`Di•o£
();

81 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
	`Undeföed
());

82 
	}
}

84 
ölöe
 
	$SëEm±ySåög
() {

85 
	`TYPE_CHECK
(
T
, 
v8
::
Såög
);

86 
vÆue_
->
	`Di•o£
();

87 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Såög
::
	`Em±y
());

88 
	}
}

91 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
() const {

92  
isﬁ©e_
;

93 
	}
}

96 
	gãm∂©e
<
ty≥«me
 
	gS
>

97 
ölöe
 
	$Së
(
S
 *
wh©evî
Ë{ 
	`TYPE_CHECK
(S*, 
v8
::
Primôive
); 
	}
}

100 
	gãm∂©e
<
ty≥«me
 
	gT
>

101 ˛as†
	cFun˘i⁄CÆlbackInfo
 {

102 c⁄° 
	mv8
::
Argumíts
 &
¨gs_
;

103 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

104 
	mRëu∫VÆue
<
	mT
> 
	mªtu∫_vÆue_
;

105 
	mv8
::
Pîsi°ít
<
T
> 
ªtvÆ_
;

107 
	mpublic
:

108 
ex∂icô
 
ölöe
 
Fun˘i⁄CÆlbackInfo
(

109 c⁄° 
v8
::
Argumíts
 &
¨gs


110 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

111 
¨gs_
(
¨gs
)

112 , 
d©a_
(
d©a
)

113 , 
ªtu∫_vÆue_
(
¨gs
.
GëIsﬁ©e
(), &
ªtvÆ_
)

114 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<
T
>::
New
(v8::
	$Undeföed
())) {}

116 
ölöe
 ~
	$Fun˘i⁄CÆlbackInfo
() {

117 
ªtvÆ_
.
	`Di•o£
();

118 
ªtvÆ_
.
	`CÀ¨
();

119 
	}
}

121 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
	$GëRëu∫VÆue
() const {

122  
Rëu∫VÆue
<
T
>(
ªtu∫_vÆue_
);

123 
	}
}

125 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
	$CÆÀe
(Ëc⁄° {  
¨gs_
.
	`CÆÀe
(); 
	}
}

126 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

127 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
¨gs_
.
	`Hﬁdî
(); 
	}
}

128 
ölöe
 
boﬁ
 
	$IsC⁄°ru˘CÆl
(Ëc⁄° {  
¨gs_
.
	`IsC⁄°ru˘CÆl
(); 
	}
}

129 
ölöe
 
	$Lígth
(Ëc⁄° {  
¨gs_
.
	`Lígth
(); 
	}
}

130 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
›î©‹
[](
i
Ëc⁄° {  
¨gs_
[i]; }

131 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
¨gs_
.
	`This
(); 
	}
}

132 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
¨gs_
.
	`GëIsﬁ©e
(); 
	}
}

135 
	g¥Ÿe˘ed
:

136 c⁄° 
kHﬁdîIndex
 = 0;

137 c⁄° 
	gkIsﬁ©eIndex
 = 1;

138 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

139 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

140 c⁄° 
	gkD©aIndex
 = 4;

141 c⁄° 
	gkCÆÀeIndex
 = 5;

142 c⁄° 
	gkC⁄ãxtSaveIndex
 = 6;

143 c⁄° 
	gkArgsLígth
 = 7;

145 
	g¥iv©e
:

146 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Fun˘i⁄CÆlbackInfo
)

149 
	gãm∂©e
<
ty≥«me
 
	gT
>

150 ˛as†
	cPr›îtyCÆlbackInfoBa£
 {

151 c⁄° 
	mv8
::
Ac˚ss‹Info
 &
öfo_
;

152 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

154 
	mpublic
:

155 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfoBa£
(

156 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


157 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

158 
öfo_
(
öfo
)

159 , 
	$d©a_
(
d©a
) {}

161 
ölöe
 
v8
::
Isﬁ©e
* 
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

162 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

163 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

164 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

166 
	g¥Ÿe˘ed
:

167 c⁄° 
kHﬁdîIndex
 = 0;

168 c⁄° 
	gkIsﬁ©eIndex
 = 1;

169 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

170 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

171 c⁄° 
	gkD©aIndex
 = 4;

172 c⁄° 
	gkThisIndex
 = 5;

173 c⁄° 
	gkArgsLígth
 = 6;

175 
	g¥iv©e
:

176 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Pr›îtyCÆlbackInfoBa£
)

179 
	gãm∂©e
<
ty≥«me
 
	gT
>

180 
˛ass
 
	gPr›îtyCÆlbackInfo
 : 
public
 
Pr›îtyCÆlbackInfoBa£
<
T
> {

181 
Rëu∫VÆue
<
T
> 
ªtu∫_vÆue_
;

182 
	gv8
::
Pîsi°ít
<
T
> 
ªtvÆ_
;

184 
	gpublic
:

185 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

186 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


187 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

188 
Pr›îtyCÆlbackInfoBa£
<
T
>(
öfo
, 
	gd©a
)

189 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

190 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<
T
>::
New
(v8::
Undeföed
())) {}

192 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

193 
ªtvÆ_
.
Di•o£
();

194 
	gªtvÆ_
.
CÀ¨
();

197 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
GëRëu∫VÆue
(Ëc⁄° {  
	gªtu∫_vÆue_
; }

200 
	gãm∂©e
<>

201 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
> :

202 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Aºay
> {

203 
Rëu∫VÆue
<
v8
::
Aºay
> 
ªtu∫_vÆue_
;

204 
	gv8
::
Pîsi°ít
<
v8
::
Aºay
> 
ªtvÆ_
;

206 
	gpublic
:

207 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

208 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


209 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

210 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Aºay
>(
öfo
, 
	gd©a
)

211 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

212 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
Aºay
>::
New
(v8::
Loˇl
<v8::Array>())) {}

214 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

215 
ªtvÆ_
.
Di•o£
();

216 
	gªtvÆ_
.
CÀ¨
();

219 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
Aºay
> 
GëRëu∫VÆue
() const {

220  
ªtu∫_vÆue_
;

224 
	gãm∂©e
<>

225 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
> :

226 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Boﬁón
> {

227 
Rëu∫VÆue
<
v8
::
Boﬁón
> 
ªtu∫_vÆue_
;

228 
	gv8
::
Pîsi°ít
<
v8
::
Boﬁón
> 
ªtvÆ_
;

230 
	gpublic
:

231 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

232 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


233 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

234 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Boﬁón
>(
öfo
, 
	gd©a
)

235 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

236 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
Boﬁón
>::
New
(v8::
Loˇl
<v8::Boolean>())) {}

238 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

239 
ªtvÆ_
.
Di•o£
();

240 
	gªtvÆ_
.
CÀ¨
();

243 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
Boﬁón
> 
GëRëu∫VÆue
() const {

244  
ªtu∫_vÆue_
;

248 
	gãm∂©e
<>

249 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
> :

250 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
I¡egî
> {

251 
Rëu∫VÆue
<
v8
::
I¡egî
> 
ªtu∫_vÆue_
;

252 
	gv8
::
Pîsi°ít
<
v8
::
I¡egî
> 
ªtvÆ_
;

254 
	gpublic
:

255 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

256 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


257 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

258 
Pr›îtyCÆlbackInfoBa£
<
v8
::
I¡egî
>(
öfo
, 
	gd©a
)

259 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

260 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
I¡egî
>::
New
(v8::
Loˇl
<v8::Integer>())) {}

262 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

263 
ªtvÆ_
.
Di•o£
();

264 
	gªtvÆ_
.
CÀ¨
();

267 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
I¡egî
> 
GëRëu∫VÆue
() const {

268  
ªtu∫_vÆue_
;

272 
«me•a˚
 
	gimp
 {

273 
	gãm∂©e
<
ty≥«me
 
	gT
>

274 
˛ass
 
	gRëu∫VÆueImp
 : 
public
 
Rëu∫VÆue
<
T
> {

275 
public
:

276 
ex∂icô
 
Rëu∫VÆueImp
(
Rëu∫VÆue
<
T
> 
th©
) :

277 
Rëu∫VÆue
<
T
>(
th©
) {}

278 
NAN_INLINE
 
v8
::
H™dÀ
<
T
> 
VÆue
() {

279  *
Rëu∫VÆue
<
T
>::
vÆue_
;

284 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Fun˘i⁄CÆlbackWøµî
(c⁄° v8::
Argumíts
 &
¨gs
) {

285 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
¨gs
.
D©a
().
As
<v8::Object>();

286 
Fun˘i⁄CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<FunctionCallback>(

287 
ªöãΩªt_ˇ°
<
öçå_t
>(

288 
obj
->
GëI¡î«lFõld
(
kFun˘i⁄Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

289 
	gFun˘i⁄CÆlbackInfo
<
	gv8
::
VÆue
>

290 
cböfo
(
¨gs
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

291 
ˇŒback
(
cböfo
);

292  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

295 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveFun˘i⁄
)(c⁄° v8::
	tArgumíts
 &);

298 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
GëãrCÆlbackWøµî
(

299 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

300 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

301 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

302 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

303 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

304 
ªöãΩªt_ˇ°
<
öçå_t
>(

305 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

306 
ˇŒback
(
¥›îty
, 
cböfo
);

307  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

310 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveGëãr
)

311 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

314 
SëãrCÆlbackWøµî
(

315 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


316 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


317 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

318 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

319 
	gPr›îtyCÆlbackInfo
<>

320 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

321 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

322 
ªöãΩªt_ˇ°
<
öçå_t
>(

323 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

324 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

327 (*
	gN©iveSëãr
)

328 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, v8::Loˇl<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

331 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Pr›îtyGëãrCÆlbackWøµî
(

332 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

333 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

334 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

335 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

336 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

337 
ªöãΩªt_ˇ°
<
öçå_t
>(

338 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

339 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

340 
ˇŒback
(
¥›îty
, 
cböfo
);

341  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

344 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©ivePr›îtyGëãr
)

345 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

348 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Pr›îtySëãrCÆlbackWøµî
(

349 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


350 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


351 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

352 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

353 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

354 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

355 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

356 
ªöãΩªt_ˇ°
<
öçå_t
>(

357 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

358 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

359 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

360  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

363 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©ivePr›îtySëãr
)

364 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, v8::Loˇl<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

367 
	gv8
::
H™dÀ
<
v8
::
Aºay
> 
Pr›îtyEnumî©‹CÆlbackWøµî
(

368 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

369 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

370 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

371 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

372 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

373 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

374 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

375 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

376 
ˇŒback
(
cböfo
);

377  
	gRëu∫VÆueImp
<
	gv8
::
Aºay
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

380 
	gv8
::
	tH™dÀ
<
	tv8
::
	tAºay
> (*
	tN©ivePr›îtyEnumî©‹
)

381 (c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

384 
	gv8
::
H™dÀ
<
v8
::
Boﬁón
> 
Pr›îtyDñëîCÆlbackWøµî
(

385 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


386 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

387 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

388 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

389 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

390 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

391 
ªöãΩªt_ˇ°
<
öçå_t
>(

392 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

393 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

394 
ˇŒback
(
¥›îty
, 
cböfo
);

395  
	gRëu∫VÆueImp
<
	gv8
::
Boﬁón
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

398 
	gv8
::
	tH™dÀ
<
	tv8
::
	tBoﬁón
> (
	tN©ivePr›îtyDñëî
)

399 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

402 
	gv8
::
H™dÀ
<
v8
::
I¡egî
> 
Pr›îtyQuîyCÆlbackWøµî
(

403 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

404 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

405 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

406 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

407 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

408 
ªöãΩªt_ˇ°
<
öçå_t
>(

409 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

410 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

411 
ˇŒback
(
¥›îty
, 
cböfo
);

412  
	gRëu∫VÆueImp
<
	gv8
::
I¡egî
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

415 
	gv8
::
	tH™dÀ
<
	tv8
::
	tI¡egî
> (*
	tN©ivePr›îtyQuîy
)

416 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

419 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
IndexGëãrCÆlbackWøµî
(

420 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

421 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

422 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

423 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

424 
IndexGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexGetterCallback>(

425 
ªöãΩªt_ˇ°
<
öçå_t
>(

426 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyGëãrIndex
)

427 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

428 
ˇŒback
(
ödex
, 
cböfo
);

429  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

432 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveIndexGëãr
)

433 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

436 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
IndexSëãrCÆlbackWøµî
(

437 
uöt32_t
 
ödex


438 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


439 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

440 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

441 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

442 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

443 
IndexSëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexSetterCallback>(

444 
ªöãΩªt_ˇ°
<
öçå_t
>(

445 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtySëãrIndex
)

446 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

447 
ˇŒback
(
ödex
, 
vÆue
, 
cböfo
);

448  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

451 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveIndexSëãr
)

452 (
	tuöt32_t
, 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

455 
	gv8
::
H™dÀ
<
v8
::
Aºay
> 
IndexEnumî©‹CÆlbackWøµî
(

456 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

457 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

458 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

459 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

460 
IndexEnumî©‹CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexEnumeratorCallback>(

461 
ªöãΩªt_ˇ°
<
öçå_t
>(

462 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyEnumî©‹Index
)

463 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

464 
ˇŒback
(
cböfo
);

465  
	gRëu∫VÆueImp
<
	gv8
::
Aºay
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

468 
	gv8
::
	tH™dÀ
<
	tv8
::
	tAºay
> (*
	tN©iveIndexEnumî©‹
)

469 (c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

472 
	gv8
::
H™dÀ
<
v8
::
Boﬁón
> 
IndexDñëîCÆlbackWøµî
(

473 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

474 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

475 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

476 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

477 
IndexDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexDeleterCallback>(

478 
ªöãΩªt_ˇ°
<
öçå_t
>(

479 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyDñëîIndex
)

480 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

481 
ˇŒback
(
ödex
, 
cböfo
);

482  
	gRëu∫VÆueImp
<
	gv8
::
Boﬁón
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

485 
	gv8
::
	tH™dÀ
<
	tv8
::
	tBoﬁón
> (*
	tN©iveIndexDñëî
)

486 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

489 
	gv8
::
H™dÀ
<
v8
::
I¡egî
> 
IndexQuîyCÆlbackWøµî
(

490 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

491 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

492 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

493 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

494 
IndexQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexQueryCallback>(

495 
ªöãΩªt_ˇ°
<
öçå_t
>(

496 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyQuîyIndex
)

497 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

498 
ˇŒback
(
ödex
, 
cböfo
);

499  
	gRëu∫VÆueImp
<
	gv8
::
I¡egî
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

502 
	gv8
::
	tH™dÀ
<
	tv8
::
	tI¡egî
> (*
	tN©iveIndexQuîy
)

503 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters.h

9 #i‚de‡
NAN_CONVERTERS_H_


10 
	#NAN_CONVERTERS_H_


	)

12 
«me•a˚
 
	gimp
 {

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sToFa˘‹yBa£
 {

14 
	gMaybeLoˇl
<
	tT
> 
	tªtu∫_t
;

16 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sVÆueFa˘‹yBa£
 { 
	gMaybe
<
	tT
> 
	tªtu∫_t
; };

18 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gToFa˘‹y
;

20 
	#X
(
TYPE
) \

21 
ãm∂©e
<> \

22 
ToFa˘‹y
<
v8
::
TYPE
> : 
ToFa˘‹yBa£
<v8::TYPE> { \

23 
ölöe
 
ªtu∫_t
 
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
); \

24 };

	)

26 
X
(
Boﬁón
)

27 
X
(
Numbî
)

28 
X
(
Såög
)

29 
X
(
Obje˘
)

30 
X
(
I¡egî
)

31 
X
(
Uöt32
)

32 
X
(
I¡32
)

34 #unde‡
X


36 
	#X
(
TYPE
) \

37 
ãm∂©e
<> \

38 
ToFa˘‹y
<
TYPE
> : 
VÆueFa˘‹yBa£
<TYPE> { \

39 
ölöe
 
ªtu∫_t
 
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
); \

40 };

	)

42 
X
(
boﬁ
)

43 
X
()

44 
X
(
öt64_t
)

45 
X
(
uöt32_t
)

46 
X
(
öt32_t
)

48 #unde‡
X


51 
	gãm∂©e
<
ty≥«me
 
	gT
>

52 
NAN_INLINE


53 
ty≥«me
 
	gimp
::
ToFa˘‹y
<
T
>::
ªtu∫_t
 
To
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

54  
imp
::
ToFa˘‹y
<
T
>::
c⁄vît
(
vÆ
);

57 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

58 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

59 
	~"«n_c⁄vîãrs_43_öl.h
"

61 
	~"«n_c⁄vîãrs_¥e_43_öl.h
"

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters_43_inl.h

9 #i‚de‡
NAN_CONVERTERS_43_INL_H_


10 
	#NAN_CONVERTERS_43_INL_H_


	)

12 
	#X
(
TYPE
) \

13 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
ªtu∫_t
 \

14 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
	`c⁄vît
(v8::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

15  
vÆ
->
To
 ## 
	`TYPE
(
	`GëCuºítC⁄ãxt
()); \

16 }

	)

18 
	$X
(
Boﬁón
)

19 
	$X
(
Numbî
)

20 
	$X
(
Såög
)

21 
	$X
(
Obje˘
)

22 
	$X
(
I¡egî
)

23 
	$X
(
Uöt32
)

24 
	$X
(
I¡32
)

26 #unde‡
X


28 
	#X
(
TYPE
, 
NAME
) \

29 
imp
::
ToFa˘‹y
<
TYPE
>::
ªtu∫_t
 \

30 
imp
::
ToFa˘‹y
<
TYPE
>::
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

31  
vÆ
->
NAME
 ## 
	`VÆue
(
	`GëCuºítC⁄ãxt
()); \

32 
	}

	)
}

34 
	$X
(
boﬁ
, 
Boﬁón
)

35 
	$X
(, 
Numbî
)

36 
	$X
(
öt64_t
, 
I¡egî
)

37 
	$X
(
uöt32_t
, 
Uöt32
)

38 
	$X
(
öt32_t
, 
I¡32
)

40 #unde‡
X


	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters_pre_43_inl.h

9 #i‚de‡
NAN_CONVERTERS_PRE_43_INL_H_


10 
	#NAN_CONVERTERS_PRE_43_INL_H_


	)

12 
	#X
(
TYPE
) \

13 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
ªtu∫_t
 \

14 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
	`c⁄vît
(v8::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

15  
MaybeLoˇl
<
v8
::
TYPE
>(
vÆ
->
To
 ## 
	`TYPE
()); \

16 }

	)

18 
	$X
(
Boﬁón
)

19 
	$X
(
Numbî
)

20 
	$X
(
Såög
)

21 
	$X
(
Obje˘
)

22 
	$X
(
I¡egî
)

23 
	$X
(
Uöt32
)

24 
	$X
(
I¡32
)

26 #unde‡
X


28 
	#X
(
TYPE
, 
NAME
) \

29 
imp
::
ToFa˘‹y
<
TYPE
>::
ªtu∫_t
 \

30 
imp
::
ToFa˘‹y
<
TYPE
>::
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

31  
Ju°
<
TYPE
>(
vÆ
->
NAME
 ##
	`VÆue
()); \

32 
	}

	)
}

34 
	$X
(
boﬁ
, 
Boﬁón
)

35 
	$X
(, 
Numbî
)

36 
	$X
(
öt64_t
, 
I¡egî
)

37 
	$X
(
uöt32_t
, 
Uöt32
)

38 
	$X
(
öt32_t
, 
I¡32
)

40 #unde‡
X


	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_implementation_12_inl.h

9 #i‚de‡
NAN_IMPLEMENTATION_12_INL_H_


10 
	#NAN_IMPLEMENTATION_12_INL_H_


	)

15 
«me•a˚
 
	gimp
 {

19 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


20 
Fa˘‹y
<
v8
::
Aºay
>::
New
() {

21  
v8
::
Aºay
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

24 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


25 
Fa˘‹y
<
v8
::
Aºay
>::
New
(
Àngth
) {

26  
v8
::
Aºay
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
Àngth
);

31 
	gFa˘‹y
<
	gv8
::
Boﬁón
>::
ªtu∫_t


32 
Fa˘‹y
<
v8
::
Boﬁón
>::
New
(
boﬁ
 
vÆue
) {

33  
v8
::
Boﬁón
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

38 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
>::
ªtu∫_t


39 
Fa˘‹y
<
v8
::
BoﬁónObje˘
>::
New
(
boﬁ
 
vÆue
) {

40  
v8
::
BoﬁónObje˘
::
New
(
vÆue
).
As
<v8::BooleanObject>();

45 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
>::
ªtu∫_t


46 
Fa˘‹y
<
v8
::
C⁄ãxt
>::
New
–v8::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s


47 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂


48 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
) {

49  
v8
::
C⁄ãxt
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
exãnsi⁄s
, 
tm∂
, 
obj
);

54 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

55 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

56 
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t


57 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

58 
v8
::
Loˇl
<v8::
D©e
> 
ªt
;

59 i‡(
	gv8
::
D©e
::
New
(
GëCuºítC⁄ãxt
(), 
vÆue
).

60 
ToLoˇl
(
ªöãΩªt_ˇ°
<
v8
::
Loˇl
<v8::
VÆue
>*>(&
ªt
))) {

61  
v8
::
MaybeLoˇl
<v8::
D©e
>(
ªt
);

63  
	gv8
::
MaybeLoˇl
<
v8
::
D©e
>(
ªt
);

67 
	gFa˘‹y
<
	gv8
::
D©e
>::
ªtu∫_t


68 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

69  
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t
(

70 
v8
::
D©e
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
).
As
<v8::Date>());

76 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
>::
ªtu∫_t


77 
Fa˘‹y
<
v8
::
Exã∫Æ
>::
New
(* 
vÆue
) {

78  
v8
::
Exã∫Æ
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

83 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
>::
ªtu∫_t


84 
Fa˘‹y
<
v8
::
Fun˘i⁄
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


85 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) {

86 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
GëCuºít
();

87 
	gv8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
(
isﬁ©e
);

88 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
(
isﬁ©e
);

89 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

90 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
çl
).
ToLoˇlChecked
();

92 
	gobj
->
SëI¡î«lFõld
(

93 
imp
::
kFun˘i⁄Index


94 , 
v8
::
Exã∫Æ
::
New
(
isﬁ©e
, 
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

96 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
isﬁ©e
, 
d©a
);

98 i‡(!
	gvÆ
.
IsEm±y
()) {

99 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

102  
	gsc›e
.
Esˇ≥
(
v8
::
Fun˘i⁄
::
New
–
isﬁ©e


103 , 
imp
::
Fun˘i⁄CÆlbackWøµî


104 , 
obj
));

109 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
>::
ªtu∫_t


110 
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


111 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a


112 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
) {

113 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
GëCuºít
();

114 i‡(
	gˇŒback
) {

115 
	gv8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
(
isﬁ©e
);

116 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
(
isﬁ©e
);

117 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

118 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
çl
).
ToLoˇlChecked
();

120 
	gobj
->
SëI¡î«lFõld
(

121 
imp
::
kFun˘i⁄Index


122 , 
v8
::
Exã∫Æ
::
New
(
isﬁ©e
, 
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

123 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
isﬁ©e
, 
d©a
);

125 i‡(!
	gvÆ
.
IsEm±y
()) {

126 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

129  
	gsc›e
.
Esˇ≥
(
v8
::
Fun˘i⁄Tem∂©e
::
New
–
isﬁ©e


130 , 
imp
::
Fun˘i⁄CÆlbackWøµî


131 , 
obj


132 , 
sig«tuª
));

134  
	gv8
::
Fun˘i⁄Tem∂©e
::
New
(
isﬁ©e
, 0, 
d©a
, 
sig«tuª
);

140 
	gFa˘‹y
<
	gv8
::
Numbî
>::
ªtu∫_t


141 
Fa˘‹y
<
v8
::
Numbî
>::
New
(
vÆue
) {

142  
v8
::
Numbî
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

147 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
>::
ªtu∫_t


148 
Fa˘‹y
<
v8
::
NumbîObje˘
>::
New
(
vÆue
) {

149  
v8
::
NumbîObje˘
::
New
–v8::
Isﬁ©e
::
GëCuºít
()

150 , 
vÆue
).
	gAs
<
	gv8
::
NumbîObje˘
>();

155 
	gãm∂©e
 <
ty≥«me
 
	gT
>

156 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


157 
I¡egîFa˘‹y
<
T
>::
New
(
öt32_t
 
vÆue
) {

158  
To
<
T
>(T::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

161 
	gãm∂©e
 <
ty≥«me
 
	gT
>

162 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


163 
I¡egîFa˘‹y
<
T
>::
New
(
uöt32_t
 
vÆue
) {

164  
To
<
T
>(T::
NewFromUnsig√d
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

167 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


168 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
öt32_t
 
vÆue
) {

169  
To
<
v8
::
Uöt32
>(

170 
v8
::
Uöt32
::
NewFromUnsig√d
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

173 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


174 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
uöt32_t
 
vÆue
) {

175  
To
<
v8
::
Uöt32
>(

176 
v8
::
Uöt32
::
NewFromUnsig√d
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

181 
	gFa˘‹y
<
	gv8
::
Obje˘
>::
ªtu∫_t


182 
Fa˘‹y
<
v8
::
Obje˘
>::
New
() {

183  
v8
::
Obje˘
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

188 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
>::
ªtu∫_t


189 
Fa˘‹y
<
v8
::
Obje˘Tem∂©e
>::
New
() {

190  
v8
::
Obje˘Tem∂©e
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

195 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

196 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

197 
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t


198 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

199 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


200 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

201  
v8
::
RegExp
::
New
(
GëCuºítC⁄ãxt
(), 
∑âîn
, 
Êags
);

204 
	gFa˘‹y
<
	gv8
::
RegExp
>::
ªtu∫_t


205 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

206 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


207 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

208  
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t
(v8::RegExp::
New
(
∑âîn
, 
Êags
));

214 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

215 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

216 
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t


217 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

218 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

219  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
§c
);

222 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


223 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


224 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

225 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

226  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
§c
);

229 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


230 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

231 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

232  
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t
(

233 
v8
::
S¸ùtCompûî
::
Compûe
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

236 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


237 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


238 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

239 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

240  
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t
(

241 
v8
::
S¸ùtCompûî
::
Compûe
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

247 
	gFa˘‹y
<
	gv8
::
Sig«tuª
>::
ªtu∫_t


248 
Fa˘‹y
<
v8
::
Sig«tuª
>::
New
(Fa˘‹y<v8::Sig«tuª>::
FTH
 
ª˚ivî
) {

249  
v8
::
Sig«tuª
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
ª˚ivî
);

254 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


255 
Fa˘‹y
<
v8
::
Såög
>::
New
() {

256  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

257 
v8
::
Såög
::
Em±y
(v8::
Isﬁ©e
::
GëCuºít
()));

260 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

261 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

262 
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


263 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

264  
	gv8
::
Såög
::
NewFromUtf8
(

265 
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
, v8::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

268 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


269 
Fa˘‹y
<
v8
::
Såög
>::
New
(
°d
::
°rög
 c⁄°& 
vÆue
) {

270 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

271  
	gv8
::
Såög
::
NewFromUtf8
(
v8
::
Isﬁ©e
::
GëCuºít
(),

272 
vÆue
.
d©a
(), 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
°©ic_ˇ°
<>(vÆue.
size
()));

275 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


276 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

277  
	gv8
::
Såög
::
NewFromTwoByã
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
,

278 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

281 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


282 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

283  
v8
::
Såög
::
NewExã∫ÆTwoByã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

286 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


287 
Fa˘‹y
<
v8
::
Såög
>::
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

288  
v8
::
Såög
::
NewExã∫ÆO√Byã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

291 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


292 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

293  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

294 
v8
::
Såög
::
NewFromUtf8
(

295 
v8
::
Isﬁ©e
::
GëCuºít
()

296 , 
vÆue


297 , 
v8
::
Såög
::
kN‹mÆSåög


298 , 
Àngth
));

301 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


302 
Fa˘‹y
<
v8
::
Såög
>::
New
(

303 
°d
::
°rög
 c⁄°& 
vÆue
) {

304 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

305  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

306 
v8
::
Såög
::
NewFromUtf8
(

307 
v8
::
Isﬁ©e
::
GëCuºít
()

308 , 
vÆue
.
d©a
()

309 , 
v8
::
Såög
::
kN‹mÆSåög


310 , 
°©ic_ˇ°
<>(
vÆue
.
size
())));

313 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


314 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

315  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

316 
v8
::
Såög
::
NewFromTwoByã
(

317 
v8
::
Isﬁ©e
::
GëCuºít
()

318 , 
vÆue


319 , 
v8
::
Såög
::
kN‹mÆSåög


320 , 
Àngth
));

323 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


324 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

325  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

326 
v8
::
Såög
::
NewExã∫Æ
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

329 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


330 
Fa˘‹y
<
v8
::
Såög
>::
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

331  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

332 
v8
::
Såög
::
NewExã∫Æ
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

338 
	gFa˘‹y
<
	gv8
::
SåögObje˘
>::
ªtu∫_t


339 
Fa˘‹y
<
v8
::
SåögObje˘
>::
New
(v8::
Loˇl
<v8::
Såög
> 
vÆue
) {

340  
v8
::
SåögObje˘
::
New
(
vÆue
).
As
<v8::StringObject>();

345 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

346 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

347 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
ªtu∫_t


348 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
(v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

349 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

350  
	gv8
::
S¸ùtCompûî
::
CompûeUnboundS¸ùt
(

351 
v8
::
Isﬁ©e
::
GëCuºít
(), &
§c
);

354 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


355 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


356 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

357 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

358  
	gv8
::
S¸ùtCompûî
::
CompûeUnboundS¸ùt
(

359 
v8
::
Isﬁ©e
::
GëCuºít
(), &
§c
);

362 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


363 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
(v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

364 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

365  
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t
(

366 
v8
::
S¸ùtCompûî
::
CompûeUnbound
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

369 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


370 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


371 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

372 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

373  
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t
(

374 
v8
::
S¸ùtCompûî
::
CompûeUnbound
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

382 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


383 
	gãm∂©e
 <
ty≥«me
 
	gT
>

384 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
) {

385  
v8
::
Loˇl
<
T
>::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
h
);

389 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

390 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

391  
	gv8
::
Loˇl
<
T
>::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
p
);

394 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

395 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

396  
	gv8
::
Loˇl
<
T
>::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
p
);

399 
	gãm∂©e
 <
ty≥«me
 
	gT
>

400 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
) {

401  
v8
::
Loˇl
<
T
>::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
p
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_implementation_pre_12_inl.h

9 #i‚de‡
NAN_IMPLEMENTATION_PRE_12_INL_H_


10 
	#NAN_IMPLEMENTATION_PRE_12_INL_H_


	)

16 
«me•a˚
 
	gimp
 {

20 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


21 
Fa˘‹y
<
v8
::
Aºay
>::
New
() {

22  
v8
::
Aºay
::
New
();

25 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


26 
Fa˘‹y
<
v8
::
Aºay
>::
New
(
Àngth
) {

27  
v8
::
Aºay
::
New
(
Àngth
);

32 
	gFa˘‹y
<
	gv8
::
Boﬁón
>::
ªtu∫_t


33 
Fa˘‹y
<
v8
::
Boﬁón
>::
New
(
boﬁ
 
vÆue
) {

34  
v8
::
Boﬁón
::
New
(
vÆue
)->
ToBoﬁón
();

39 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
>::
ªtu∫_t


40 
Fa˘‹y
<
v8
::
BoﬁónObje˘
>::
New
(
boﬁ
 
vÆue
) {

41  
v8
::
BoﬁónObje˘
::
New
(
vÆue
).
As
<v8::BooleanObject>();

46 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
>::
ªtu∫_t


47 
Fa˘‹y
<
v8
::
C⁄ãxt
>::
New
–v8::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s


48 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂


49 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
) {

50 
v8
::
Pîsi°ít
<v8::
C⁄ãxt
> 
˘x
 = v8::C⁄ãxt::
New
(
exãnsi⁄s
, 
tm∂
, 
obj
);

51 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
l˘x
 = v8::Loˇl<v8::C⁄ãxt>::
New
(
˘x
);

52 
	g˘x
.
Di•o£
();

53  
	gl˘x
;

58 
	gFa˘‹y
<
	gv8
::
D©e
>::
ªtu∫_t


59 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

60  
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t
(v8::D©e::
New
(
vÆue
).
As
<v8::Date>());

65 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
>::
ªtu∫_t


66 
Fa˘‹y
<
v8
::
Exã∫Æ
>::
New
(* 
vÆue
) {

67  
v8
::
Exã∫Æ
::
New
(
vÆue
);

72 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
>::
ªtu∫_t


73 
Fa˘‹y
<
v8
::
Fun˘i⁄
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


74 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) {

75  
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
ˇŒback


76 , 
d©a


77 , 
v8
::
Loˇl
<v8::
Sig«tuª
>()

78 )->
GëFun˘i⁄
();

84 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
>::
ªtu∫_t


85 
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


86 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a


87 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
) {

88 i‡(
ˇŒback
) {

89 
v8
::
H™dÀSc›e
 
sc›e
;

91 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
();

92 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

93 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
çl
->
NewIn°™˚
();

95 
	gobj
->
SëI¡î«lFõld
(

96 
imp
::
kFun˘i⁄Index


97 , 
v8
::
Exã∫Æ
::
New
(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

99 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
d©a
);

101 i‡(!
	gvÆ
.
IsEm±y
()) {

102 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

107  
	gsc›e
.
Clo£
(

108 
v8
::
Fun˘i⁄Tem∂©e
::
New
(
imp
::
Fun˘i⁄CÆlbackWøµî


109 , 
obj


110 , 
sig«tuª
));

112  
	gv8
::
Fun˘i⁄Tem∂©e
::
New
(0, 
d©a
, 
sig«tuª
);

118 
	gFa˘‹y
<
	gv8
::
Numbî
>::
ªtu∫_t


119 
Fa˘‹y
<
v8
::
Numbî
>::
New
(
vÆue
) {

120  
v8
::
Numbî
::
New
(
vÆue
);

125 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
>::
ªtu∫_t


126 
Fa˘‹y
<
v8
::
NumbîObje˘
>::
New
(
vÆue
) {

127  
v8
::
NumbîObje˘
::
New
(
vÆue
).
As
<v8::NumberObject>();

132 
	gãm∂©e
 <
ty≥«me
 
	gT
>

133 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


134 
I¡egîFa˘‹y
<
T
>::
New
(
öt32_t
 
vÆue
) {

135  
To
<
T
>(T::
New
(
vÆue
));

138 
	gãm∂©e
 <
ty≥«me
 
	gT
>

139 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


140 
I¡egîFa˘‹y
<
T
>::
New
(
uöt32_t
 
vÆue
) {

141  
To
<
T
>(T::
NewFromUnsig√d
(
vÆue
));

144 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


145 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
öt32_t
 
vÆue
) {

146  
To
<
v8
::
Uöt32
>(v8::Uöt32::
NewFromUnsig√d
(
vÆue
));

149 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


150 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
uöt32_t
 
vÆue
) {

151  
To
<
v8
::
Uöt32
>(v8::Uöt32::
NewFromUnsig√d
(
vÆue
));

157 
	gFa˘‹y
<
	gv8
::
Obje˘
>::
ªtu∫_t


158 
Fa˘‹y
<
v8
::
Obje˘
>::
New
() {

159  
v8
::
Obje˘
::
New
();

164 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
>::
ªtu∫_t


165 
Fa˘‹y
<
v8
::
Obje˘Tem∂©e
>::
New
() {

166  
v8
::
Obje˘Tem∂©e
::
New
();

171 
	gFa˘‹y
<
	gv8
::
RegExp
>::
ªtu∫_t


172 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

173 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


174 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

175  
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t
(v8::RegExp::
New
(
∑âîn
, 
Êags
));

180 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


181 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

182  
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t
(v8::S¸ùt::
New
(
sour˚
));

184 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


185 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


186 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

187  
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t
(

188 
v8
::
S¸ùt
::
New
(
sour˚
, 
c⁄°_ˇ°
<v8::
S¸ùtOrigö
*>(&
‹igö
)));

193 
	gFa˘‹y
<
	gv8
::
Sig«tuª
>::
ªtu∫_t


194 
Fa˘‹y
<
v8
::
Sig«tuª
>::
New
(Fa˘‹y<v8::Sig«tuª>::
FTH
 
ª˚ivî
) {

195  
v8
::
Sig«tuª
::
New
(
ª˚ivî
);

200 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


201 
Fa˘‹y
<
v8
::
Såög
>::
New
() {

202  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
Em±y
());

205 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


206 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

207  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(
v8
::Såög::
New
(
vÆue
, 
Àngth
));

210 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


211 
Fa˘‹y
<
v8
::
Såög
>::
New
(

212 
°d
::
°rög
 c⁄°& 
vÆue
) {

213 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

214  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

215 
v8
::
Såög
::
New
–
vÆue
.
d©a
(), 
°©ic_ˇ°
<>(vÆue.
size
())));

218 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


219 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

220  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(
v8
::Såög::
New
(
vÆue
, 
Àngth
));

223 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


224 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

225  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
NewExã∫Æ
(
vÆue
));

228 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


229 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆAsciiSåögResour˚
 * 
vÆue
) {

230  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
NewExã∫Æ
(
vÆue
));

235 
	gFa˘‹y
<
	gv8
::
SåögObje˘
>::
ªtu∫_t


236 
Fa˘‹y
<
v8
::
SåögObje˘
>::
New
(v8::
Loˇl
<v8::
Såög
> 
vÆue
) {

237  
v8
::
SåögObje˘
::
New
(
vÆue
).
As
<v8::StringObject>();

244 
	gãm∂©e
 <
ty≥«me
 
	gT
>

245 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
) {

246  
v8
::
Loˇl
<
T
>::
New
(
h
);

249 
	gãm∂©e
 <
ty≥«me
 
	gT
>

250 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T> c⁄°& 
p
) {

251  
v8
::
Loˇl
<
T
>::
New
(
p
);

254 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

255 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

256  
	gv8
::
Loˇl
<
T
>::
New
(
p
.
≥rsi°ít
);

259 
	gãm∂©e
 <
ty≥«me
 
	gT
>

260 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
) {

261  
v8
::
Loˇl
<
T
>::
New
(
p
.
≥rsi°ít
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_maybe_43_inl.h

9 #i‚de‡
NAN_MAYBE_43_INL_H_


10 
	#NAN_MAYBE_43_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 
usög
 
	gMaybeLoˇl
 = 
v8
::
MaybeLoˇl
<
T
>;

15 
	gãm∂©e
<
ty≥«me
 
	gT
>

16 
usög
 
	gMaybe
 = 
v8
::
Maybe
<
T
>;

18 
	gãm∂©e
<
ty≥«me
 
	gT
>

19 
NAN_INLINE
 
	gMaybe
<
	gT
> 
	$NŸhög
() {

20  
v8
::
NŸhög
<
T
>();

21 
	}
}

23 
	gãm∂©e
<
ty≥«me
 
	gT
>

24 
NAN_INLINE
 
	gMaybe
<
	gT
> 
	$Ju°
(c⁄° 
T
& 
t
) {

25  
v8
::
Ju°
<
T
>(
t
);

26 
	}
}

28 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
GëCuºítC⁄ãxt
();

30 
NAN_INLINE


31 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
ToDëaûSåög
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

32  
vÆ
->
ToDëaûSåög
(
GëCuºítC⁄ãxt
());

35 
NAN_INLINE


36 
	gMaybeLoˇl
<
	gv8
::
Uöt32
> 
ToAºayIndex
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

37  
vÆ
->
ToAºayIndex
(
GëCuºítC⁄ãxt
());

40 
NAN_INLINE


41 
	gMaybe
<
	gboﬁ
> 
EquÆs
(
v8
::
Loˇl
<v8::
VÆue
> 
a
, v8::Loˇl<v8::VÆue>(
b
)) {

42  
a
->
EquÆs
(
GëCuºítC⁄ãxt
(), 
b
);

45 
NAN_INLINE


46 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h
) {

47  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
());

50 
NAN_INLINE


51 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(

52 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h


53 , 
¨gc


54 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

55  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
(), 
¨gc
, 
¨gv
);

58 
NAN_INLINE


59 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
h
) {

60  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
());

64 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Fun˘i⁄
> 
GëFun˘i⁄
(

65 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
t
) {

66  
t
->
GëFun˘i⁄
(
GëCuºítC⁄ãxt
());

69 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

70 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


71 , 
v8
::
Loˇl
<v8::
VÆue
> 
key


72 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
) {

73  
obj
->
Së
(
GëCuºítC⁄ãxt
(), 
key
, 
vÆue
);

76 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

77 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


78 , 
uöt32_t
 
ödex


79 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
) {

80  
obj
->
Së
(
GëCuºítC⁄ãxt
(), 
ödex
, 
vÆue
);

83 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
F‹˚Së
(

84 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


85 , 
v8
::
Loˇl
<v8::
VÆue
> 
key


86 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


87 , 
v8
::
Pr›îtyAâribuã
 
©åibs
 = v8::
N⁄e
) {

88  
obj
->
F‹˚Së
(
GëCuºítC⁄ãxt
(), 
key
, 
vÆue
, 
©åibs
);

91 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

92 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


93 , 
v8
::
Loˇl
<v8::
VÆue
> 
key
) {

94  
obj
->
Gë
(
GëCuºítC⁄ãxt
(), 
key
);

97 
NAN_INLINE


98 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

99  
	gobj
->
Gë
(
GëCuºítC⁄ãxt
(), 
ödex
);

102 
NAN_INLINE
 
	gv8
::
Pr›îtyAâribuã
 
GëPr›îtyAâribuãs
(

103 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


104 , 
v8
::
Loˇl
<v8::
VÆue
> 
key
) {

105  
obj
->
GëPr›îtyAâribuãs
(
GëCuºítC⁄ãxt
(), 
key
).
FromJu°
();

108 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

109 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


110 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

111  
obj
->
Has
(
GëCuºítC⁄ãxt
(), 
key
);

114 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

115  
	gobj
->
Has
(
GëCuºítC⁄ãxt
(), 
ödex
);

118 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

119 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


120 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

121  
obj
->
Dñëe
(
GëCuºítC⁄ãxt
(), 
key
);

124 
NAN_INLINE


125 
	gMaybe
<
	gboﬁ
> 
Dñëe
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

126  
	gobj
->
Dñëe
(
GëCuºítC⁄ãxt
(), 
ödex
);

129 
NAN_INLINE


130 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëPr›îtyNames
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

131  
obj
->
GëPr›îtyNames
(
GëCuºítC⁄ãxt
());

134 
NAN_INLINE


135 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëOwnPr›îtyNames
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

136  
obj
->
GëOwnPr›îtyNames
(
GëCuºítC⁄ãxt
());

139 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
SëPrŸŸy≥
(

140 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


141 , 
v8
::
Loˇl
<v8::
VÆue
> 
¥ŸŸy≥
) {

142  
obj
->
SëPrŸŸy≥
(
GëCuºítC⁄ãxt
(), 
¥ŸŸy≥
);

145 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
Obje˘PrŸoToSåög
(

146 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

147  
obj
->
Obje˘PrŸoToSåög
(
GëCuºítC⁄ãxt
());

150 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasOwnPr›îty
(

151 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


152 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

153  
obj
->
HasOwnPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

156 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedPr›îty
(

157 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


158 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

159  
obj
->
HasRólNamedPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

162 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólIndexedPr›îty
(

163 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


164 , 
uöt32_t
 
ödex
) {

165  
	gobj
->
HasRólIndexedPr›îty
(
GëCuºítC⁄ãxt
(), 
ödex
);

168 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedCÆlbackPr›îty
(

169 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


170 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

171  
obj
->
HasRólNamedCÆlbackPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

174 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(

175 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


176 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

177  
obj
->
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(
GëCuºítC⁄ãxt
(), 
key
);

180 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îty
(

181 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


182 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

183  
obj
->
GëRólNamedPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

186 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsFun˘i⁄
(

187 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


188 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


189 , 
¨gc


190 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

191  
obj
->
CÆlAsFun˘i⁄
(
GëCuºítC⁄ãxt
(), 
ªcv
, 
¨gc
, 
¨gv
);

194 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsC⁄°ru˘‹
(

195 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


196 , 
¨gc
, 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

197  
obj
->
CÆlAsC⁄°ru˘‹
(
GëCuºítC⁄ãxt
(), 
¨gc
, 
¨gv
);

200 
NAN_INLINE


201 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
GëSour˚Löe
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

202  
msg
->
GëSour˚Löe
(
GëCuºítC⁄ãxt
());

205 
NAN_INLINE
 
	gMaybe
<> 
GëLöeNumbî
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

206  
msg
->
GëLöeNumbî
(
GëCuºítC⁄ãxt
());

209 
NAN_INLINE
 
	gMaybe
<> 
GëSèπCﬁumn
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

210  
msg
->
GëSèπCﬁumn
(
GëCuºítC⁄ãxt
());

213 
NAN_INLINE
 
	gMaybe
<> 
GëEndCﬁumn
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

214  
msg
->
GëEndCﬁumn
(
GëCuºítC⁄ãxt
());

217 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
Cl⁄eEÀmítAt
(

218 
v8
::
Loˇl
<v8::
Aºay
> 
¨øy


219 , 
uöt32_t
 
ödex
) {

220  
	g¨øy
->
Cl⁄eEÀmítAt
(
GëCuºítC⁄ãxt
(), 
ödex
);

223 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆl
(

224 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
fun


225 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


226 , 
¨gc


227 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

228  
fun
->
CÆl
(
GëCuºítC⁄ãxt
(), 
ªcv
, 
¨gc
, 
¨gv
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_maybe_pre_43_inl.h

9 #i‚de‡
NAN_MAYBE_PRE_43_INL_H_


10 
	#NAN_MAYBE_PRE_43_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cMaybeLoˇl
 {

14 
	mpublic
:

15 
NAN_INLINE
 
	$MaybeLoˇl
(Ë: 
	`vÆ_
(
v8
::
Loˇl
<
T
>()) {}

17 
ãm∂©e
<
ty≥«me
 
S
>

18 #i‡
NODE_MODULE_VERSION
 >
NODE_0_12_MODULE_VERSION


19 
NAN_INLINE
 
	`MaybeLoˇl
(
v8
::
Loˇl
<
S
> 
th©
Ë: 
	$vÆ_
(
th©
Ë{
	}
}

21 
NAN_INLINE
 
MaybeLoˇl
(
v8
::
Loˇl
<
S
> 
th©
) :

22 
vÆ_
(*
ªöãΩªt_ˇ°
<
v8
::
Loˇl
<
T
>*>(&
th©
)) {}

25 
NAN_INLINE
 
boﬁ
 
	$IsEm±y
(Ëc⁄° {  
vÆ_
.
	`IsEm±y
(); 
	}
}

27 
	gãm∂©e
<
ty≥«me
 
	gS
>

28 
NAN_INLINE
 
boﬁ
 
ToLoˇl
(
v8
::
Loˇl
<
S
> *
out
) const {

29 *
out
 = 
vÆ_
;

30  !
IsEm±y
();

33 
NAN_INLINE
 
	gv8
::
Loˇl
<
T
> 
	$ToLoˇlChecked
() const {

34 #i‡
	`deföed
(
V8_ENABLE_CHECKS
)

35 
	`as£π
(!
	`IsEm±y
() && "ToLocalChecked is Empty");

37  
vÆ_
;

38 
	}
}

40 
	gãm∂©e
<
ty≥«me
 
	gS
>

41 
NAN_INLINE
 
	gv8
::
Loˇl
<
S
> 
FromMaybe
(
v8
::Loˇl<S> 
deÁu…_vÆue
) const {

42  
IsEm±y
(Ë? 
deÁu…_vÆue
 : 
vÆ_
;

45 
	g¥iv©e
:

46 
v8
::
Loˇl
<
T
> 
vÆ_
;

49 
	gãm∂©e
<
ty≥«me
 
	gT
>

50 ˛as†
	cMaybe
 {

51 
	mpublic
:

52 
NAN_INLINE
 
boﬁ
 
	$IsNŸhög
(Ëc⁄° {  !
has_vÆue_
; }

53 
NAN_INLINE
 
boﬁ
 
	$IsJu°
(Ëc⁄° {  
has_vÆue_
; 
	}
}

55 
NAN_INLINE
 
T
 
	$FromJu°
() const {

56 #i‡
	`deföed
(
V8_ENABLE_CHECKS
)

57 
	`as£π
(
	`IsJu°
() && "FromJust is Nothing");

59  
vÆue_
;

60 
	}
}

62 
NAN_INLINE
 
T
 
	$FromMaybe
(c⁄° 
T
& 
deÁu…_vÆue
) const {

63  
has_vÆue_
 ? 
vÆue_
 : 
deÁu…_vÆue
;

64 
	}
}

66 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
Maybe
 &
Ÿhî
) const {

67  (
IsJu°
(Ë=
Ÿhî
.IsJust()) &&

68 (!
IsJu°
(Ë|| 
FromJu°
(Ë=
Ÿhî
.FromJust());

71 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Maybe
 &
Ÿhî
) const {

72  !
›î©‹
==(
Ÿhî
);

75 
	g¥iv©e
:

76 
	$Maybe
(Ë: 
	$has_vÆue_
(
Ál£
Ë{
	}
}

77 
ex∂icô
 
	$Maybe
(c⁄° 
T
& 
t
Ë: 
	`has_vÆue_
(
åue
), 
	$vÆue_
(
t
Ë{
	}
}

78 
boﬁ
 
	ghas_vÆue_
;

79 
T
 
	gvÆue_
;

81 
	gãm∂©e
<
ty≥«me
 
	gU
>

82 
‰õnd
 
	gMaybe
<
	gU
> 
NŸhög
();

83 
	gãm∂©e
<
ty≥«me
 
	gU
>

84 
‰õnd
 
	gMaybe
<
	gU
> 
Ju°
(c⁄° 
U
& 
u
);

87 
	gãm∂©e
<
ty≥«me
 
	gT
>

88 
ölöe
 
	gMaybe
<
	gT
> 
	$NŸhög
() {

89  
Maybe
<
T
>();

90 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gT
>

93 
ölöe
 
	gMaybe
<
	gT
> 
	$Ju°
(c⁄° 
T
& 
t
) {

94  
Maybe
<
T
>(
t
);

95 
	}
}

97 
NAN_INLINE


98 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
ToDëaûSåög
(
v8
::
H™dÀ
<v8::
VÆue
> 
vÆ
) {

99  
MaybeLoˇl
<
v8
::
Såög
>(
vÆ
->
ToDëaûSåög
());

102 
NAN_INLINE


103 
	gMaybeLoˇl
<
	gv8
::
Uöt32
> 
ToAºayIndex
(
v8
::
H™dÀ
<v8::
VÆue
> 
vÆ
) {

104  
MaybeLoˇl
<
v8
::
Uöt32
>(
vÆ
->
ToAºayIndex
());

107 
NAN_INLINE


108 
	gMaybe
<
	gboﬁ
> 
EquÆs
(
v8
::
H™dÀ
<v8::
VÆue
> 
a
, v8::H™dÀ<v8::VÆue>(
b
)) {

109  
Ju°
<
boﬁ
>(
a
->
EquÆs
(
b
));

112 
NAN_INLINE


113 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
H™dÀ
<v8::
Fun˘i⁄
> 
h
) {

114  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
());

117 
NAN_INLINE


118 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(

119 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h


120 , 
¨gc


121 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

122  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
(
¨gc
, 
¨gv
));

125 
NAN_INLINE


126 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
H™dÀ
<v8::
Obje˘Tem∂©e
> 
h
) {

127  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
());

130 
NAN_INLINE


131 
	gMaybeLoˇl
<
	gv8
::
Fun˘i⁄
> 
GëFun˘i⁄
(
v8
::
H™dÀ
<v8::
Fun˘i⁄Tem∂©e
> 
t
) {

132  
MaybeLoˇl
<
v8
::
Fun˘i⁄
>(
t
->
GëFun˘i⁄
());

135 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

136 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


137 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key


138 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue
) {

139  
Ju°
<
boﬁ
>(
obj
->
Së
(
key
, 
vÆue
));

142 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

143 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


144 , 
uöt32_t
 
ödex


145 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue
) {

146  
Ju°
<
boﬁ
>(
obj
->
Së
(
ödex
, 
vÆue
));

149 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
F‹˚Së
(

150 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


151 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key


152 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue


153 , 
v8
::
Pr›îtyAâribuã
 
©åibs
 = v8::
N⁄e
) {

154  
Ju°
<
boﬁ
>(
obj
->
F‹˚Së
(
key
, 
vÆue
, 
©åibs
));

157 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

158 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


159 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key
) {

160  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
Gë
(
key
));

163 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

164 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


165 , 
uöt32_t
 
ödex
) {

166  
	gMaybeLoˇl
<
	gv8
::
VÆue
>(
obj
->
Gë
(
ödex
));

169 
NAN_INLINE
 
	gMaybe
<
	gv8
::
Pr›îtyAâribuã
> 
GëPr›îtyAâribuãs
(

170 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


171 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key
) {

172  
Ju°
<
v8
::
Pr›îtyAâribuã
>(
obj
->
GëPr›îtyAâribuãs
(
key
));

175 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

176 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


177 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

178  
Ju°
<
boﬁ
>(
obj
->
Has
(
key
));

181 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

182 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


183 , 
uöt32_t
 
ödex
) {

184  
	gJu°
<
	gboﬁ
>(
	gobj
->
Has
(
ödex
));

187 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

188 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


189 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

190  
Ju°
<
boﬁ
>(
obj
->
Dñëe
(
key
));

193 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

194 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


195 , 
uöt32_t
 
ödex
) {

196  
	gJu°
<
	gboﬁ
>(
	gobj
->
Dñëe
(
ödex
));

199 
NAN_INLINE


200 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëPr›îtyNames
(
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

201  
MaybeLoˇl
<
v8
::
Aºay
>(
obj
->
GëPr›îtyNames
());

204 
NAN_INLINE


205 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëOwnPr›îtyNames
(
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

206  
MaybeLoˇl
<
v8
::
Aºay
>(
obj
->
GëOwnPr›îtyNames
());

209 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
SëPrŸŸy≥
(

210 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


211 , 
v8
::
H™dÀ
<v8::
VÆue
> 
¥ŸŸy≥
) {

212  
Ju°
<
boﬁ
>(
obj
->
SëPrŸŸy≥
(
¥ŸŸy≥
));

215 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
Obje˘PrŸoToSåög
(

216 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

217  
MaybeLoˇl
<
v8
::
Såög
>(
obj
->
Obje˘PrŸoToSåög
());

220 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasOwnPr›îty
(

221 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


222 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

223  
Ju°
<
boﬁ
>(
obj
->
HasOwnPr›îty
(
key
));

226 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedPr›îty
(

227 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


228 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

229  
Ju°
<
boﬁ
>(
obj
->
HasRólNamedPr›îty
(
key
));

232 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólIndexedPr›îty
(

233 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


234 , 
uöt32_t
 
ödex
) {

235  
	gJu°
<
	gboﬁ
>(
	gobj
->
HasRólIndexedPr›îty
(
ödex
));

238 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedCÆlbackPr›îty
(

239 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


240 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

241  
Ju°
<
boﬁ
>(
obj
->
HasRólNamedCÆlbackPr›îty
(
key
));

244 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(

245 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


246 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

247  
MaybeLoˇl
<
v8
::
VÆue
>(

248 
obj
->
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(
key
));

251 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îty
(

252 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


253 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

254  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
GëRólNamedPr›îty
(
key
));

257 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsFun˘i⁄
(

258 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


259 , 
v8
::
H™dÀ
<v8::
Obje˘
> 
ªcv


260 , 
¨gc


261 , 
v8
::
H™dÀ
<v8::
VÆue
> 
¨gv
[]) {

262  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
CÆlAsFun˘i⁄
(
ªcv
, 
¨gc
, 
¨gv
));

265 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsC⁄°ru˘‹
(

266 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


267 , 
¨gc


268 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

269  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
CÆlAsC⁄°ru˘‹
(
¨gc
, 
¨gv
));

272 
NAN_INLINE


273 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
GëSour˚Löe
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

274  
MaybeLoˇl
<
v8
::
Såög
>(
msg
->
GëSour˚Löe
());

277 
NAN_INLINE
 
	gMaybe
<> 
GëLöeNumbî
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

278  
Ju°
<>(
msg
->
GëLöeNumbî
());

281 
NAN_INLINE
 
	gMaybe
<> 
GëSèπCﬁumn
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

282  
Ju°
<>(
msg
->
GëSèπCﬁumn
());

285 
NAN_INLINE
 
	gMaybe
<> 
GëEndCﬁumn
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

286  
Ju°
<>(
msg
->
GëEndCﬁumn
());

289 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
Cl⁄eEÀmítAt
(

290 
v8
::
H™dÀ
<v8::
Aºay
> 
¨øy


291 , 
uöt32_t
 
ödex
) {

292  
	gMaybeLoˇl
<
	gv8
::
Obje˘
>(
¨øy
->
Cl⁄eEÀmítAt
(
ödex
));

295 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆl
(

296 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
fun


297 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


298 , 
¨gc


299 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

300  
MaybeLoˇl
<
v8
::
VÆue
>(
fun
->
CÆl
(
ªcv
, 
¨gc
, 
¨gv
));

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_new.h

9 #i‚de‡
NAN_NEW_H_


10 
	#NAN_NEW_H_


	)

12 
«me•a˚
 
	gimp
 {

15 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gv8
::
Loˇl
<
T
> 
To
(
v8
::Loˇl<v8::
I¡egî
> 
i
);

17 
	gãm∂©e
 <>

18 
ölöe


19 
	gv8
::
Loˇl
<
v8
::
I¡egî
>

20 
To
<
v8
::
I¡egî
>(v8::
Loˇl
<v8::I¡egî> 
i
) {

21  
N™
::
To
<
v8
::
I¡egî
>(
i
).
ToLoˇlChecked
();

24 
	gãm∂©e
 <>

25 
ölöe


26 
	gv8
::
Loˇl
<
v8
::
I¡32
>

27 
To
<
v8
::
I¡32
>(v8::
Loˇl
<v8::
I¡egî
> 
i
) {

28  
N™
::
To
<
v8
::
I¡32
>(
i
).
ToLoˇlChecked
();

31 
	gãm∂©e
 <>

32 
ölöe


33 
	gv8
::
Loˇl
<
v8
::
Uöt32
>

34 
To
<
v8
::
Uöt32
>(v8::
Loˇl
<v8::
I¡egî
> 
i
) {

35  
N™
::
To
<
v8
::
Uöt32
>(
i
).
ToLoˇlChecked
();

38 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sFa˘‹yBa£
 {

39 
	gv8
::
	tLoˇl
<
	tT
> 
	tªtu∫_t
;

42 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sMaybeFa˘‹yBa£
 {

43 
	gMaybeLoˇl
<
	tT
> 
	tªtu∫_t
;

46 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gFa˘‹y
;

48 
	gãm∂©e
 <>

49 
	gFa˘‹y
<
	gv8
::
Aºay
> : 
Fa˘‹yBa£
<
v8
::Array> {

50 
ölöe
 
ªtu∫_t
 
New
();

51 
ölöe
 
ªtu∫_t
 
New
(
Àngth
);

54 
	gãm∂©e
 <>

55 
	gFa˘‹y
<
	gv8
::
Boﬁón
> : 
Fa˘‹yBa£
<
v8
::Boolean> {

56 
ölöe
 
ªtu∫_t
 
New
(
boﬁ
 
vÆue
);

59 
	gãm∂©e
 <>

60 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
> : 
Fa˘‹yBa£
<
v8
::BooleanObject> {

61 
ölöe
 
ªtu∫_t
 
New
(
boﬁ
 
vÆue
);

64 
	gãm∂©e
 <>

65 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
> : 
Fa˘‹yBa£
<
v8
::Context> {

66 
ölöe


67 
ªtu∫_t


68 
New
–
v8
::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s
 = 
NULL


69 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂
 = v8::Local<v8::ObjectTemplate>()

70 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
 = v8::Local<v8::Value>());

73 
	gãm∂©e
 <>

74 
	gFa˘‹y
<
	gv8
::
D©e
> : 
MaybeFa˘‹yBa£
<
v8
::Date> {

75 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

78 
	gãm∂©e
 <>

79 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
> : 
Fa˘‹yBa£
<
v8
::External> {

80 
ölöe
 
ªtu∫_t
 
New
(*
vÆue
);

83 
	gãm∂©e
 <>

84 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
> : 
Fa˘‹yBa£
<
v8
::Function> {

85 
ölöe


86 
ªtu∫_t


87 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


88 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>());

91 
	gãm∂©e
 <>

92 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
> : 
Fa˘‹yBa£
<
v8
::FunctionTemplate> {

93 
ölöe


94 
ªtu∫_t


95 
New
–
Fun˘i⁄CÆlback
 
ˇŒback
 = 
NULL


96 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

97 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
 = v8::Local<v8::Signature>());

100 
	gãm∂©e
 <>

101 
	gFa˘‹y
<
	gv8
::
Numbî
> : 
Fa˘‹yBa£
<
v8
::Number> {

102 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

105 
	gãm∂©e
 <>

106 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
> : 
Fa˘‹yBa£
<
v8
::NumberObject> {

107 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

110 
	gãm∂©e
 <
ty≥«me
 
	gT
>

111 
	gI¡egîFa˘‹y
 : 
Fa˘‹yBa£
<
T
> {

112 
ty≥«me
 
	tFa˘‹yBa£
<
	tT
>::
	tªtu∫_t
Ñeturn_t;

113 
ölöe
 
ªtu∫_t
 
New
(
öt32_t
 
vÆue
);

114 
ölöe
 
ªtu∫_t
 
New
(
uöt32_t
 
vÆue
);

117 
	gãm∂©e
 <>

118 
	gFa˘‹y
<
	gv8
::
I¡egî
> : 
I¡egîFa˘‹y
<
v8
::Integer> {};

120 
	gãm∂©e
 <>

121 
	gFa˘‹y
<
	gv8
::
I¡32
> : 
I¡egîFa˘‹y
<
v8
::Int32> {};

123 
	gãm∂©e
 <>

124 
	gFa˘‹y
<
	gv8
::
Uöt32
> : 
Fa˘‹yBa£
<
v8
::Uint32> {

125 
ölöe
 
ªtu∫_t
 
New
(
öt32_t
 
vÆue
);

126 
ölöe
 
ªtu∫_t
 
New
(
uöt32_t
 
vÆue
);

129 
	gãm∂©e
 <>

130 
	gFa˘‹y
<
	gv8
::
Obje˘
> : 
Fa˘‹yBa£
<
v8
::Object> {

131 
ölöe
 
ªtu∫_t
 
New
();

134 
	gãm∂©e
 <>

135 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
> : 
Fa˘‹yBa£
<
v8
::ObjectTemplate> {

136 
ölöe
 
ªtu∫_t
 
New
();

139 
	gãm∂©e
 <>

140 
	gFa˘‹y
<
	gv8
::
RegExp
> : 
MaybeFa˘‹yBa£
<
v8
::RegExp> {

141 
ölöe
 
ªtu∫_t
 
New
(

142 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn
, v8::
RegExp
::
Fœgs
 
Êags
);

145 
	gãm∂©e
 <>

146 
	gFa˘‹y
<
	gv8
::
S¸ùt
> : 
MaybeFa˘‹yBa£
<
v8
::Script> {

147 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚
);

148 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚


149 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
);

152 
	gãm∂©e
 <>

153 
	gFa˘‹y
<
	gv8
::
Sig«tuª
> : 
Fa˘‹yBa£
<
v8
::Signature> {

154 
v8
::
	tLoˇl
<
	tv8
::
	tFun˘i⁄Tem∂©e
> 
	tFTH
;

155 
ölöe
 
ªtu∫_t
 
New
(
FTH
 
ª˚ivî
 = FTH());

158 
	gãm∂©e
 <>

159 
	gFa˘‹y
<
	gv8
::
Såög
> : 
MaybeFa˘‹yBa£
<
v8
::String> {

160 
ölöe
 
ªtu∫_t
 
New
();

161 
ölöe
 
ªtu∫_t
 
New
(c⁄° *
vÆue
, 
Àngth
 = -1);

162 
ölöe
 
ªtu∫_t
 
New
(c⁄° 
uöt16_t
 *
vÆue
, 
Àngth
 = -1);

163 
ölöe
 
ªtu∫_t
 
New
(
°d
::
°rög
 c⁄°& 
vÆue
);

165 
ölöe
 
ªtu∫_t
 
New
(
v8
::
Såög
::
Exã∫ÆSåögResour˚
 * 
vÆue
);

166 
ölöe
 
ªtu∫_t
 
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
);

169 
	gãm∂©e
 <>

170 
	gFa˘‹y
<
	gv8
::
SåögObje˘
> : 
Fa˘‹yBa£
<
v8
::StringObject> {

171 
ölöe
 
ªtu∫_t
 
New
(
v8
::
Loˇl
<v8::
Såög
> 
vÆue
);

176 #i‡(
NODE_MODULE_VERSION
 >= 12)

178 
«me•a˚
 
	gimp
 {

180 
	gãm∂©e
 <>

181 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
> : 
MaybeFa˘‹yBa£
<
v8
::UnboundScript> {

182 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚
);

183 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚


184 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
);

189 
	~"«n_im∂emíèti⁄_12_öl.h
"

193 
	~"«n_im∂emíèti⁄_¥e_12_öl.h
"

199 
	gãm∂©e
 <
ty≥«me
 
	gT
>

200 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


201 
	$New
() {

202  
imp
::
Fa˘‹y
<
T
>::
	`New
();

203 
	}
}

205 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
>

206 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


207 
	$New
(
A0
 
¨g0
) {

208  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
);

209 
	}
}

211 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
>

212 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


213 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
) {

214  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
);

215 
	}
}

217 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
>

218 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


219 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
, 
A2
 
¨g2
) {

220  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
, 
¨g2
);

221 
	}
}

223 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
>

224 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


225 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
, 
A2
 
¨g2
, 
A3
 
¨g3
) {

226  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
, 
¨g2
, 
¨g3
);

227 
	}
}

235 
	gãm∂©e
 <
ty≥«me
 
	gT
>

236 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


237 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


238 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

239  
imp
::
Fa˘‹y
<
T
>::
New
(
ˇŒback
, 
d©a
);

243 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA2
>

244 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


245 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


246 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

247 , 
A2
 
a2
 = 
	$A2
()) {

248  
imp
::
Fa˘‹y
<
T
>::
	`New
(
ˇŒback
, 
d©a
, 
a2
);

249 
	}
}

253 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


254 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
);

257 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


258 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

259 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T, 
M
> c⁄°& 
p
);

261 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T> c⁄°& 
p
);

263 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

264 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
);

265 
	gãm∂©e
 <
ty≥«me
 
	gT
>

266 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
);

268 
ölöe


269 
	gimp
::
Fa˘‹y
<
v8
::
Boﬁón
>::
ªtu∫_t


270 
	$New
(
boﬁ
 
vÆue
) {

271  
New
<
v8
::
Boﬁón
>(
vÆue
);

272 
	}
}

274 
ölöe


275 
	gimp
::
Fa˘‹y
<
v8
::
I¡32
>::
ªtu∫_t


276 
	$New
(
öt32_t
 
vÆue
) {

277  
New
<
v8
::
I¡32
>(
vÆue
);

278 
	}
}

280 
ölöe


281 
	gimp
::
Fa˘‹y
<
v8
::
Uöt32
>::
ªtu∫_t


282 
	$New
(
uöt32_t
 
vÆue
) {

283  
New
<
v8
::
Uöt32
>(
vÆue
);

284 
	}
}

286 
ölöe


287 
	gimp
::
Fa˘‹y
<
v8
::
Numbî
>::
ªtu∫_t


288 
	$New
(
vÆue
) {

289  
New
<
v8
::
Numbî
>(
vÆue
);

290 
	}
}

292 
ölöe


293 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


294 
	$New
(
°d
::
°rög
 c⁄°& 
vÆue
) {

295  
New
<
v8
::
Såög
>(
vÆue
);

296 
	}
}

298 
ölöe


299 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


300 
	$New
(c⁄° * 
vÆue
, 
Àngth
) {

301  
New
<
v8
::
Såög
>(
vÆue
, 
Àngth
);

302 
	}
}

304 
ölöe


305 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


306 
	$New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

307  
New
<
v8
::
Såög
>(
vÆue
, 
Àngth
);

308 
	}
}

310 
ölöe


311 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


312 
	$New
(c⁄° * 
vÆue
) {

313  
New
<
v8
::
Såög
>(
vÆue
);

314 
	}
}

316 
ölöe


317 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


318 
	$New
(c⁄° 
uöt16_t
 * 
vÆue
) {

319  
New
<
v8
::
Såög
>(
vÆue
);

320 
	}
}

322 
ölöe


323 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


324 
	$New
(
v8
::
Såög
::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

325  
New
<
v8
::
Såög
>(
vÆue
);

326 
	}
}

328 
ölöe


329 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


330 
	$New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

331  
New
<
v8
::
Såög
>(
vÆue
);

332 
	}
}

334 
ölöe


335 
	gimp
::
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t


336 
New
(
v8
::
Loˇl
<v8::
Såög
> 
∑âîn
, v8::
RegExp
::
Fœgs
 
Êags
) {

337  
New
<
v8
::
RegExp
>(
∑âîn
, 
	gÊags
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_object_wrap.h

9 #i‚de‡
NAN_OBJECT_WRAP_H_


10 
	#NAN_OBJECT_WRAP_H_


	)

12 ˛as†
	cObje˘Wøp
 {

13 
	mpublic
:

14 
	$Obje˘Wøp
() {

15 
ªfs_
 = 0;

19 
vútuÆ
 ~
	$Obje˘Wøp
() {

20 i‡(
	`≥rsi°ít
().
	`IsEm±y
()) {

24 
	`as£π
(
	`≥rsi°ít
().
	`IsNórDóth
());

25 
	`≥rsi°ít
().
	`CÀ¨Wók
();

26 
	`≥rsi°ít
().
	`Re£t
();

27 
	}
}

30 
	gãm∂©e
 <
˛ass
 
	gT
>

31 
ölöe
 
T
* 
Unwøp
(
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
) {

32 
as£π
(!
obje˘
.
IsEm±y
());

33 
as£π
(
obje˘
->
I¡î«lFõldCou¡
() > 0);

36 * 
	g±r
 = 
GëI¡î«lFõldPoöãr
(
obje˘
, 0);

37 
Obje˘Wøp
* 
	gwøp
 = 
°©ic_ˇ°
<Obje˘Wøp*>(
±r
);

38  
	g°©ic_ˇ°
<
	gT
*>(
	gwøp
);

42 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$h™dÀ
() {

43  
	`New
(
	`≥rsi°ít
());

44 
	}
}

47 
ölöe
 
	gPîsi°ít
<
	gv8
::
Obje˘
>& 
	$≥rsi°ít
() {

48  
h™dÀ_
;

49 
	}
}

52 
	g¥Ÿe˘ed
:

53 
ölöe
 
Wøp
(
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
) {

54 
as£π
(
≥rsi°ít
().
IsEm±y
());

55 
as£π
(
obje˘
->
I¡î«lFõldCou¡
() > 0);

56 
SëI¡î«lFõldPoöãr
(
obje˘
, 0, 
this
);

57 
≥rsi°ít
().
Re£t
(
obje˘
);

58 
MakeWók
();

61 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

62 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

64 
ölöe
 
	$MakeWók
() {

65 
	`≥rsi°ít
().
v8
::
Pîsi°ítBa£
<v8::
Obje˘
>::
	`SëWók
(

66 
this
, 
WókCÆlback
, 
v8
::
WókCÆlbackTy≥
::
kP¨amëî
);

67 
	`≥rsi°ít
().
	`M¨kIndïídít
();

68 
	}
}

70 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


72 
ölöe
 
	$MakeWók
() {

73 
	`≥rsi°ít
().
v8
::
Pîsi°ítBa£
<v8::
Obje˘
>::
	`SëWók
(
this
, 
WókCÆlback
);

74 
	`≥rsi°ít
().
	`M¨kIndïídít
();

75 
	}
}

79 
ölöe
 
	$MakeWók
() {

80 
	`≥rsi°ít
().
≥rsi°ít
.
	`MakeWók
(
this
, 
WókCÆlback
);

81 
	`≥rsi°ít
().
	`M¨kIndïídít
();

82 
	}
}

90 
vútuÆ
 
	$Ref
() {

91 
	`as£π
(!
	`≥rsi°ít
().
	`IsEm±y
());

92 
	`≥rsi°ít
().
	`CÀ¨Wók
();

93 
ªfs_
++;

94 
	}
}

105 
vútuÆ
 
	$Uƒef
() {

106 
	`as£π
(!
	`≥rsi°ít
().
	`IsEm±y
());

107 
	`as£π
(!
	`≥rsi°ít
().
	`IsWók
());

108 
	`as£π
(
ªfs_
 > 0);

109 i‡(--
ªfs_
 == 0)

110 
	`MakeWók
();

111 
	}
}

113 
	gªfs_
;

115 
	g¥iv©e
:

116 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Obje˘Wøp
)

117 #i‡
	`deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

118 (
V8_MAJOR_VERSION
 =4 && 
	`deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

121 
	`WókCÆlback
(
v8
::
WókCÆlbackInfo
<
Obje˘Wøp
> c⁄°& 
öfo
) {

122 
Obje˘Wøp
* 
wøp
 = 
öfo
.
	`GëP¨amëî
();

123 
	`as£π
(
wøp
->
ªfs_
 == 0);

124 
	`as£π
(
wøp
->
h™dÀ_
.
	`IsNórDóth
());

125 
wøp
->
h™dÀ_
.
	`Re£t
();

126 
dñëe
 
wøp
;

127 
	}
}

129 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


132 
WókCÆlback
(
v8
::
WókCÆlbackD©a
<v8::
Obje˘
, 
Obje˘Wøp
> c⁄°& 
d©a
) {

133 
Obje˘Wøp
* 
	gwøp
 = 
d©a
.
GëP¨amëî
();

134 
as£π
(
wøp
->
ªfs_
 == 0);

135 
as£π
(
wøp
->
h™dÀ_
.
IsNórDóth
());

136 
	gwøp
->
	gh™dÀ_
.
Re£t
();

137 
dñëe
 
	gwøp
;

142 
WókCÆlback
(
v8
::
Pîsi°ít
<v8::
VÆue
> 
vÆue
, *
d©a
) {

143 
Obje˘Wøp
 *
	gwøp
 = 
°©ic_ˇ°
<Obje˘Wøp*>(
d©a
);

144 
as£π
(
wøp
->
ªfs_
 == 0);

145 
as£π
(
wøp
->
h™dÀ_
.
IsNórDóth
());

146 
	gwøp
->
	gh™dÀ_
.
Re£t
();

147 
dñëe
 
	gwøp
;

151 
	gPîsi°ít
<
	gv8
::
Obje˘
> 
h™dÀ_
;

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_persistent_12_inl.h

9 #i‚de‡
NAN_PERSISTENT_12_INL_H_


10 
	#NAN_PERSISTENT_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
> 
˛ass
 
	gPîsi°ít
 :

13 
public
 
v8
::
Pîsi°ít
<
T
, 
	gM
> {

14 
	gpublic
:

15 
NAN_INLINE
 
Pîsi°ít
(Ë: 
v8
::Pîsi°ít<
T
, 
	gM
>() {}

17 
	gãm∂©e
<
ty≥«me
 
	gS
> 
NAN_INLINE
 
Pîsi°ít
(
v8
::
Loˇl
<
S
> 
th©
) :

18 
v8
::
Pîsi°ít
<
T
, 
	gM
>(
	gv8
::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

20 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

21 
NAN_INLINE
 
Pîsi°ít
(c⁄° 
v8
::Pîsi°ít<
S
, 
M2
> &
th©
) :

22 
v8
::
Pîsi°ít
<
T
, 
	gM2
>(
	gv8
::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

24 
NAN_INLINE
 
Re£t
(Ë{ 
	gv8
::
Pîsi°ítBa£
<
T
>::Reset(); }

26 
	gãm∂©e
 <
ty≥«me
 
	gS
>

27 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

28 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

31 
	gãm∂©e
 <
ty≥«me
 
	gS
>

32 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

33 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

36 
	gãm∂©e
<
ty≥«me
 
	gP
>

37 
NAN_INLINE
 
SëWók
(

38 
P
 *
∑ømëî


39 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


40 , 
WókCÆlbackTy≥
 
ty≥
);

42 
	g¥iv©e
:

43 
NAN_INLINE
 
T
 *
›î©‹
*(Ëc⁄° {  *
Pîsi°ítBa£
<T>::
≥rsi°ít
; }

45 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

46 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M2
> &
th©
) {

47 
TYPE_CHECK
(
T
, 
S
);

49 
	gthis
->
Re£t
();

51 i‡(!
	gth©
.
IsEm±y
()) {

52 
	gthis
->
Re£t
(
th©
);

53 
	gM
::
C›y
(
th©
, 
this
);

58 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

59 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

60 
ãm∂©e
<
ty≥«me
 
T
>

61 
˛ass
 
GlobÆ
 : 
public
 
v8
::GlobÆ<
T
> {

62 
public
:

63 
NAN_INLINE
 
GlobÆ
(Ë: 
v8
::GlobÆ<
T
>() {}

65 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<S> 
th©
) :

66 
v8
::
GlobÆ
<
T
>(v8::
Isﬁ©e
::
GëCuºít
(), 
th©
) {}

68 
ãm∂©e
<
ty≥«me
 
S
>

69 
NAN_INLINE
 
GlobÆ
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
th©
) :

70 
v8
::
GlobÆ
<
S
>(v8::
Isﬁ©e
::
GëCuºít
(), 
th©
) {}

72 
NAN_INLINE
 
Re£t
(Ë{ 
v8
::
Pîsi°ítBa£
<
T
>::Reset(); }

74 
	gãm∂©e
 <
ty≥«me
 
	gS
>

75 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

76 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

79 
	gãm∂©e
 <
ty≥«me
 
	gS
>

80 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

81 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

84 
	gãm∂©e
<
ty≥«me
 
	gP
>

85 
NAN_INLINE
 
SëWók
(

86 
P
 *
∑ømëî


87 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


88 , 
WókCÆlbackTy≥
 
ty≥
) {

89 
	gªöãΩªt_ˇ°
<
	gPîsi°ít
<
	gT
>*>(
	gthis
)->
SëWók
(

90 
∑ømëî
, 
ˇŒback
, 
ty≥
);

94 
	gãm∂©e
<
ty≥«me
 
	gT
>

95 
˛ass
 
	gGlobÆ
 : 
public
 
v8
::
UniquePîsi°ít
<
T
> {

96 
public
:

97 
NAN_INLINE
 
GlobÆ
(Ë: 
v8
::
UniquePîsi°ít
<
T
>() {}

99 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<S> 
th©
) :

100 
v8
::
UniquePîsi°ít
<
T
>(v8::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

102 
	gãm∂©e
<
ty≥«me
 
	gS
>

103 
NAN_INLINE
 
GlobÆ
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
th©
) :

104 
v8
::
UniquePîsi°ít
<
S
>(v8::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

106 
NAN_INLINE
 
Re£t
(Ë{ 
	gv8
::
Pîsi°ítBa£
<
T
>::Reset(); }

108 
	gãm∂©e
 <
ty≥«me
 
	gS
>

109 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

110 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

113 
	gãm∂©e
 <
ty≥«me
 
	gS
>

114 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

115 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

118 
	gãm∂©e
<
ty≥«me
 
	gP
>

119 
NAN_INLINE
 
SëWók
(

120 
P
 *
∑ømëî


121 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


122 , 
WókCÆlbackTy≥
 
ty≥
) {

123 
	gªöãΩªt_ˇ°
<
	gPîsi°ít
<
	gT
>*>(
	gthis
)->
SëWók
(

124 
∑ømëî
, 
ˇŒback
, 
ty≥
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_persistent_pre_12_inl.h

9 #i‚de‡
NAN_PERSISTENT_PRE_12_INL_H_


10 
	#NAN_PERSISTENT_PRE_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cPîsi°ítBa£
 {

14 
	mv8
::
Pîsi°ít
<
T
> 
≥rsi°ít
;

15 
	mãm∂©e
<
ty≥«me
 
	mU
>

16 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
Pîsi°ítBa£
<U> &
p
);

17 
	mãm∂©e
<
ty≥«me
 
	mU
,Åy≥«mê
	mM
>

18 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
Pîsi°ít
<U, 
M
> &
p
);

19 
	mãm∂©e
<
ty≥«me
 
	mU
>

20 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
GlobÆ
<U> &
p
);

21 
	mãm∂©e
<
ty≥«me
 
	mS
> 
‰õnd
 
˛ass
 
	mRëu∫VÆue
;

23 
	mpublic
:

24 
NAN_INLINE
 
	$Pîsi°ítBa£
() :

25 
	$≥rsi°ít
() {}

27 
NAN_INLINE
 
	$Re£t
() {

28 
≥rsi°ít
.
	`Di•o£
();

29 
≥rsi°ít
.
	`CÀ¨
();

30 
	}
}

32 
	gãm∂©e
<
ty≥«me
 
	gS
>

33 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

34 
TYPE_CHECK
(
T
, 
S
);

36 i‡(!
	g≥rsi°ít
.
IsEm±y
()) {

37 
	g≥rsi°ít
.
Di•o£
();

40 i‡(
	gŸhî
.
IsEm±y
()) {

41 
	g≥rsi°ít
.
CÀ¨
();

43 
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
Ÿhî
);

47 
	gãm∂©e
<
ty≥«me
 
	gS
>

48 
NAN_INLINE
 
Re£t
(c⁄° 
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

49 
TYPE_CHECK
(
T
, 
S
);

51 i‡(!
	g≥rsi°ít
.
IsEm±y
()) {

52 
	g≥rsi°ít
.
Di•o£
();

55 i‡(
	gŸhî
.
IsEm±y
()) {

56 
	g≥rsi°ít
.
CÀ¨
();

58 
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
Ÿhî
.
≥rsi°ít
);

62 
NAN_INLINE
 
boﬁ
 
	$IsEm±y
(Ëc⁄° {  
≥rsi°ít
.
	`IsEm±y
(); 
	}
}

64 
NAN_INLINE
 
	$Em±y
(Ë{ 
≥rsi°ít
.
	`CÀ¨
(); 
	}
}

66 
	gãm∂©e
<
ty≥«me
 
	gS
>

67 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
) {

68  
this
->
≥rsi°ít
 =
th©
.persistent;

71 
	gãm∂©e
<
ty≥«me
 
	gS
>

72 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
v8
::
Loˇl
<
S
> &
th©
) {

73  
this
->
≥rsi°ít
 =
th©
;

76 
	gãm∂©e
<
ty≥«me
 
	gS
>

77 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
) {

78  !
›î©‹
==(
th©
);

81 
	gãm∂©e
<
ty≥«me
 
	gS
>

82 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
v8
::
Loˇl
<
S
> &
th©
) {

83  !
›î©‹
==(
th©
);

86 
	gãm∂©e
<
ty≥«me
 
	gP
>

87 
NAN_INLINE
 
SëWók
(

88 
P
 *
∑ømëî


89 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


90 , 
WókCÆlbackTy≥
 
ty≥
);

92 
NAN_INLINE
 
	$CÀ¨Wók
(Ë{ 
≥rsi°ít
.
	`CÀ¨Wók
(); 
	}
}

94 
NAN_INLINE
 
	$M¨kIndïídít
(Ë{ 
≥rsi°ít
.
	`M¨kIndïídít
(); 
	}
}

96 
NAN_INLINE
 
boﬁ
 
	$IsIndïídít
(Ëc⁄° {  
≥rsi°ít
.
	`IsIndïídít
(); 
	}
}

98 
NAN_INLINE
 
boﬁ
 
	$IsNórDóth
(Ëc⁄° {  
≥rsi°ít
.
	`IsNórDóth
(); 
	}
}

100 
NAN_INLINE
 
boﬁ
 
	$IsWók
(Ëc⁄° {  
≥rsi°ít
.
	`IsWók
(); 
	}
}

102 
	g¥iv©e
:

103 
NAN_INLINE
 
ex∂icô
 
Pîsi°ítBa£
(
v8
::
Pîsi°ít
<
T
> 
th©
) :

104 
	$≥rsi°ít
(
th©
Ë{ 
	}
}

105 
NAN_INLINE
 
ex∂icô
 
	$Pîsi°ítBa£
(
T
 *
vÆ
Ë: 
	$≥rsi°ít
(
vÆ
Ë{
	}
}

106 
ãm∂©e
<
ty≥«me
 
S
,Åy≥«mê
	gM
> 
‰õnd
 
˛ass
 
	gPîsi°ít
;

107 
	gãm∂©e
<
ty≥«me
 
	gS
> 
‰õnd
 
˛ass
 
	gGlobÆ
;

108 
‰õnd
 
˛ass
 
	gObje˘Wøp
;

111 
	gãm∂©e
<
ty≥«me
 
	gT
>

112 ˛as†
	cN⁄C›yabÀPîsi°ítTøôs
 {

113 
	mpublic
:

114 
Pîsi°ít
<
	tT
, 
	tN⁄C›yabÀPîsi°ítTøôs
<T> >

115 
	tN⁄C›yabÀPîsi°ít
;

116 c⁄° 
boﬁ
 
	mkRe£tInDe°ru˘‹
 = 
Ál£
;

117 
	mãm∂©e
<
ty≥«me
 
	mS
,Åy≥«mê
	mM
>

118 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M
> &
sour˚
,

119 
N⁄C›yabÀPîsi°ít
 *
de°
) {

120 
	mUncompûabÀ
<
	mv8
::
Obje˘
>();

123 
	gãm∂©e
<
ty≥«me
 
	gO
> 
NAN_INLINE
 
	$UncompûabÀ
() {

124 
	`TYPE_CHECK
(
O
, 
v8
::
Primôive
);

125 
	}
}

128 
	gãm∂©e
<
ty≥«me
 
	gT
>

129 
	sC›yabÀPîsi°ítTøôs
 {

130 
	mPîsi°ít
<
	tT
, 
	tC›yabÀPîsi°ítTøôs
<T> > 
	tC›yabÀPîsi°ít
;

131 c⁄° 
boﬁ
 
	mkRe£tInDe°ru˘‹
 = 
åue
;

132 
	mãm∂©e
<
ty≥«me
 
	mS
,Åy≥«mê
	mM
>

133 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M
> &
sour˚
,

134 
C›yabÀPîsi°ít
 *
de°
) {}

137 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
> 
˛ass
 
	gPîsi°ít
 :

138 
public
 
Pîsi°ítBa£
<
T
> {

139 
public
:

140 
NAN_INLINE
 
Pîsi°ít
() {}

142 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
Pîsi°ít
(
v8
::
H™dÀ
<S> 
th©
)

143 : 
Pîsi°ítBa£
<
T
>(
v8
::
Pîsi°ít
<T>::
New
(
th©
)) {

144 
TYPE_CHECK
(
T
, 
S
);

147 
NAN_INLINE
 
Pîsi°ít
(c⁄° Pîsi°íà&
th©
Ë: 
Pîsi°ítBa£
<
T
>() {

148 
C›y
(
th©
);

151 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

152 
NAN_INLINE
 
Pîsi°ít
(c⁄° Pîsi°ít<
S
, 
M2
> &
th©
) :

153 
Pîsi°ítBa£
<
T
>() {

154 
C›y
(
th©
);

157 
NAN_INLINE
 
	gPîsi°ít
 &
	g›î©‹
=(c⁄° 
Pîsi°ít
 &
th©
) {

158 
C›y
(
th©
);

159  *
	gthis
;

162 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gM2
>

163 
NAN_INLINE
 
	gPîsi°ít
 &
	g›î©‹
=(c⁄° 
Pîsi°ít
<
S
, 
	gM2
> &
	gth©
) {

164 
C›y
(
th©
);

165  *
	gthis
;

168 
	gNAN_INLINE
 ~
Pîsi°ít
() {

169 i‡(
	gM
::
kRe£tInDe°ru˘‹
Ë
this
->
Re£t
();

172 
	g¥iv©e
:

173 
NAN_INLINE
 
T
 *
›î©‹
*(Ëc⁄° {  *
Pîsi°ítBa£
<T>::
≥rsi°ít
; }

175 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

176 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M2
> &
th©
) {

177 
TYPE_CHECK
(
T
, 
S
);

179 
	gthis
->
Re£t
();

181 i‡(!
	gth©
.
IsEm±y
()) {

182 
	gthis
->
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
th©
.
≥rsi°ít
);

183 
	gM
::
C›y
(
th©
, 
this
);

188 
	gãm∂©e
<
ty≥«me
 
	gT
>

189 
˛ass
 
	gGlobÆ
 : 
public
 
Pîsi°ítBa£
<
T
> {

190 
	sRVÆue
 {

191 
NAN_INLINE
 
ex∂icô
 
RVÆue
(
GlobÆ
* 
obj
Ë: 
obje˘
(obj) {}

192 
GlobÆ
* 
obje˘
;

195 
	gpublic
:

196 
NAN_INLINE
 
GlobÆ
(Ë: 
Pîsi°ítBa£
<
T
>(0) { }

198 
ãm∂©e
 <
ty≥«me
 
S
>

199 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<
S
> 
th©
)

200 : 
Pîsi°ítBa£
<
T
>(
v8
::
Pîsi°ít
<T>::
New
(
th©
)) {

201 
TYPE_CHECK
(
T
, 
S
);

204 
	gãm∂©e
 <
ty≥«me
 
	gS
>

205 
NAN_INLINE
 
GlobÆ
(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
)

206 : 
Pîsi°ítBa£
<
T
>(
th©
) {

207 
TYPE_CHECK
(
T
, 
S
);

212 
NAN_INLINE
 
GlobÆ
(
RVÆue
 
rvÆue
)

213 : 
Pîsi°ítBa£
<
T
>(
rvÆue
.
obje˘
->
≥rsi°ít
) {

214 
rvÆue
.
obje˘
->
Re£t
();

216 
	gNAN_INLINE
 ~
GlobÆ
(Ë{ 
	gthis
->
Re£t
(); }

220 
	gãm∂©e
<
ty≥«me
 
	gS
>

221 
NAN_INLINE
 
	gGlobÆ
 &
	g›î©‹
=(
GlobÆ
<
S
> 
rhs
) {

222 
TYPE_CHECK
(
T
, 
S
);

223 
	gthis
->
Re£t
(
rhs
.
≥rsi°ít
);

224 
	grhs
.
Re£t
();

225  *
	gthis
;

230 
NAN_INLINE
 
›î©‹
 
RVÆue
(Ë{  RVÆue(
this
); }

234 
GlobÆ
 
Pass
(Ë{  GlobÆ(
RVÆue
(
this
)); }

236 
	g¥iv©e
:

237 
GlobÆ
(Global &);

238 
	g›î©‹
=(
GlobÆ
 &);

239 
	gãm∂©e
<
ty≥«me
 
	gS
> 
‰õnd
 
˛ass
 
	gRëu∫VÆue
;

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_string_bytes.h

22 #i‚de‡
NAN_STRING_BYTES_H_


23 
	#NAN_STRING_BYTES_H_


	)

27 
«me•a˚
 
	gimp
 {

29 
usög
 
	gv8
::
Loˇl
;

30 
usög
 
	gv8
::
Obje˘
;

31 
usög
 
	gv8
::
Såög
;

32 
usög
 
	gv8
::
VÆue
;

37 
	#ba£64_ícoded_size
(
size
Ë((sizê+ 2 - ((sizê+ 2Ë% 3)Ë/ 3 * 4)

	)

43 
boﬁ
 
c⁄èös_n⁄_ascii_¶ow
(c⁄° * 
buf
, 
size_t
 
Àn
) {

44 
size_t
 
	gi
 = 0; i < 
	gÀn
; ++i) {

45 i‡(
	gbuf
[
i
] & 0x80Ë 
	gåue
;

47  
	gÁl£
;

51 
boﬁ
 
c⁄èös_n⁄_ascii
(c⁄° * 
§c
, 
size_t
 
Àn
) {

52 i‡(
	gÀn
 < 16) {

53  
c⁄èös_n⁄_ascii_¶ow
(
§c
, 
Àn
);

56 c⁄° 
	gbyãs_≥r_w‹d
 = (*);

57 c⁄° 
	gÆign_mask
 = 
byãs_≥r_w‹d
 - 1;

58 c⁄° 
	gu«lig√d
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
§c
Ë& 
Æign_mask
;

60 i‡(
	gu«lig√d
 > 0) {

61 c⁄° 
	gn
 = 
byãs_≥r_w‹d
 - 
u«lig√d
;

62 i‡(
c⁄èös_n⁄_ascii_¶ow
(
§c
, 
n
)Ë 
	gåue
;

63 
	g§c
 +
n
;

64 
	gÀn
 -
n
;

68 #i‡
deföed
(
__x86_64__
Ë|| deföed(
_WIN64
)

69 c⁄° 
uöçå_t
 
	gmask
 = 0x8080808080808080ll;

71 c⁄° 
uöçå_t
 
	gmask
 = 0x80808080l;

74 c⁄° 
uöçå_t
* 
	g§cw
 = 
ªöãΩªt_ˇ°
<c⁄° uöçå_t*>(
§c
);

76 
size_t
 
	gi
 = 0, 
	gn
 = 
Àn
 / 
byãs_≥r_w‹d
; i <Ç; ++i) {

77 i‡(
	g§cw
[
i
] & 
	gmask
Ë 
	gåue
;

80 c⁄° 
	gªmaödî
 = 
Àn
 & 
Æign_mask
;

81 i‡(
	gªmaödî
 > 0) {

82 c⁄° 
size_t
 
	goff£t
 = 
Àn
 - 
ªmaödî
;

83 i‡(
c⁄èös_n⁄_ascii_¶ow
(
§c
 + 
off£t
, 
ªmaödî
)Ë 
	gåue
;

86  
	gÁl£
;

90 
f‹˚_ascii_¶ow
(c⁄° * 
§c
, * 
d°
, 
size_t
 
Àn
) {

91 
size_t
 
	gi
 = 0; i < 
	gÀn
; ++i) {

92 
	gd°
[
i
] = 
§c
[i] & 0x7f;

97 
f‹˚_ascii
(c⁄° * 
§c
, * 
d°
, 
size_t
 
Àn
) {

98 i‡(
	gÀn
 < 16) {

99 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
Àn
);

103 c⁄° 
	gbyãs_≥r_w‹d
 = (*);

104 c⁄° 
	gÆign_mask
 = 
byãs_≥r_w‹d
 - 1;

105 c⁄° 
	g§c_u«lign
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
§c
Ë& 
Æign_mask
;

106 c⁄° 
	gd°_u«lign
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
d°
Ë& 
Æign_mask
;

108 i‡(
	g§c_u«lign
 > 0) {

109 i‡(
	g§c_u«lign
 =
d°_u«lign
) {

110 c⁄° 
u«lign
 = 
byãs_≥r_w‹d
 - 
§c_u«lign
;

111 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
u«lign
);

112 
	g§c
 +
u«lign
;

113 
	gd°
 +
u«lign
;

114 
	gÀn
 -
§c_u«lign
;

116 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
Àn
);

121 #i‡
deföed
(
__x86_64__
Ë|| deföed(
_WIN64
)

122 c⁄° 
uöçå_t
 
	gmask
 = ~0x8080808080808080ll;

124 c⁄° 
uöçå_t
 
	gmask
 = ~0x80808080l;

127 c⁄° 
uöçå_t
* 
	g§cw
 = 
ªöãΩªt_ˇ°
<c⁄° uöçå_t*>(
§c
);

128 
uöçå_t
* 
	gd°w
 = 
ªöãΩªt_ˇ°
<uöçå_t*>(
d°
);

130 
size_t
 
	gi
 = 0, 
	gn
 = 
Àn
 / 
byãs_≥r_w‹d
; i <Ç; ++i) {

131 
	gd°w
[
i
] = 
§cw
[i] & 
mask
;

134 c⁄° 
	gªmaödî
 = 
Àn
 & 
Æign_mask
;

135 i‡(
	gªmaödî
 > 0) {

136 c⁄° 
size_t
 
	goff£t
 = 
Àn
 - 
ªmaödî
;

137 
f‹˚_ascii_¶ow
(
§c
 + 
off£t
, 
d°
 + off£t, 
ªmaödî
);

142 
size_t
 
ba£64_ícode
(c⁄° * 
§c
,

143 
size_t
 
¶í
,

144 * 
d°
,

145 
size_t
 
dÀn
) {

147 
as£π
(
dÀn
 >
ba£64_ícoded_size
(
¶í
) &&

150 
	gdÀn
 = 
ba£64_ícoded_size
(
¶í
);

152 
	ga
;

153 
	gb
;

154 
	gc
;

155 
	gi
;

156 
	gk
;

157 
	gn
;

159 c⁄° 
	gèbÀ
[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

163 
	gi
 = 0;

164 
	gk
 = 0;

165 
	gn
 = 
¶í
 / 3 * 3;

167 
	gi
 < 
	gn
) {

168 
	ga
 = 
§c
[
i
 + 0] & 0xff;

169 
	gb
 = 
§c
[
i
 + 1] & 0xff;

170 
	gc
 = 
§c
[
i
 + 2] & 0xff;

172 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

173 
	gd°
[
k
 + 1] = 
èbÀ
[((
a
 & 3Ë<< 4Ë| (
b
 >> 4)];

174 
	gd°
[
k
 + 2] = 
èbÀ
[((
b
 & 0x0fË<< 2Ë| (
c
 >> 6)];

175 
	gd°
[
k
 + 3] = 
èbÀ
[
c
 & 0x3f];

177 
	gi
 += 3;

178 
	gk
 += 4;

181 i‡(
	gn
 !
¶í
) {

182 
¶í
 - 
n
) {

184 
a
 = 
§c
[
i
 + 0] & 0xff;

185 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

186 
	gd°
[
k
 + 1] = 
èbÀ
[(
a
 & 3) << 4];

187 
	gd°
[
k
 + 2] = '=';

188 
	gd°
[
k
 + 3] = '=';

192 
a
 = 
§c
[
i
 + 0] & 0xff;

193 
	gb
 = 
§c
[
i
 + 1] & 0xff;

194 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

195 
	gd°
[
k
 + 1] = 
èbÀ
[((
a
 & 3Ë<< 4Ë| (
b
 >> 4)];

196 
	gd°
[
k
 + 2] = 
èbÀ
[(
b
 & 0x0f) << 2];

197 
	gd°
[
k
 + 3] = '=';

202  
	gdÀn
;

206 
size_t
 
hex_ícode
(c⁄° * 
§c
, size_à
¶í
, * 
d°
, size_à
dÀn
) {

208 
as£π
(
dÀn
 >
¶í
 * 2 &&

211 
	gdÀn
 = 
¶í
 * 2;

212 
uöt32_t
 
	gi
 = 0, 
	gk
 = 0; k < 
	gdÀn
; i += 1, k += 2) {

213 c⁄° 
hex
[] = "0123456789abcdef";

214 
uöt8_t
 
	gvÆ
 = 
°©ic_ˇ°
<uöt8_t>(
§c
[
i
]);

215 
	gd°
[
k
 + 0] = 
hex
[
vÆ
 >> 4];

216 
	gd°
[
k
 + 1] = 
hex
[
vÆ
 & 15];

219  
	gdÀn
;

224 
	gLoˇl
<
	gVÆue
> 
Encode
(c⁄° * 
buf
,

225 
size_t
 
buÊí
,

226 
Encodög
 
ícodög
) {

227 
as£π
(
buÊí
 <
node
::
Buf„r
::
kMaxLígth
);

228 i‡(!
	gbuÊí
 && 
	gícodög
 !
BUFFER
)

229  
New
("").
ToLoˇlChecked
();

231 
	gLoˇl
<
	gSåög
> 
	gvÆ
;

232 
	gícodög
) {

233 
	gBUFFER
:

234  
C›yBuf„r
(
buf
, 
buÊí
).
ToLoˇlChecked
();

236 
	gASCII
:

237 i‡(
c⁄èös_n⁄_ascii
(
buf
, 
buÊí
)) {

238 * 
	gout
 = 
√w
 [
buÊí
];

239 
f‹˚_ascii
(
buf
, 
out
, 
buÊí
);

240 
	gvÆ
 = 
New
<
Såög
>(
out
, 
	gbuÊí
).
ToLoˇlChecked
();

241 
	gdñëe
[] 
	gout
;

243 
	gvÆ
 = 
New
<
Såög
>(
buf
, 
	gbuÊí
).
ToLoˇlChecked
();

247 
	gUTF8
:

248 
vÆ
 = 
New
<
Såög
>(
buf
, 
	gbuÊí
).
ToLoˇlChecked
();

251 
	gBINARY
: {

253 c⁄° *
cbuf
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
buf
);

254 
uöt16_t
 * 
	gtwobyãbuf
 = 
√w
 uöt16_t[
buÊí
];

255 
size_t
 
	gi
 = 0; i < 
	gbuÊí
; i++) {

257 
	gtwobyãbuf
[
i
] = 
cbuf
[i];

259 
	gvÆ
 = 
New
<
Såög
>(
twobyãbuf
, 
	gbuÊí
).
ToLoˇlChecked
();

260 
	gdñëe
[] 
	gtwobyãbuf
;

264 
	gBASE64
: {

265 
size_t
 
dÀn
 = 
ba£64_ícoded_size
(
buÊí
);

266 * 
	gd°
 = 
√w
 [
dÀn
];

268 
size_t
 
	gwrôãn
 = 
ba£64_ícode
(
buf
, 
buÊí
, 
d°
, 
dÀn
);

269 
as£π
(
wrôãn
 =
dÀn
);

271 
	gvÆ
 = 
New
<
Såög
>(
d°
, 
	gdÀn
).
ToLoˇlChecked
();

272 
	gdñëe
[] 
	gd°
;

276 
	gUCS2
: {

277 c⁄° 
uöt16_t
* 
d©a
 = 
ªöãΩªt_ˇ°
<c⁄° uöt16_t*>(
buf
);

278 
	gvÆ
 = 
New
<
Såög
>(
d©a
, 
	gbuÊí
 / 2).
ToLoˇlChecked
();

282 
	gHEX
: {

283 
size_t
 
dÀn
 = 
buÊí
 * 2;

284 * 
	gd°
 = 
√w
 [
dÀn
];

285 
size_t
 
	gwrôãn
 = 
hex_ícode
(
buf
, 
buÊí
, 
d°
, 
dÀn
);

286 
as£π
(
wrôãn
 =
dÀn
);

288 
	gvÆ
 = 
New
<
Såög
>(
d°
, 
	gdÀn
).
ToLoˇlChecked
();

289 
	gdñëe
[] 
	gd°
;

294 
as£π
(0 && "unknownÉncoding");

298  
	gvÆ
;

301 #unde‡
ba£64_ícoded_size


	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_typedarray_contents.h

9 #i‚de‡
NAN_TYPEDARRAY_CONTENTS_H_


10 
	#NAN_TYPEDARRAY_CONTENTS_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cTy≥dAºayC⁄ã¡s
 {

14 
	mpublic
:

15 
NAN_INLINE
 
ex∂icô
 
Ty≥dAºayC⁄ã¡s
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

16 
Àngth_
(0), 
	$d©a_
(
NULL
) {

18 
size_t
 
Àngth
 = 0;

19 * 
d©a
 = 
NULL
;

21 #i‡
	`deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

22 (
V8_MAJOR_VERSION
 =4 && 
	`deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

24 i‡(
‰om
->
	`IsAºayBuf„rVõw
()) {

25 
v8
::
Loˇl
<v8::
AºayBuf„rVõw
> 
¨øy
 =

26 
v8
::
Loˇl
<v8::
AºayBuf„rVõw
>::
	`Ca°
(
‰om
);

28 c⁄° 
size_t
 
byã_Àngth
 = 
¨øy
->
	`ByãLígth
();

29 c⁄° 
±rdiff_t
 
byã_off£t
 = 
¨øy
->
	`ByãOff£t
();

30 
v8
::
Loˇl
<v8::
AºayBuf„r
> 
buf„r
 = 
¨øy
->
	`Buf„r
();

32 
Àngth
 = 
byã_Àngth
 / (
T
);

33 
d©a
 = 
°©ic_ˇ°
<*>(
buf„r
->
	`GëC⁄ã¡s
().
	`D©a
()Ë+ 
byã_off£t
;

38 i‡(
‰om
->
	`IsObje˘
(Ë&& !‰om->
	`IsNuŒ
()) {

39 
v8
::
Loˇl
<v8::
Obje˘
> 
¨øy
 = v8::Loˇl<v8::Obje˘>::
	`Ca°
(
‰om
);

41 
MaybeLoˇl
<
v8
::
VÆue
> 
buf„r
 = 
	`Gë
(
¨øy
,

42 
New
<
v8
::
Såög
>("buf„r").
	`ToLoˇlChecked
());

43 
MaybeLoˇl
<
v8
::
VÆue
> 
byã_Àngth
 = 
	`Gë
(
¨øy
,

44 
New
<
v8
::
Såög
>("byãLígth").
	`ToLoˇlChecked
());

45 
MaybeLoˇl
<
v8
::
VÆue
> 
byã_off£t
 = 
	`Gë
(
¨øy
,

46 
New
<
v8
::
Såög
>("byãOff£t").
	`ToLoˇlChecked
());

48 i‡(!
buf„r
.
	`IsEm±y
() &&

49 !
byã_Àngth
.
	`IsEm±y
(Ë&& byã_Àngth.
	`ToLoˇlChecked
()->
	`IsUöt32
() &&

50 !
byã_off£t
.
	`IsEm±y
(Ë&& byã_off£t.
	`ToLoˇlChecked
()->
	`IsUöt32
()) {

51 
d©a
 = 
¨øy
->
	`GëIndexedPr›îtõsExã∫ÆAºayD©a
();

52 if(
d©a
) {

53 
Àngth
 = 
byã_Àngth
.
	`ToLoˇlChecked
()->
	`Uöt32VÆue
(Ë/ (
T
);

60 #i‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER >1900 || 
__˝lu•lus
 >= 201103L

61 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë% 
	`Æignof
 (
T
) == 0);

62 #ñi‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER >1600 || deföed(
__GNUC__
)

63 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë% 
	`__Æignof
(
T
) == 0);

65 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë%  (
T
) == 0);

68 
Àngth_
 = 
Àngth
;

69 
d©a_
 = 
°©ic_ˇ°
<
T
*>(
d©a
);

72 
NAN_INLINE
 
size_t
 
	$Àngth
(Ëc⁄° {  
Àngth_
; 
	}
}

73 
NAN_INLINE
 
T
* 
	g›î©‹
*(Ë{  
	gd©a_
; }

74 
NAN_INLINE
 c⁄° 
T
* 
	g›î©‹
*(Ëc⁄° {  
	gd©a_
; }

76 
	g¥iv©e
:

77 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Ty≥dAºayC⁄ã¡s
)

80 *
›î©‹
 
	`√w
(
size_t
 
size
);

81 
›î©‹
 
	`dñëe
(*, 
size_t
);

83 
size_t
 
Àngth_
;

84 
T
* 
d©a_
;

85 
	}
};

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_weak.h

9 #i‚de‡
NAN_WEAK_H_


10 
	#NAN_WEAK_H_


	)

12 c⁄° 
	gkI¡î«lFõldsInWókCÆlback
 = 2;

13 c⁄° 
	gkNoI¡î«lFõldIndex
 = -1;

15 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

16 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

17 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

18 
v8
::
WókCÆlbackInfo
<WókCÆlbackInfo<
T
> > c⁄°&

	)

19 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

20 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

21 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

22 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

23 #ñi‡
NODE_MODULE_VERSION
 > 
IOJS_1_1_MODULE_VERSION


24 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

25 
v8
::
Ph™tomCÆlbackD©a
<
WókCÆlbackInfo
<
T
> > c⁄°&

	)

26 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

27 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

28 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

29 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

30 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


31 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

32 
v8
::
Ph™tomCÆlbackD©a
<
WókCÆlbackInfo
<
T
> > c⁄°&

	)

33 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

34 
v8
::
I¡î«lFõldsCÆlbackD©a
<
WókCÆlbackInfo
<
T
>, > c⁄°&

	)

35 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

36 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

37 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


38 
	#NAN_WEAK_CALLBACK_DATA_TYPE_
 \

39 
v8
::
WókCÆlbackD©a
<
S
, 
WókCÆlbackInfo
<
T
> > c⁄°&

	)

40 
	#NAN_WEAK_CALLBACK_SIG_
 
NAN_WEAK_CALLBACK_DATA_TYPE_


	)

42 
	#NAN_WEAK_CALLBACK_DATA_TYPE_
 *

	)

43 
	#NAN_WEAK_CALLBACK_SIG_
 \

44 
v8
::
Pîsi°ít
<v8::
VÆue
>, 
NAN_WEAK_CALLBACK_DATA_TYPE_


	)

47 
	gãm∂©e
<
ty≥«me
 
	gT
>

48 ˛as†
	cWókCÆlbackInfo
 {

49 
	mpublic
:

50 (*
	tCÆlback
)(c⁄° 
	tWókCÆlbackInfo
<
	tT
>& 
	td©a
);

51 
	`WókCÆlbackInfo
(

52 
Pîsi°ít
<
v8
::
VÆue
> *
≥rsi°ít


53 , 
CÆlback
 
ˇŒback


54 , *
∑ømëî


55 , *
fõld1
 = 0

56 , *
fõld2
 = 0) :

57 
	`ˇŒback_
(
ˇŒback
), 
	`isﬁ©e_
(0), 
	$∑ømëî_
(
∑ømëî
) {

58 
°d
::
	`mem˝y
(&
≥rsi°ít_
, 
≥rsi°ít
,  (
v8
::
Pîsi°ít
<v8::
VÆue
>));

59 
öã∫Æ_fõlds_
[0] = 
fõld1
;

60 
öã∫Æ_fõlds_
[1] = 
fõld2
;

62 
NAN_INLINE
 
v8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
isﬁ©e_
; 
	}
}

63 
NAN_INLINE
 
T
 *
	$GëP¨amëî
(Ëc⁄° {  
°©ic_ˇ°
<
T
*>(
∑ømëî_
); 
	}
}

64 
NAN_INLINE
 *
	$GëI¡î«lFõld
(
ödex
) const {

65 
	`as£π
((
ödex
 == 0 || index == 1) && "internal field index out of bounds");

66 i‡(
ödex
 == 0) {

67  
öã∫Æ_fõlds_
[0];

69  
öã∫Æ_fõlds_
[1];

71 
	}
}

73 
	g¥iv©e
:

74 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
WókCÆlbackInfo
)

75 
CÆlback
 
ˇŒback_
;

76 
v8
::
Isﬁ©e
 *
isﬁ©e_
;

77 *
∑ømëî_
;

78 *
öã∫Æ_fõlds_
[
kI¡î«lFõldsInWókCÆlback
];

79 
v8
::
Pîsi°ít
<v8::
VÆue
> 
≥rsi°ít_
;

80 
ãm∂©e
<
ty≥«me
 
S
,Åy≥«mê
M
> 
‰õnd
 
˛ass
 
Pîsi°ít
;

81 
ãm∂©e
<
ty≥«me
 
S
> 
‰õnd
 
˛ass
 
Pîsi°ítBa£
;

82 #i‡
NODE_MODULE_VERSION
 <
NODE_0_12_MODULE_VERSION


83 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


84 
ãm∂©e
<
ty≥«me
 
S
>

85 
	`övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
);

86 
ãm∂©e
<
ty≥«me
 
S
>

87 
WókCÆlbackInfo
 *
	`unwøp
(
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
);

89 
	`övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
);

90 
WókCÆlbackInfo
 *
	`unwøp
(
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
);

93 
	`övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
);

94 
	`övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
);

95 
WókCÆlbackInfo
 *
	`unwøµ¨amëî
(

96 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
);

97 
WókCÆlbackInfo
 *
	`unwø±wofõld
(

98 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
);

100 
	}
};

103 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

104 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

106 
ãm∂©e
<
ty≥«me
 
T
>

108 
WókCÆlbackInfo
<
T
>::
	$övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
) {

109 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøµ¨amëî
(
d©a
);

110 i‡(
d©a
.
	`IsFú°Pass
()) {

111 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

112 
d©a
.
	`SëSec⁄dPassCÆlback
(
övokï¨amëî
);

114 
cböfo
->
	`ˇŒback_
(*cbinfo);

115 
dñëe
 
cböfo
;

117 
	}
}

119 
	gãm∂©e
<
ty≥«me
 
	gT
>

121 
	gWókCÆlbackInfo
<
	gT
>::
	$övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
) {

122 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwø±wofõld
(
d©a
);

123 i‡(
d©a
.
	`IsFú°Pass
()) {

124 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

125 
d©a
.
	`SëSec⁄dPassCÆlback
(
övokëwofõld
);

127 
cböfo
->
	`ˇŒback_
(*cbinfo);

128 
dñëe
 
cböfo
;

130 
	}
}

132 
	gãm∂©e
<
ty≥«me
 
	gT
>

133 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøµ¨amëî
(

134 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
) {

135 
WókCÆlbackInfo
<
T
> *
cböfo
 =

136 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëP¨amëî
());

137 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

138  
cböfo
;

139 
	}
}

141 
	gãm∂©e
<
ty≥«me
 
	gT
>

142 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwø±wofõld
(

143 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
) {

144 
WókCÆlbackInfo
<
T
> *
cböfo
 =

145 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëI¡î«lFõld
(0));

146 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

147  
cböfo
;

148 
	}
}

150 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_SIG_


151 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_SIG_


152 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


153 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


154 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


156 
	gãm∂©e
<
ty≥«me
 
	gT
>

158 
	gWókCÆlbackInfo
<
	gT
>::
	$övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
) {

159 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøµ¨amëî
(
d©a
);

160 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

161 
cböfo
->
	`ˇŒback_
(*cbinfo);

162 
dñëe
 
cböfo
;

163 
	}
}

165 
	gãm∂©e
<
ty≥«me
 
	gT
>

167 
	gWókCÆlbackInfo
<
	gT
>::
	$övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
) {

168 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwø±wofõld
(
d©a
);

169 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

170 
cböfo
->
	`ˇŒback_
(*cbinfo);

171 
dñëe
 
cböfo
;

172 
	}
}

174 
	gãm∂©e
<
ty≥«me
 
	gT
>

175 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøµ¨amëî
(

176 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
) {

177 
WókCÆlbackInfo
<
T
> *
cböfo
 =

178 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëP¨amëî
());

179 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

180  
cböfo
;

181 
	}
}

183 
	gãm∂©e
<
ty≥«me
 
	gT
>

184 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwø±wofõld
(

185 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
) {

186 
WókCÆlbackInfo
<
T
> *
cböfo
 =

187 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëI¡î«lFõld1
());

188 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

189  
cböfo
;

190 
	}
}

192 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_SIG_


193 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_SIG_


194 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


195 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


196 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


198 
	gãm∂©e
<
ty≥«me
 
	gT
>

199 
	gãm∂©e
<
ty≥«me
 
	gS
>

200 
	gWókCÆlbackInfo
<
	gT
>::
	$övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
) {

201 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøp
(
d©a
);

202 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

203 
cböfo
->
	`ˇŒback_
(*cbinfo);

204 
dñëe
 
cböfo
;

205 
	}
}

207 
	gãm∂©e
<
ty≥«me
 
	gT
>

208 
	gãm∂©e
<
ty≥«me
 
	gS
>

209 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøp
(

210 
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
) {

211 *
∑ømëî
 = 
d©a
.
	`GëP¨amëî
();

212 
WókCÆlbackInfo
<
T
> *
cböfo
 =

213 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
∑ømëî
);

214 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

215  
cböfo
;

216 
	}
}

218 #unde‡
NAN_WEAK_CALLBACK_SIG_


219 #unde‡
NAN_WEAK_CALLBACK_DATA_TYPE_


222 
	gãm∂©e
<
ty≥«me
 
	gT
>

223 
	gWókCÆlbackInfo
<
	gT
>::
	$övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
) {

224 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøp
(
d©a
);

225 
cböfo
->
≥rsi°ít_
.
	`Di•o£
();

226 
cböfo
->
≥rsi°ít_
.
	`CÀ¨
();

227 
cböfo
->
	`ˇŒback_
(*cbinfo);

228 
dñëe
 
cböfo
;

229 
	}
}

231 
	gãm∂©e
<
ty≥«me
 
	gT
>

232 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøp
(

233 
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
) {

234 
WókCÆlbackInfo
<
T
> *
cböfo
 =

235 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
);

236 
cböfo
->
isﬁ©e_
 = 
v8
::
Isﬁ©e
::
	`GëCuºít
();

237  
cböfo
;

238 
	}
}

240 #unde‡
NAN_WEAK_CALLBACK_SIG_


241 #unde‡
NAN_WEAK_CALLBACK_DATA_TYPE_


244 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

245 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

246 
ãm∂©e
<
ty≥«me
 
T
,Åy≥«mê
	gM
>

247 
	gãm∂©e
<
ty≥«me
 
	gP
>

248 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

249 
P
 *
∑ømëî


250 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


251 , 
WókCÆlbackTy≥
 
ty≥
) {

252 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

253 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

254 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

255 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

256 , 
	gˇŒback


257 , 
	g∑ømëî
);

258 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(

259 
wcbd


260 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî


261 , 
ty≥
);

263 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

264 
as£π
((*
£lf
)->
IsObje˘
());

265 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

266 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

267 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

268 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

270 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

271 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

272 , 
	gˇŒback


274 , 
	göã∫Æ_fõlds
[0]

275 , 
	göã∫Æ_fõlds
[1]);

276 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

277 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(

278 
°©ic_ˇ°
<
WókCÆlbackInfo
<
P
>*>(0)

279 , 
WókCÆlbackInfo
<
P
>::
övokëwofõld


280 , 
ty≥
);

283 #ñi‡
NODE_MODULE_VERSION
 > 
IOJS_1_1_MODULE_VERSION


284 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

285 
	gãm∂©e
<
ty≥«me
 
	gP
>

286 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

287 
P
 *
∑ømëî


288 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


289 , 
WókCÆlbackTy≥
 
ty≥
) {

290 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

291 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

292 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

293 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

294 , 
	gˇŒback


295 , 
	g∑ømëî
);

296 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

297 
wcbd


298 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî
);

300 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

301 
as£π
((*
£lf
)->
IsObje˘
());

302 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

303 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

304 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

305 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

307 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

308 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

309 , 
	gˇŒback


311 , 
	göã∫Æ_fõlds
[0]

312 , 
	göã∫Æ_fõlds
[1]);

313 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

314 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

315 
°©ic_ˇ°
<
WókCÆlbackInfo
<
P
>*>(0)

316 , 
WókCÆlbackInfo
<
P
>::
övokëwofõld


318 , 
cou¡
 > 1 ? 1 : 
kNoI¡î«lFõldIndex
);

321 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


322 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

323 
	gãm∂©e
<
ty≥«me
 
	gP
>

324 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

325 
P
 *
∑ømëî


326 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


327 , 
WókCÆlbackTy≥
 
ty≥
) {

328 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

329 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

330 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

331 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

332 , 
	gˇŒback


333 , 
	g∑ømëî
);

334 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

335 
wcbd


336 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî
);

338 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

339 
as£π
((*
£lf
)->
IsObje˘
());

340 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

341 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

342 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

343 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

345 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

346 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

347 , 
	gˇŒback


349 , 
	göã∫Æ_fõlds
[0]

350 , 
	göã∫Æ_fõlds
[1]);

351 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

352 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

353 
WókCÆlbackInfo
<
P
>::
övokëwofõld


355 , 
cou¡
 > 1 ? 1 : 
kNoI¡î«lFõldIndex
);

358 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


359 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

360 
	gãm∂©e
<
ty≥«me
 
	gP
>

361 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

362 
P
 *
∑ømëî


363 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


364 , 
WókCÆlbackTy≥
 
ty≥
) {

365 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

366 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

367 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

368 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

369 , 
	gˇŒback


370 , 
	g∑ømëî
);

371 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

373 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

374 
as£π
((*
£lf
)->
IsObje˘
());

375 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

376 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

377 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

378 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

380 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

381 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

382 , 
	gˇŒback


384 , 
	göã∫Æ_fõlds
[0]

385 , 
	göã∫Æ_fõlds
[1]);

386 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

390 
	gãm∂©e
<
ty≥«me
 
	gT
>

391 
	gãm∂©e
<
ty≥«me
 
	gP
>

392 
NAN_INLINE
 
	gPîsi°ítBa£
<
	gT
>::
SëWók
(

393 
P
 *
∑ømëî


394 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


395 , 
WókCÆlbackTy≥
 
ty≥
) {

396 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

397 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

398 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

399 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

400 , 
	gˇŒback


401 , 
	g∑ømëî
);

402 
	g≥rsi°ít
.
MakeWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

404 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

405 
as£π
((*
£lf
)->
IsObje˘
());

406 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

407 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

408 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

409 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëPoöãrFromI¡î«lFõld
(i);

411 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

412 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

413 , 
	gˇŒback


415 , 
	göã∫Æ_fõlds
[0]

416 , 
	göã∫Æ_fõlds
[1]);

417 
	g≥rsi°ít
.
MakeWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/node-uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/async.cc

7 
	$async_¥›ag©e
(
uv_async_t
 *
async
) {

8 i‡(!
async
->
d©a
) ;

9 
FSEvíts
 *
f£
 = (FSEvít†*)
async
->
d©a
;

10 
CFIndex
 
idx
, 
˙t
;

11 
f£_evít
 *
evít
;

12 
∑thbuf
[1024];

13 c⁄° *
∑th±r
 = 
NULL
;

14 
f£
->
	`lock
();

15 
˙t
 = 
f£
->
evíts
.
	`size
();

16 
idx
=0; idx<
˙t
; idx++) {

17 
evít
 = 
f£
->
evíts
.
	`©
(
idx
);

18 i‡(
evít
 =
NULL
) ;

19 
∑th±r
 = 
	`CFSåögGëCSåögPå
(
evít
->
∑th
, 
kCFSåögEncodögUTF8
);

20 i‡(!
∑th±r
Ë
	`CFSåögGëCSåög
(
evít
->
∑th
, 
∑thbuf
, 1024, 
kCFSåögEncodögUTF8
);

21 
f£
->
	`emôEvít
(
∑th±r
 ?Ö©h±∏: 
∑thbuf
, 
evít
->
Êags
,Évít->
id
);

22 
dñëe
 
evít
;

24 i‡(
˙t
>0Ë
f£
->
evíts
.
	`˛ór
();

25 
f£
->
	`u∆ock
();

26 
	}
}

28 
	gFSEvíts
::
	$asyncSèπ
() {

29 i‡(
async
.
d©a
 =
this
) ;

30 
async
.
d©a
 = 
this
;

31 
	`uv_async_öô
(
	`uv_deÁu…_lo›
(), &
async
, (
uv_async_cb
Ë
async_¥›ag©e
);

32 
	}
}

34 
	gFSEvíts
::
	$asyncTriggî
() {

35 i‡(
async
.
d©a
 !
this
) ;

36 
	`uv_async_£nd
(&
async
);

37 
	}
}

39 
	gFSEvíts
::
	$asyncSt›
() {

40 i‡(
async
.
d©a
 !
this
) ;

41 
async
.
d©a
 = 
NULL
;

42 
	`uv_˛o£
((
uv_h™dÀ_t
 *Ë&
async
, 
NULL
);

43 
	}
}

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/constants.cc

7 #i‚de‡
kFSEvítSåómEvítFœgN⁄e


8 
	#kFSEvítSåómEvítFœgN⁄e
 0x00000000

	)

11 #i‚de‡
kFSEvítSåómEvítFœgMu°SˇnSubDús


12 
	#kFSEvítSåómEvítFœgMu°SˇnSubDús
 0x00000001

	)

15 #i‚de‡
kFSEvítSåómEvítFœgU£rDr›≥d


16 
	#kFSEvítSåómEvítFœgU£rDr›≥d
 0x00000002

	)

19 #i‚de‡
kFSEvítSåómEvítFœgKî√lDr›≥d


20 
	#kFSEvítSåómEvítFœgKî√lDr›≥d
 0x00000004

	)

23 #i‚de‡
kFSEvítSåómEvítFœgEvítIdsWøµed


24 
	#kFSEvítSåómEvítFœgEvítIdsWøµed
 0x00000008

	)

27 #i‚de‡
kFSEvítSåómEvítFœgHi°‹yD⁄e


28 
	#kFSEvítSåómEvítFœgHi°‹yD⁄e
 0x00000010

	)

31 #i‚de‡
kFSEvítSåómEvítFœgRoŸCh™ged


32 
	#kFSEvítSåómEvítFœgRoŸCh™ged
 0x00000020

	)

35 #i‚de‡
kFSEvítSåómEvítFœgMou¡


36 
	#kFSEvítSåómEvítFœgMou¡
 0x00000040

	)

39 #i‚de‡
kFSEvítSåómEvítFœgUnmou¡


40 
	#kFSEvítSåómEvítFœgUnmou¡
 0x00000080

	)

43 #i‚de‡
kFSEvítSåómEvítFœgIãmCª©ed


44 
	#kFSEvítSåómEvítFœgIãmCª©ed
 0x00000100

	)

47 #i‚de‡
kFSEvítSåómEvítFœgIãmRemoved


48 
	#kFSEvítSåómEvítFœgIãmRemoved
 0x00000200

	)

51 #i‚de‡
kFSEvítSåómEvítFœgIãmInodeMëaMod


52 
	#kFSEvítSåómEvítFœgIãmInodeMëaMod
 0x00000400

	)

55 #i‚de‡
kFSEvítSåómEvítFœgIãmRíamed


56 
	#kFSEvítSåómEvítFœgIãmRíamed
 0x00000800

	)

59 #i‚de‡
kFSEvítSåómEvítFœgIãmModifõd


60 
	#kFSEvítSåómEvítFœgIãmModifõd
 0x00001000

	)

63 #i‚de‡
kFSEvítSåómEvítFœgIãmFödîInfoMod


64 
	#kFSEvítSåómEvítFœgIãmFödîInfoMod
 0x00002000

	)

67 #i‚de‡
kFSEvítSåómEvítFœgIãmCh™geOw√r


68 
	#kFSEvítSåómEvítFœgIãmCh™geOw√r
 0x00004000

	)

71 #i‚de‡
kFSEvítSåómEvítFœgIãmX©åMod


72 
	#kFSEvítSåómEvítFœgIãmX©åMod
 0x00008000

	)

75 #i‚de‡
kFSEvítSåómEvítFœgIãmIsFûe


76 
	#kFSEvítSåómEvítFœgIãmIsFûe
 0x00010000

	)

79 #i‚de‡
kFSEvítSåómEvítFœgIãmIsDú


80 
	#kFSEvítSåómEvítFœgIãmIsDú
 0x00020000

	)

83 #i‚de‡
kFSEvítSåómEvítFœgIãmIsSymlök


84 
	#kFSEvítSåómEvítFœgIãmIsSymlök
 0x00040000

	)

87 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$C⁄°™ts
() {

88 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
 = 
N™
::
New
<v8::Object>();

89 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgN⁄e").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgN⁄e
));

90 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgMu°SˇnSubDús").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgMu°SˇnSubDús
));

91 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgU£rDr›≥d").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgU£rDr›≥d
));

92 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgKî√lDr›≥d").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgKî√lDr›≥d
));

93 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgEvítIdsWøµed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgEvítIdsWøµed
));

94 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgHi°‹yD⁄e").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgHi°‹yD⁄e
));

95 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgRoŸCh™ged").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgRoŸCh™ged
));

96 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgMou¡").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgMou¡
));

97 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgUnmou¡").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgUnmou¡
));

98 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmCª©ed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmCª©ed
));

99 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmRemoved").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmRemoved
));

100 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmInodeMëaMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmInodeMëaMod
));

101 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmRíamed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmRíamed
));

102 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmModifõd").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmModifõd
));

103 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmFödîInfoMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmFödîInfoMod
));

104 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmCh™geOw√r").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmCh™geOw√r
));

105 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmX©åMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmX©åMod
));

106 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsFûe").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsFûe
));

107 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsDú").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsDú
));

108 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsSymlök").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsSymlök
));

109  
obje˘
;

110 
	}
}

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/locking.cc

6 
	gFSEvíts
::
	$lockögSèπ
() {

7 i‡(
lockSèπed
) ;

8 
lockSèπed
 = 
åue
;

9 
	`±hªad_muãx_öô
(&
lockmuãx
, 
NULL
);

10 
	}
}

12 
	gFSEvíts
::
	$lock
() {

13 i‡(!
lockSèπed
) ;

14 
	`±hªad_muãx_lock
(&
lockmuãx
);

15 
	}
}

17 
	gFSEvíts
::
	$u∆ock
() {

18 i‡(!
lockSèπed
) ;

19 
	`±hªad_muãx_u∆ock
(&
lockmuãx
);

20 
	}
}

22 
	gFSEvíts
::
	$lockögSt›
() {

23 i‡(!
lockSèπed
) ;

24 
lockSèπed
 = 
Ál£
;

26 
	`±hªad_muãx_de°roy
(&
lockmuãx
);

27 
	}
}

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/methods.cc

6 
	gFSEvíts
::
	$emôEvít
(c⁄° *
∑th
, 
UI¡32
 
Êags
, 
UI¡64
 
id
) {

7 i‡(!
h™dÀr
) ;

8 
N™
::
H™dÀSc›e
 
h™dÀ_sc›e
;

9 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = {

10 
N™
::
New
<
v8
::
Såög
>(
∑th
).
	`ToLoˇlChecked
(),

11 
N™
::
New
<
v8
::
Numbî
>(
Êags
),

12 
N™
::
New
<
v8
::
Numbî
>(
id
)

14 
h™dÀr
->
	`CÆl
(3, 
¨gv
);

15 
	}
}

17 
	$NAN_METHOD
(
FSEvíts
::
New
) {

18 
N™
::
Utf8Såög
 *
∑th
 = 
√w
 N™::
	`Utf8Såög
(
öfo
[0]);

19 
N™
::
CÆlback
 *
ˇŒback
 = 
√w
 N™::
	`CÆlback
(
öfo
[1].
As
<
v8
::
Fun˘i⁄
>());

21 
FSEvíts
 *
f£
 = 
√w
 
	`FSEvíts
(**
∑th
, 
ˇŒback
);

22 
f£
->
	`Wøp
(
öfo
.
	`This
());

24 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

25 
	}
}

27 
	$NAN_METHOD
(
FSEvíts
::
St›
) {

28 
FSEvíts
* 
f£
 = 
node
::
Obje˘Wøp
::
Unwøp
<FSEvíts>(
öfo
.
	`This
());

30 
f£
->
	`thªadSt›
();

31 
f£
->
	`asyncSt›
();

33 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

34 
	}
}

36 
	$NAN_METHOD
(
FSEvíts
::
Sèπ
) {

37 
FSEvíts
* 
f£
 = 
node
::
Obje˘Wøp
::
Unwøp
<FSEvíts>(
öfo
.
	`This
());

38 
f£
->
	`asyncSèπ
();

39 
f£
->
	`thªadSèπ
();

41 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

42 
	}
}

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/storage.cc

6 
	sf£_evít
 {

7 
UI¡64
 
	mid
;

8 
UI¡32
 
	mÊags
;

9 
CFSåögRef
 
	m∑th
;

11 
f£_evít
(
CFSåögRef
 
evítP©h
, 
UI¡32
 
evítFœg
, 
UI¡64
 
evítId
) {

12 
	mthis
->
	m∑th
 = 
evítP©h
;

13 
	mthis
->
	mÊags
 = 
evítFœg
;

14 
	mthis
->
	mid
 = 
evítId
;

15 i‡(
	mthis
->
	m∑th
 !
NULL
)

16 
CFRëaö
(
this
->
∑th
);

19 ~
f£_evít
() {

20 i‡(
	mthis
->
	m∑th
 !
NULL
)

21 
CFRñó£
(
this
->
∑th
);

24 
	m¥iv©e
:

25 
f£_evít
(const fse_event&);

26 
	m›î©‹
=(c⁄° 
f£_evít
&);

	@node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/thread.cc

7 #i‚de‡
kFSEvítSåómCª©eFœgN⁄e


8 
	#kFSEvítSåómCª©eFœgN⁄e
 0x00000000

	)

11 #i‚de‡
kFSEvítSåómCª©eFœgU£CFTy≥s


12 
	#kFSEvítSåómCª©eFœgU£CFTy≥s
 0x00000001

	)

15 #i‚de‡
kFSEvítSåómCª©eFœgNoDe„r


16 
	#kFSEvítSåómCª©eFœgNoDe„r
 0x00000002

	)

19 #i‚de‡
kFSEvítSåómCª©eFœgW©chRoŸ


20 
	#kFSEvítSåómCª©eFœgW©chRoŸ
 0x00000004

	)

23 #i‚de‡
kFSEvítSåómCª©eFœgIgn‹eSñf


24 
	#kFSEvítSåómCª©eFœgIgn‹eSñf
 0x00000008

	)

27 #i‚de‡
kFSEvítSåómCª©eFœgFûeEvíts


28 
	#kFSEvítSåómCª©eFœgFûeEvíts
 0x00000010

	)

31 
	gFSEvíts
::
	$thªadSèπ
() {

32 i‡(
thªadlo›
) ;

33 
	`±hªad_¸óã
(&
thªad
, 
NULL
, &
FSEvíts
::
thªadRun
, 
this
);

34 
	}
}

36 
	$H™dÀSåómEvíts
(
C⁄°FSEvítSåómRef
 
°ªam
, *
˘x
, 
size_t
 
numEvíts
, *
evítP©hs
, c⁄° 
FSEvítSåómEvítFœgs
 
evítFœgs
[], c⁄° 
FSEvítSåómEvítId
 
evítIds
[]) {

37 
FSEvíts
 * 
f£
 = (FSEvít†*)
˘x
;

38 
size_t
 
idx
;

39 
f£
->
	`lock
();

40 
idx
=0; idx < 
numEvíts
; idx++) {

41 
f£_evít
 *
evít
 = 
√w
 
	`f£_evít
(

42 (
CFSåögRef
)
	`CFAºayGëVÆueAtIndex
((
CFAºayRef
)
evítP©hs
, 
idx
),

43 
evítFœgs
[
idx
],

44 
evítIds
[
idx
]

46 
f£
->
evíts
.
	`push_back
(
evít
);

48 
f£
->
	`asyncTriggî
();

49 
f£
->
	`u∆ock
();

50 
	}
}

52 *
	gFSEvíts
::
	$thªadRun
(*
˘x
) {

53 
FSEvíts
 *
f£
 = (FSEvíts*)
˘x
;

54 
FSEvítSåómC⁄ãxt
 
c⁄ãxt
 = { 0, 
˘x
, 
NULL
, NULL, NULL };

55 
f£
->
thªadlo›
 = 
	`CFRunLo›GëCuºít
();

56 
FSEvítSåómRef
 
°ªam
 = 
	`FSEvítSåómCª©e
(
NULL
, &
H™dÀSåómEvíts
, &
c⁄ãxt
, 
f£
->
∑ths
, 
kFSEvítSåómEvítIdSö˚Now
, (
CFAbsﬁuãTime
Ë0.1, 
kFSEvítSåómCª©eFœgN⁄e
 | 
kFSEvítSåómCª©eFœgW©chRoŸ
 | 
kFSEvítSåómCª©eFœgFûeEvíts
 | 
kFSEvítSåómCª©eFœgU£CFTy≥s
);

57 
	`FSEvítSåómScheduÀWôhRunLo›
(
°ªam
, 
f£
->
thªadlo›
, 
kCFRunLo›DeÁu…Mode
);

58 
	`FSEvítSåómSèπ
(
°ªam
);

59 
	`CFRunLo›Run
();

60 
	`FSEvítSåómSt›
(
°ªam
);

61 
	`FSEvítSåómUnscheduÀFromRunLo›
(
°ªam
, 
f£
->
thªadlo›
, 
kCFRunLo›DeÁu…Mode
);

62 
	`FSEvítSåómInvÆid©e
(
°ªam
);

63 
	`FSEvítSåómRñó£
(
°ªam
);

64 
f£
->
thªadlo›
 = 
NULL
;

65  
NULL
;

66 
	}
}

68 
	gFSEvíts
::
	$thªadSt›
() {

69 i‡(!
thªadlo›
) ;

70 
	`CFRunLo›St›
(
thªadlo›
);

71 
	`±hªad_joö
(
thªad
, 
NULL
);

72 
	}
}

	@node_modules/browser-sync/node_modules/localtunnel/node_modules/request/node_modules/node-uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@node_modules/fsevents/fsevents.cc

6 
	~"«n.h
"

7 
	~"uv.h
"

8 
	~"v8.h
"

9 
	~"±hªad.h
"

10 
	~"C‹eFound©i⁄/C‹eFound©i⁄.h
"

11 
	~"C‹eSîvi˚s/C‹eSîvi˚s.h
"

12 
	~<io°ªam
>

13 
	~<ve˘‹
>

15 
	~"§c/°‹age.cc
"

16 
«me•a˚
 
	gf£
 {

17 ˛as†
	cFSEvíts
 : 
public
 
node
::
Obje˘Wøp
 {

18 
public
:

19 
FSEvíts
(c⁄° *
∑th
, 
N™
::
CÆlback
 *
h™dÀr
);

20 ~
FSEvíts
();

23 
boﬁ
 
	glockSèπed
;

24 
±hªad_muãx_t
 
	glockmuãx
;

25 
lockögSèπ
();

26 
lock
();

27 
u∆ock
();

28 
lockögSt›
();

31 
uv_async_t
 
	gasync
;

32 
asyncSèπ
();

33 
asyncTriggî
();

34 
asyncSt›
();

37 
±hªad_t
 
	gthªad
;

38 
CFRunLo›Ref
 
	gthªadlo›
;

39 
thªadSèπ
();

40 *
thªadRun
(*
˘x
);

41 
thªadSt›
();

44 
	gN™
::
CÆlback
 *
h™dÀr
;

45 
emôEvít
(c⁄° *
∑th
, 
UI¡32
 
Êags
, 
UI¡64
 
id
);

48 
CFAºayRef
 
	g∑ths
;

49 
	g°d
::
ve˘‹
<
f£_evít
*> 
evíts
;

50 
Inôülize
(
v8
::
H™dÀ
<v8::
Obje˘
> 
exp‹ts
);

53 
NAN_METHOD
(
New
);

54 
NAN_METHOD
(
St›
);

55 
NAN_METHOD
(
Sèπ
);

60 
usög
 
«me•a˚
 
	gf£
;

62 
	gFSEvíts
::
	$FSEvíts
(c⁄° *
∑th
, 
N™
::
CÆlback
 *
h™dÀr
): 
	$h™dÀr
(
h™dÀr
) {

63 
CFSåögRef
 
dús
[] = { 
	`CFSåögCª©eWôhCSåög
(
NULL
, 
∑th
, 
kCFSåögEncodögUTF8
) };

64 
∑ths
 = 
	`CFAºayCª©e
(
NULL
, (c⁄° **)&
dús
, 1, NULL);

65 
thªadlo›
 = 
NULL
;

66 
	`lockögSèπ
();

67 
	}
}

68 
	gFSEvíts
::~
	$FSEvíts
() {

69 
°d
::
cout
 << "YIKES" << std::
ídl
;

70 
	`lockögSt›
();

71 
dñëe
 
h™dÀr
;

72 
h™dÀr
 = 
NULL
;

74 
	`CFRñó£
(
∑ths
);

75 
	}
}

77 #i‚de‡
kFSEvítSåómEvítFœgIãmCª©ed


78 
	#kFSEvítSåómEvítFœgIãmCª©ed
 0x00000010

	)

81 
	~"§c/lockög.cc
"

82 
	~"§c/async.cc
"

83 
	~"§c/thªad.cc
"

84 
	~"§c/c⁄°™ts.cc
"

85 
	~"§c/mëhods.cc
"

87 
	gFSEvíts
::
Inôülize
(
v8
::
H™dÀ
<v8::
Obje˘
> 
exp‹ts
) {

88 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::Fun˘i⁄Tem∂©e>(
FSEvíts
::New);

89 
	gçl
->
SëCœssName
(
N™
::
New
<
v8
::
Såög
>("FSEvíts").
ToLoˇlChecked
());

90 
	gçl
->
In°™˚Tem∂©e
()->
SëI¡î«lFõldCou¡
(1);

91 
	gçl
->
PrŸŸy≥Tem∂©e
()->
Së
(

92 
N™
::
New
<
v8
::
Såög
>("°¨t").
ToLoˇlChecked
(),

93 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
FSEvíts
::
Sèπ
));

94 
	gçl
->
PrŸŸy≥Tem∂©e
()->
Së
(

95 
N™
::
New
<
v8
::
Såög
>("°›").
ToLoˇlChecked
(),

96 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
FSEvíts
::
St›
));

97 
	gexp‹ts
->
Së
(
N™
::
New
<
v8
::
Såög
>("C⁄°™ts").
ToLoˇlChecked
(), 
C⁄°™ts
());

98 
	gexp‹ts
->
Së
(
N™
::
New
<
v8
::
Såög
>("FSEvíts").
ToLoˇlChecked
(),

99 
çl
->
GëFun˘i⁄
());

102 
NODE_MODULE
(
f£
, 
FSEvíts
::
Inôülize
)

	@node_modules/fsevents/node_modules/node-uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@node_modules/fsevents/src/async.cc

7 
	$async_¥›ag©e
(
uv_async_t
 *
async
) {

8 i‡(!
async
->
d©a
) ;

9 
FSEvíts
 *
f£
 = (FSEvít†*)
async
->
d©a
;

10 
CFIndex
 
idx
, 
˙t
;

11 
f£_evít
 *
evít
;

12 
∑thbuf
[1024];

13 c⁄° *
∑th±r
 = 
NULL
;

14 
f£
->
	`lock
();

15 
˙t
 = 
f£
->
evíts
.
	`size
();

16 
idx
=0; idx<
˙t
; idx++) {

17 
evít
 = 
f£
->
evíts
.
	`©
(
idx
);

18 i‡(
evít
 =
NULL
) ;

19 
∑th±r
 = 
	`CFSåögGëCSåögPå
(
evít
->
∑th
, 
kCFSåögEncodögUTF8
);

20 i‡(!
∑th±r
Ë
	`CFSåögGëCSåög
(
evít
->
∑th
, 
∑thbuf
, 1024, 
kCFSåögEncodögUTF8
);

21 
f£
->
	`emôEvít
(
∑th±r
 ?Ö©h±∏: 
∑thbuf
, 
evít
->
Êags
,Évít->
id
);

22 
dñëe
 
evít
;

24 i‡(
˙t
>0Ë
f£
->
evíts
.
	`˛ór
();

25 
f£
->
	`u∆ock
();

26 
	}
}

28 
	gFSEvíts
::
	$asyncSèπ
() {

29 i‡(
async
.
d©a
 =
this
) ;

30 
async
.
d©a
 = 
this
;

31 
	`uv_async_öô
(
	`uv_deÁu…_lo›
(), &
async
, (
uv_async_cb
Ë
async_¥›ag©e
);

32 
	}
}

34 
	gFSEvíts
::
	$asyncTriggî
() {

35 i‡(
async
.
d©a
 !
this
) ;

36 
	`uv_async_£nd
(&
async
);

37 
	}
}

39 
	gFSEvíts
::
	$asyncSt›
() {

40 i‡(
async
.
d©a
 !
this
) ;

41 
async
.
d©a
 = 
NULL
;

42 
	`uv_˛o£
((
uv_h™dÀ_t
 *Ë&
async
, 
NULL
);

43 
	}
}

	@node_modules/fsevents/src/constants.cc

7 #i‚de‡
kFSEvítSåómEvítFœgN⁄e


8 
	#kFSEvítSåómEvítFœgN⁄e
 0x00000000

	)

11 #i‚de‡
kFSEvítSåómEvítFœgMu°SˇnSubDús


12 
	#kFSEvítSåómEvítFœgMu°SˇnSubDús
 0x00000001

	)

15 #i‚de‡
kFSEvítSåómEvítFœgU£rDr›≥d


16 
	#kFSEvítSåómEvítFœgU£rDr›≥d
 0x00000002

	)

19 #i‚de‡
kFSEvítSåómEvítFœgKî√lDr›≥d


20 
	#kFSEvítSåómEvítFœgKî√lDr›≥d
 0x00000004

	)

23 #i‚de‡
kFSEvítSåómEvítFœgEvítIdsWøµed


24 
	#kFSEvítSåómEvítFœgEvítIdsWøµed
 0x00000008

	)

27 #i‚de‡
kFSEvítSåómEvítFœgHi°‹yD⁄e


28 
	#kFSEvítSåómEvítFœgHi°‹yD⁄e
 0x00000010

	)

31 #i‚de‡
kFSEvítSåómEvítFœgRoŸCh™ged


32 
	#kFSEvítSåómEvítFœgRoŸCh™ged
 0x00000020

	)

35 #i‚de‡
kFSEvítSåómEvítFœgMou¡


36 
	#kFSEvítSåómEvítFœgMou¡
 0x00000040

	)

39 #i‚de‡
kFSEvítSåómEvítFœgUnmou¡


40 
	#kFSEvítSåómEvítFœgUnmou¡
 0x00000080

	)

43 #i‚de‡
kFSEvítSåómEvítFœgIãmCª©ed


44 
	#kFSEvítSåómEvítFœgIãmCª©ed
 0x00000100

	)

47 #i‚de‡
kFSEvítSåómEvítFœgIãmRemoved


48 
	#kFSEvítSåómEvítFœgIãmRemoved
 0x00000200

	)

51 #i‚de‡
kFSEvítSåómEvítFœgIãmInodeMëaMod


52 
	#kFSEvítSåómEvítFœgIãmInodeMëaMod
 0x00000400

	)

55 #i‚de‡
kFSEvítSåómEvítFœgIãmRíamed


56 
	#kFSEvítSåómEvítFœgIãmRíamed
 0x00000800

	)

59 #i‚de‡
kFSEvítSåómEvítFœgIãmModifõd


60 
	#kFSEvítSåómEvítFœgIãmModifõd
 0x00001000

	)

63 #i‚de‡
kFSEvítSåómEvítFœgIãmFödîInfoMod


64 
	#kFSEvítSåómEvítFœgIãmFödîInfoMod
 0x00002000

	)

67 #i‚de‡
kFSEvítSåómEvítFœgIãmCh™geOw√r


68 
	#kFSEvítSåómEvítFœgIãmCh™geOw√r
 0x00004000

	)

71 #i‚de‡
kFSEvítSåómEvítFœgIãmX©åMod


72 
	#kFSEvítSåómEvítFœgIãmX©åMod
 0x00008000

	)

75 #i‚de‡
kFSEvítSåómEvítFœgIãmIsFûe


76 
	#kFSEvítSåómEvítFœgIãmIsFûe
 0x00010000

	)

79 #i‚de‡
kFSEvítSåómEvítFœgIãmIsDú


80 
	#kFSEvítSåómEvítFœgIãmIsDú
 0x00020000

	)

83 #i‚de‡
kFSEvítSåómEvítFœgIãmIsSymlök


84 
	#kFSEvítSåómEvítFœgIãmIsSymlök
 0x00040000

	)

87 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$C⁄°™ts
() {

88 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
 = 
N™
::
New
<v8::Object>();

89 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgN⁄e").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgN⁄e
));

90 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgMu°SˇnSubDús").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgMu°SˇnSubDús
));

91 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgU£rDr›≥d").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgU£rDr›≥d
));

92 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgKî√lDr›≥d").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgKî√lDr›≥d
));

93 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgEvítIdsWøµed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgEvítIdsWøµed
));

94 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgHi°‹yD⁄e").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgHi°‹yD⁄e
));

95 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgRoŸCh™ged").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgRoŸCh™ged
));

96 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgMou¡").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgMou¡
));

97 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgUnmou¡").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgUnmou¡
));

98 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmCª©ed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmCª©ed
));

99 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmRemoved").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmRemoved
));

100 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmInodeMëaMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmInodeMëaMod
));

101 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmRíamed").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmRíamed
));

102 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmModifõd").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmModifõd
));

103 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmFödîInfoMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmFödîInfoMod
));

104 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmCh™geOw√r").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmCh™geOw√r
));

105 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmX©åMod").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmX©åMod
));

106 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsFûe").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsFûe
));

107 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsDú").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsDú
));

108 
obje˘
->
	`Së
(
N™
::
New
<
v8
::
Såög
>("kFSEvítSåómEvítFœgIãmIsSymlök").
	`ToLoˇlChecked
(), N™::New<v8::
I¡egî
>(
kFSEvítSåómEvítFœgIãmIsSymlök
));

109  
obje˘
;

110 
	}
}

	@node_modules/fsevents/src/locking.cc

6 
	gFSEvíts
::
	$lockögSèπ
() {

7 i‡(
lockSèπed
) ;

8 
lockSèπed
 = 
åue
;

9 
	`±hªad_muãx_öô
(&
lockmuãx
, 
NULL
);

10 
	}
}

12 
	gFSEvíts
::
	$lock
() {

13 i‡(!
lockSèπed
) ;

14 
	`±hªad_muãx_lock
(&
lockmuãx
);

15 
	}
}

17 
	gFSEvíts
::
	$u∆ock
() {

18 i‡(!
lockSèπed
) ;

19 
	`±hªad_muãx_u∆ock
(&
lockmuãx
);

20 
	}
}

22 
	gFSEvíts
::
	$lockögSt›
() {

23 i‡(!
lockSèπed
) ;

24 
lockSèπed
 = 
Ál£
;

26 
	`±hªad_muãx_de°roy
(&
lockmuãx
);

27 
	}
}

	@node_modules/fsevents/src/methods.cc

6 
	gFSEvíts
::
	$emôEvít
(c⁄° *
∑th
, 
UI¡32
 
Êags
, 
UI¡64
 
id
) {

7 i‡(!
h™dÀr
) ;

8 
N™
::
H™dÀSc›e
 
h™dÀ_sc›e
;

9 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = {

10 
N™
::
New
<
v8
::
Såög
>(
∑th
).
	`ToLoˇlChecked
(),

11 
N™
::
New
<
v8
::
Numbî
>(
Êags
),

12 
N™
::
New
<
v8
::
Numbî
>(
id
)

14 
h™dÀr
->
	`CÆl
(3, 
¨gv
);

15 
	}
}

17 
	$NAN_METHOD
(
FSEvíts
::
New
) {

18 
N™
::
Utf8Såög
 *
∑th
 = 
√w
 N™::
	`Utf8Såög
(
öfo
[0]);

19 
N™
::
CÆlback
 *
ˇŒback
 = 
√w
 N™::
	`CÆlback
(
öfo
[1].
As
<
v8
::
Fun˘i⁄
>());

21 
FSEvíts
 *
f£
 = 
√w
 
	`FSEvíts
(**
∑th
, 
ˇŒback
);

22 
f£
->
	`Wøp
(
öfo
.
	`This
());

24 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

25 
	}
}

27 
	$NAN_METHOD
(
FSEvíts
::
St›
) {

28 
FSEvíts
* 
f£
 = 
node
::
Obje˘Wøp
::
Unwøp
<FSEvíts>(
öfo
.
	`This
());

30 
f£
->
	`thªadSt›
();

31 
f£
->
	`asyncSt›
();

33 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

34 
	}
}

36 
	$NAN_METHOD
(
FSEvíts
::
Sèπ
) {

37 
FSEvíts
* 
f£
 = 
node
::
Obje˘Wøp
::
Unwøp
<FSEvíts>(
öfo
.
	`This
());

38 
f£
->
	`asyncSèπ
();

39 
f£
->
	`thªadSèπ
();

41 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(öfo.
	`This
());

42 
	}
}

	@node_modules/fsevents/src/storage.cc

6 
	sf£_evít
 {

7 
UI¡64
 
	mid
;

8 
UI¡32
 
	mÊags
;

9 
CFSåögRef
 
	m∑th
;

11 
f£_evít
(
CFSåögRef
 
evítP©h
, 
UI¡32
 
evítFœg
, 
UI¡64
 
evítId
) {

12 
	mthis
->
	m∑th
 = 
evítP©h
;

13 
	mthis
->
	mÊags
 = 
evítFœg
;

14 
	mthis
->
	mid
 = 
evítId
;

15 i‡(
	mthis
->
	m∑th
 !
NULL
)

16 
CFRëaö
(
this
->
∑th
);

19 ~
f£_evít
() {

20 i‡(
	mthis
->
	m∑th
 !
NULL
)

21 
CFRñó£
(
this
->
∑th
);

24 
	m¥iv©e
:

25 
f£_evít
(const fse_event&);

26 
	m›î©‹
=(c⁄° 
f£_evít
&);

	@node_modules/fsevents/src/thread.cc

7 #i‚de‡
kFSEvítSåómCª©eFœgN⁄e


8 
	#kFSEvítSåómCª©eFœgN⁄e
 0x00000000

	)

11 #i‚de‡
kFSEvítSåómCª©eFœgU£CFTy≥s


12 
	#kFSEvítSåómCª©eFœgU£CFTy≥s
 0x00000001

	)

15 #i‚de‡
kFSEvítSåómCª©eFœgNoDe„r


16 
	#kFSEvítSåómCª©eFœgNoDe„r
 0x00000002

	)

19 #i‚de‡
kFSEvítSåómCª©eFœgW©chRoŸ


20 
	#kFSEvítSåómCª©eFœgW©chRoŸ
 0x00000004

	)

23 #i‚de‡
kFSEvítSåómCª©eFœgIgn‹eSñf


24 
	#kFSEvítSåómCª©eFœgIgn‹eSñf
 0x00000008

	)

27 #i‚de‡
kFSEvítSåómCª©eFœgFûeEvíts


28 
	#kFSEvítSåómCª©eFœgFûeEvíts
 0x00000010

	)

31 
	gFSEvíts
::
	$thªadSèπ
() {

32 i‡(
thªadlo›
) ;

33 
	`±hªad_¸óã
(&
thªad
, 
NULL
, &
FSEvíts
::
thªadRun
, 
this
);

34 
	}
}

36 
	$H™dÀSåómEvíts
(
C⁄°FSEvítSåómRef
 
°ªam
, *
˘x
, 
size_t
 
numEvíts
, *
evítP©hs
, c⁄° 
FSEvítSåómEvítFœgs
 
evítFœgs
[], c⁄° 
FSEvítSåómEvítId
 
evítIds
[]) {

37 
FSEvíts
 * 
f£
 = (FSEvít†*)
˘x
;

38 
size_t
 
idx
;

39 
f£
->
	`lock
();

40 
idx
=0; idx < 
numEvíts
; idx++) {

41 
f£_evít
 *
evít
 = 
√w
 
	`f£_evít
(

42 (
CFSåögRef
)
	`CFAºayGëVÆueAtIndex
((
CFAºayRef
)
evítP©hs
, 
idx
),

43 
evítFœgs
[
idx
],

44 
evítIds
[
idx
]

46 
f£
->
evíts
.
	`push_back
(
evít
);

48 
f£
->
	`asyncTriggî
();

49 
f£
->
	`u∆ock
();

50 
	}
}

52 *
	gFSEvíts
::
	$thªadRun
(*
˘x
) {

53 
FSEvíts
 *
f£
 = (FSEvíts*)
˘x
;

54 
FSEvítSåómC⁄ãxt
 
c⁄ãxt
 = { 0, 
˘x
, 
NULL
, NULL, NULL };

55 
f£
->
thªadlo›
 = 
	`CFRunLo›GëCuºít
();

56 
FSEvítSåómRef
 
°ªam
 = 
	`FSEvítSåómCª©e
(
NULL
, &
H™dÀSåómEvíts
, &
c⁄ãxt
, 
f£
->
∑ths
, 
kFSEvítSåómEvítIdSö˚Now
, (
CFAbsﬁuãTime
Ë0.1, 
kFSEvítSåómCª©eFœgN⁄e
 | 
kFSEvítSåómCª©eFœgW©chRoŸ
 | 
kFSEvítSåómCª©eFœgFûeEvíts
 | 
kFSEvítSåómCª©eFœgU£CFTy≥s
);

57 
	`FSEvítSåómScheduÀWôhRunLo›
(
°ªam
, 
f£
->
thªadlo›
, 
kCFRunLo›DeÁu…Mode
);

58 
	`FSEvítSåómSèπ
(
°ªam
);

59 
	`CFRunLo›Run
();

60 
	`FSEvítSåómSt›
(
°ªam
);

61 
	`FSEvítSåómUnscheduÀFromRunLo›
(
°ªam
, 
f£
->
thªadlo›
, 
kCFRunLo›DeÁu…Mode
);

62 
	`FSEvítSåómInvÆid©e
(
°ªam
);

63 
	`FSEvítSåómRñó£
(
°ªam
);

64 
f£
->
thªadlo›
 = 
NULL
;

65  
NULL
;

66 
	}
}

68 
	gFSEvíts
::
	$thªadSt›
() {

69 i‡(!
thªadlo›
) ;

70 
	`CFRunLo›St›
(
thªadlo›
);

71 
	`±hªad_joö
(
thªad
, 
NULL
);

72 
	}
}

	@node_modules/less/node_modules/request/node_modules/node-uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@node_modules/nan/nan.h

20 #i‚de‡
NAN_H_


21 
	#NAN_H_


	)

23 
	~<node_vîsi⁄.h
>

25 
	#NODE_0_10_MODULE_VERSION
 11

	)

26 
	#NODE_0_12_MODULE_VERSION
 14

	)

27 
	#ATOM_0_21_MODULE_VERSION
 41

	)

28 
	#IOJS_1_0_MODULE_VERSION
 42

	)

29 
	#IOJS_1_1_MODULE_VERSION
 43

	)

30 
	#IOJS_2_0_MODULE_VERSION
 44

	)

31 
	#IOJS_3_0_MODULE_VERSION
 45

	)

32 
	#NODE_4_0_MODULE_VERSION
 46

	)

33 
	#NODE_5_0_MODULE_VERSION
 47

	)

34 
	#NODE_6_0_MODULE_VERSION
 48

	)

36 #ifde‡
_MSC_VER


37 
	#NAN_HAS_CPLUSPLUS_11
 (
_MSC_VER
 >1800)

	)

39 
	#NAN_HAS_CPLUSPLUS_11
 (
__˝lu•lus
 >201103L)

	)

42 #i‡
NODE_MODULE_VERSION
 >
IOJS_3_0_MODULE_VERSION
 && !
NAN_HAS_CPLUSPLUS_11


43 #îr‹ 
This
 
vîsi⁄
 
of
 
node
/
NAN
/
v8
 
ªquúes
 
a
 
C
++11 
compûî


46 
	~<uv.h
>

47 
	~<node.h
>

48 
	~<node_buf„r.h
>

49 
	~<node_obje˘_wøp.h
>

50 
	~<Æg‹ôhm
>

51 
	~<c°rög
>

52 
	~<˛imôs
>

53 
	~<c°dlib
>

54 #i‡
deföed
(
_MSC_VER
)

55 #¥agm®
w¨nög
–
push
 )

56 #¥agm®
w¨nög
–
dißbÀ
 : 4530 )

57 
	~<°rög
>

58 
	~<ve˘‹
>

59 #¥agm®
w¨nög
–
p›
 )

61 
	~<°rög
>

62 
	~<ve˘‹
>

66 #ifde‡
UV_VERSION_MAJOR


67 #i‚de‡
UV_VERSION_PATCH


68 
	#UV_VERSION_PATCH
 0

	)

70 
	#NAUV_UVVERSION
 ((
UV_VERSION_MAJOR
 << 16) | \

71 (
UV_VERSION_MINOR
 << 8) | \

72 (
UV_VERSION_PATCH
))

	)

74 
	#NAUV_UVVERSION
 0x000b00

	)

77 #i‡
NAUV_UVVERSION
 < 0x000b0b

78 #ifde‡
WIN32


79 
	~<wödows.h
>

81 
	~<±hªad.h
>

85 
«me•a˚
 
	gN™
 {

87 #i‡
deföed
(
__GNUC__
Ë&& !(deföed(
DEBUG
) && DEBUG)

88 
	#NAN_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

89 #ñi‡
deföed
(
_MSC_VER
Ë&& !(deföed(
DEBUG
) && DEBUG)

90 
	#NAN_INLINE
 
__f‹˚ölöe


	)

92 
	#NAN_INLINE
 
ölöe


	)

95 #i‡
deföed
(
__GNUC__
) && \

96 !(
deföed
(
V8_DISABLE_DEPRECATIONS
Ë&& 
	gV8_DISABLE_DEPRECATIONS
)

97 
	#NAN_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

98 #ñi‡
deföed
(
_MSC_VER
) && \

99 !(
deföed
(
V8_DISABLE_DEPRECATIONS
Ë&& 
	gV8_DISABLE_DEPRECATIONS
)

100 
	#NAN_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

102 
	#NAN_DEPRECATED


	)

105 #i‡
NAN_HAS_CPLUSPLUS_11


106 
	#NAN_DISALLOW_ASSIGN
(
CLASS
Ë
›î©‹
=(c⁄° CLASS&Ë
dñëe
;

	)

107 
	#NAN_DISALLOW_COPY
(
CLASS
Ë
	`CLASS
(c⁄° CLASS&Ë
dñëe
;

	)

108 
	#NAN_DISALLOW_MOVE
(
CLASS
) \

109 
	`CLASS
(
CLASS
&&Ë
dñëe
; \

110 
›î©‹
=(
CLASS
&&Ë
dñëe
;

	)

112 
	#NAN_DISALLOW_ASSIGN
(
CLASS
Ë
›î©‹
=(c⁄° CLASS&);

	)

113 
	#NAN_DISALLOW_COPY
(
CLASS
Ë
	`CLASS
(c⁄° CLASS&);

	)

114 
	#NAN_DISALLOW_MOVE
(
CLASS
)

	)

117 
	#NAN_DISALLOW_ASSIGN_COPY
(
CLASS
) \

118 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

119 
	`NAN_DISALLOW_COPY
(
CLASS
)

	)

121 
	#NAN_DISALLOW_ASSIGN_MOVE
(
CLASS
) \

122 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

123 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

125 
	#NAN_DISALLOW_COPY_MOVE
(
CLASS
) \

126 
	`NAN_DISALLOW_COPY
(
CLASS
) \

127 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

129 
	#NAN_DISALLOW_ASSIGN_COPY_MOVE
(
CLASS
) \

130 
	`NAN_DISALLOW_ASSIGN
(
CLASS
) \

131 
	`NAN_DISALLOW_COPY
(
CLASS
) \

132 
	`NAN_DISALLOW_MOVE
(
CLASS
)

	)

134 
	#TYPE_CHECK
(
T
, 
S
) \

135 
Ál£
) { \

136 *(
°©ic_ˇ°
<
T
 *vﬁ©ûê*>(0)Ë°©ic_ˇ°<
S
*>(0); \

137 }

	)

141 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


142 
	gv8
::
	tH™dÀ
<
	tv8
::
	tObje˘
> 
	tADDON_REGISTER_FUNCTION_ARGS_TYPE
;

144 
	gv8
::
	tLoˇl
<
	tv8
::
	tObje˘
> 
	tADDON_REGISTER_FUNCTION_ARGS_TYPE
;

147 
	#NAN_MODULE_INIT
(
«me
) \

148 
	`«me
(
N™
::
ADDON_REGISTER_FUNCTION_ARGS_TYPE
 
èrgë
)

	)

152 
	~"«n_ˇŒbacks.h
"

156 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_12_MODULE_VERSION
)

157 
	gv8
::
	tS¸ùt
 
	tUnboundS¸ùt
;

158 
	gv8
::
	tS¸ùt
 
	tBoundS¸ùt
;

160 
	gv8
::
	tUnboundS¸ùt
 UnboundScript;

161 
	gv8
::
	tS¸ùt
 
	tBoundS¸ùt
;

164 #i‡(
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION
)

165 
	gv8
::
	tSåög
::
	tExã∫ÆAsciiSåögResour˚


166 
	tExã∫ÆO√ByãSåögResour˚
;

168 
	gv8
::
	tSåög
::
	tExã∫ÆO√ByãSåögResour˚


169 
	tExã∫ÆO√ByãSåögResour˚
;

172 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

173 
	gãm∂©e
<
ty≥«me
 
	gT
>

174 
˛ass
 
	gN⁄C›yabÀPîsi°ítTøôs
 :

175 
public
 
v8
::
N⁄C›yabÀPîsi°ítTøôs
<
T
> {};

176 
	gãm∂©e
<
ty≥«me
 
	gT
>

177 
˛ass
 
	gC›yabÀPîsi°ítTøôs
 :

178 
public
 
v8
::
C›yabÀPîsi°ítTøôs
<
T
> {};

180 
	gãm∂©e
<
ty≥«me
 
	gT
>

181 
˛ass
 
	gPîsi°ítBa£
 :

182 
public
 
v8
::
Pîsi°ítBa£
<
T
> {};

184 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
 = 
v8
::
N⁄C›yabÀPîsi°ítTøôs
<
T
> >

185 
˛ass
 
Pîsi°ít
;

187 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gN⁄C›yabÀPîsi°ítTøôs
;

188 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPîsi°ítBa£
;

189 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gP
> 
˛ass
 
	gWókCÆlbackD©a
;

190 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
 = 
N⁄C›yabÀPîsi°ítTøôs
<
T
> >

191 
˛ass
 
Pîsi°ít
;

194 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

195 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

196 
	~"«n_maybe_43_öl.h
"

198 
	~"«n_maybe_¥e_43_öl.h
"

201 
	~"«n_c⁄vîãrs.h
"

202 
	~"«n_√w.h
"

204 #i‡
NAUV_UVVERSION
 < 0x000b17

205 
	#NAUV_WORK_CB
(
func
) \

206 
	`func
(
uv_async_t
 *
async
, )

	)

208 
	#NAUV_WORK_CB
(
func
) \

209 
	`func
(
uv_async_t
 *
async
)

	)

212 #i‡
NAUV_UVVERSION
 >= 0x000b0b

214 
uv_key_t
 
	t«uv_key_t
;

216 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
 *
key
) {

217  
uv_key_¸óã
(
key
);

220 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
 *
key
) {

221 
uv_key_dñëe
(
key
);

224 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
 *
key
) {

225  
uv_key_gë
(
key
);

228 
ölöe
 
«uv_key_£t
(
«uv_key_t
 *
key
, *
vÆue
) {

229 
uv_key_£t
(
key
, 
vÆue
);

239 #i‚de‡
WIN32


241 
±hªad_key_t
 
	t«uv_key_t
;

243 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
* 
key
) {

244  -
±hªad_key_¸óã
(
key
, 
NULL
);

247 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
* 
key
) {

248 i‡(
±hªad_key_dñëe
(*
key
))

249 
ab‹t
();

252 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
* 
key
) {

253  
±hªad_gë•ecific
(*
key
);

256 
ölöe
 
«uv_key_£t
(
«uv_key_t
* 
key
, * 
vÆue
) {

257 i‡(
±hªad_£t•ecific
(*
key
, 
vÆue
))

258 
ab‹t
();

264 
DWORD
 
	gés_ödex
;

265 } 
	t«uv_key_t
;

267 
ölöe
 
«uv_key_¸óã
(
«uv_key_t
* 
key
) {

268 
	gkey
->
	gés_ödex
 = 
TlsAŒoc
();

269 i‡(
	gkey
->
	gés_ödex
 =
TLS_OUT_OF_INDEXES
)

270  
UV_ENOMEM
;

274 
ölöe
 
«uv_key_dñëe
(
«uv_key_t
* 
key
) {

275 i‡(
TlsFªe
(
key
->
és_ödex
Ë=
FALSE
)

276 
ab‹t
();

277 
	gkey
->
	gés_ödex
 = 
TLS_OUT_OF_INDEXES
;

280 
ölöe
 * 
«uv_key_gë
(
«uv_key_t
* 
key
) {

281 * 
	gvÆue
 = 
TlsGëVÆue
(
key
->
és_ödex
);

282 i‡(
	gvÆue
 =
NULL
)

283 i‡(
GëLa°Eº‹
(Ë!
ERROR_SUCCESS
)

284 
ab‹t
();

285  
	gvÆue
;

288 
ölöe
 
«uv_key_£t
(
«uv_key_t
* 
key
, * 
vÆue
) {

289 i‡(
TlsSëVÆue
(
key
->
és_ödex
, 
vÆue
Ë=
FALSE
)

290 
ab‹t
();

296 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


297 
	gãm∂©e
<
ty≥«me
 
	gT
>

298 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T>);

301 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

302 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

303 
v8
::
	tWókCÆlbackTy≥
 WeakCallbackType;

305 
	sWókCÆlbackTy≥
 {

306 
	eE
 {
	gkP¨amëî
, 
	gkI¡î«lFõlds
};

307 
E
 
	gty≥
;

308 
WókCÆlbackTy≥
(
E
 
Ÿhî
Ë: 
ty≥
(other) {}

309 
ölöe
 
boﬁ
 
›î©‹
==(
E
 
Ÿhî
Ë{  othî =
this
->
ty≥
; }

310 
ölöe
 
boﬁ
 
	g›î©‹
!=(
E
 
Ÿhî
Ë{  !
›î©‹
==(other); }

314 
	gãm∂©e
<
ty≥«me
 
	gP
> 
˛ass
 
	gWókCÆlbackInfo
;

316 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


317 
	~"«n_≥rsi°ít_12_öl.h
"

319 
	~"«n_≥rsi°ít_¥e_12_öl.h
"

322 
«me•a˚
 
	gimp
 {

323 c⁄° 
size_t
 
	gkMaxLígth
 = 0x3fffffff;

326 #i‡
NODE_MAJOR_VERSION
 > 0 || \

327 
	gNODE_MINOR_VERSION
 > 10 || \

328 
	gNODE_MINOR_VERSION
 =10 && 
NODE_PATCH_VERSION
 >= 29 || \

329 
NODE_MINOR_VERSION
 =8 && 
NODE_PATCH_VERSION
 >= 27

330 c⁄° 
kRïœ˚InvÆidUtf8
 = 
v8
::
Såög
::
REPLACE_INVALID_UTF8
;

332 c⁄° 
	gkRïœ˚InvÆidUtf8
 = 0;

338 ˛as†
	cH™dÀSc›e
 {

339 
	gv8
::
H™dÀSc›e
 
sc›e
;

341 
	gpublic
:

342 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


343 
ölöe
 
H™dÀSc›e
(Ë: 
sc›e
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

344 
ölöe
 
NumbîOfH™dÀs
() {

345  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
(v8::
Isﬁ©e
::
GëCuºít
());

348 
ölöe
 
H™dÀSc›e
(Ë: 
sc›e
() {}

349 
ölöe
 
NumbîOfH™dÀs
() {

350  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
();

354 
	g¥iv©e
:

357 
H™dÀSc›e
(const HandleScope &);

358 
	g›î©‹
=(c⁄° 
H™dÀSc›e
 &);

359 *
›î©‹
 
√w
(
size_t
 
size
);

360 
›î©‹
 
dñëe
(*, 
size_t
);

363 ˛as†
	cEsˇ∑bÀH™dÀSc›e
 {

364 
	gpublic
:

365 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


366 
ölöe
 
Esˇ∑bÀH™dÀSc›e
(Ë: 
sc›e
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

368 
ölöe
 
NumbîOfH™dÀs
() {

369  
v8
::
Esˇ∑bÀH™dÀSc›e
::
NumbîOfH™dÀs
(v8::
Isﬁ©e
::
GëCuºít
());

372 
	gãm∂©e
<
ty≥«me
 
	gT
>

373 
ölöe
 
	gv8
::
Loˇl
<
T
> 
Esˇ≥
(
v8
::Loˇl<T> 
vÆue
) {

374  
sc›e
.
Esˇ≥
(
vÆue
);

377 
	g¥iv©e
:

378 
v8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

380 
ölöe
 
Esˇ∑bÀH™dÀSc›e
(Ë: 
sc›e
() {}

382 
ölöe
 
NumbîOfH™dÀs
() {

383  
v8
::
H™dÀSc›e
::
NumbîOfH™dÀs
();

386 
	gãm∂©e
<
ty≥«me
 
	gT
>

387 
ölöe
 
	gv8
::
Loˇl
<
T
> 
Esˇ≥
(
v8
::Loˇl<T> 
vÆue
) {

388  
sc›e
.
Clo£
(
vÆue
);

391 
	g¥iv©e
:

392 
v8
::
H™dÀSc›e
 
sc›e
;

395 
	g¥iv©e
:

398 
Esˇ∑bÀH™dÀSc›e
(const EscapableHandleScope &);

399 
	g›î©‹
=(c⁄° 
Esˇ∑bÀH™dÀSc›e
 &);

400 *
›î©‹
 
√w
(
size_t
 
size
);

401 
›î©‹
 
dñëe
(*, 
size_t
);

406 ˛as†
	cTryC©ch
 {

407 
	gv8
::
TryC©ch
 
åy_ˇtch_
;

408 
‰õnd
 
F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
&);

410 
	gpublic
:

411 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


412 
TryC©ch
(Ë: 
åy_ˇtch_
(
v8
::
Isﬁ©e
::
GëCuºít
()) {}

415 
NAN_INLINE
 
boﬁ
 
HasCaught
(Ëc⁄° {  
åy_ˇtch_
.HasCaught(); }

417 
NAN_INLINE
 
boﬁ
 
C™C⁄töue
(Ëc⁄° {  
	gåy_ˇtch_
.CanContinue(); }

419 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
ReThrow
() {

420 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


421  
New
(
åy_ˇtch_
.
ReThrow
());

423  
	gåy_ˇtch_
.
ReThrow
();

427 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
Ex˚±i⁄
() const {

428  
åy_ˇtch_
.
Ex˚±i⁄
();

431 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

432 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

433 
NAN_INLINE
 
v8
::
MaybeLoˇl
<v8::
VÆue
> 
SèckTø˚
() const {

434  
åy_ˇtch_
.
SèckTø˚
(
GëCuºítC⁄ãxt
());

437 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
SèckTø˚
() const {

438  
MaybeLoˇl
<
v8
::
VÆue
>(
åy_ˇtch_
.
SèckTø˚
());

442 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Mesßge
> Message() const {

443  
åy_ˇtch_
.
Mesßge
();

446 
NAN_INLINE
 
Re£t
(Ë{ 
	gåy_ˇtch_
.Reset(); }

448 
NAN_INLINE
 
SëVîbo£
(
boﬁ
 
vÆue
Ë{ 
	gåy_ˇtch_
.SetVerbose(value); }

450 
NAN_INLINE
 
SëC≠tuªMesßge
(
boﬁ
 
vÆue
) {

451 
	gåy_ˇtch_
.
SëC≠tuªMesßge
(
vÆue
);

458 #i‡
NODE_MODULE_VERSION
 >
NODE_0_12_MODULE_VERSION


459 
NAN_INLINE


460 
	$SëCou¡îFun˘i⁄
(
v8
::
Cou¡îLookupCÆlback
 
cb
) {

461 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëCou¡îFun˘i⁄
(
cb
);

462 
	}
}

464 
NAN_INLINE


465 
	$SëCª©eHi°ogømFun˘i⁄
(
v8
::
Cª©eHi°ogømCÆlback
 
cb
) {

466 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëCª©eHi°ogømFun˘i⁄
(
cb
);

467 
	}
}

469 
NAN_INLINE


470 
	$SëAddHi°ogømSam∂eFun˘i⁄
(
v8
::
AddHi°ogømSam∂eCÆlback
 
cb
) {

471 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`SëAddHi°ogømSam∂eFun˘i⁄
(
cb
);

472 
	}
}

474 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

475 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

476 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

477  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`IdÀNŸifiˇti⁄Dódlöe
(

478 
idÀ_time_ö_ms
 * 0.001);

479 
	}
}

481 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

482  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
);

483 
	}
}

486 
NAN_INLINE
 
	$LowMem‹yNŸifiˇti⁄
() {

487 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`LowMem‹yNŸifiˇti⁄
();

488 
	}
}

490 
NAN_INLINE
 
	$C⁄ãxtDi•o£dNŸifiˇti⁄
() {

491 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`C⁄ãxtDi•o£dNŸifiˇti⁄
();

492 
	}
}

494 
NAN_INLINE


495 
	$SëCou¡îFun˘i⁄
(
v8
::
Cou¡îLookupCÆlback
 
cb
) {

496 
v8
::
V8
::
	`SëCou¡îFun˘i⁄
(
cb
);

497 
	}
}

499 
NAN_INLINE


500 
	$SëCª©eHi°ogømFun˘i⁄
(
v8
::
Cª©eHi°ogømCÆlback
 
cb
) {

501 
v8
::
V8
::
	`SëCª©eHi°ogømFun˘i⁄
(
cb
);

502 
	}
}

504 
NAN_INLINE


505 
	$SëAddHi°ogømSam∂eFun˘i⁄
(
v8
::
AddHi°ogømSam∂eCÆlback
 
cb
) {

506 
v8
::
V8
::
	`SëAddHi°ogømSam∂eFun˘i⁄
(
cb
);

507 
	}
}

509 
NAN_INLINE
 
boﬁ
 
	$IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
) {

510  
v8
::
V8
::
	`IdÀNŸifiˇti⁄
(
idÀ_time_ö_ms
);

511 
	}
}

513 
NAN_INLINE
 
	$LowMem‹yNŸifiˇti⁄
() {

514 
v8
::
V8
::
	`LowMem‹yNŸifiˇti⁄
();

515 
	}
}

517 
NAN_INLINE
 
	$C⁄ãxtDi•o£dNŸifiˇti⁄
() {

518 
v8
::
V8
::
	`C⁄ãxtDi•o£dNŸifiˇti⁄
();

519 
	}
}

522 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

523 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$Undeföed
() {

524 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


525 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

526  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`Undeföed
(v8::
Isﬁ©e
::
	`GëCuºít
())));

528  
v8
::
	`Undeföed
(v8::
Isﬁ©e
::
	`GëCuºít
());

530 
	}
}

532 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$NuŒ
() {

533 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


534 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

535  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`NuŒ
(v8::
Isﬁ©e
::
	`GëCuºít
())));

537  
v8
::
	`NuŒ
(v8::
Isﬁ©e
::
	`GëCuºít
());

539 
	}
}

541 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$True
() {

542 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


543 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

544  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`True
(v8::
Isﬁ©e
::
	`GëCuºít
())));

546  
v8
::
	`True
(v8::
Isﬁ©e
::
	`GëCuºít
());

548 
	}
}

550 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$FÆ£
() {

551 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


552 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

553  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`FÆ£
(v8::
Isﬁ©e
::
	`GëCuºít
())));

555  
v8
::
	`FÆ£
(v8::
Isﬁ©e
::
	`GëCuºít
());

557 
	}
}

559 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Såög
> 
	$Em±ySåög
() {

560  
v8
::
Såög
::
	`Em±y
(v8::
Isﬁ©e
::
	`GëCuºít
());

561 
	}
}

563 
NAN_INLINE
 
	$Adju°Exã∫ÆMem‹y
(
bc
) {

564  
°©ic_ˇ°
<>(

565 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`Adju°Amou¡OfExã∫ÆAŒoˇãdMem‹y
(
bc
));

566 
	}
}

568 
NAN_INLINE
 
SëTem∂©e
(

569 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


570 , c⁄° *
«me


571 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue
) {

572 
ãm∂
->
Së
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
«me
, 
vÆue
);

575 
NAN_INLINE
 
SëTem∂©e
(

576 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


577 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


578 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


579 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs
) {

580 
ãm∂
->
Së
(
«me
, 
vÆue
, 
©åibuãs
);

583 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
	$GëCuºítC⁄ãxt
() {

584  
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`GëCuºítC⁄ãxt
();

585 
	}
}

587 
NAN_INLINE
 * 
GëI¡î«lFõldPoöãr
(

588 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


589 , 
ödex
) {

590  
	gobje˘
->
GëAlig√dPoöãrFromI¡î«lFõld
(
ödex
);

593 
NAN_INLINE
 
SëI¡î«lFõldPoöãr
(

594 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


595 , 
ödex


596 , * 
vÆue
) {

597 
	gobje˘
->
SëAlig√dPoöãrInI¡î«lFõld
(
ödex
, 
vÆue
);

600 
	#NAN_GC_CALLBACK
(
«me
) \

601 
	$«me
(
v8
::
Isﬁ©e
 *
isﬁ©e
, v8::
GCTy≥
 
ty≥
, v8::
GCCÆlbackFœgs
 
Êags
)

	)

603 #i‡
NODE_MODULE_VERSION
 <
NODE_4_0_MODULE_VERSION


604 
v8
::
	tIsﬁ©e
::
	tGCEpûogueCÆlback
 GCEpilogueCallback;

605 
v8
::
	tIsﬁ©e
::
	tGCPrﬁogueCÆlback
 GCPrologueCallback;

607 
v8
::
	tIsﬁ©e
::
	tGCCÆlback
 
	tGCEpûogueCÆlback
;

608 
v8
::
	tIsﬁ©e
::
	tGCCÆlback
 
	tGCPrﬁogueCÆlback
;

611 
NAN_INLINE
 
	$AddGCEpûogueCÆlback
(

612 
GCEpûogueCÆlback
 
ˇŒback


613 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

614 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`AddGCEpûogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

615 
	}
}

617 
NAN_INLINE
 
	$RemoveGCEpûogueCÆlback
(

618 
GCEpûogueCÆlback
 
ˇŒback
) {

619 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`RemoveGCEpûogueCÆlback
(
ˇŒback
);

620 
	}
}

622 
NAN_INLINE
 
	$AddGCPrﬁogueCÆlback
(

623 
GCPrﬁogueCÆlback
 
ˇŒback


624 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

625 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`AddGCPrﬁogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

626 
	}
}

628 
NAN_INLINE
 
	$RemoveGCPrﬁogueCÆlback
(

629 
GCPrﬁogueCÆlback
 
ˇŒback
) {

630 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`RemoveGCPrﬁogueCÆlback
(
ˇŒback
);

631 
	}
}

633 
NAN_INLINE
 
	$GëHópSèti°ics
(

634 
v8
::
HópSèti°ics
 *
hóp_°©i°ics
) {

635 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`GëHópSèti°ics
(
hóp_°©i°ics
);

636 
	}
}

638 
	#X
(
NAME
) \

639 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	$NAME
(c⁄° *
msg
) { \

640 
Esˇ∑bÀH™dÀSc›e
 
sc›e
; \

641  
sc›e
.
	`Esˇ≥
(
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

642 
	}
} \

644 
NAN_INLINE
 \

645 
v8
::
Loˇl
<v8::
VÆue
> 
	`NAME
(v8::Loˇl<v8::
Såög
> 
msg
) { \

646  
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
); \

649 
NAN_INLINE
 
Throw
 ## 
	$NAME
(c⁄° *
msg
) { \

650 
H™dÀSc›e
 
sc›e
; \

651 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
( \

652 
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

653 
	}
} \

655 
NAN_INLINE
 
Throw
 ## 
	`NAME
(
v8
::
Loˇl
<v8::
Såög
> 
msg
) { \

656 
H™dÀSc›e
 
sc›e
; \

657 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
( \

658 
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
)); \

659 }

	)

661 
	$X
(
Eº‹
)

662 
	$X
(
R™geEº‹
)

663 
	$X
(
Re„ªn˚Eº‹
)

664 
	$X
(
Sy¡axEº‹
)

665 
	$X
(
Ty≥Eº‹
)

667 #unde‡
X


669 
NAN_INLINE
 
	`ThrowEº‹
(
v8
::
Loˇl
<v8::
VÆue
> 
îr‹
) {

670 
v8
::
Isﬁ©e
::
	`GëCuºít
()->
	`ThrowEx˚±i⁄
(
îr‹
);

671 
	}
}

673 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewBuf„r
(

674 *
d©a


675 , 
size_t
 
Àngth


676 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


677 , 
node
::
Buf„r
::
FªeCÆlback
 
ˇŒback


679 , 
node
::
smÆloc
::
FªeCÆlback
 
ˇŒback


681 , *
höt


685 
as£π
(
Àngth
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

686 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


687  
	gnode
::
Buf„r
::
New
(

688 
v8
::
Isﬁ©e
::
GëCuºít
(), 
d©a
, 
Àngth
, 
ˇŒback
, 
höt
);

690  
	gMaybeLoˇl
<
	gv8
::
Obje˘
>(
node
::
Buf„r
::
New
(

691 
v8
::
Isﬁ©e
::
GëCuºít
(), 
d©a
, 
Àngth
, 
ˇŒback
, 
höt
));

695 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$C›yBuf„r
(

696 c⁄° *
d©a


697 , 
uöt32_t
 
size


701 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

702 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


703  
node
::
Buf„r
::
	`C›y
(

704 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
);

706  
MaybeLoˇl
<
v8
::
Obje˘
>(
node
::
Buf„r
::
	`New
(

707 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
));

709 
	}
}

711 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(
uöt32_t
 
size
) {

714 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

715 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


716  
node
::
Buf„r
::
	`New
(

717 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
size
);

719  
MaybeLoˇl
<
v8
::
Obje˘
>(
node
::
Buf„r
::
	`New
(

720 
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
size
));

722 
	}
}

724 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

725 * 
d©a


726 , 
uöt32_t
 
size


730 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

731 #i‡
NODE_MODULE_VERSION
 > 
IOJS_2_0_MODULE_VERSION


732  
node
::
Buf„r
::
	`New
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
);

734  
MaybeLoˇl
<
v8
::
Obje˘
>(

735 
node
::
Buf„r
::
	`U£
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
d©a
, 
size
));

737 
	}
}

739 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

740 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

741 
NAN_INLINE
 
MaybeLoˇl
<
v8
::
Såög
>

742 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

743  
v8
::
Såög
::
NewFromO√Byã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
,

744 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

747 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

748 
v8
::
Loˇl
<v8::
Såög
> 
s


749 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


751 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
, 
‹igö
);

752  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
sour˚
);

755 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

756 
v8
::
Loˇl
<v8::
Såög
> 
s


758 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
);

759  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
sour˚
);

762 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

763 
v8
::
Loˇl
<
UnboundS¸ùt
> 
s¸ùt


765  
s¸ùt
->
BödToCuºítC⁄ãxt
()->
Run
(
GëCuºítC⁄ãxt
());

768 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

769 
v8
::
Loˇl
<
BoundS¸ùt
> 
s¸ùt


771  
s¸ùt
->
Run
(
GëCuºítC⁄ãxt
());

774 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
>

775 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

776  
MaybeLoˇl
<
v8
::
Såög
>(

777 
v8
::
Såög
::
NewFromO√Byã
(

778 
v8
::
Isﬁ©e
::
GëCuºít
()

779 , 
vÆue


780 , 
v8
::
Såög
::
kN‹mÆSåög
, 
Àngth
));

783 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

784 
v8
::
Loˇl
<v8::
Såög
> 
s


785 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


787 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
, 
‹igö
);

788  
	gMaybeLoˇl
<
	gBoundS¸ùt
>(

789 
	gv8
::
S¸ùtCompûî
::
Compûe
(
v8
::
Isﬁ©e
::
GëCuºít
(), &
sour˚
));

792 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

793 
v8
::
Loˇl
<v8::
Såög
> 
s


795 
v8
::
S¸ùtCompûî
::
Sour˚
 
sour˚
(
s
);

796  
	gMaybeLoˇl
<
	gBoundS¸ùt
>(

797 
	gv8
::
S¸ùtCompûî
::
Compûe
(
v8
::
Isﬁ©e
::
GëCuºít
(), &
sour˚
));

800 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

801 
v8
::
Loˇl
<
UnboundS¸ùt
> 
s¸ùt


803  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
BödToCuºítC⁄ãxt
()->
Run
());

806 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(

807 
v8
::
Loˇl
<
BoundS¸ùt
> 
s¸ùt


809  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
Run
());

813 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

814 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


815 , 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
func


816 , 
¨gc


817 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

818 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


819  
New
(
node
::
MakeCÆlback
(

820 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
func
, 
¨gc
, 
¨gv
));

822  
	gnode
::
MakeCÆlback
(

823 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
func
, 
¨gc
, 
¨gv
);

827 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

828 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


829 , 
v8
::
Loˇl
<v8::
Såög
> 
symbﬁ


830 , 
¨gc


831 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

832 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


833  
New
(
node
::
MakeCÆlback
(

834 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
));

836  
	gnode
::
MakeCÆlback
(

837 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
);

841 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

842 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


843 , c⁄° * 
mëhod


844 , 
¨gc


845 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

846 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


847  
New
(
node
::
MakeCÆlback
(

848 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
));

850  
	gnode
::
MakeCÆlback
(

851 
v8
::
Isﬁ©e
::
GëCuºít
(), 
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
);

855 
NAN_INLINE
 
	$F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
& 
åy_ˇtch
) {

856 
node
::
	`F©ÆEx˚±i⁄
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
åy_ˇtch
.
åy_ˇtch_
);

857 
	}
}

859 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$EºnoEx˚±i⁄
(

860 
îr‹no


861 , c⁄° * 
sysˇŒ
 = 
NULL


862 , c⁄° * 
mesßge
 = 
NULL


863 , c⁄° * 
∑th
 = 
NULL
) {

864  
node
::
	`EºnoEx˚±i⁄
(
v8
::
Isﬁ©e
::
	`GëCuºít
(), 
îr‹no
, 
sysˇŒ
,

865 
mesßge
, 
∑th
);

866 
	}
}

868 
NAN_DEPRECATED
 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$N™EºnoEx˚±i⁄
(

869 
îr‹no


870 , c⁄° * 
sysˇŒ
 = 
NULL


871 , c⁄° * 
mesßge
 = 
NULL


872 , c⁄° * 
∑th
 = 
NULL
) {

873  
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

874 
	}
}

876 
	gãm∂©e
<
ty≥«me
 
	gT
>

877 
NAN_INLINE
 
	$SëIsﬁ©eD©a
(

878 
v8
::
Isﬁ©e
 *
isﬁ©e


879 , 
T
 *
d©a


881 
isﬁ©e
->
	`SëD©a
(0, 
d©a
);

882 
	}
}

884 
	gãm∂©e
<
ty≥«me
 
	gT
>

885 
NAN_INLINE
 
T
 *
	$GëIsﬁ©eD©a
(

886 
v8
::
Isﬁ©e
 *
isﬁ©e


888  
°©ic_ˇ°
<
T
*>(
isﬁ©e
->
	`GëD©a
(0));

889 
	}
}

891 ˛as†
	cUtf8Såög
 {

892 
	gpublic
:

893 
NAN_INLINE
 
ex∂icô
 
Utf8Såög
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

894 
Àngth_
(0), 
°r_
(
°r_°_
) {

895 i‡(!
	g‰om
.
IsEm±y
()) {

896 
	gv8
::
Loˇl
<
v8
::
Såög
> 
°rög
 = 
‰om
->
ToSåög
();

897 i‡(!
	g°rög
.
IsEm±y
()) {

898 
size_t
 
	gÀn
 = 3 * 
°rög
->
Lígth
() + 1;

899 
as£π
(
Àn
 <
INT_MAX
);

900 i‡(
	gÀn
 >  (
	g°r_°_
)) {

901 
	g°r_
 = 
°©ic_ˇ°
<*>(
mÆloc
(
Àn
));

902 
as£π
(
°r_
 != 0);

904 c⁄° 
	gÊags
 =

905 
v8
::
Såög
::
NO_NULL_TERMINATION
 | 
imp
::
kRïœ˚InvÆidUtf8
;

906 
	gÀngth_
 = 
°rög
->
WrôeUtf8
(
°r_
, 
°©ic_ˇ°
<>(
Àn
), 0, 
Êags
);

907 
	g°r_
[
Àngth_
] = '\0';

912 
NAN_INLINE
 
Àngth
() const {

913  
	gÀngth_
;

916 
NAN_INLINE
 * 
	g›î©‹
*(Ë{  
	g°r_
; }

917 
NAN_INLINE
 c⁄° * 
	g›î©‹
*(Ëc⁄° {  
	g°r_
; }

919 
	gNAN_INLINE
 ~
Utf8Såög
() {

920 i‡(
	g°r_
 !
°r_°_
) {

921 
‰ì
(
°r_
);

925 
	g¥iv©e
:

926 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Utf8Såög
)

928 
Àngth_
;

929 *
	g°r_
;

930 
	g°r_°_
[1024];

934 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$Undeföed
() {

935 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

936  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`Undeföed
()));

937 
	}
}

939 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Primôive
> 
	$NuŒ
() {

940 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

941  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`NuŒ
()));

942 
	}
}

944 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$True
() {

945 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

946  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`True
()));

947 
	}
}

949 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Boﬁón
> 
	$FÆ£
() {

950 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

951  
sc›e
.
	`Esˇ≥
(
	`New
(
v8
::
	`FÆ£
()));

952 
	}
}

954 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
Såög
> 
	$Em±ySåög
() {

955  
v8
::
Såög
::
	`Em±y
();

956 
	}
}

958 
NAN_INLINE
 
	$Adju°Exã∫ÆMem‹y
(
bc
) {

959  
°©ic_ˇ°
<>(
v8
::
V8
::
	`Adju°Amou¡OfExã∫ÆAŒoˇãdMem‹y
(
bc
));

960 
	}
}

962 
NAN_INLINE
 
SëTem∂©e
(

963 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


964 , c⁄° *
«me


965 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue
) {

966 
ãm∂
->
Së
(
«me
, 
vÆue
);

969 
NAN_INLINE
 
SëTem∂©e
(

970 
v8
::
Loˇl
<v8::
Tem∂©e
> 
ãm∂


971 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


972 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


973 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs
) {

974 
ãm∂
->
Së
(
«me
, 
vÆue
, 
©åibuãs
);

977 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
	$GëCuºítC⁄ãxt
() {

978  
v8
::
C⁄ãxt
::
	`GëCuºít
();

979 
	}
}

981 
NAN_INLINE
 * 
GëI¡î«lFõldPoöãr
(

982 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


983 , 
ödex
) {

984  
	gobje˘
->
GëPoöãrFromI¡î«lFõld
(
ödex
);

987 
NAN_INLINE
 
SëI¡î«lFõldPoöãr
(

988 
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘


989 , 
ödex


990 , * 
vÆue
) {

991 
	gobje˘
->
SëPoöãrInI¡î«lFõld
(
ödex
, 
vÆue
);

994 
	#NAN_GC_CALLBACK
(
«me
) \

995 
	$«me
(
v8
::
GCTy≥
 
ty≥
, v8::
GCCÆlbackFœgs
 
Êags
)

	)

997 
NAN_INLINE
 
	$AddGCEpûogueCÆlback
(

998 
v8
::
GCEpûogueCÆlback
 
ˇŒback


999 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

1000 
v8
::
V8
::
	`AddGCEpûogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

1001 
	}
}

1002 
NAN_INLINE
 
	$RemoveGCEpûogueCÆlback
(

1003 
v8
::
GCEpûogueCÆlback
 
ˇŒback
) {

1004 
v8
::
V8
::
	`RemoveGCEpûogueCÆlback
(
ˇŒback
);

1005 
	}
}

1006 
NAN_INLINE
 
	$AddGCPrﬁogueCÆlback
(

1007 
v8
::
GCPrﬁogueCÆlback
 
ˇŒback


1008 , 
v8
::
GCTy≥
 
gc_ty≥_fûãr
 = v8::
kGCTy≥AŒ
) {

1009 
v8
::
V8
::
	`AddGCPrﬁogueCÆlback
(
ˇŒback
, 
gc_ty≥_fûãr
);

1010 
	}
}

1011 
NAN_INLINE
 
	$RemoveGCPrﬁogueCÆlback
(

1012 
v8
::
GCPrﬁogueCÆlback
 
ˇŒback
) {

1013 
v8
::
V8
::
	`RemoveGCPrﬁogueCÆlback
(
ˇŒback
);

1014 
	}
}

1015 
NAN_INLINE
 
	$GëHópSèti°ics
(

1016 
v8
::
HópSèti°ics
 *
hóp_°©i°ics
) {

1017 
v8
::
V8
::
	`GëHópSèti°ics
(
hóp_°©i°ics
);

1018 
	}
}

1020 
	#X
(
NAME
) \

1021 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	$NAME
(c⁄° *
msg
) { \

1022 
Esˇ∑bÀH™dÀSc›e
 
sc›e
; \

1023  
sc›e
.
	`Esˇ≥
(
v8
::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

1024 
	}
} \

1026 
NAN_INLINE
 \

1027 
v8
::
Loˇl
<v8::
VÆue
> 
	`NAME
(v8::Loˇl<v8::
Såög
> 
msg
) { \

1028  
v8
::
Ex˚±i⁄
::
	`NAME
(
msg
); \

1031 
NAN_INLINE
 
Throw
 ## 
	$NAME
(c⁄° *
msg
) { \

1032 
H™dÀSc›e
 
sc›e
; \

1033 
v8
::
	`ThrowEx˚±i⁄
(v8::
Ex˚±i⁄
::
	`NAME
(
	`New
(
msg
).
	`ToLoˇlChecked
())); \

1034 
	}
} \

1036 
NAN_INLINE
 \

1037 
Throw
 ## 
	`NAME
(
v8
::
Loˇl
<v8::
Såög
> 
îrmsg
) { \

1038 
v8
::
	`ThrowEx˚±i⁄
(v8::
Ex˚±i⁄
::
	`NAME
(
îrmsg
)); \

1039 }

	)

1041 
	$X
(
Eº‹
)

1042 
	$X
(
R™geEº‹
)

1043 
	$X
(
Re„ªn˚Eº‹
)

1044 
	$X
(
Sy¡axEº‹
)

1045 
	$X
(
Ty≥Eº‹
)

1047 #unde‡
X


1049 
NAN_INLINE
 
	`ThrowEº‹
(
v8
::
Loˇl
<v8::
VÆue
> 
îr‹
) {

1050 
v8
::
	`ThrowEx˚±i⁄
(
îr‹
);

1051 
	}
}

1053 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

1054 *
d©a


1055 , 
size_t
 
Àngth


1056 , 
node
::
Buf„r
::
‰ì_ˇŒback
 
ˇŒback


1057 , *
höt


1059 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1062 
	`as£π
(
Àngth
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1063  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(

1064 
	`New
(
node
::
Buf„r
::New(
d©a
, 
Àngth
, 
ˇŒback
, 
höt
)->
h™dÀ_
)));

1065 
	}
}

1067 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$C›yBuf„r
(

1068 c⁄° *
d©a


1069 , 
uöt32_t
 
size


1071 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1074 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1075 #i‡
NODE_MODULE_VERSION
 >
NODE_0_10_MODULE_VERSION


1076  
MaybeLoˇl
<
v8
::
Obje˘
>(

1077 
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
Buf„r
::New(
d©a
, 
size
)->
h™dÀ_
)));

1079  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(

1080 
	`New
(
node
::
Buf„r
::New(
c⁄°_ˇ°
<*>(
d©a
), 
size
)->
h™dÀ_
)));

1082 
	}
}

1084 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(
uöt32_t
 
size
) {

1087 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1088 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1089  
MaybeLoˇl
<
v8
::
Obje˘
>(

1090 
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
Buf„r
::New(
size
)->
h™dÀ_
)));

1091 
	}
}

1093 
NAN_INLINE
 
	$FªeD©a
(*
d©a
, *
höt
) {

1094 (Ë
höt
;

1095 
dñëe
[] 
d©a
;

1096 
	}
}

1098 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
	$NewBuf„r
(

1099 * 
d©a


1100 , 
uöt32_t
 
size


1102 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1105 
	`as£π
(
size
 <
imp
::
kMaxLígth
 && "tooÜarge buffer");

1106  
MaybeLoˇl
<
v8
::
Obje˘
>(
sc›e
.
	`Esˇ≥
(
	`New
(

1107 
node
::
Buf„r
::
	`New
(
d©a
, 
size
, 
FªeD©a
, 
NULL
)->
h™dÀ_
)));

1108 
	}
}

1110 
«me•a˚
 
	gimp
 {

1111 
NAN_INLINE
 

1112 
widíSåög
(
°d
::
ve˘‹
<
uöt16_t
> *
ws
, c⁄° 
uöt8_t
 *
s
, 
l
) {

1113 
size_t
 
	gÀn
 = 
°©ic_ˇ°
<size_t>(
l
);

1114 i‡(
	gl
 < 0) {

1115 
	gÀn
 = 
°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
s
));

1117 
as£π
(
Àn
 <
INT_MAX
 && "stringÅooÜong");

1118 
	gws
->
ªsize
(
Àn
);

1119 
	g°d
::
c›y
(
s
, s + 
Àn
, 
ws
->
begö
());

1123 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
>

1124 
NewO√ByãSåög
(c⁄° 
uöt8_t
 * 
vÆue
, 
Àngth
 = -1) {

1125 
°d
::
ve˘‹
<
uöt16_t
> 
wideSåög
;

1126 
	gimp
::
widíSåög
(&
wideSåög
, 
vÆue
, 
Àngth
);

1127  
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
New
(

1128 &
wideSåög
.
‰⁄t
(), 
°©ic_ˇ°
<>(wideSåög.
size
())));

1131 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

1132 
v8
::
Loˇl
<v8::
Såög
> 
s


1133 , c⁄° 
v8
::
S¸ùtOrigö
& 
‹igö


1135  
MaybeLoˇl
<
BoundS¸ùt
>(

1136 
v8
::
S¸ùt
::
Compûe
(
s
, 
c⁄°_ˇ°
<v8::
S¸ùtOrigö
 *>(&
‹igö
)));

1139 
NAN_INLINE
 
	gMaybeLoˇl
<
	gBoundS¸ùt
> 
CompûeS¸ùt
(

1140 
v8
::
Loˇl
<v8::
Såög
> 
s


1142  
MaybeLoˇl
<
BoundS¸ùt
>(
v8
::
S¸ùt
::
Compûe
(
s
));

1145 
NAN_INLINE


1146 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
RunS¸ùt
(
v8
::
Loˇl
<v8::
S¸ùt
> 
s¸ùt
) {

1147  
MaybeLoˇl
<
v8
::
VÆue
>(
s¸ùt
->
Run
());

1150 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1151 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1152 , 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
func


1153 , 
¨gc


1154 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1155  
New
(
node
::
MakeCÆlback
(
èrgë
, 
func
, 
¨gc
, 
¨gv
));

1158 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1159 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1160 , 
v8
::
Loˇl
<v8::
Såög
> 
symbﬁ


1161 , 
¨gc


1162 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1163  
New
(
node
::
MakeCÆlback
(
èrgë
, 
symbﬁ
, 
¨gc
, 
¨gv
));

1166 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
MakeCÆlback
(

1167 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1168 , c⁄° * 
mëhod


1169 , 
¨gc


1170 , 
v8
::
Loˇl
<v8::
VÆue
>* 
¨gv
) {

1171  
New
(
node
::
MakeCÆlback
(
èrgë
, 
mëhod
, 
¨gc
, 
¨gv
));

1174 
NAN_INLINE
 
	$F©ÆEx˚±i⁄
(c⁄° 
TryC©ch
& 
åy_ˇtch
) {

1175 
node
::
	`F©ÆEx˚±i⁄
(
c⁄°_ˇ°
<
v8
::
TryC©ch
 &>(
åy_ˇtch
.
åy_ˇtch_
));

1176 
	}
}

1178 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$EºnoEx˚±i⁄
(

1179 
îr‹no


1180 , c⁄° * 
sysˇŒ
 = 
NULL


1181 , c⁄° * 
mesßge
 = 
NULL


1182 , c⁄° * 
∑th
 = 
NULL
) {

1183  
node
::
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

1184 
	}
}

1186 
NAN_DEPRECATED
 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$N™EºnoEx˚±i⁄
(

1187 
îr‹no


1188 , c⁄° * 
sysˇŒ
 = 
NULL


1189 , c⁄° * 
mesßge
 = 
NULL


1190 , c⁄° * 
∑th
 = 
NULL
) {

1191  
	`EºnoEx˚±i⁄
(
îr‹no
, 
sysˇŒ
, 
mesßge
, 
∑th
);

1192 
	}
}

1195 
	gãm∂©e
<
ty≥«me
 
	gT
>

1196 
NAN_INLINE
 
	$SëIsﬁ©eD©a
(

1197 
v8
::
Isﬁ©e
 *
isﬁ©e


1198 , 
T
 *
d©a


1200 
isﬁ©e
->
	`SëD©a
(
d©a
);

1201 
	}
}

1203 
	gãm∂©e
<
ty≥«me
 
	gT
>

1204 
NAN_INLINE
 
T
 *
	$GëIsﬁ©eD©a
(

1205 
v8
::
Isﬁ©e
 *
isﬁ©e


1207  
°©ic_ˇ°
<
T
*>(
isﬁ©e
->
	`GëD©a
());

1208 
	}
}

1210 ˛as†
	cUtf8Såög
 {

1211 
	gpublic
:

1212 
NAN_INLINE
 
ex∂icô
 
Utf8Såög
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

1213 
Àngth_
(0), 
°r_
(
°r_°_
) {

1214 i‡(!
	g‰om
.
IsEm±y
()) {

1215 
	gv8
::
Loˇl
<
v8
::
Såög
> 
°rög
 = 
‰om
->
ToSåög
();

1216 i‡(!
	g°rög
.
IsEm±y
()) {

1217 
size_t
 
	gÀn
 = 3 * 
°rög
->
Lígth
() + 1;

1218 
as£π
(
Àn
 <
INT_MAX
);

1219 i‡(
	gÀn
 >  (
	g°r_°_
)) {

1220 
	g°r_
 = 
°©ic_ˇ°
<*>(
mÆloc
(
Àn
));

1221 
as£π
(
°r_
 != 0);

1223 c⁄° 
	gÊags
 =

1224 
v8
::
Såög
::
NO_NULL_TERMINATION
 | 
imp
::
kRïœ˚InvÆidUtf8
;

1225 
	gÀngth_
 = 
°rög
->
WrôeUtf8
(
°r_
, 
°©ic_ˇ°
<>(
Àn
), 0, 
Êags
);

1226 
	g°r_
[
Àngth_
] = '\0';

1231 
NAN_INLINE
 
Àngth
() const {

1232  
	gÀngth_
;

1235 
NAN_INLINE
 * 
	g›î©‹
*(Ë{  
	g°r_
; }

1236 
NAN_INLINE
 c⁄° * 
	g›î©‹
*(Ëc⁄° {  
	g°r_
; }

1238 
	gNAN_INLINE
 ~
Utf8Såög
() {

1239 i‡(
	g°r_
 !
°r_°_
) {

1240 
‰ì
(
°r_
);

1244 
	g¥iv©e
:

1245 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Utf8Såög
)

1247 
Àngth_
;

1248 *
	g°r_
;

1249 
	g°r_°_
[1024];

1254 (*
	tFªeCÆlback
)(*
	td©a
, *
	thöt
);

1256 c⁄° 
	tFun˘i⁄CÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_METHOD_ARGS_TYPE
;

1257 
	tNAN_METHOD_RETURN_TYPE
;

1259 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_GETTER_ARGS_TYPE
;

1260 
	tNAN_GETTER_RETURN_TYPE
;

1262 c⁄° 
	tPr›îtyCÆlbackInfo
<>& 
	tNAN_SETTER_ARGS_TYPE
;

1263 
	tNAN_SETTER_RETURN_TYPE
;

1265 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&

1266 
	tNAN_PROPERTY_GETTER_ARGS_TYPE
;

1267 
	tNAN_PROPERTY_GETTER_RETURN_TYPE
;

1269 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&

1270 
	tNAN_PROPERTY_SETTER_ARGS_TYPE
;

1271 
	tNAN_PROPERTY_SETTER_RETURN_TYPE
;

1273 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&

1274 
	tNAN_PROPERTY_ENUMERATOR_ARGS_TYPE
;

1275 
	tNAN_PROPERTY_ENUMERATOR_RETURN_TYPE
;

1277 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&

1278 
	tNAN_PROPERTY_DELETER_ARGS_TYPE
;

1279 
	tNAN_PROPERTY_DELETER_RETURN_TYPE
;

1281 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&

1282 
	tNAN_PROPERTY_QUERY_ARGS_TYPE
;

1283 
	tNAN_PROPERTY_QUERY_RETURN_TYPE
;

1285 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_INDEX_GETTER_ARGS_TYPE
;

1286 
	tNAN_INDEX_GETTER_RETURN_TYPE
;

1288 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>& 
	tNAN_INDEX_SETTER_ARGS_TYPE
;

1289 
	tNAN_INDEX_SETTER_RETURN_TYPE
;

1291 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&

1292 
	tNAN_INDEX_ENUMERATOR_ARGS_TYPE
;

1293 
	tNAN_INDEX_ENUMERATOR_RETURN_TYPE
;

1295 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&

1296 
	tNAN_INDEX_DELETER_ARGS_TYPE
;

1297 
	tNAN_INDEX_DELETER_RETURN_TYPE
;

1299 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&

1300 
	tNAN_INDEX_QUERY_ARGS_TYPE
;

1301 
	tNAN_INDEX_QUERY_RETURN_TYPE
;

1303 
	#NAN_METHOD
(
«me
) \

1304 
N™
::
NAN_METHOD_RETURN_TYPE
 
	$«me
(
N™
::
NAN_METHOD_ARGS_TYPE
 
öfo
)

	)

1305 
	#NAN_GETTER
(
«me
) \

1306 
N™
::
NAN_GETTER_RETURN_TYPE
 
	`«me
( \

1307 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1308 , 
N™
::
NAN_GETTER_ARGS_TYPE
 
öfo
)

	)

1309 
	#NAN_SETTER
(
«me
) \

1310 
N™
::
NAN_SETTER_RETURN_TYPE
 
	`«me
( \

1311 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1312 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1313 , 
N™
::
NAN_SETTER_ARGS_TYPE
 
öfo
)

	)

1314 
	#NAN_PROPERTY_GETTER
(
«me
) \

1315 
N™
::
NAN_PROPERTY_GETTER_RETURN_TYPE
 
	`«me
( \

1316 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1317 , 
N™
::
NAN_PROPERTY_GETTER_ARGS_TYPE
 
öfo
)

	)

1318 
	#NAN_PROPERTY_SETTER
(
«me
) \

1319 
N™
::
NAN_PROPERTY_SETTER_RETURN_TYPE
 
	`«me
( \

1320 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1321 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1322 , 
N™
::
NAN_PROPERTY_SETTER_ARGS_TYPE
 
öfo
)

	)

1323 
	#NAN_PROPERTY_ENUMERATOR
(
«me
) \

1324 
N™
::
NAN_PROPERTY_ENUMERATOR_RETURN_TYPE
 
	`«me
( \

1325 
N™
::
NAN_PROPERTY_ENUMERATOR_ARGS_TYPE
 
öfo
)

	)

1326 
	#NAN_PROPERTY_DELETER
(
«me
) \

1327 
N™
::
NAN_PROPERTY_DELETER_RETURN_TYPE
 
	`«me
( \

1328 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1329 , 
N™
::
NAN_PROPERTY_DELETER_ARGS_TYPE
 
öfo
)

	)

1330 
	#NAN_PROPERTY_QUERY
(
«me
) \

1331 
N™
::
NAN_PROPERTY_QUERY_RETURN_TYPE
 
	`«me
( \

1332 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
 \

1333 , 
N™
::
NAN_PROPERTY_QUERY_ARGS_TYPE
 
öfo
)

	)

1334 
	#NAN_INDEX_GETTER
(
«me
) \

1335 
N™
::
NAN_INDEX_GETTER_RETURN_TYPE
 
	`«me
( \

1336 
uöt32_t
 
ödex
 \

1337 , 
N™
::
NAN_INDEX_GETTER_ARGS_TYPE
 
öfo
)

	)

1338 
	#NAN_INDEX_SETTER
(
«me
) \

1339 
N™
::
NAN_INDEX_SETTER_RETURN_TYPE
 
	`«me
( \

1340 
uöt32_t
 
ödex
 \

1341 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
 \

1342 , 
N™
::
NAN_INDEX_SETTER_ARGS_TYPE
 
öfo
)

	)

1343 
	#NAN_INDEX_ENUMERATOR
(
«me
) \

1344 
N™
::
NAN_INDEX_ENUMERATOR_RETURN_TYPE
 \

1345 
	$«me
(
N™
::
NAN_INDEX_ENUMERATOR_ARGS_TYPE
 
öfo
)

	)

1346 
	#NAN_INDEX_DELETER
(
«me
) \

1347 
N™
::
NAN_INDEX_DELETER_RETURN_TYPE
 
	`«me
( \

1348 
uöt32_t
 
ödex
 \

1349 , 
N™
::
NAN_INDEX_DELETER_ARGS_TYPE
 
öfo
)

	)

1350 
	#NAN_INDEX_QUERY
(
«me
) \

1351 
N™
::
NAN_INDEX_QUERY_RETURN_TYPE
 
	`«me
( \

1352 
uöt32_t
 
ödex
 \

1353 , 
N™
::
NAN_INDEX_QUERY_ARGS_TYPE
 
öfo
)

	)

1355 ˛as†
	cCÆlback
 {

1356 
public
:

1357 
	`CÆlback
() {

1358 
H™dÀSc›e
 
sc›e
;

1359 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1360 
h™dÀ
.
	`Re£t
(
obj
);

1363 
ex∂icô
 
	`CÆlback
(c⁄° 
v8
::
Loˇl
<v8::
Fun˘i⁄
> &
‚
) {

1364 
H™dÀSc›e
 
sc›e
;

1365 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1366 
h™dÀ
.
	`Re£t
(
obj
);

1367 
	`SëFun˘i⁄
(
‚
);

1370 ~
	`CÆlback
() {

1371 i‡(
h™dÀ
.
	`IsEm±y
()) ;

1372 
h™dÀ
.
	`Re£t
();

1375 
boﬁ
 
›î©‹
==(c⁄° 
CÆlback
 &
Ÿhî
) const {

1376 
H™dÀSc›e
 
sc›e
;

1377 
v8
::
Loˇl
<v8::
VÆue
> 
a
 = 
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
);

1378 
v8
::
Loˇl
<v8::
VÆue
> 
b
 = 
	`New
(
Ÿhî
.
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
);

1379  
a
->
	`Såi˘EquÆs
(
b
);

1382 
boﬁ
 
›î©‹
!=(c⁄° 
CÆlback
 &
Ÿhî
) const {

1383  !
this
->
›î©‹
==(
Ÿhî
);

1386 
NAN_INLINE


1387 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
›î©‹
*(Ëc⁄° {  
this
->
	`GëFun˘i⁄
(); }

1389 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	`›î©‹
()(

1390 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1391 , 
¨gc
 = 0

1392 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = 0) const {

1393  
this
->
	`CÆl
(
èrgë
, 
¨gc
, 
¨gv
);

1396 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
> 
	`›î©‹
()(

1397 
¨gc
 = 0

1398 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = 0) const {

1399  
this
->
	`CÆl
(
¨gc
, 
¨gv
);

1402 
NAN_INLINE
 
	`SëFun˘i⁄
(c⁄° 
v8
::
Loˇl
<v8::
Fun˘i⁄
> &
‚
) {

1403 
H™dÀSc›e
 
sc›e
;

1404 
	`Së
(
	`New
(
h™dÀ
), 
kCÆlbackIndex
, 
‚
);

1407 
NAN_INLINE
 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
	`GëFun˘i⁄
() const {

1408 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1409  
sc›e
.
	`Esˇ≥
(
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
)

1410 .
As
<
v8
::
Fun˘i⁄
>());

1413 
NAN_INLINE
 
boﬁ
 
	`IsEm±y
() const {

1414 
H™dÀSc›e
 
sc›e
;

1415  
	`New
(
h™dÀ
)->
	`Gë
(
kCÆlbackIndex
)->
	`IsUndeföed
();

1418 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
>

1419 
	`CÆl
(
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1420 , 
¨gc


1421 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1422 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1423 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1424  
	`CÆl_
(
isﬁ©e
, 
èrgë
, 
¨gc
, 
¨gv
);

1426  
	`CÆl_
(
èrgë
, 
¨gc
, 
¨gv
);

1430 
NAN_INLINE
 
v8
::
Loˇl
<v8::
VÆue
>

1431 
	`CÆl
(
¨gc
, 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1432 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1433 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1434  
	`CÆl_
(
isﬁ©e
, isﬁ©e->
	`GëCuºítC⁄ãxt
()->
	`GlobÆ
(), 
¨gc
, 
¨gv
);

1436  
	`CÆl_
(
v8
::
C⁄ãxt
::
	`GëCuºít
()->
	`GlobÆ
(), 
¨gc
, 
¨gv
);

1440 
¥iv©e
:

1441 
	`NAN_DISALLOW_ASSIGN_COPY_MOVE
(
CÆlback
)

1442 
Pîsi°ít
<
v8
::
Obje˘
> 
h™dÀ
;

1443 c⁄° 
uöt32_t
 
kCÆlbackIndex
 = 0;

1445 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1446 
v8
::
Loˇl
<v8::
VÆue
> 
	`CÆl_
(v8::
Isﬁ©e
 *
isﬁ©e


1447 , 
v8
::
Loˇl
<v8::
Obje˘
> 
èrgë


1448 , 
¨gc


1449 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1450 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1452 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
ˇŒback
 = 
	`New
(
h™dÀ
)->

1453 
	`Gë
(
kCÆlbackIndex
).
As
<
v8
::
Fun˘i⁄
>();

1454 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


1455  
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
	`MakeCÆlback
(

1456 
isﬁ©e


1457 , 
èrgë


1458 , 
ˇŒback


1459 , 
¨gc


1460 , 
¨gv


1463  
sc›e
.
	`Esˇ≥
(
node
::
	`MakeCÆlback
(

1464 
isﬁ©e


1465 , 
èrgë


1466 , 
ˇŒback


1467 , 
¨gc


1468 , 
¨gv


1473 
v8
::
Loˇl
<v8::
VÆue
> 
	`CÆl_
(v8::Loˇl<v8::
Obje˘
> 
èrgë


1474 , 
¨gc


1475 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) const {

1476 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1478 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
ˇŒback
 = 
	`New
(
h™dÀ
)->

1479 
	`Gë
(
kCÆlbackIndex
).
As
<
v8
::
Fun˘i⁄
>();

1480  
sc›e
.
	`Esˇ≥
(
	`New
(
node
::
	`MakeCÆlback
(

1481 
èrgë


1482 , 
ˇŒback


1483 , 
¨gc


1484 , 
¨gv


1488 
	}
};

1490  cœs†
	cAsyncW‹kî
 {

1491 
	gpublic
:

1492 
ex∂icô
 
AsyncW‹kî
(
CÆlback
 *
ˇŒback_
)

1493 : 
ˇŒback
(
ˇŒback_
), 
îrmsg_
(
NULL
) {

1494 
	gªque°
.
	gd©a
 = 
this
;

1496 
H™dÀSc›e
 
	gsc›e
;

1497 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
New
<v8::Object>();

1498 
	g≥rsi°ítH™dÀ
.
Re£t
(
obj
);

1501 
	gvútuÆ
 ~
AsyncW‹kî
() {

1502 
H™dÀSc›e
 
	gsc›e
;

1504 i‡(!
	g≥rsi°ítH™dÀ
.
IsEm±y
())

1505 
	g≥rsi°ítH™dÀ
.
Re£t
();

1506 
dñëe
 
	gˇŒback
;

1507 
	gdñëe
[] 
	gîrmsg_
;

1510 
vútuÆ
 
W‹kCom∂ëe
() {

1511 
H™dÀSc›e
 
	gsc›e
;

1513 i‡(
	gîrmsg_
 =
NULL
)

1514 
H™dÀOKCÆlback
();

1516 
H™dÀEº‹CÆlback
();

1517 
dñëe
 
	gˇŒback
;

1518 
	gˇŒback
 = 
NULL
;

1521 
NAN_INLINE
 
SaveToPîsi°ít
(

1522 c⁄° *
key
, c⁄° 
v8
::
Loˇl
<v8::
VÆue
> &
vÆue
) {

1523 
H™dÀSc›e
 
sc›e
;

1524 
New
(
≥rsi°ítH™dÀ
)->
Së
(New(
key
).
ToLoˇlChecked
(), 
vÆue
);

1527 
NAN_INLINE
 
SaveToPîsi°ít
(

1528 c⁄° 
v8
::
Loˇl
<v8::
Såög
> &
key
, c⁄° v8::Loˇl<v8::
VÆue
> &
vÆue
) {

1529 
H™dÀSc›e
 
sc›e
;

1530 
New
(
≥rsi°ítH™dÀ
)->
Së
(
key
, 
vÆue
);

1533 
NAN_INLINE
 
SaveToPîsi°ít
(

1534 
uöt32_t
 
ödex
, c⁄° 
v8
::
Loˇl
<v8::
VÆue
> &
vÆue
) {

1535 
H™dÀSc›e
 
sc›e
;

1536 
New
(
≥rsi°ítH™dÀ
)->
Së
(
ödex
, 
vÆue
);

1539 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
GëFromPîsi°ít
(c⁄° *
key
) const {

1540 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1541  
	gsc›e
.
Esˇ≥
(

1542 
New
(
≥rsi°ítH™dÀ
)->
Gë
(New(
key
).
ToLoˇlChecked
()));

1545 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
>

1546 
GëFromPîsi°ít
(c⁄° 
v8
::
Loˇl
<v8::
Såög
> &
key
) const {

1547 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1548  
	gsc›e
.
Esˇ≥
(
New
(
≥rsi°ítH™dÀ
)->
Gë
(
key
));

1551 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
GëFromPîsi°ít
(
uöt32_t
 
ödex
) const {

1552 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1553  
	gsc›e
.
Esˇ≥
(
New
(
≥rsi°ítH™dÀ
)->
Gë
(
ödex
));

1556 
vútuÆ
 
Execuã
() = 0;

1558 
uv_w‹k_t
 
	gªque°
;

1560 
vútuÆ
 
De°roy
() {

1561 
dñëe
 
	gthis
;

1564 
	g¥Ÿe˘ed
:

1565 
Pîsi°ít
<
v8
::
Obje˘
> 
≥rsi°ítH™dÀ
;

1566 
CÆlback
 *
	gˇŒback
;

1568 
vútuÆ
 
H™dÀOKCÆlback
() {

1569 
	gˇŒback
->
CÆl
(0, 
NULL
);

1572 
vútuÆ
 
H™dÀEº‹CÆlback
() {

1573 
H™dÀSc›e
 
	gsc›e
;

1575 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
¨gv
[] = {

1576 
v8
::
Ex˚±i⁄
::
Eº‹
(
New
<v8::
Såög
>(
Eº‹Mesßge
()).
ToLoˇlChecked
())

1578 
	gˇŒback
->
CÆl
(1, 
¨gv
);

1581 
SëEº‹Mesßge
(c⁄° *
msg
) {

1582 
	gdñëe
[] 
	gîrmsg_
;

1584 
size_t
 
	gsize
 = 
°æí
(
msg
) + 1;

1585 
	gîrmsg_
 = 
√w
 [
size
];

1586 
mem˝y
(
îrmsg_
, 
msg
, 
size
);

1589 c⁄° * 
Eº‹Mesßge
() const {

1590  
	gîrmsg_
;

1593 
	g¥iv©e
:

1594 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
AsyncW‹kî
)

1595 *
îrmsg_
;

1598  cœs†
	cAsyncProgªssW‹kî
 : 
public
 
AsyncW‹kî
 {

1599 
public
:

1600 
ex∂icô
 
AsyncProgªssW‹kî
(
CÆlback
 *
ˇŒback_
)

1601 : 
AsyncW‹kî
(
ˇŒback_
), 
asyncd©a_
(
NULL
), 
asyncsize_
(0) {

1602 
	gasync
 = 
√w
 
uv_async_t
;

1603 
uv_async_öô
(

1604 
uv_deÁu…_lo›
()

1605 , 
async


1606 , 
AsyncProgªss_


1608 
	gasync
->
	gd©a
 = 
this
;

1610 
uv_muãx_öô
(&
async_lock
);

1613 
	gvútuÆ
 ~
AsyncProgªssW‹kî
() {

1614 
uv_muãx_de°roy
(&
async_lock
);

1616 
	gdñëe
[] 
	gasyncd©a_
;

1619 
W‹kProgªss
() {

1620 
uv_muãx_lock
(&
async_lock
);

1621 *
	gd©a
 = 
asyncd©a_
;

1622 
size_t
 
	gsize
 = 
asyncsize_
;

1623 
	gasyncd©a_
 = 
NULL
;

1624 
uv_muãx_u∆ock
(&
async_lock
);

1627 i‡(
	gˇŒback
) {

1628 
H™dÀProgªssCÆlback
(
d©a
, 
size
);

1630 
	gdñëe
[] 
	gd©a
;

1633 ˛as†
	cExecuti⁄Progªss
 {

1634 
‰õnd
 
˛ass
 
	gAsyncProgªssW‹kî
;

1635 
	gpublic
:

1636 
Sig«l
() const {

1637 
uv_async_£nd
(
th©_
->
async
);

1640 
Síd
(c⁄° * 
d©a
, 
size_t
 
size
) const {

1641 
	gth©_
->
SídProgªss_
(
d©a
, 
size
);

1644 
	g¥iv©e
:

1645 
ex∂icô
 
Executi⁄Progªss
(
AsyncProgªssW‹kî
* 
th©
Ë: 
th©_
(that) {}

1646 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Executi⁄Progªss
)

1647 
AsyncProgªssW‹kî
* c⁄° 
th©_
;

1650 
vútuÆ
 
Execuã
(c⁄° 
Executi⁄Progªss
& 
¥ogªss
) = 0;

1651 
vútuÆ
 
H™dÀProgªssCÆlback
(c⁄° *
d©a
, 
size_t
 
size
) = 0;

1653 
vútuÆ
 
De°roy
() {

1654 
uv_˛o£
(
ªöãΩªt_ˇ°
<
uv_h™dÀ_t
*>(
async
), 
AsyncClo£_
);

1657 
	g¥iv©e
:

1658 
Execuã
() {

1659 
Executi⁄Progªss
 
¥ogªss
(
this
);

1660 
Execuã
(
¥ogªss
);

1663 
SídProgªss_
(c⁄° *
d©a
, 
size_t
 
size
) {

1664 *
	g√w_d©a
 = 
√w
 [
size
];

1665 
mem˝y
(
√w_d©a
, 
d©a
, 
size
);

1667 
uv_muãx_lock
(&
async_lock
);

1668 *
	gﬁd_d©a
 = 
asyncd©a_
;

1669 
	gasyncd©a_
 = 
√w_d©a
;

1670 
	gasyncsize_
 = 
size
;

1671 
uv_muãx_u∆ock
(&
async_lock
);

1673 
	gdñëe
[] 
	gﬁd_d©a
;

1674 
uv_async_£nd
(
async
);

1677 
NAN_INLINE
 
NAUV_WORK_CB
(
AsyncProgªss_
) {

1678 
AsyncProgªssW‹kî
 *
	gw‹kî
 =

1679 
°©ic_ˇ°
<
AsyncProgªssW‹kî
*>(
async
->
d©a
);

1680 
	gw‹kî
->
W‹kProgªss
();

1683 
NAN_INLINE
 
AsyncClo£_
(
uv_h™dÀ_t
* 
h™dÀ
) {

1684 
AsyncProgªssW‹kî
 *
	gw‹kî
 =

1685 
°©ic_ˇ°
<
AsyncProgªssW‹kî
*>(
h™dÀ
->
d©a
);

1686 
dñëe
 
	gªöãΩªt_ˇ°
<
	guv_async_t
*>(
	gh™dÀ
);

1687 
dñëe
 
	gw‹kî
;

1690 
uv_async_t
 *
	gasync
;

1691 
uv_muãx_t
 
	gasync_lock
;

1692 *
	gasyncd©a_
;

1693 
size_t
 
	gasyncsize_
;

1696 
NAN_INLINE
 
	$AsyncExecuã
 (
uv_w‹k_t
* 
ªq
) {

1697 
AsyncW‹kî
 *
w‹kî
 = 
°©ic_ˇ°
<AsyncW‹kî*>(
ªq
->
d©a
);

1698 
w‹kî
->
	`Execuã
();

1699 
	}
}

1701 
NAN_INLINE
 
	$AsyncExecuãCom∂ëe
 (
uv_w‹k_t
* 
ªq
) {

1702 
AsyncW‹kî
* 
w‹kî
 = 
°©ic_ˇ°
<AsyncW‹kî*>(
ªq
->
d©a
);

1703 
w‹kî
->
	`W‹kCom∂ëe
();

1704 
w‹kî
->
	`De°roy
();

1705 
	}
}

1707 
NAN_INLINE
 
	$AsyncQueueW‹kî
 (
AsyncW‹kî
* 
w‹kî
) {

1708 
	`uv_queue_w‹k
(

1709 
	`uv_deÁu…_lo›
()

1710 , &
w‹kî
->
ªque°


1711 , 
AsyncExecuã


1712 , 
ªöãΩªt_ˇ°
<
uv_a·î_w‹k_cb
>(
AsyncExecuãCom∂ëe
)

1714 
	}
}

1716 
«me•a˚
 
	gimp
 {

1718 
ölöe


1719 
Exã∫ÆO√ByãSåögResour˚
 const*

1720 
GëExã∫ÆResour˚
(
v8
::
Loˇl
<v8::
Såög
> 
°r
) {

1721 #i‡
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION


1722  
°r
->
GëExã∫ÆAsciiSåögResour˚
();

1724  
	g°r
->
GëExã∫ÆO√ByãSåögResour˚
();

1728 
ölöe


1729 
boﬁ


1730 
IsExã∫Æ
(
v8
::
Loˇl
<v8::
Såög
> 
°r
) {

1731 #i‡
NODE_MODULE_VERSION
 < 
ATOM_0_21_MODULE_VERSION


1732  
°r
->
IsExã∫ÆAscii
();

1734  
	g°r
->
IsExã∫ÆO√Byã
();

1740 
	eEncodög
 {
	gASCII
, 
	gUTF8
, 
	gBASE64
, 
	gUCS2
, 
	gBINARY
, 
	gHEX
, 
	gBUFFER
};

1742 #i‡
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION


1743 
	~"«n_°rög_byãs.h
"

1746 
NAN_INLINE
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$Encode
(

1747 c⁄° *
buf
, 
size_t
 
Àn
, 
Encodög
 
ícodög
 = 
BINARY
) {

1748 #i‡(
NODE_MODULE_VERSION
 >
ATOM_0_21_MODULE_VERSION
)

1749 
v8
::
Isﬁ©e
* 
isﬁ©e
 = v8::Isﬁ©e::
	`GëCuºít
();

1750 
node
::
ícodög
 
node_íc
 = 
°©ic_ˇ°
<node::encoding>(encoding);

1752 i‡(
ícodög
 =
UCS2
) {

1753  
node
::
	`Encode
(

1754 
isﬁ©e


1755 , 
ªöãΩªt_ˇ°
<c⁄° 
uöt16_t
 *>(
buf
)

1756 , 
Àn
 / 2);

1758  
node
::
	`Encode
(

1759 
isﬁ©e


1760 , 
ªöãΩªt_ˇ°
<c⁄° *>(
buf
)

1761 , 
Àn


1762 , 
node_íc
);

1764 #ñi‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1765  
node
::
	`Encode
(

1766 
v8
::
Isﬁ©e
::
	`GëCuºít
()

1767 , 
buf
, 
Àn


1768 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1770 #i‡
NODE_MODULE_VERSION
 >
NODE_0_10_MODULE_VERSION


1771  
node
::
	`Encode
(
buf
, 
Àn
, 
°©ic_ˇ°
<node::
ícodög
>(encoding));

1773  
imp
::
	`Encode
(
ªöãΩªt_ˇ°
<c⁄° *>(
buf
), 
Àn
, 
ícodög
);

1776 
	}
}

1778 
NAN_INLINE
 
ssize_t
 
DecodeByãs
(

1779 
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
, 
Encodög
 
ícodög
 = 
BINARY
) {

1780 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1781  
node
::
DecodeByãs
(

1782 
v8
::
Isﬁ©e
::
GëCuºít
()

1783 , 
vÆ


1784 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1786 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION
)

1787 i‡(
	gícodög
 =
BUFFER
) {

1788  
node
::
DecodeByãs
(
vÆ
,Çode::
BINARY
);

1791  
	gnode
::
DecodeByãs
(
vÆ
, 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1795 
NAN_INLINE
 
ssize_t
 
DecodeWrôe
(

1796 *
buf


1797 , 
size_t
 
Àn


1798 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆ


1799 , 
Encodög
 
ícodög
 = 
BINARY
) {

1800 #i‡(
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION
)

1801  
node
::
DecodeWrôe
(

1802 
v8
::
Isﬁ©e
::
GëCuºít
()

1803 , 
buf


1804 , 
Àn


1805 , 
vÆ


1806 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1808 #i‡(
NODE_MODULE_VERSION
 < 
NODE_0_10_MODULE_VERSION
)

1809 i‡(
	gícodög
 =
BUFFER
) {

1810  
node
::
DecodeWrôe
(
buf
, 
Àn
, 
vÆ
,Çode::
BINARY
);

1813  
	gnode
::
DecodeWrôe
(

1814 
buf


1815 , 
Àn


1816 , 
vÆ


1817 , 
°©ic_ˇ°
<
node
::
ícodög
>(encoding));

1821 
NAN_INLINE
 
SëPrŸŸy≥Tem∂©e
(

1822 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1823 , c⁄° *
«me


1824 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1826 
SëTem∂©e
(
ãm∂
->
PrŸŸy≥Tem∂©e
(), 
«me
, 
vÆue
);

1829 
NAN_INLINE
 
SëPrŸŸy≥Tem∂©e
(

1830 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1831 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1832 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1833 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs


1835 
SëTem∂©e
(
ãm∂
->
PrŸŸy≥Tem∂©e
(), 
«me
, 
vÆue
, 
©åibuãs
);

1838 
NAN_INLINE
 
SëIn°™˚Tem∂©e
(

1839 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1840 , c⁄° *
«me


1841 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1843 
SëTem∂©e
(
ãm∂
->
In°™˚Tem∂©e
(), 
«me
, 
vÆue
);

1846 
NAN_INLINE
 
SëIn°™˚Tem∂©e
(

1847 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ãm∂


1848 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1849 , 
v8
::
Loˇl
<v8::
D©a
> 
vÆue


1850 , 
v8
::
Pr›îtyAâribuã
 
©åibuãs


1852 
SëTem∂©e
(
ãm∂
->
In°™˚Tem∂©e
(), 
«me
, 
vÆue
, 
©åibuãs
);

1855 
«me•a˚
 
	gimp
 {

1861 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1862 
NAN_INLINE


1864 
SëMëhodAux
(
T
 
ªcv
,

1865 
v8
::
Loˇl
<v8::
Såög
> 
«me
,

1866 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
,

1867 
v8
::
Tem∂©e
 *) {

1868 
ªcv
->
Së
(
«me
, 
çl
);

1871 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1872 
NAN_INLINE


1874 
SëMëhodAux
(
T
 
ªcv
,

1875 
v8
::
Loˇl
<v8::
Såög
> 
«me
,

1876 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
,

1878 
	gªcv
->
Së
(
«me
, 
GëFun˘i⁄
(
çl
).
ToLoˇlChecked
());

1883 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åem∂©ê<
	gty≥«me
> 
˛ass
 
	gH™dÀTy≥
>

1884 
NAN_INLINE
 
SëMëhod
(

1885 
H™dÀTy≥
<
T
> 
ªcv


1886 , c⁄° *
«me


1887 , 
Fun˘i⁄CÆlback
 
ˇŒback
) {

1888 
H™dÀSc›e
 
	gsc›e
;

1889 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
t
 = 
New
<v8::Fun˘i⁄Tem∂©e>(
ˇŒback
);

1890 
	gv8
::
Loˇl
<
v8
::
Såög
> 
‚_«me
 = 
New
(
«me
).
ToLoˇlChecked
();

1891 
	gt
->
SëCœssName
(
‚_«me
);

1894 
	gimp
::
SëMëhodAux
(
ªcv
, 
‚_«me
, 
t
, 
°©ic_ˇ°
<
T
*>(0));

1897 
NAN_INLINE
 
SëPrŸŸy≥Mëhod
(

1898 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
ªcv


1899 , c⁄° * 
«me
, 
Fun˘i⁄CÆlback
 
ˇŒback
) {

1900 
H™dÀSc›e
 
	gsc›e
;

1901 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
t
 = 
New
<v8::FunctionTemplate>(

1902 
ˇŒback


1903 , 
	gv8
::
Loˇl
<
v8
::
VÆue
>()

1904 , 
	gNew
<
	gv8
::
Sig«tuª
>(
ªcv
));

1905 
	gv8
::
Loˇl
<
v8
::
Såög
> 
‚_«me
 = 
New
(
«me
).
ToLoˇlChecked
();

1906 
	gªcv
->
PrŸŸy≥Tem∂©e
()->
Së
(
‚_«me
, 
t
);

1907 
	gt
->
SëCœssName
(
‚_«me
);

1912 
ölöe
 
SëAc˚ss‹
(

1913 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


1914 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1915 , 
GëãrCÆlback
 
gëãr


1916 , 
SëãrCÆlback
 
£âî
 = 0

1917 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

1918 , 
v8
::
Ac˚ssC⁄åﬁ
 
£âögs
 = v8::
DEFAULT


1919 , 
v8
::
Pr›îtyAâribuã
 
©åibuã
 = v8::
N⁄e


1920 , 
imp
::
Sig
 
sig«tuª
 = imp::
	$Sig
()) {

1921 
H™dÀSc›e
 
sc›e
;

1923 
imp
::
N©iveGëãr
 
gëãr_
 =

1924 
imp
::
GëãrCÆlbackWøµî
;

1925 
imp
::
N©iveSëãr
 
£âî_
 =

1926 
£âî
 ? 
imp
::
SëãrCÆlbackWøµî
 : 0;

1928 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

1929 
Ÿ∂
->
	`SëI¡î«lFõldCou¡
(
imp
::
kAc˚ss‹FõldCou¡
);

1930 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
	`NewIn°™˚
(
Ÿ∂
).
	`ToLoˇlChecked
();

1932 
obj
->
	`SëI¡î«lFõld
(

1933 
imp
::
kGëãrIndex


1934 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

1936 i‡(
£âî
 != 0) {

1937 
obj
->
	`SëI¡î«lFõld
(

1938 
imp
::
kSëãrIndex


1939 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

1942 i‡(!
d©a
.
	`IsEm±y
()) {

1943 
obj
->
	`SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

1946 
çl
->
	`SëAc˚ss‹
(

1947 
«me


1948 , 
gëãr_


1949 , 
£âî_


1950 , 
obj


1951 , 
£âögs


1952 , 
©åibuã


1953 , 
sig«tuª
);

1954 
	}
}

1956 
ölöe
 
boﬁ
 
SëAc˚ss‹
(

1957 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


1958 , 
v8
::
Loˇl
<v8::
Såög
> 
«me


1959 , 
GëãrCÆlback
 
gëãr


1960 , 
SëãrCÆlback
 
£âî
 = 0

1961 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

1962 , 
v8
::
Ac˚ssC⁄åﬁ
 
£âögs
 = v8::
DEFAULT


1963 , 
v8
::
Pr›îtyAâribuã
 
©åibuã
 = v8::
N⁄e
) {

1964 
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

1966 
	gimp
::
N©iveGëãr
 
gëãr_
 =

1967 
imp
::
GëãrCÆlbackWøµî
;

1968 
	gimp
::
N©iveSëãr
 
£âî_
 =

1969 
£âî
 ? 
imp
::
SëãrCÆlbackWøµî
 : 0;

1971 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

1972 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kAc˚ss‹FõldCou¡
);

1973 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
d©aobj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

1975 
	gd©aobj
->
SëI¡î«lFõld
(

1976 
imp
::
kGëãrIndex


1977 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

1979 i‡(!
	gd©a
.
IsEm±y
()) {

1980 
	gd©aobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

1983 i‡(
	g£âî
) {

1984 
	gd©aobj
->
SëI¡î«lFõld
(

1985 
imp
::
kSëãrIndex


1986 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

1989  
	gobj
->
SëAc˚ss‹
(

1990 
«me


1991 , 
gëãr_


1992 , 
£âî_


1993 , 
d©aobj


1994 , 
£âögs


1995 , 
©åibuã
);

1998 
ölöe
 
SëNamedPr›îtyH™dÀr
(

1999 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


2000 , 
Pr›îtyGëãrCÆlback
 
gëãr


2001 , 
Pr›îtySëãrCÆlback
 
£âî
 = 0

2002 , 
Pr›îtyQuîyCÆlback
 
quîy
 = 0

2003 , 
Pr›îtyDñëîCÆlback
 
dñëî
 = 0

2004 , 
Pr›îtyEnumî©‹CÆlback
 
íumî©‹
 = 0

2005 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2006 
H™dÀSc›e
 
sc›e
;

2008 
	gimp
::
N©ivePr›îtyGëãr
 
gëãr_
 =

2009 
imp
::
Pr›îtyGëãrCÆlbackWøµî
;

2010 
	gimp
::
N©ivePr›îtySëãr
 
£âî_
 =

2011 
£âî
 ? 
imp
::
Pr›îtySëãrCÆlbackWøµî
 : 0;

2012 
	gimp
::
N©ivePr›îtyQuîy
 
quîy_
 =

2013 
quîy
 ? 
imp
::
Pr›îtyQuîyCÆlbackWøµî
 : 0;

2014 
	gimp
::
N©ivePr›îtyDñëî
 *
dñëî_
 =

2015 
dñëî
 ? 
imp
::
Pr›îtyDñëîCÆlbackWøµî
 : 0;

2016 
	gimp
::
N©ivePr›îtyEnumî©‹
 
íumî©‹_
 =

2017 
íumî©‹
 ? 
imp
::
Pr›îtyEnumî©‹CÆlbackWøµî
 : 0;

2019 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2020 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kPr›îtyFõldCou¡
);

2021 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2022 
	gobj
->
SëI¡î«lFõld
(

2023 
imp
::
kPr›îtyGëãrIndex


2024 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

2026 i‡(
	g£âî
) {

2027 
	gobj
->
SëI¡î«lFõld
(

2028 
imp
::
kPr›îtySëãrIndex


2029 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

2032 i‡(
	gquîy
) {

2033 
	gobj
->
SëI¡î«lFõld
(

2034 
imp
::
kPr›îtyQuîyIndex


2035 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
quîy
)));

2038 i‡(
	gdñëî
) {

2039 
	gobj
->
SëI¡î«lFõld
(

2040 
imp
::
kPr›îtyDñëîIndex


2041 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
dñëî
)));

2044 i‡(
	gíumî©‹
) {

2045 
	gobj
->
SëI¡î«lFõld
(

2046 
imp
::
kPr›îtyEnumî©‹Index


2047 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
íumî©‹
)));

2050 i‡(!
	gd©a
.
IsEm±y
()) {

2051 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2054 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


2055 
	gçl
->
SëH™dÀr
(
v8
::
NamedPr›îtyH™dÀrC⁄figuøti⁄
(

2056 
gëãr_
, 
£âî_
, 
quîy_
, 
dñëî_
, 
íumî©‹_
, 
obj
));

2058 
	gçl
->
SëNamedPr›îtyH™dÀr
(

2059 
gëãr_


2060 , 
£âî_


2061 , 
quîy_


2062 , 
dñëî_


2063 , 
íumî©‹_


2064 , 
obj
);

2068 
ölöe
 
SëIndexedPr›îtyH™dÀr
(

2069 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl


2070 , 
IndexGëãrCÆlback
 
gëãr


2071 , 
IndexSëãrCÆlback
 
£âî
 = 0

2072 , 
IndexQuîyCÆlback
 
quîy
 = 0

2073 , 
IndexDñëîCÆlback
 
dñëî
 = 0

2074 , 
IndexEnumî©‹CÆlback
 
íumî©‹
 = 0

2075 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2076 
H™dÀSc›e
 
sc›e
;

2078 
	gimp
::
N©iveIndexGëãr
 
gëãr_
 =

2079 
imp
::
IndexGëãrCÆlbackWøµî
;

2080 
	gimp
::
N©iveIndexSëãr
 
£âî_
 =

2081 
£âî
 ? 
imp
::
IndexSëãrCÆlbackWøµî
 : 0;

2082 
	gimp
::
N©iveIndexQuîy
 
quîy_
 =

2083 
quîy
 ? 
imp
::
IndexQuîyCÆlbackWøµî
 : 0;

2084 
	gimp
::
N©iveIndexDñëî
 
dñëî_
 =

2085 
dñëî
 ? 
imp
::
IndexDñëîCÆlbackWøµî
 : 0;

2086 
	gimp
::
N©iveIndexEnumî©‹
 
íumî©‹_
 =

2087 
íumî©‹
 ? 
imp
::
IndexEnumî©‹CÆlbackWøµî
 : 0;

2089 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2090 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kIndexPr›îtyFõldCou¡
);

2091 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2092 
	gobj
->
SëI¡î«lFõld
(

2093 
imp
::
kIndexPr›îtyGëãrIndex


2094 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
gëãr
)));

2096 i‡(
	g£âî
) {

2097 
	gobj
->
SëI¡î«lFõld
(

2098 
imp
::
kIndexPr›îtySëãrIndex


2099 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
£âî
)));

2102 i‡(
	gquîy
) {

2103 
	gobj
->
SëI¡î«lFõld
(

2104 
imp
::
kIndexPr›îtyQuîyIndex


2105 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
quîy
)));

2108 i‡(
	gdñëî
) {

2109 
	gobj
->
SëI¡î«lFõld
(

2110 
imp
::
kIndexPr›îtyDñëîIndex


2111 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
dñëî
)));

2114 i‡(
	gíumî©‹
) {

2115 
	gobj
->
SëI¡î«lFõld
(

2116 
imp
::
kIndexPr›îtyEnumî©‹Index


2117 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
íumî©‹
)));

2120 i‡(!
	gd©a
.
IsEm±y
()) {

2121 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2124 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


2125 
	gçl
->
SëH™dÀr
(
v8
::
IndexedPr›îtyH™dÀrC⁄figuøti⁄
(

2126 
gëãr_
, 
£âî_
, 
quîy_
, 
dñëî_
, 
íumî©‹_
, 
obj
));

2128 
	gçl
->
SëIndexedPr›îtyH™dÀr
(

2129 
gëãr_


2130 , 
£âî_


2131 , 
quîy_


2132 , 
dñëî_


2133 , 
íumî©‹_


2134 , 
obj
);

2138 
ölöe
 
SëCÆlH™dÀr
(

2139 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl


2140 , 
Fun˘i⁄CÆlback
 
ˇŒback


2141 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2142 
H™dÀSc›e
 
sc›e
;

2144 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2145 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

2146 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2148 
	gobj
->
SëI¡î«lFõld
(

2149 
imp
::
kFun˘i⁄Index


2150 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

2152 i‡(!
	gd©a
.
IsEm±y
()) {

2153 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2156 
	gçl
->
SëCÆlH™dÀr
(
imp
::
Fun˘i⁄CÆlbackWøµî
, 
obj
);

2160 
ölöe
 
SëCÆlAsFun˘i⁄H™dÀr
(

2161 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
çl
,

2162 
Fun˘i⁄CÆlback
 
ˇŒback
,

2163 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

2164 
H™dÀSc›e
 
sc›e
;

2166 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
Ÿ∂
 = 
New
<v8::ObjectTemplate>();

2167 
	gŸ∂
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

2168 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
Ÿ∂
).
ToLoˇlChecked
();

2170 
	gobj
->
SëI¡î«lFõld
(

2171 
imp
::
kFun˘i⁄Index


2172 , 
New
<
v8
::
Exã∫Æ
>(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

2174 i‡(!
	gd©a
.
IsEm±y
()) {

2175 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
d©a
);

2178 
	gçl
->
SëCÆlAsFun˘i⁄H™dÀr
(
imp
::
Fun˘i⁄CÆlbackWøµî
, 
obj
);

2183 
	~"«n_wók.h
"

2187 
	~"«n_obje˘_wøp.h
"

2191 
ölöe


2193 
	$Exp‹t
(
ADDON_REGISTER_FUNCTION_ARGS_TYPE
 
èrgë
, c⁄° *
«me
,

2194 
Fun˘i⁄CÆlback
 
f
) {

2195 
	`Së
(
èrgë
, 
New
<
v8
::
Såög
>(
«me
).
	`ToLoˇlChecked
(),

2196 
	`GëFun˘i⁄
(
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
f
)).
	`ToLoˇlChecked
());

2197 
	}
}

2201 
	sT≠
 {

2202 
ex∂icô
 
T≠
(
v8
::
Loˇl
<v8::
VÆue
> 
t
Ë: 
t_
() {

2203 
t_
.
Re£t
(
To
<
v8
::
Obje˘
>(
t
).
ToLoˇlChecked
());

2206 ~
T≠
(Ë{ 
	gt_
.
Re£t
(); }

2208 
ölöe
 
∂™
(
i
) {

2209 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
¨g
 = 
New
(
i
);

2210 
MakeCÆlback
(
New
(
t_
), "∂™", 1, &
¨g
);

2213 
ölöe
 
ok
(
boﬁ
 
isOk
, c⁄° *
msg
 = 
NULL
) {

2214 
v8
::
Loˇl
<v8::
VÆue
> 
¨gs
[2];

2215 
	g¨gs
[0] = 
New
(
isOk
);

2216 i‡(
	gmsg
Ë
	g¨gs
[1] = 
New
(
msg
).
ToLoˇlChecked
();

2217 
MakeCÆlback
(
New
(
t_
), "ok", 
msg
 ? 2 : 1, 
¨gs
);

2220 
ölöe
 
∑ss
(c⁄° * 
msg
 = 
NULL
) {

2221 
v8
::
Loˇl
<v8::
VÆue
> 
hmsg
;

2222 i‡(
	gmsg
Ë
	ghmsg
 = 
New
(
msg
).
ToLoˇlChecked
();

2223 
MakeCÆlback
(
New
(
t_
), "∑ss", 
msg
 ? 1 : 0, &
hmsg
);

2226 
	g¥iv©e
:

2227 
Pîsi°ít
<
v8
::
Obje˘
> 
t_
;

2230 
	#NAN_STRINGIZE2
(
x
Ë#x

	)

2231 
	#NAN_STRINGIZE
(
x
Ë
	$NAN_STRINGIZE2
(
x
)

	)

2232 
	#NAN_TEST_EXPRESSION
(
ex¥essi⁄
) \

2233 –
ex¥essi⁄
 ), 
__FILE__
 ":" 
	`NAN_STRINGIZE
(
__LINE__
Ë": " #ex¥essi⁄

	)

2235 
	#NAN_EXPORT
(
èrgë
, 
fun˘i⁄
Ë
	`Exp‹t
—¨gë, #fun˘i⁄, fun˘i⁄)

	)

2237 #unde‡
TYPE_CHECK


2241 
«me•a˚
 
imp
 {

2243 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
;

2245 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
<
v8
::
Loˇl
<T> > {

2246 
MaybeLoˇl
<
T
> 
	`c⁄vît
(
v8
::
Loˇl
<T> 
v
) {

2247  
MaybeLoˇl
<
T
>(
v
);

2251 
ãm∂©e
 <
ty≥«me
 
T
> 
Maybefõr
<
MaybeLoˇl
<T> > {

2252 
MaybeLoˇl
<
T
> 
	`c⁄vît
(MaybeLoˇl<T> 
v
) {

2253  
v
;

2257 
	}
}

2259 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åem∂©ê<
	gty≥«me
> 
˛ass
 
	gMaybeMaybe
>

2260 
	gMaybeLoˇl
<
	gT
>

2261 
MakeMaybe
(
MaybeMaybe
<
T
> 
v
) {

2262  
	gimp
::
Maybefõr
<
MaybeMaybe
<
T
> >::
c⁄vît
(
v
);

2267 
	~"«n_ty≥d¨øy_c⁄ã¡s.h
"

	@node_modules/nan/nan_callbacks.h

9 #i‚de‡
NAN_CALLBACKS_H_


10 
	#NAN_CALLBACKS_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gFun˘i⁄CÆlbackInfo
;

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPr›îtyCÆlbackInfo
;

14 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gGlobÆ
;

16 (*
	tFun˘i⁄CÆlback
)(c⁄° 
	tFun˘i⁄CÆlbackInfo
<
	tv8
::
	tVÆue
>&);

17 (*
	tGëãrCÆlback
)

18 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° 
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
>&);

19 (*
	tSëãrCÆlback
)(

20 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

21 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

22 c⁄° 
	tPr›îtyCÆlbackInfo
<>&);

23 (*
	tPr›îtyGëãrCÆlback
)(

24 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

25 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

26 (*
	tPr›îtySëãrCÆlback
)(

27 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

28 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

29 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

30 (*
	tPr›îtyEnumî©‹CÆlback
)

31 (c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&);

32 (*
	tPr›îtyDñëîCÆlback
)(

33 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

34 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&);

35 (*
	tPr›îtyQuîyCÆlback
)(

36 
	tv8
::
	tLoˇl
<v8::
	tSåög
>,

37 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&);

38 (*
	tIndexGëãrCÆlback
)(

39 
	tuöt32_t
,

40 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

41 (*
	tIndexSëãrCÆlback
)(

42 
	tuöt32_t
,

43 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>,

44 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tVÆue
>&);

45 (*
	tIndexEnumî©‹CÆlback
)

46 (c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tAºay
>&);

47 (*
	tIndexDñëîCÆlback
)(

48 
	tuöt32_t
,

49 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tBoﬁón
>&);

50 (*
	tIndexQuîyCÆlback
)(

51 
	tuöt32_t
,

52 c⁄° 
	tPr›îtyCÆlbackInfo
<
	tv8
::
	tI¡egî
>&);

54 
«me•a˚
 
imp
 {

55 
v8
::
	tLoˇl
<
	tv8
::
	tAc˚ss‹Sig«tuª
> 
	tSig
;

57 c⁄° 
kD©aIndex
 = 0;

59 c⁄° 
kFun˘i⁄Index
 = 1;

60 c⁄° 
kFun˘i⁄FõldCou¡
 = 2;

62 c⁄° 
kGëãrIndex
 = 1;

63 c⁄° 
kSëãrIndex
 = 2;

64 c⁄° 
kAc˚ss‹FõldCou¡
 = 3;

66 c⁄° 
kPr›îtyGëãrIndex
 = 1;

67 c⁄° 
kPr›îtySëãrIndex
 = 2;

68 c⁄° 
kPr›îtyEnumî©‹Index
 = 3;

69 c⁄° 
kPr›îtyDñëîIndex
 = 4;

70 c⁄° 
kPr›îtyQuîyIndex
 = 5;

71 c⁄° 
kPr›îtyFõldCou¡
 = 6;

73 c⁄° 
kIndexPr›îtyGëãrIndex
 = 1;

74 c⁄° 
kIndexPr›îtySëãrIndex
 = 2;

75 c⁄° 
kIndexPr›îtyEnumî©‹Index
 = 3;

76 c⁄° 
kIndexPr›îtyDñëîIndex
 = 4;

77 c⁄° 
kIndexPr›îtyQuîyIndex
 = 5;

78 c⁄° 
kIndexPr›îtyFõldCou¡
 = 6;

80 
	}
}

82 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


83 
	~"«n_ˇŒbacks_12_öl.h
"

85 
	~"«n_ˇŒbacks_¥e_12_öl.h
"

	@node_modules/nan/nan_callbacks_12_inl.h

9 #i‚de‡
NAN_CALLBACKS_12_INL_H_


10 
	#NAN_CALLBACKS_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cRëu∫VÆue
 {

14 
	mv8
::
Rëu∫VÆue
<
T
> 
vÆue_
;

16 
	mpublic
:

17 
ãm∂©e
 <
˛ass
 
S
>

18 
ex∂icô
 
ölöe
 
Rëu∫VÆue
(c⁄° 
v8
::Rëu∫VÆue<
S
> &
vÆue
) :

19 
	$vÆue_
(
vÆue
) {}

20 
ãm∂©e
 <
˛ass
 
S
>

21 
ex∂icô
 
ölöe
 
	`Rëu∫VÆue
(c⁄° 
Rëu∫VÆue
<
S
>& 
th©
)

22 : 
	$vÆue_
(
th©
.
vÆue_
) {

23 
	`TYPE_CHECK
(
T
, 
S
);

24 
	}
}

27 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
v8
::
Loˇl
<
S
> &
h™dÀ
) {

28 
TYPE_CHECK
(
T
, 
S
);

29 
	gvÆue_
.
Së
(
h™dÀ
);

32 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
GlobÆ
<
S
> &
h™dÀ
) {

33 
TYPE_CHECK
(
T
, 
S
);

34 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

35 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && \

36 (
V8_MINOR_VERSION
 > 5 || (V8_MINOR_VERSION == 5 && \

37 
deföed
(
V8_BUILD_NUMBER
) && V8_BUILD_NUMBER >= 8))))

38 
vÆue_
.
Së
(
h™dÀ
);

40 
	gvÆue_
.
Së
(*
ªöãΩªt_ˇ°
<c⁄° 
v8
::
Pîsi°ít
<
S
>*>(&
h™dÀ
));

41 
	gc⁄°_ˇ°
<
	gGlobÆ
<
	gS
> &>(
	gh™dÀ
).
Re£t
();

46 
ölöe
 
	$Së
(
boﬁ
 
vÆue
) {

47 
	`TYPE_CHECK
(
T
, 
v8
::
Boﬁón
);

48 
vÆue_
.
	`Së
(
vÆue
);

49 
	}
}

51 
ölöe
 
	$Së
(
i
) {

52 
	`TYPE_CHECK
(
T
, 
v8
::
Numbî
);

53 
vÆue_
.
	`Së
(
i
);

54 
	}
}

56 
ölöe
 
	$Së
(
öt32_t
 
i
) {

57 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

58 
vÆue_
.
	`Së
(
i
);

59 
	}
}

61 
ölöe
 
	$Së
(
uöt32_t
 
i
) {

62 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

63 
vÆue_
.
	`Së
(
i
);

64 
	}
}

67 
ölöe
 
	$SëNuŒ
() {

68 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

69 
vÆue_
.
	`SëNuŒ
();

70 
	}
}

72 
ölöe
 
	$SëUndeföed
() {

73 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

74 
vÆue_
.
	`SëUndeföed
();

75 
	}
}

77 
ölöe
 
	$SëEm±ySåög
() {

78 
	`TYPE_CHECK
(
T
, 
v8
::
Såög
);

79 
vÆue_
.
	`SëEm±ySåög
();

80 
	}
}

83 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
() const {

84  
vÆue_
.
	`GëIsﬁ©e
();

85 
	}
}

88 
	gãm∂©e
<
ty≥«me
 
	gS
>

89 
ölöe
 
	$Së
(
S
 *
wh©evî
Ë{ 
	`TYPE_CHECK
(S*, 
v8
::
Primôive
); 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gT
>

93 ˛as†
	cFun˘i⁄CÆlbackInfo
 {

94 c⁄° 
	mv8
::
Fun˘i⁄CÆlbackInfo
<
T
> &
öfo_
;

95 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

97 
	mpublic
:

98 
ex∂icô
 
ölöe
 
Fun˘i⁄CÆlbackInfo
(

99 c⁄° 
v8
::
Fun˘i⁄CÆlbackInfo
<
T
> &
öfo


100 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

101 
öfo_
(
öfo
)

102 , 
	$d©a_
(
d©a
) {}

104 
ölöe
 
Rëu∫VÆue
<
T
> 
	$GëRëu∫VÆue
() const {

105  
Rëu∫VÆue
<
T
>(
öfo_
.
	`GëRëu∫VÆue
());

106 
	}
}

108 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
	$CÆÀe
(Ëc⁄° {  
öfo_
.
	`CÆÀe
(); 
	}
}

109 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

110 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

111 
ölöe
 
boﬁ
 
	$IsC⁄°ru˘CÆl
(Ëc⁄° {  
öfo_
.
	`IsC⁄°ru˘CÆl
(); 
	}
}

112 
ölöe
 
	$Lígth
(Ëc⁄° {  
öfo_
.
	`Lígth
(); 
	}
}

113 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
›î©‹
[](
i
Ëc⁄° {  
öfo_
[i]; }

114 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

115 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

118 
	g¥Ÿe˘ed
:

119 c⁄° 
kHﬁdîIndex
 = 0;

120 c⁄° 
	gkIsﬁ©eIndex
 = 1;

121 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

122 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

123 c⁄° 
	gkD©aIndex
 = 4;

124 c⁄° 
	gkCÆÀeIndex
 = 5;

125 c⁄° 
	gkC⁄ãxtSaveIndex
 = 6;

126 c⁄° 
	gkArgsLígth
 = 7;

128 
	g¥iv©e
:

129 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Fun˘i⁄CÆlbackInfo
)

132 
	gãm∂©e
<
ty≥«me
 
	gT
>

133 ˛as†
	cPr›îtyCÆlbackInfo
 {

134 c⁄° 
	mv8
::
Pr›îtyCÆlbackInfo
<
T
> &
öfo_
;

135 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

137 
	mpublic
:

138 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

139 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<
T
> &
öfo


140 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

141 
öfo_
(
öfo
)

142 , 
	$d©a_
(
d©a
) {}

144 
ölöe
 
v8
::
Isﬁ©e
* 
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

145 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

146 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

147 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

148 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
	$GëRëu∫VÆue
() const {

149  
Rëu∫VÆue
<
T
>(
öfo_
.
	`GëRëu∫VÆue
());

150 
	}
}

152 
	g¥Ÿe˘ed
:

153 c⁄° 
kHﬁdîIndex
 = 0;

154 c⁄° 
	gkIsﬁ©eIndex
 = 1;

155 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

156 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

157 c⁄° 
	gkD©aIndex
 = 4;

158 c⁄° 
	gkThisIndex
 = 5;

159 c⁄° 
	gkArgsLígth
 = 6;

161 
	g¥iv©e
:

162 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Pr›îtyCÆlbackInfo
)

165 
«me•a˚
 
	gimp
 {

167 
Fun˘i⁄CÆlbackWøµî
(c⁄° 
v8
::
Fun˘i⁄CÆlbackInfo
<v8::
VÆue
> &
öfo
) {

168 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

169 
Fun˘i⁄CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<FunctionCallback>(

170 
ªöãΩªt_ˇ°
<
öçå_t
>(

171 
obj
->
GëI¡î«lFõld
(
kFun˘i⁄Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

172 
	gFun˘i⁄CÆlbackInfo
<
	gv8
::
VÆue
>

173 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

174 
ˇŒback
(
cböfo
);

177 (*
	gN©iveFun˘i⁄
)(c⁄° 
	tv8
::
	tFun˘i⁄CÆlbackInfo
<v8::
	tVÆue
> &);

179 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


181 
GëãrCÆlbackWøµî
(

182 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


183 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

184 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

185 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

186 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

187 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

188 
ªöãΩªt_ˇ°
<
öçå_t
>(

189 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

190 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

193 (*
	gN©iveGëãr
)

194 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

197 
SëãrCÆlbackWøµî
(

198 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


199 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


200 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<> &
öfo
) {

201 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

202 
	gPr›îtyCÆlbackInfo
<>

203 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

204 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

205 
ªöãΩªt_ˇ°
<
öçå_t
>(

206 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

207 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
vÆue
, 
cböfo
);

210 (*
	gN©iveSëãr
)(

211 
	tv8
::
	tLoˇl
<v8::
	tName
>

212 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

213 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<> &);

216 
GëãrCÆlbackWøµî
(

217 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


218 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

219 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

220 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

221 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

222 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

223 
ªöãΩªt_ˇ°
<
öçå_t
>(

224 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

225 
ˇŒback
(
¥›îty
, 
cböfo
);

228 (*
	gN©iveGëãr
)

229 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

232 
SëãrCÆlbackWøµî
(

233 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


234 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


235 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<> &
öfo
) {

236 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

237 
	gPr›îtyCÆlbackInfo
<>

238 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

239 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

240 
ªöãΩªt_ˇ°
<
öçå_t
>(

241 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

242 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

245 (*
	gN©iveSëãr
)(

246 
	tv8
::
	tLoˇl
<v8::
	tSåög
>

247 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

248 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<> &);

251 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


253 
Pr›îtyGëãrCÆlbackWøµî
(

254 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


255 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

256 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

257 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

258 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

259 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

260 
ªöãΩªt_ˇ°
<
öçå_t
>(

261 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

262 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

263 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

266 (*
	gN©ivePr›îtyGëãr
)

267 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

270 
Pr›îtySëãrCÆlbackWøµî
(

271 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


272 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


273 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

274 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

275 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

276 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

277 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

278 
ªöãΩªt_ˇ°
<
öçå_t
>(

279 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

280 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

281 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
vÆue
, 
cböfo
);

284 (*
	gN©ivePr›îtySëãr
)(

285 
	tv8
::
	tLoˇl
<v8::
	tName
>

286 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

287 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

290 
Pr›îtyEnumî©‹CÆlbackWøµî
(

291 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

292 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

293 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

294 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

295 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

296 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

297 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

298 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

299 
ˇŒback
(
cböfo
);

302 (*
	gN©ivePr›îtyEnumî©‹
)

303 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

306 
Pr›îtyDñëîCÆlbackWøµî
(

307 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


308 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

309 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

310 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

311 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

312 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

313 
ªöãΩªt_ˇ°
<
öçå_t
>(

314 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

315 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

316 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

319 (
	gN©ivePr›îtyDñëî
)

320 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

323 
Pr›îtyQuîyCÆlbackWøµî
(

324 
v8
::
Loˇl
<v8::
Name
> 
¥›îty


325 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

326 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

327 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

328 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

329 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

330 
ªöãΩªt_ˇ°
<
öçå_t
>(

331 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

332 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

333 
ˇŒback
(
¥›îty
.
As
<
v8
::
Såög
>(), 
cböfo
);

336 (*
	gN©ivePr›îtyQuîy
)

337 (
	tv8
::
	tLoˇl
<v8::
	tName
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

340 
Pr›îtyGëãrCÆlbackWøµî
(

341 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


342 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

343 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

344 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

345 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

346 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

347 
ªöãΩªt_ˇ°
<
öçå_t
>(

348 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

349 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

350 
ˇŒback
(
¥›îty
, 
cböfo
);

353 (*
	gN©ivePr›îtyGëãr
)

354 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

357 
Pr›îtySëãrCÆlbackWøµî
(

358 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


359 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


360 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

361 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

362 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

363 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

364 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

365 
ªöãΩªt_ˇ°
<
öçå_t
>(

366 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

367 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

368 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

371 (*
	gN©ivePr›îtySëãr
)(

372 
	tv8
::
	tLoˇl
<v8::
	tSåög
>

373 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

374 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

377 
Pr›îtyEnumî©‹CÆlbackWøµî
(

378 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

379 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

380 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

381 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

382 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

383 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

384 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

385 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

386 
ˇŒback
(
cböfo
);

389 (*
	gN©ivePr›îtyEnumî©‹
)

390 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

393 
Pr›îtyDñëîCÆlbackWøµî
(

394 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


395 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

396 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

397 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

398 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

399 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

400 
ªöãΩªt_ˇ°
<
öçå_t
>(

401 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

402 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

403 
ˇŒback
(
¥›îty
, 
cböfo
);

406 (
	gN©ivePr›îtyDñëî
)

407 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

410 
Pr›îtyQuîyCÆlbackWøµî
(

411 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


412 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

413 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

414 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

415 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

416 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

417 
ªöãΩªt_ˇ°
<
öçå_t
>(

418 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

419 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

420 
ˇŒback
(
¥›îty
, 
cböfo
);

423 (*
	gN©ivePr›îtyQuîy
)

424 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

428 
IndexGëãrCÆlbackWøµî
(

429 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

430 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

431 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

432 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

433 
IndexGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexGetterCallback>(

434 
ªöãΩªt_ˇ°
<
öçå_t
>(

435 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyGëãrIndex
)

436 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

437 
ˇŒback
(
ödex
, 
cböfo
);

440 (*
	gN©iveIndexGëãr
)

441 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

444 
IndexSëãrCÆlbackWøµî
(

445 
uöt32_t
 
ödex


446 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


447 , c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
VÆue
> &
öfo
) {

448 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

449 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

450 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

451 
IndexSëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexSetterCallback>(

452 
ªöãΩªt_ˇ°
<
öçå_t
>(

453 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtySëãrIndex
)

454 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

455 
ˇŒback
(
ödex
, 
vÆue
, 
cböfo
);

458 (*
	gN©iveIndexSëãr
)(

459 
	tuöt32_t


460 , 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>

461 , c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tVÆue
> &);

464 
IndexEnumî©‹CÆlbackWøµî
(

465 c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Aºay
> &
öfo
) {

466 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

467 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

468 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

469 
IndexEnumî©‹CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexEnumeratorCallback>(

470 
ªöãΩªt_ˇ°
<
öçå_t
>(

471 
obj
->
GëI¡î«lFõld
(

472 
kIndexPr›îtyEnumî©‹Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

473 
ˇŒback
(
cböfo
);

476 (*
	gN©iveIndexEnumî©‹
)

477 (c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tAºay
> &);

480 
IndexDñëîCÆlbackWøµî
(

481 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
Boﬁón
> &
öfo
) {

482 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

483 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

484 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

485 
IndexDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexDeleterCallback>(

486 
ªöãΩªt_ˇ°
<
öçå_t
>(

487 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyDñëîIndex
)

488 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

489 
ˇŒback
(
ödex
, 
cböfo
);

492 (*
	gN©iveIndexDñëî
)

493 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tBoﬁón
> &);

496 
IndexQuîyCÆlbackWøµî
(

497 
uöt32_t
 
ödex
, c⁄° 
v8
::
Pr›îtyCÆlbackInfo
<v8::
I¡egî
> &
öfo
) {

498 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

499 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

500 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

501 
IndexQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexQueryCallback>(

502 
ªöãΩªt_ˇ°
<
öçå_t
>(

503 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyQuîyIndex
)

504 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

505 
ˇŒback
(
ödex
, 
cböfo
);

508 (*
	gN©iveIndexQuîy
)

509 (
	tuöt32_t
, c⁄° 
	tv8
::
	tPr›îtyCÆlbackInfo
<v8::
	tI¡egî
> &);

	@node_modules/nan/nan_callbacks_pre_12_inl.h

9 #i‚de‡
NAN_CALLBACKS_PRE_12_INL_H_


10 
	#NAN_CALLBACKS_PRE_12_INL_H_


	)

12 
«me•a˚
 
	gimp
 {

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRëu∫VÆueImp
;

16 
	gãm∂©e
<
ty≥«me
 
	gT
>

17 ˛as†
	cRëu∫VÆue
 {

18 
	mv8
::
Isﬁ©e
 *
isﬁ©e_
;

19 
	mv8
::
Pîsi°ít
<
T
> *
vÆue_
;

20 
‰õnd
 
˛ass
 
	mimp
::
Rëu∫VÆueImp
<
T
>;

22 
	mpublic
:

23 
ãm∂©e
 <
˛ass
 
S
>

24 
ex∂icô
 
ölöe
 
Rëu∫VÆue
(
v8
::
Isﬁ©e
 *
isﬁ©e
, v8::
Pîsi°ít
<
S
> *
p
) :

25 
isﬁ©e_
(
isﬁ©e
), 
	$vÆue_
(
p
) {}

26 
ãm∂©e
 <
˛ass
 
S
>

27 
ex∂icô
 
ölöe
 
	`Rëu∫VÆue
(c⁄° 
Rëu∫VÆue
<
S
>& 
th©
)

28 : 
	`isﬁ©e_
(
th©
.
isﬁ©e_
), 
	$vÆue_
(
th©
.
vÆue_
) {

29 
	`TYPE_CHECK
(
T
, 
S
);

30 
	}
}

33 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
v8
::
Loˇl
<
S
> &
h™dÀ
) {

34 
TYPE_CHECK
(
T
, 
S
);

35 
	gvÆue_
->
Di•o£
();

36 *
	gvÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
h™dÀ
);

39 
	gãm∂©e
 <
ty≥«me
 
	gS
> 
ölöe
 
Së
(c⁄° 
GlobÆ
<
S
> &
h™dÀ
) {

40 
TYPE_CHECK
(
T
, 
S
);

41 
	gvÆue_
->
Di•o£
();

42 *
	gvÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
h™dÀ
.
≥rsi°ít
);

43 
	gc⁄°_ˇ°
<
	gGlobÆ
<
	gS
> &>(
	gh™dÀ
).
Re£t
();

47 
ölöe
 
	$Së
(
boﬁ
 
vÆue
) {

48 
	`TYPE_CHECK
(
T
, 
v8
::
Boﬁón
);

49 
vÆue_
->
	`Di•o£
();

50 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Boﬁón
::New(
vÆue
));

51 
	}
}

53 
ölöe
 
	$Së
(
i
) {

54 
	`TYPE_CHECK
(
T
, 
v8
::
Numbî
);

55 
vÆue_
->
	`Di•o£
();

56 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Numbî
::New(
i
));

57 
	}
}

59 
ölöe
 
	$Së
(
öt32_t
 
i
) {

60 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

61 
vÆue_
->
	`Di•o£
();

62 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
I¡32
::New(
i
));

63 
	}
}

65 
ölöe
 
	$Së
(
uöt32_t
 
i
) {

66 
	`TYPE_CHECK
(
T
, 
v8
::
I¡egî
);

67 
vÆue_
->
	`Di•o£
();

68 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Uöt32
::
	`NewFromUnsig√d
(
i
));

69 
	}
}

72 
ölöe
 
	$SëNuŒ
() {

73 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

74 
vÆue_
->
	`Di•o£
();

75 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
	`NuŒ
());

76 
	}
}

78 
ölöe
 
	$SëUndeföed
() {

79 
	`TYPE_CHECK
(
T
, 
v8
::
Primôive
);

80 
vÆue_
->
	`Di•o£
();

81 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
	`Undeföed
());

82 
	}
}

84 
ölöe
 
	$SëEm±ySåög
() {

85 
	`TYPE_CHECK
(
T
, 
v8
::
Såög
);

86 
vÆue_
->
	`Di•o£
();

87 *
vÆue_
 = 
v8
::
Pîsi°ít
<
T
>::
	`New
(v8::
Såög
::
	`Em±y
());

88 
	}
}

91 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
() const {

92  
isﬁ©e_
;

93 
	}
}

96 
	gãm∂©e
<
ty≥«me
 
	gS
>

97 
ölöe
 
	$Së
(
S
 *
wh©evî
Ë{ 
	`TYPE_CHECK
(S*, 
v8
::
Primôive
); 
	}
}

100 
	gãm∂©e
<
ty≥«me
 
	gT
>

101 ˛as†
	cFun˘i⁄CÆlbackInfo
 {

102 c⁄° 
	mv8
::
Argumíts
 &
¨gs_
;

103 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

104 
	mRëu∫VÆue
<
	mT
> 
	mªtu∫_vÆue_
;

105 
	mv8
::
Pîsi°ít
<
T
> 
ªtvÆ_
;

107 
	mpublic
:

108 
ex∂icô
 
ölöe
 
Fun˘i⁄CÆlbackInfo
(

109 c⁄° 
v8
::
Argumíts
 &
¨gs


110 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

111 
¨gs_
(
¨gs
)

112 , 
d©a_
(
d©a
)

113 , 
ªtu∫_vÆue_
(
¨gs
.
GëIsﬁ©e
(), &
ªtvÆ_
)

114 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<
T
>::
New
(v8::
	$Undeföed
())) {}

116 
ölöe
 ~
	$Fun˘i⁄CÆlbackInfo
() {

117 
ªtvÆ_
.
	`Di•o£
();

118 
ªtvÆ_
.
	`CÀ¨
();

119 
	}
}

121 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
	$GëRëu∫VÆue
() const {

122  
Rëu∫VÆue
<
T
>(
ªtu∫_vÆue_
);

123 
	}
}

125 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
	$CÆÀe
(Ëc⁄° {  
¨gs_
.
	`CÆÀe
(); 
	}
}

126 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

127 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
¨gs_
.
	`Hﬁdî
(); 
	}
}

128 
ölöe
 
boﬁ
 
	$IsC⁄°ru˘CÆl
(Ëc⁄° {  
¨gs_
.
	`IsC⁄°ru˘CÆl
(); 
	}
}

129 
ölöe
 
	$Lígth
(Ëc⁄° {  
¨gs_
.
	`Lígth
(); 
	}
}

130 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
›î©‹
[](
i
Ëc⁄° {  
¨gs_
[i]; }

131 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
¨gs_
.
	`This
(); 
	}
}

132 
ölöe
 
	gv8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
¨gs_
.
	`GëIsﬁ©e
(); 
	}
}

135 
	g¥Ÿe˘ed
:

136 c⁄° 
kHﬁdîIndex
 = 0;

137 c⁄° 
	gkIsﬁ©eIndex
 = 1;

138 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

139 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

140 c⁄° 
	gkD©aIndex
 = 4;

141 c⁄° 
	gkCÆÀeIndex
 = 5;

142 c⁄° 
	gkC⁄ãxtSaveIndex
 = 6;

143 c⁄° 
	gkArgsLígth
 = 7;

145 
	g¥iv©e
:

146 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Fun˘i⁄CÆlbackInfo
)

149 
	gãm∂©e
<
ty≥«me
 
	gT
>

150 ˛as†
	cPr›îtyCÆlbackInfoBa£
 {

151 c⁄° 
	mv8
::
Ac˚ss‹Info
 &
öfo_
;

152 c⁄° 
	mv8
::
Loˇl
<
v8
::
VÆue
> 
d©a_
;

154 
	mpublic
:

155 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfoBa£
(

156 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


157 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

158 
öfo_
(
öfo
)

159 , 
	$d©a_
(
d©a
) {}

161 
ölöe
 
v8
::
Isﬁ©e
* 
	$GëIsﬁ©e
(Ëc⁄° {  
öfo_
.
	`GëIsﬁ©e
(); 
	}
}

162 
ölöe
 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
	$D©a
(Ëc⁄° {  
d©a_
; 
	}
}

163 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$This
(Ëc⁄° {  
öfo_
.
	`This
(); 
	}
}

164 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$Hﬁdî
(Ëc⁄° {  
öfo_
.
	`Hﬁdî
(); 
	}
}

166 
	g¥Ÿe˘ed
:

167 c⁄° 
kHﬁdîIndex
 = 0;

168 c⁄° 
	gkIsﬁ©eIndex
 = 1;

169 c⁄° 
	gkRëu∫VÆueDeÁu…VÆueIndex
 = 2;

170 c⁄° 
	gkRëu∫VÆueIndex
 = 3;

171 c⁄° 
	gkD©aIndex
 = 4;

172 c⁄° 
	gkThisIndex
 = 5;

173 c⁄° 
	gkArgsLígth
 = 6;

175 
	g¥iv©e
:

176 
NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Pr›îtyCÆlbackInfoBa£
)

179 
	gãm∂©e
<
ty≥«me
 
	gT
>

180 
˛ass
 
	gPr›îtyCÆlbackInfo
 : 
public
 
Pr›îtyCÆlbackInfoBa£
<
T
> {

181 
Rëu∫VÆue
<
T
> 
ªtu∫_vÆue_
;

182 
	gv8
::
Pîsi°ít
<
T
> 
ªtvÆ_
;

184 
	gpublic
:

185 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

186 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


187 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

188 
Pr›îtyCÆlbackInfoBa£
<
T
>(
öfo
, 
	gd©a
)

189 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

190 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<
T
>::
New
(v8::
Undeföed
())) {}

192 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

193 
ªtvÆ_
.
Di•o£
();

194 
	gªtvÆ_
.
CÀ¨
();

197 
ölöe
 
	gRëu∫VÆue
<
	gT
> 
GëRëu∫VÆue
(Ëc⁄° {  
	gªtu∫_vÆue_
; }

200 
	gãm∂©e
<>

201 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
> :

202 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Aºay
> {

203 
Rëu∫VÆue
<
v8
::
Aºay
> 
ªtu∫_vÆue_
;

204 
	gv8
::
Pîsi°ít
<
v8
::
Aºay
> 
ªtvÆ_
;

206 
	gpublic
:

207 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

208 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


209 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

210 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Aºay
>(
öfo
, 
	gd©a
)

211 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

212 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
Aºay
>::
New
(v8::
Loˇl
<v8::Array>())) {}

214 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

215 
ªtvÆ_
.
Di•o£
();

216 
	gªtvÆ_
.
CÀ¨
();

219 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
Aºay
> 
GëRëu∫VÆue
() const {

220  
ªtu∫_vÆue_
;

224 
	gãm∂©e
<>

225 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
> :

226 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Boﬁón
> {

227 
Rëu∫VÆue
<
v8
::
Boﬁón
> 
ªtu∫_vÆue_
;

228 
	gv8
::
Pîsi°ít
<
v8
::
Boﬁón
> 
ªtvÆ_
;

230 
	gpublic
:

231 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

232 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


233 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

234 
Pr›îtyCÆlbackInfoBa£
<
v8
::
Boﬁón
>(
öfo
, 
	gd©a
)

235 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

236 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
Boﬁón
>::
New
(v8::
Loˇl
<v8::Boolean>())) {}

238 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

239 
ªtvÆ_
.
Di•o£
();

240 
	gªtvÆ_
.
CÀ¨
();

243 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
Boﬁón
> 
GëRëu∫VÆue
() const {

244  
ªtu∫_vÆue_
;

248 
	gãm∂©e
<>

249 
˛ass
 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
> :

250 
public
 
Pr›îtyCÆlbackInfoBa£
<
v8
::
I¡egî
> {

251 
Rëu∫VÆue
<
v8
::
I¡egî
> 
ªtu∫_vÆue_
;

252 
	gv8
::
Pîsi°ít
<
v8
::
I¡egî
> 
ªtvÆ_
;

254 
	gpublic
:

255 
ex∂icô
 
ölöe
 
Pr›îtyCÆlbackInfo
(

256 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo


257 , c⁄° 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) :

258 
Pr›îtyCÆlbackInfoBa£
<
v8
::
I¡egî
>(
öfo
, 
	gd©a
)

259 , 
ªtu∫_vÆue_
(
öfo
.
GëIsﬁ©e
(), &
ªtvÆ_
)

260 , 
ªtvÆ_
(
v8
::
Pîsi°ít
<v8::
I¡egî
>::
New
(v8::
Loˇl
<v8::Integer>())) {}

262 
ölöe
 ~
Pr›îtyCÆlbackInfo
() {

263 
ªtvÆ_
.
Di•o£
();

264 
	gªtvÆ_
.
CÀ¨
();

267 
ölöe
 
	gRëu∫VÆue
<
	gv8
::
I¡egî
> 
GëRëu∫VÆue
() const {

268  
ªtu∫_vÆue_
;

272 
«me•a˚
 
	gimp
 {

273 
	gãm∂©e
<
ty≥«me
 
	gT
>

274 
˛ass
 
	gRëu∫VÆueImp
 : 
public
 
Rëu∫VÆue
<
T
> {

275 
public
:

276 
ex∂icô
 
Rëu∫VÆueImp
(
Rëu∫VÆue
<
T
> 
th©
) :

277 
Rëu∫VÆue
<
T
>(
th©
) {}

278 
NAN_INLINE
 
v8
::
H™dÀ
<
T
> 
VÆue
() {

279  *
Rëu∫VÆue
<
T
>::
vÆue_
;

284 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Fun˘i⁄CÆlbackWøµî
(c⁄° v8::
Argumíts
 &
¨gs
) {

285 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
¨gs
.
D©a
().
As
<v8::Object>();

286 
Fun˘i⁄CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<FunctionCallback>(

287 
ªöãΩªt_ˇ°
<
öçå_t
>(

288 
obj
->
GëI¡î«lFõld
(
kFun˘i⁄Index
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

289 
	gFun˘i⁄CÆlbackInfo
<
	gv8
::
VÆue
>

290 
cböfo
(
¨gs
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

291 
ˇŒback
(
cböfo
);

292  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

295 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveFun˘i⁄
)(c⁄° v8::
	tArgumíts
 &);

298 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
GëãrCÆlbackWøµî
(

299 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

300 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

301 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

302 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

303 
GëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<GetterCallback>(

304 
ªöãΩªt_ˇ°
<
öçå_t
>(

305 
obj
->
GëI¡î«lFõld
(
kGëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

306 
ˇŒback
(
¥›îty
, 
cböfo
);

307  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

310 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveGëãr
)

311 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

314 
SëãrCÆlbackWøµî
(

315 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


316 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


317 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

318 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

319 
	gPr›îtyCÆlbackInfo
<>

320 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

321 
SëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<SetterCallback>(

322 
ªöãΩªt_ˇ°
<
öçå_t
>(

323 
obj
->
GëI¡î«lFõld
(
kSëãrIndex
).
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

324 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

327 (*
	gN©iveSëãr
)

328 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, v8::Loˇl<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

331 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Pr›îtyGëãrCÆlbackWøµî
(

332 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

333 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

334 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

335 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

336 
Pr›îtyGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyGetterCallback>(

337 
ªöãΩªt_ˇ°
<
öçå_t
>(

338 
obj
->
GëI¡î«lFõld
(
kPr›îtyGëãrIndex
)

339 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

340 
ˇŒback
(
¥›îty
, 
cböfo
);

341  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

344 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©ivePr›îtyGëãr
)

345 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

348 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
Pr›îtySëãrCÆlbackWøµî
(

349 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


350 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


351 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

352 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

353 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

354 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

355 
Pr›îtySëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertySetterCallback>(

356 
ªöãΩªt_ˇ°
<
öçå_t
>(

357 
obj
->
GëI¡î«lFõld
(
kPr›îtySëãrIndex
)

358 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

359 
ˇŒback
(
¥›îty
, 
vÆue
, 
cböfo
);

360  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

363 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©ivePr›îtySëãr
)

364 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, v8::Loˇl<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

367 
	gv8
::
H™dÀ
<
v8
::
Aºay
> 
Pr›îtyEnumî©‹CÆlbackWøµî
(

368 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

369 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

370 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

371 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

372 
Pr›îtyEnumî©‹CÆlback
 
	gˇŒback
 =

373 
ªöãΩªt_ˇ°
<
Pr›îtyEnumî©‹CÆlback
>‘eöãΩªt_ˇ°<
öçå_t
>(

374 
obj
->
GëI¡î«lFõld
(
kPr›îtyEnumî©‹Index
)

375 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

376 
ˇŒback
(
cböfo
);

377  
	gRëu∫VÆueImp
<
	gv8
::
Aºay
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

380 
	gv8
::
	tH™dÀ
<
	tv8
::
	tAºay
> (*
	tN©ivePr›îtyEnumî©‹
)

381 (c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

384 
	gv8
::
H™dÀ
<
v8
::
Boﬁón
> 
Pr›îtyDñëîCÆlbackWøµî
(

385 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty


386 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

387 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

388 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

389 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

390 
Pr›îtyDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyDeleterCallback>(

391 
ªöãΩªt_ˇ°
<
öçå_t
>(

392 
obj
->
GëI¡î«lFõld
(
kPr›îtyDñëîIndex
)

393 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

394 
ˇŒback
(
¥›îty
, 
cböfo
);

395  
	gRëu∫VÆueImp
<
	gv8
::
Boﬁón
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

398 
	gv8
::
	tH™dÀ
<
	tv8
::
	tBoﬁón
> (
	tN©ivePr›îtyDñëî
)

399 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

402 
	gv8
::
H™dÀ
<
v8
::
I¡egî
> 
Pr›îtyQuîyCÆlbackWøµî
(

403 
v8
::
Loˇl
<v8::
Såög
> 
¥›îty
, c⁄° v8::
Ac˚ss‹Info
 &
öfo
) {

404 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

405 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

406 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

407 
Pr›îtyQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<PropertyQueryCallback>(

408 
ªöãΩªt_ˇ°
<
öçå_t
>(

409 
obj
->
GëI¡î«lFõld
(
kPr›îtyQuîyIndex
)

410 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

411 
ˇŒback
(
¥›îty
, 
cböfo
);

412  
	gRëu∫VÆueImp
<
	gv8
::
I¡egî
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

415 
	gv8
::
	tH™dÀ
<
	tv8
::
	tI¡egî
> (*
	tN©ivePr›îtyQuîy
)

416 (
	tv8
::
	tLoˇl
<v8::
	tSåög
>, c⁄° v8::
	tAc˚ss‹Info
 &);

419 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
IndexGëãrCÆlbackWøµî
(

420 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

421 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

422 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

423 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

424 
IndexGëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexGetterCallback>(

425 
ªöãΩªt_ˇ°
<
öçå_t
>(

426 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyGëãrIndex
)

427 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

428 
ˇŒback
(
ödex
, 
cböfo
);

429  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

432 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveIndexGëãr
)

433 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

436 
	gv8
::
H™dÀ
<
v8
::
VÆue
> 
IndexSëãrCÆlbackWøµî
(

437 
uöt32_t
 
ödex


438 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


439 , c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

440 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

441 
	gPr›îtyCÆlbackInfo
<
	gv8
::
VÆue
>

442 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

443 
IndexSëãrCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexSetterCallback>(

444 
ªöãΩªt_ˇ°
<
öçå_t
>(

445 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtySëãrIndex
)

446 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

447 
ˇŒback
(
ödex
, 
vÆue
, 
cböfo
);

448  
	gRëu∫VÆueImp
<
	gv8
::
VÆue
>(
cböfo
.
GëRëu∫VÆue
()).Value();

451 
	gv8
::
	tH™dÀ
<
	tv8
::
	tVÆue
> (*
	tN©iveIndexSëãr
)

452 (
	tuöt32_t
, 
	tv8
::
	tLoˇl
<v8::
	tVÆue
>, c⁄° v8::
	tAc˚ss‹Info
 &);

455 
	gv8
::
H™dÀ
<
v8
::
Aºay
> 
IndexEnumî©‹CÆlbackWøµî
(

456 c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

457 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

458 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Aºay
>

459 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

460 
IndexEnumî©‹CÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexEnumeratorCallback>(

461 
ªöãΩªt_ˇ°
<
öçå_t
>(

462 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyEnumî©‹Index
)

463 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

464 
ˇŒback
(
cböfo
);

465  
	gRëu∫VÆueImp
<
	gv8
::
Aºay
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

468 
	gv8
::
	tH™dÀ
<
	tv8
::
	tAºay
> (*
	tN©iveIndexEnumî©‹
)

469 (c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

472 
	gv8
::
H™dÀ
<
v8
::
Boﬁón
> 
IndexDñëîCÆlbackWøµî
(

473 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

474 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

475 
	gPr›îtyCÆlbackInfo
<
	gv8
::
Boﬁón
>

476 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

477 
IndexDñëîCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexDeleterCallback>(

478 
ªöãΩªt_ˇ°
<
öçå_t
>(

479 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyDñëîIndex
)

480 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

481 
ˇŒback
(
ödex
, 
cböfo
);

482  
	gRëu∫VÆueImp
<
	gv8
::
Boﬁón
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

485 
	gv8
::
	tH™dÀ
<
	tv8
::
	tBoﬁón
> (*
	tN©iveIndexDñëî
)

486 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

489 
	gv8
::
H™dÀ
<
v8
::
I¡egî
> 
IndexQuîyCÆlbackWøµî
(

490 
uöt32_t
 
ödex
, c⁄° 
v8
::
Ac˚ss‹Info
 &
öfo
) {

491 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
 = 
öfo
.
D©a
().
As
<v8::Object>();

492 
	gPr›îtyCÆlbackInfo
<
	gv8
::
I¡egî
>

493 
cböfo
(
öfo
, 
obj
->
GëI¡î«lFõld
(
kD©aIndex
));

494 
IndexQuîyCÆlback
 
	gˇŒback
 = 
ªöãΩªt_ˇ°
<IndexQueryCallback>(

495 
ªöãΩªt_ˇ°
<
öçå_t
>(

496 
obj
->
GëI¡î«lFõld
(
kIndexPr›îtyQuîyIndex
)

497 .
As
<
v8
::
Exã∫Æ
>()->
VÆue
()));

498 
ˇŒback
(
ödex
, 
cböfo
);

499  
	gRëu∫VÆueImp
<
	gv8
::
I¡egî
>(
cböfo
.
GëRëu∫VÆue
()).
VÆue
();

502 
	gv8
::
	tH™dÀ
<
	tv8
::
	tI¡egî
> (*
	tN©iveIndexQuîy
)

503 (
	tuöt32_t
, c⁄° 
	tv8
::
	tAc˚ss‹Info
 &);

	@node_modules/nan/nan_converters.h

9 #i‚de‡
NAN_CONVERTERS_H_


10 
	#NAN_CONVERTERS_H_


	)

12 
«me•a˚
 
	gimp
 {

13 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sToFa˘‹yBa£
 {

14 
	gMaybeLoˇl
<
	tT
> 
	tªtu∫_t
;

16 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sVÆueFa˘‹yBa£
 { 
	gMaybe
<
	tT
> 
	tªtu∫_t
; };

18 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gToFa˘‹y
;

20 
	#X
(
TYPE
) \

21 
ãm∂©e
<> \

22 
ToFa˘‹y
<
v8
::
TYPE
> : 
ToFa˘‹yBa£
<v8::TYPE> { \

23 
ölöe
 
ªtu∫_t
 
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
); \

24 };

	)

26 
X
(
Boﬁón
)

27 
X
(
Numbî
)

28 
X
(
Såög
)

29 
X
(
Obje˘
)

30 
X
(
I¡egî
)

31 
X
(
Uöt32
)

32 
X
(
I¡32
)

34 #unde‡
X


36 
	#X
(
TYPE
) \

37 
ãm∂©e
<> \

38 
ToFa˘‹y
<
TYPE
> : 
VÆueFa˘‹yBa£
<TYPE> { \

39 
ölöe
 
ªtu∫_t
 
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
); \

40 };

	)

42 
X
(
boﬁ
)

43 
X
()

44 
X
(
öt64_t
)

45 
X
(
uöt32_t
)

46 
X
(
öt32_t
)

48 #unde‡
X


51 
	gãm∂©e
<
ty≥«me
 
	gT
>

52 
NAN_INLINE


53 
ty≥«me
 
	gimp
::
ToFa˘‹y
<
T
>::
ªtu∫_t
 
To
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

54  
imp
::
ToFa˘‹y
<
T
>::
c⁄vît
(
vÆ
);

57 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

58 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

59 
	~"«n_c⁄vîãrs_43_öl.h
"

61 
	~"«n_c⁄vîãrs_¥e_43_öl.h
"

	@node_modules/nan/nan_converters_43_inl.h

9 #i‚de‡
NAN_CONVERTERS_43_INL_H_


10 
	#NAN_CONVERTERS_43_INL_H_


	)

12 
	#X
(
TYPE
) \

13 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
ªtu∫_t
 \

14 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
	`c⁄vît
(v8::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

15  
vÆ
->
To
 ## 
	`TYPE
(
	`GëCuºítC⁄ãxt
()); \

16 }

	)

18 
	$X
(
Boﬁón
)

19 
	$X
(
Numbî
)

20 
	$X
(
Såög
)

21 
	$X
(
Obje˘
)

22 
	$X
(
I¡egî
)

23 
	$X
(
Uöt32
)

24 
	$X
(
I¡32
)

26 #unde‡
X


28 
	#X
(
TYPE
, 
NAME
) \

29 
imp
::
ToFa˘‹y
<
TYPE
>::
ªtu∫_t
 \

30 
imp
::
ToFa˘‹y
<
TYPE
>::
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

31  
vÆ
->
NAME
 ## 
	`VÆue
(
	`GëCuºítC⁄ãxt
()); \

32 
	}

	)
}

34 
	$X
(
boﬁ
, 
Boﬁón
)

35 
	$X
(, 
Numbî
)

36 
	$X
(
öt64_t
, 
I¡egî
)

37 
	$X
(
uöt32_t
, 
Uöt32
)

38 
	$X
(
öt32_t
, 
I¡32
)

40 #unde‡
X


	@node_modules/nan/nan_converters_pre_43_inl.h

9 #i‚de‡
NAN_CONVERTERS_PRE_43_INL_H_


10 
	#NAN_CONVERTERS_PRE_43_INL_H_


	)

12 
	#X
(
TYPE
) \

13 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
ªtu∫_t
 \

14 
imp
::
ToFa˘‹y
<
v8
::
TYPE
>::
	`c⁄vît
(v8::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

15  
MaybeLoˇl
<
v8
::
TYPE
>(
vÆ
->
To
 ## 
	`TYPE
()); \

16 }

	)

18 
	$X
(
Boﬁón
)

19 
	$X
(
Numbî
)

20 
	$X
(
Såög
)

21 
	$X
(
Obje˘
)

22 
	$X
(
I¡egî
)

23 
	$X
(
Uöt32
)

24 
	$X
(
I¡32
)

26 #unde‡
X


28 
	#X
(
TYPE
, 
NAME
) \

29 
imp
::
ToFa˘‹y
<
TYPE
>::
ªtu∫_t
 \

30 
imp
::
ToFa˘‹y
<
TYPE
>::
	`c⁄vît
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) { \

31  
Ju°
<
TYPE
>(
vÆ
->
NAME
 ##
	`VÆue
()); \

32 
	}

	)
}

34 
	$X
(
boﬁ
, 
Boﬁón
)

35 
	$X
(, 
Numbî
)

36 
	$X
(
öt64_t
, 
I¡egî
)

37 
	$X
(
uöt32_t
, 
Uöt32
)

38 
	$X
(
öt32_t
, 
I¡32
)

40 #unde‡
X


	@node_modules/nan/nan_implementation_12_inl.h

9 #i‚de‡
NAN_IMPLEMENTATION_12_INL_H_


10 
	#NAN_IMPLEMENTATION_12_INL_H_


	)

15 
«me•a˚
 
	gimp
 {

19 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


20 
Fa˘‹y
<
v8
::
Aºay
>::
New
() {

21  
v8
::
Aºay
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

24 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


25 
Fa˘‹y
<
v8
::
Aºay
>::
New
(
Àngth
) {

26  
v8
::
Aºay
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
Àngth
);

31 
	gFa˘‹y
<
	gv8
::
Boﬁón
>::
ªtu∫_t


32 
Fa˘‹y
<
v8
::
Boﬁón
>::
New
(
boﬁ
 
vÆue
) {

33  
v8
::
Boﬁón
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

38 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
>::
ªtu∫_t


39 
Fa˘‹y
<
v8
::
BoﬁónObje˘
>::
New
(
boﬁ
 
vÆue
) {

40  
v8
::
BoﬁónObje˘
::
New
(
vÆue
).
As
<v8::BooleanObject>();

45 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
>::
ªtu∫_t


46 
Fa˘‹y
<
v8
::
C⁄ãxt
>::
New
–v8::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s


47 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂


48 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
) {

49  
v8
::
C⁄ãxt
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
exãnsi⁄s
, 
tm∂
, 
obj
);

54 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

55 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

56 
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t


57 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

58 
v8
::
Loˇl
<v8::
D©e
> 
ªt
;

59 i‡(
	gv8
::
D©e
::
New
(
GëCuºítC⁄ãxt
(), 
vÆue
).

60 
ToLoˇl
(
ªöãΩªt_ˇ°
<
v8
::
Loˇl
<v8::
VÆue
>*>(&
ªt
))) {

61  
v8
::
MaybeLoˇl
<v8::
D©e
>(
ªt
);

63  
	gv8
::
MaybeLoˇl
<
v8
::
D©e
>(
ªt
);

67 
	gFa˘‹y
<
	gv8
::
D©e
>::
ªtu∫_t


68 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

69  
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t
(

70 
v8
::
D©e
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
).
As
<v8::Date>());

76 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
>::
ªtu∫_t


77 
Fa˘‹y
<
v8
::
Exã∫Æ
>::
New
(* 
vÆue
) {

78  
v8
::
Exã∫Æ
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

83 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
>::
ªtu∫_t


84 
Fa˘‹y
<
v8
::
Fun˘i⁄
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


85 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) {

86 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
GëCuºít
();

87 
	gv8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
(
isﬁ©e
);

88 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
(
isﬁ©e
);

89 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

90 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
çl
).
ToLoˇlChecked
();

92 
	gobj
->
SëI¡î«lFõld
(

93 
imp
::
kFun˘i⁄Index


94 , 
v8
::
Exã∫Æ
::
New
(
isﬁ©e
, 
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

96 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
isﬁ©e
, 
d©a
);

98 i‡(!
	gvÆ
.
IsEm±y
()) {

99 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

102  
	gsc›e
.
Esˇ≥
(
v8
::
Fun˘i⁄
::
New
–
isﬁ©e


103 , 
imp
::
Fun˘i⁄CÆlbackWøµî


104 , 
obj
));

109 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
>::
ªtu∫_t


110 
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


111 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a


112 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
) {

113 
v8
::
Isﬁ©e
 *
isﬁ©e
 = v8::Isﬁ©e::
GëCuºít
();

114 i‡(
	gˇŒback
) {

115 
	gv8
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
(
isﬁ©e
);

116 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
(
isﬁ©e
);

117 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

118 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
NewIn°™˚
(
çl
).
ToLoˇlChecked
();

120 
	gobj
->
SëI¡î«lFõld
(

121 
imp
::
kFun˘i⁄Index


122 , 
v8
::
Exã∫Æ
::
New
(
isﬁ©e
, 
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

123 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
isﬁ©e
, 
d©a
);

125 i‡(!
	gvÆ
.
IsEm±y
()) {

126 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

129  
	gsc›e
.
Esˇ≥
(
v8
::
Fun˘i⁄Tem∂©e
::
New
–
isﬁ©e


130 , 
imp
::
Fun˘i⁄CÆlbackWøµî


131 , 
obj


132 , 
sig«tuª
));

134  
	gv8
::
Fun˘i⁄Tem∂©e
::
New
(
isﬁ©e
, 0, 
d©a
, 
sig«tuª
);

140 
	gFa˘‹y
<
	gv8
::
Numbî
>::
ªtu∫_t


141 
Fa˘‹y
<
v8
::
Numbî
>::
New
(
vÆue
) {

142  
v8
::
Numbî
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

147 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
>::
ªtu∫_t


148 
Fa˘‹y
<
v8
::
NumbîObje˘
>::
New
(
vÆue
) {

149  
v8
::
NumbîObje˘
::
New
–v8::
Isﬁ©e
::
GëCuºít
()

150 , 
vÆue
).
	gAs
<
	gv8
::
NumbîObje˘
>();

155 
	gãm∂©e
 <
ty≥«me
 
	gT
>

156 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


157 
I¡egîFa˘‹y
<
T
>::
New
(
öt32_t
 
vÆue
) {

158  
To
<
T
>(T::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

161 
	gãm∂©e
 <
ty≥«me
 
	gT
>

162 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


163 
I¡egîFa˘‹y
<
T
>::
New
(
uöt32_t
 
vÆue
) {

164  
To
<
T
>(T::
NewFromUnsig√d
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

167 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


168 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
öt32_t
 
vÆue
) {

169  
To
<
v8
::
Uöt32
>(

170 
v8
::
Uöt32
::
NewFromUnsig√d
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

173 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


174 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
uöt32_t
 
vÆue
) {

175  
To
<
v8
::
Uöt32
>(

176 
v8
::
Uöt32
::
NewFromUnsig√d
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

181 
	gFa˘‹y
<
	gv8
::
Obje˘
>::
ªtu∫_t


182 
Fa˘‹y
<
v8
::
Obje˘
>::
New
() {

183  
v8
::
Obje˘
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

188 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
>::
ªtu∫_t


189 
Fa˘‹y
<
v8
::
Obje˘Tem∂©e
>::
New
() {

190  
v8
::
Obje˘Tem∂©e
::
New
(v8::
Isﬁ©e
::
GëCuºít
());

195 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

196 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

197 
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t


198 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

199 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


200 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

201  
v8
::
RegExp
::
New
(
GëCuºítC⁄ãxt
(), 
∑âîn
, 
Êags
);

204 
	gFa˘‹y
<
	gv8
::
RegExp
>::
ªtu∫_t


205 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

206 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


207 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

208  
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t
(v8::RegExp::
New
(
∑âîn
, 
Êags
));

214 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

215 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

216 
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t


217 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

218 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

219  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
§c
);

222 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


223 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


224 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

225 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

226  
	gv8
::
S¸ùtCompûî
::
Compûe
(
GëCuºítC⁄ãxt
(), &
§c
);

229 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


230 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

231 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

232  
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t
(

233 
v8
::
S¸ùtCompûî
::
Compûe
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

236 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


237 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


238 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

239 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

240  
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t
(

241 
v8
::
S¸ùtCompûî
::
Compûe
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

247 
	gFa˘‹y
<
	gv8
::
Sig«tuª
>::
ªtu∫_t


248 
Fa˘‹y
<
v8
::
Sig«tuª
>::
New
(Fa˘‹y<v8::Sig«tuª>::
FTH
 
ª˚ivî
) {

249  
v8
::
Sig«tuª
::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
ª˚ivî
);

254 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


255 
Fa˘‹y
<
v8
::
Såög
>::
New
() {

256  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

257 
v8
::
Såög
::
Em±y
(v8::
Isﬁ©e
::
GëCuºít
()));

260 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

261 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

262 
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


263 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

264  
	gv8
::
Såög
::
NewFromUtf8
(

265 
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
, v8::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

268 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


269 
Fa˘‹y
<
v8
::
Såög
>::
New
(
°d
::
°rög
 c⁄°& 
vÆue
) {

270 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

271  
	gv8
::
Såög
::
NewFromUtf8
(
v8
::
Isﬁ©e
::
GëCuºít
(),

272 
vÆue
.
d©a
(), 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
°©ic_ˇ°
<>(vÆue.
size
()));

275 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


276 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

277  
	gv8
::
Såög
::
NewFromTwoByã
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
vÆue
,

278 
v8
::
NewSåögTy≥
::
kN‹mÆ
, 
Àngth
);

281 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


282 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

283  
v8
::
Såög
::
NewExã∫ÆTwoByã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

286 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


287 
Fa˘‹y
<
v8
::
Såög
>::
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

288  
v8
::
Såög
::
NewExã∫ÆO√Byã
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
);

291 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


292 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

293  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

294 
v8
::
Såög
::
NewFromUtf8
(

295 
v8
::
Isﬁ©e
::
GëCuºít
()

296 , 
vÆue


297 , 
v8
::
Såög
::
kN‹mÆSåög


298 , 
Àngth
));

301 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


302 
Fa˘‹y
<
v8
::
Såög
>::
New
(

303 
°d
::
°rög
 c⁄°& 
vÆue
) {

304 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

305  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

306 
v8
::
Såög
::
NewFromUtf8
(

307 
v8
::
Isﬁ©e
::
GëCuºít
()

308 , 
vÆue
.
d©a
()

309 , 
v8
::
Såög
::
kN‹mÆSåög


310 , 
°©ic_ˇ°
<>(
vÆue
.
size
())));

313 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


314 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

315  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

316 
v8
::
Såög
::
NewFromTwoByã
(

317 
v8
::
Isﬁ©e
::
GëCuºít
()

318 , 
vÆue


319 , 
v8
::
Såög
::
kN‹mÆSåög


320 , 
Àngth
));

323 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


324 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

325  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

326 
v8
::
Såög
::
NewExã∫Æ
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

329 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


330 
Fa˘‹y
<
v8
::
Såög
>::
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

331  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(

332 
v8
::
Såög
::
NewExã∫Æ
(v8::
Isﬁ©e
::
GëCuºít
(), 
vÆue
));

338 
	gFa˘‹y
<
	gv8
::
SåögObje˘
>::
ªtu∫_t


339 
Fa˘‹y
<
v8
::
SåögObje˘
>::
New
(v8::
Loˇl
<v8::
Såög
> 
vÆue
) {

340  
v8
::
SåögObje˘
::
New
(
vÆue
).
As
<v8::StringObject>();

345 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

346 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

347 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
ªtu∫_t


348 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
(v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

349 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

350  
	gv8
::
S¸ùtCompûî
::
CompûeUnboundS¸ùt
(

351 
v8
::
Isﬁ©e
::
GëCuºít
(), &
§c
);

354 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


355 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


356 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

357 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

358  
	gv8
::
S¸ùtCompûî
::
CompûeUnboundS¸ùt
(

359 
v8
::
Isﬁ©e
::
GëCuºít
(), &
§c
);

362 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


363 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
(v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

364 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
);

365  
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t
(

366 
v8
::
S¸ùtCompûî
::
CompûeUnbound
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

369 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t


370 
Fa˘‹y
<
v8
::
UnboundS¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


371 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

372 
v8
::
S¸ùtCompûî
::
Sour˚
 
§c
(
sour˚
, 
‹igö
);

373  
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
>::
ªtu∫_t
(

374 
v8
::
S¸ùtCompûî
::
CompûeUnbound
(v8::
Isﬁ©e
::
GëCuºít
(), &
§c
));

382 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


383 
	gãm∂©e
 <
ty≥«me
 
	gT
>

384 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
) {

385  
v8
::
Loˇl
<
T
>::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
h
);

389 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

390 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

391  
	gv8
::
Loˇl
<
T
>::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
p
);

394 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

395 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

396  
	gv8
::
Loˇl
<
T
>::
New
(
v8
::
Isﬁ©e
::
GëCuºít
(), 
p
);

399 
	gãm∂©e
 <
ty≥«me
 
	gT
>

400 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
) {

401  
v8
::
Loˇl
<
T
>::
New
(v8::
Isﬁ©e
::
GëCuºít
(), 
p
);

	@node_modules/nan/nan_implementation_pre_12_inl.h

9 #i‚de‡
NAN_IMPLEMENTATION_PRE_12_INL_H_


10 
	#NAN_IMPLEMENTATION_PRE_12_INL_H_


	)

16 
«me•a˚
 
	gimp
 {

20 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


21 
Fa˘‹y
<
v8
::
Aºay
>::
New
() {

22  
v8
::
Aºay
::
New
();

25 
	gFa˘‹y
<
	gv8
::
Aºay
>::
ªtu∫_t


26 
Fa˘‹y
<
v8
::
Aºay
>::
New
(
Àngth
) {

27  
v8
::
Aºay
::
New
(
Àngth
);

32 
	gFa˘‹y
<
	gv8
::
Boﬁón
>::
ªtu∫_t


33 
Fa˘‹y
<
v8
::
Boﬁón
>::
New
(
boﬁ
 
vÆue
) {

34  
v8
::
Boﬁón
::
New
(
vÆue
)->
ToBoﬁón
();

39 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
>::
ªtu∫_t


40 
Fa˘‹y
<
v8
::
BoﬁónObje˘
>::
New
(
boﬁ
 
vÆue
) {

41  
v8
::
BoﬁónObje˘
::
New
(
vÆue
).
As
<v8::BooleanObject>();

46 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
>::
ªtu∫_t


47 
Fa˘‹y
<
v8
::
C⁄ãxt
>::
New
–v8::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s


48 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂


49 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
) {

50 
v8
::
Pîsi°ít
<v8::
C⁄ãxt
> 
˘x
 = v8::C⁄ãxt::
New
(
exãnsi⁄s
, 
tm∂
, 
obj
);

51 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
l˘x
 = v8::Loˇl<v8::C⁄ãxt>::
New
(
˘x
);

52 
	g˘x
.
Di•o£
();

53  
	gl˘x
;

58 
	gFa˘‹y
<
	gv8
::
D©e
>::
ªtu∫_t


59 
Fa˘‹y
<
v8
::
D©e
>::
New
(
vÆue
) {

60  
Fa˘‹y
<
v8
::
D©e
>::
ªtu∫_t
(v8::D©e::
New
(
vÆue
).
As
<v8::Date>());

65 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
>::
ªtu∫_t


66 
Fa˘‹y
<
v8
::
Exã∫Æ
>::
New
(* 
vÆue
) {

67  
v8
::
Exã∫Æ
::
New
(
vÆue
);

72 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
>::
ªtu∫_t


73 
Fa˘‹y
<
v8
::
Fun˘i⁄
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


74 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
) {

75  
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
ˇŒback


76 , 
d©a


77 , 
v8
::
Loˇl
<v8::
Sig«tuª
>()

78 )->
GëFun˘i⁄
();

84 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
>::
ªtu∫_t


85 
Fa˘‹y
<
v8
::
Fun˘i⁄Tem∂©e
>::
New
–
Fun˘i⁄CÆlback
 
ˇŒback


86 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a


87 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
) {

88 i‡(
ˇŒback
) {

89 
v8
::
H™dÀSc›e
 
sc›e
;

91 
	gv8
::
Loˇl
<
v8
::
Obje˘Tem∂©e
> 
çl
 = v8::Obje˘Tem∂©e::
New
();

92 
	gçl
->
SëI¡î«lFõldCou¡
(
imp
::
kFun˘i⁄FõldCou¡
);

93 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obj
 = 
çl
->
NewIn°™˚
();

95 
	gobj
->
SëI¡î«lFõld
(

96 
imp
::
kFun˘i⁄Index


97 , 
v8
::
Exã∫Æ
::
New
(
ªöãΩªt_ˇ°
<*>(
ˇŒback
)));

99 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆ
 = v8::Loˇl<v8::VÆue>::
New
(
d©a
);

101 i‡(!
	gvÆ
.
IsEm±y
()) {

102 
	gobj
->
SëI¡î«lFõld
(
imp
::
kD©aIndex
, 
vÆ
);

107  
	gsc›e
.
Clo£
(

108 
v8
::
Fun˘i⁄Tem∂©e
::
New
(
imp
::
Fun˘i⁄CÆlbackWøµî


109 , 
obj


110 , 
sig«tuª
));

112  
	gv8
::
Fun˘i⁄Tem∂©e
::
New
(0, 
d©a
, 
sig«tuª
);

118 
	gFa˘‹y
<
	gv8
::
Numbî
>::
ªtu∫_t


119 
Fa˘‹y
<
v8
::
Numbî
>::
New
(
vÆue
) {

120  
v8
::
Numbî
::
New
(
vÆue
);

125 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
>::
ªtu∫_t


126 
Fa˘‹y
<
v8
::
NumbîObje˘
>::
New
(
vÆue
) {

127  
v8
::
NumbîObje˘
::
New
(
vÆue
).
As
<v8::NumberObject>();

132 
	gãm∂©e
 <
ty≥«me
 
	gT
>

133 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


134 
I¡egîFa˘‹y
<
T
>::
New
(
öt32_t
 
vÆue
) {

135  
To
<
T
>(T::
New
(
vÆue
));

138 
	gãm∂©e
 <
ty≥«me
 
	gT
>

139 
ty≥«me
 
	gI¡egîFa˘‹y
<
	gT
>::
ªtu∫_t


140 
I¡egîFa˘‹y
<
T
>::
New
(
uöt32_t
 
vÆue
) {

141  
To
<
T
>(T::
NewFromUnsig√d
(
vÆue
));

144 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


145 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
öt32_t
 
vÆue
) {

146  
To
<
v8
::
Uöt32
>(v8::Uöt32::
NewFromUnsig√d
(
vÆue
));

149 
	gFa˘‹y
<
	gv8
::
Uöt32
>::
ªtu∫_t


150 
Fa˘‹y
<
v8
::
Uöt32
>::
New
(
uöt32_t
 
vÆue
) {

151  
To
<
v8
::
Uöt32
>(v8::Uöt32::
NewFromUnsig√d
(
vÆue
));

157 
	gFa˘‹y
<
	gv8
::
Obje˘
>::
ªtu∫_t


158 
Fa˘‹y
<
v8
::
Obje˘
>::
New
() {

159  
v8
::
Obje˘
::
New
();

164 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
>::
ªtu∫_t


165 
Fa˘‹y
<
v8
::
Obje˘Tem∂©e
>::
New
() {

166  
v8
::
Obje˘Tem∂©e
::
New
();

171 
	gFa˘‹y
<
	gv8
::
RegExp
>::
ªtu∫_t


172 
Fa˘‹y
<
v8
::
RegExp
>::
New
(

173 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn


174 , 
v8
::
RegExp
::
Fœgs
 
Êags
) {

175  
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t
(v8::RegExp::
New
(
∑âîn
, 
Êags
));

180 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


181 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚
) {

182  
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t
(v8::S¸ùt::
New
(
sour˚
));

184 
	gFa˘‹y
<
	gv8
::
S¸ùt
>::
ªtu∫_t


185 
Fa˘‹y
<
v8
::
S¸ùt
>::
New
–v8::
Loˇl
<v8::
Såög
> 
sour˚


186 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
) {

187  
Fa˘‹y
<
v8
::
S¸ùt
>::
ªtu∫_t
(

188 
v8
::
S¸ùt
::
New
(
sour˚
, 
c⁄°_ˇ°
<v8::
S¸ùtOrigö
*>(&
‹igö
)));

193 
	gFa˘‹y
<
	gv8
::
Sig«tuª
>::
ªtu∫_t


194 
Fa˘‹y
<
v8
::
Sig«tuª
>::
New
(Fa˘‹y<v8::Sig«tuª>::
FTH
 
ª˚ivî
) {

195  
v8
::
Sig«tuª
::
New
(
ª˚ivî
);

200 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


201 
Fa˘‹y
<
v8
::
Såög
>::
New
() {

202  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
Em±y
());

205 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


206 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° * 
vÆue
, 
Àngth
) {

207  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(
v8
::Såög::
New
(
vÆue
, 
Àngth
));

210 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


211 
Fa˘‹y
<
v8
::
Såög
>::
New
(

212 
°d
::
°rög
 c⁄°& 
vÆue
) {

213 
as£π
(
vÆue
.
size
(Ë<
INT_MAX
 && "stringÅooÜong");

214  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(

215 
v8
::
Såög
::
New
–
vÆue
.
d©a
(), 
°©ic_ˇ°
<>(vÆue.
size
())));

218 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


219 
Fa˘‹y
<
v8
::
Såög
>::
New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

220  
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t
(
v8
::Såög::
New
(
vÆue
, 
Àngth
));

223 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


224 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

225  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
NewExã∫Æ
(
vÆue
));

228 
	gFa˘‹y
<
	gv8
::
Såög
>::
ªtu∫_t


229 
Fa˘‹y
<
v8
::
Såög
>::
New
(v8::Såög::
Exã∫ÆAsciiSåögResour˚
 * 
vÆue
) {

230  
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t
(v8::Såög::
NewExã∫Æ
(
vÆue
));

235 
	gFa˘‹y
<
	gv8
::
SåögObje˘
>::
ªtu∫_t


236 
Fa˘‹y
<
v8
::
SåögObje˘
>::
New
(v8::
Loˇl
<v8::
Såög
> 
vÆue
) {

237  
v8
::
SåögObje˘
::
New
(
vÆue
).
As
<v8::StringObject>();

244 
	gãm∂©e
 <
ty≥«me
 
	gT
>

245 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
) {

246  
v8
::
Loˇl
<
T
>::
New
(
h
);

249 
	gãm∂©e
 <
ty≥«me
 
	gT
>

250 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T> c⁄°& 
p
) {

251  
v8
::
Loˇl
<
T
>::
New
(
p
);

254 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

255 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
) {

256  
	gv8
::
Loˇl
<
T
>::
New
(
p
.
≥rsi°ít
);

259 
	gãm∂©e
 <
ty≥«me
 
	gT
>

260 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
) {

261  
v8
::
Loˇl
<
T
>::
New
(
p
.
≥rsi°ít
);

	@node_modules/nan/nan_maybe_43_inl.h

9 #i‚de‡
NAN_MAYBE_43_INL_H_


10 
	#NAN_MAYBE_43_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 
usög
 
	gMaybeLoˇl
 = 
v8
::
MaybeLoˇl
<
T
>;

15 
	gãm∂©e
<
ty≥«me
 
	gT
>

16 
usög
 
	gMaybe
 = 
v8
::
Maybe
<
T
>;

18 
	gãm∂©e
<
ty≥«me
 
	gT
>

19 
NAN_INLINE
 
	gMaybe
<
	gT
> 
	$NŸhög
() {

20  
v8
::
NŸhög
<
T
>();

21 
	}
}

23 
	gãm∂©e
<
ty≥«me
 
	gT
>

24 
NAN_INLINE
 
	gMaybe
<
	gT
> 
	$Ju°
(c⁄° 
T
& 
t
) {

25  
v8
::
Ju°
<
T
>(
t
);

26 
	}
}

28 
	gv8
::
Loˇl
<
v8
::
C⁄ãxt
> 
GëCuºítC⁄ãxt
();

30 
NAN_INLINE


31 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
ToDëaûSåög
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

32  
vÆ
->
ToDëaûSåög
(
GëCuºítC⁄ãxt
());

35 
NAN_INLINE


36 
	gMaybeLoˇl
<
	gv8
::
Uöt32
> 
ToAºayIndex
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) {

37  
vÆ
->
ToAºayIndex
(
GëCuºítC⁄ãxt
());

40 
NAN_INLINE


41 
	gMaybe
<
	gboﬁ
> 
EquÆs
(
v8
::
Loˇl
<v8::
VÆue
> 
a
, v8::Loˇl<v8::VÆue>(
b
)) {

42  
a
->
EquÆs
(
GëCuºítC⁄ãxt
(), 
b
);

45 
NAN_INLINE


46 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h
) {

47  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
());

50 
NAN_INLINE


51 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(

52 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h


53 , 
¨gc


54 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

55  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
(), 
¨gc
, 
¨gv
);

58 
NAN_INLINE


59 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
h
) {

60  
h
->
NewIn°™˚
(
GëCuºítC⁄ãxt
());

64 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Fun˘i⁄
> 
GëFun˘i⁄
(

65 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
t
) {

66  
t
->
GëFun˘i⁄
(
GëCuºítC⁄ãxt
());

69 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

70 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


71 , 
v8
::
Loˇl
<v8::
VÆue
> 
key


72 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
) {

73  
obj
->
Së
(
GëCuºítC⁄ãxt
(), 
key
, 
vÆue
);

76 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

77 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


78 , 
uöt32_t
 
ödex


79 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
) {

80  
obj
->
Së
(
GëCuºítC⁄ãxt
(), 
ödex
, 
vÆue
);

83 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
F‹˚Së
(

84 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


85 , 
v8
::
Loˇl
<v8::
VÆue
> 
key


86 , 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue


87 , 
v8
::
Pr›îtyAâribuã
 
©åibs
 = v8::
N⁄e
) {

88  
obj
->
F‹˚Së
(
GëCuºítC⁄ãxt
(), 
key
, 
vÆue
, 
©åibs
);

91 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

92 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


93 , 
v8
::
Loˇl
<v8::
VÆue
> 
key
) {

94  
obj
->
Gë
(
GëCuºítC⁄ãxt
(), 
key
);

97 
NAN_INLINE


98 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

99  
	gobj
->
Gë
(
GëCuºítC⁄ãxt
(), 
ödex
);

102 
NAN_INLINE
 
	gv8
::
Pr›îtyAâribuã
 
GëPr›îtyAâribuãs
(

103 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


104 , 
v8
::
Loˇl
<v8::
VÆue
> 
key
) {

105  
obj
->
GëPr›îtyAâribuãs
(
GëCuºítC⁄ãxt
(), 
key
).
FromJu°
();

108 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

109 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


110 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

111  
obj
->
Has
(
GëCuºítC⁄ãxt
(), 
key
);

114 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

115  
	gobj
->
Has
(
GëCuºítC⁄ãxt
(), 
ödex
);

118 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

119 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


120 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

121  
obj
->
Dñëe
(
GëCuºítC⁄ãxt
(), 
key
);

124 
NAN_INLINE


125 
	gMaybe
<
	gboﬁ
> 
Dñëe
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
, 
uöt32_t
 
ödex
) {

126  
	gobj
->
Dñëe
(
GëCuºítC⁄ãxt
(), 
ödex
);

129 
NAN_INLINE


130 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëPr›îtyNames
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

131  
obj
->
GëPr›îtyNames
(
GëCuºítC⁄ãxt
());

134 
NAN_INLINE


135 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëOwnPr›îtyNames
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

136  
obj
->
GëOwnPr›îtyNames
(
GëCuºítC⁄ãxt
());

139 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
SëPrŸŸy≥
(

140 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


141 , 
v8
::
Loˇl
<v8::
VÆue
> 
¥ŸŸy≥
) {

142  
obj
->
SëPrŸŸy≥
(
GëCuºítC⁄ãxt
(), 
¥ŸŸy≥
);

145 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
Obje˘PrŸoToSåög
(

146 
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

147  
obj
->
Obje˘PrŸoToSåög
(
GëCuºítC⁄ãxt
());

150 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasOwnPr›îty
(

151 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


152 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

153  
obj
->
HasOwnPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

156 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedPr›îty
(

157 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


158 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

159  
obj
->
HasRólNamedPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

162 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólIndexedPr›îty
(

163 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


164 , 
uöt32_t
 
ödex
) {

165  
	gobj
->
HasRólIndexedPr›îty
(
GëCuºítC⁄ãxt
(), 
ödex
);

168 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedCÆlbackPr›îty
(

169 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


170 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

171  
obj
->
HasRólNamedCÆlbackPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

174 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(

175 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


176 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

177  
obj
->
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(
GëCuºítC⁄ãxt
(), 
key
);

180 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îty
(

181 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


182 , 
v8
::
Loˇl
<v8::
Såög
> 
key
) {

183  
obj
->
GëRólNamedPr›îty
(
GëCuºítC⁄ãxt
(), 
key
);

186 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsFun˘i⁄
(

187 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


188 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


189 , 
¨gc


190 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

191  
obj
->
CÆlAsFun˘i⁄
(
GëCuºítC⁄ãxt
(), 
ªcv
, 
¨gc
, 
¨gv
);

194 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsC⁄°ru˘‹
(

195 
v8
::
Loˇl
<v8::
Obje˘
> 
obj


196 , 
¨gc
, 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

197  
obj
->
CÆlAsC⁄°ru˘‹
(
GëCuºítC⁄ãxt
(), 
¨gc
, 
¨gv
);

200 
NAN_INLINE


201 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
GëSour˚Löe
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

202  
msg
->
GëSour˚Löe
(
GëCuºítC⁄ãxt
());

205 
NAN_INLINE
 
	gMaybe
<> 
GëLöeNumbî
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

206  
msg
->
GëLöeNumbî
(
GëCuºítC⁄ãxt
());

209 
NAN_INLINE
 
	gMaybe
<> 
GëSèπCﬁumn
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

210  
msg
->
GëSèπCﬁumn
(
GëCuºítC⁄ãxt
());

213 
NAN_INLINE
 
	gMaybe
<> 
GëEndCﬁumn
(
v8
::
Loˇl
<v8::
Mesßge
> 
msg
) {

214  
msg
->
GëEndCﬁumn
(
GëCuºítC⁄ãxt
());

217 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
Cl⁄eEÀmítAt
(

218 
v8
::
Loˇl
<v8::
Aºay
> 
¨øy


219 , 
uöt32_t
 
ödex
) {

220  
	g¨øy
->
Cl⁄eEÀmítAt
(
GëCuºítC⁄ãxt
(), 
ödex
);

223 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆl
(

224 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
fun


225 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


226 , 
¨gc


227 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

228  
fun
->
CÆl
(
GëCuºítC⁄ãxt
(), 
ªcv
, 
¨gc
, 
¨gv
);

	@node_modules/nan/nan_maybe_pre_43_inl.h

9 #i‚de‡
NAN_MAYBE_PRE_43_INL_H_


10 
	#NAN_MAYBE_PRE_43_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cMaybeLoˇl
 {

14 
	mpublic
:

15 
NAN_INLINE
 
	$MaybeLoˇl
(Ë: 
	`vÆ_
(
v8
::
Loˇl
<
T
>()) {}

17 
ãm∂©e
<
ty≥«me
 
S
>

18 #i‡
NODE_MODULE_VERSION
 >
NODE_0_12_MODULE_VERSION


19 
NAN_INLINE
 
	`MaybeLoˇl
(
v8
::
Loˇl
<
S
> 
th©
Ë: 
	$vÆ_
(
th©
Ë{
	}
}

21 
NAN_INLINE
 
MaybeLoˇl
(
v8
::
Loˇl
<
S
> 
th©
) :

22 
vÆ_
(*
ªöãΩªt_ˇ°
<
v8
::
Loˇl
<
T
>*>(&
th©
)) {}

25 
NAN_INLINE
 
boﬁ
 
	$IsEm±y
(Ëc⁄° {  
vÆ_
.
	`IsEm±y
(); 
	}
}

27 
	gãm∂©e
<
ty≥«me
 
	gS
>

28 
NAN_INLINE
 
boﬁ
 
ToLoˇl
(
v8
::
Loˇl
<
S
> *
out
) const {

29 *
out
 = 
vÆ_
;

30  !
IsEm±y
();

33 
NAN_INLINE
 
	gv8
::
Loˇl
<
T
> 
	$ToLoˇlChecked
() const {

34 #i‡
	`deföed
(
V8_ENABLE_CHECKS
)

35 
	`as£π
(!
	`IsEm±y
() && "ToLocalChecked is Empty");

37  
vÆ_
;

38 
	}
}

40 
	gãm∂©e
<
ty≥«me
 
	gS
>

41 
NAN_INLINE
 
	gv8
::
Loˇl
<
S
> 
FromMaybe
(
v8
::Loˇl<S> 
deÁu…_vÆue
) const {

42  
IsEm±y
(Ë? 
deÁu…_vÆue
 : 
vÆ_
;

45 
	g¥iv©e
:

46 
v8
::
Loˇl
<
T
> 
vÆ_
;

49 
	gãm∂©e
<
ty≥«me
 
	gT
>

50 ˛as†
	cMaybe
 {

51 
	mpublic
:

52 
NAN_INLINE
 
boﬁ
 
	$IsNŸhög
(Ëc⁄° {  !
has_vÆue_
; }

53 
NAN_INLINE
 
boﬁ
 
	$IsJu°
(Ëc⁄° {  
has_vÆue_
; 
	}
}

55 
NAN_INLINE
 
T
 
	$FromJu°
() const {

56 #i‡
	`deföed
(
V8_ENABLE_CHECKS
)

57 
	`as£π
(
	`IsJu°
() && "FromJust is Nothing");

59  
vÆue_
;

60 
	}
}

62 
NAN_INLINE
 
T
 
	$FromMaybe
(c⁄° 
T
& 
deÁu…_vÆue
) const {

63  
has_vÆue_
 ? 
vÆue_
 : 
deÁu…_vÆue
;

64 
	}
}

66 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
Maybe
 &
Ÿhî
) const {

67  (
IsJu°
(Ë=
Ÿhî
.IsJust()) &&

68 (!
IsJu°
(Ë|| 
FromJu°
(Ë=
Ÿhî
.FromJust());

71 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Maybe
 &
Ÿhî
) const {

72  !
›î©‹
==(
Ÿhî
);

75 
	g¥iv©e
:

76 
	$Maybe
(Ë: 
	$has_vÆue_
(
Ál£
Ë{
	}
}

77 
ex∂icô
 
	$Maybe
(c⁄° 
T
& 
t
Ë: 
	`has_vÆue_
(
åue
), 
	$vÆue_
(
t
Ë{
	}
}

78 
boﬁ
 
	ghas_vÆue_
;

79 
T
 
	gvÆue_
;

81 
	gãm∂©e
<
ty≥«me
 
	gU
>

82 
‰õnd
 
	gMaybe
<
	gU
> 
NŸhög
();

83 
	gãm∂©e
<
ty≥«me
 
	gU
>

84 
‰õnd
 
	gMaybe
<
	gU
> 
Ju°
(c⁄° 
U
& 
u
);

87 
	gãm∂©e
<
ty≥«me
 
	gT
>

88 
ölöe
 
	gMaybe
<
	gT
> 
	$NŸhög
() {

89  
Maybe
<
T
>();

90 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gT
>

93 
ölöe
 
	gMaybe
<
	gT
> 
	$Ju°
(c⁄° 
T
& 
t
) {

94  
Maybe
<
T
>(
t
);

95 
	}
}

97 
NAN_INLINE


98 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
ToDëaûSåög
(
v8
::
H™dÀ
<v8::
VÆue
> 
vÆ
) {

99  
MaybeLoˇl
<
v8
::
Såög
>(
vÆ
->
ToDëaûSåög
());

102 
NAN_INLINE


103 
	gMaybeLoˇl
<
	gv8
::
Uöt32
> 
ToAºayIndex
(
v8
::
H™dÀ
<v8::
VÆue
> 
vÆ
) {

104  
MaybeLoˇl
<
v8
::
Uöt32
>(
vÆ
->
ToAºayIndex
());

107 
NAN_INLINE


108 
	gMaybe
<
	gboﬁ
> 
EquÆs
(
v8
::
H™dÀ
<v8::
VÆue
> 
a
, v8::H™dÀ<v8::VÆue>(
b
)) {

109  
Ju°
<
boﬁ
>(
a
->
EquÆs
(
b
));

112 
NAN_INLINE


113 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
H™dÀ
<v8::
Fun˘i⁄
> 
h
) {

114  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
());

117 
NAN_INLINE


118 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(

119 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
h


120 , 
¨gc


121 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

122  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
(
¨gc
, 
¨gv
));

125 
NAN_INLINE


126 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
NewIn°™˚
(
v8
::
H™dÀ
<v8::
Obje˘Tem∂©e
> 
h
) {

127  
MaybeLoˇl
<
v8
::
Obje˘
>(
h
->
NewIn°™˚
());

130 
NAN_INLINE


131 
	gMaybeLoˇl
<
	gv8
::
Fun˘i⁄
> 
GëFun˘i⁄
(
v8
::
H™dÀ
<v8::
Fun˘i⁄Tem∂©e
> 
t
) {

132  
MaybeLoˇl
<
v8
::
Fun˘i⁄
>(
t
->
GëFun˘i⁄
());

135 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

136 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


137 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key


138 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue
) {

139  
Ju°
<
boﬁ
>(
obj
->
Së
(
key
, 
vÆue
));

142 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Së
(

143 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


144 , 
uöt32_t
 
ödex


145 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue
) {

146  
Ju°
<
boﬁ
>(
obj
->
Së
(
ödex
, 
vÆue
));

149 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
F‹˚Së
(

150 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


151 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key


152 , 
v8
::
H™dÀ
<v8::
VÆue
> 
vÆue


153 , 
v8
::
Pr›îtyAâribuã
 
©åibs
 = v8::
N⁄e
) {

154  
Ju°
<
boﬁ
>(
obj
->
F‹˚Së
(
key
, 
vÆue
, 
©åibs
));

157 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

158 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


159 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key
) {

160  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
Gë
(
key
));

163 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
Gë
(

164 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


165 , 
uöt32_t
 
ödex
) {

166  
	gMaybeLoˇl
<
	gv8
::
VÆue
>(
obj
->
Gë
(
ödex
));

169 
NAN_INLINE
 
	gMaybe
<
	gv8
::
Pr›îtyAâribuã
> 
GëPr›îtyAâribuãs
(

170 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


171 , 
v8
::
H™dÀ
<v8::
VÆue
> 
key
) {

172  
Ju°
<
v8
::
Pr›îtyAâribuã
>(
obj
->
GëPr›îtyAâribuãs
(
key
));

175 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

176 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


177 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

178  
Ju°
<
boﬁ
>(
obj
->
Has
(
key
));

181 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Has
(

182 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


183 , 
uöt32_t
 
ödex
) {

184  
	gJu°
<
	gboﬁ
>(
	gobj
->
Has
(
ödex
));

187 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

188 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


189 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

190  
Ju°
<
boﬁ
>(
obj
->
Dñëe
(
key
));

193 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
Dñëe
(

194 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


195 , 
uöt32_t
 
ödex
) {

196  
	gJu°
<
	gboﬁ
>(
	gobj
->
Dñëe
(
ödex
));

199 
NAN_INLINE


200 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëPr›îtyNames
(
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

201  
MaybeLoˇl
<
v8
::
Aºay
>(
obj
->
GëPr›îtyNames
());

204 
NAN_INLINE


205 
	gMaybeLoˇl
<
	gv8
::
Aºay
> 
GëOwnPr›îtyNames
(
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

206  
MaybeLoˇl
<
v8
::
Aºay
>(
obj
->
GëOwnPr›îtyNames
());

209 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
SëPrŸŸy≥
(

210 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


211 , 
v8
::
H™dÀ
<v8::
VÆue
> 
¥ŸŸy≥
) {

212  
Ju°
<
boﬁ
>(
obj
->
SëPrŸŸy≥
(
¥ŸŸy≥
));

215 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
Obje˘PrŸoToSåög
(

216 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj
) {

217  
MaybeLoˇl
<
v8
::
Såög
>(
obj
->
Obje˘PrŸoToSåög
());

220 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasOwnPr›îty
(

221 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


222 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

223  
Ju°
<
boﬁ
>(
obj
->
HasOwnPr›îty
(
key
));

226 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedPr›îty
(

227 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


228 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

229  
Ju°
<
boﬁ
>(
obj
->
HasRólNamedPr›îty
(
key
));

232 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólIndexedPr›îty
(

233 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


234 , 
uöt32_t
 
ödex
) {

235  
	gJu°
<
	gboﬁ
>(
	gobj
->
HasRólIndexedPr›îty
(
ödex
));

238 
NAN_INLINE
 
	gMaybe
<
	gboﬁ
> 
HasRólNamedCÆlbackPr›îty
(

239 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


240 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

241  
Ju°
<
boﬁ
>(
obj
->
HasRólNamedCÆlbackPr›îty
(
key
));

244 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(

245 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


246 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

247  
MaybeLoˇl
<
v8
::
VÆue
>(

248 
obj
->
GëRólNamedPr›îtyInPrŸŸy≥Chaö
(
key
));

251 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
GëRólNamedPr›îty
(

252 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


253 , 
v8
::
H™dÀ
<v8::
Såög
> 
key
) {

254  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
GëRólNamedPr›îty
(
key
));

257 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsFun˘i⁄
(

258 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


259 , 
v8
::
H™dÀ
<v8::
Obje˘
> 
ªcv


260 , 
¨gc


261 , 
v8
::
H™dÀ
<v8::
VÆue
> 
¨gv
[]) {

262  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
CÆlAsFun˘i⁄
(
ªcv
, 
¨gc
, 
¨gv
));

265 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆlAsC⁄°ru˘‹
(

266 
v8
::
H™dÀ
<v8::
Obje˘
> 
obj


267 , 
¨gc


268 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

269  
MaybeLoˇl
<
v8
::
VÆue
>(
obj
->
CÆlAsC⁄°ru˘‹
(
¨gc
, 
¨gv
));

272 
NAN_INLINE


273 
	gMaybeLoˇl
<
	gv8
::
Såög
> 
GëSour˚Löe
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

274  
MaybeLoˇl
<
v8
::
Såög
>(
msg
->
GëSour˚Löe
());

277 
NAN_INLINE
 
	gMaybe
<> 
GëLöeNumbî
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

278  
Ju°
<>(
msg
->
GëLöeNumbî
());

281 
NAN_INLINE
 
	gMaybe
<> 
GëSèπCﬁumn
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

282  
Ju°
<>(
msg
->
GëSèπCﬁumn
());

285 
NAN_INLINE
 
	gMaybe
<> 
GëEndCﬁumn
(
v8
::
H™dÀ
<v8::
Mesßge
> 
msg
) {

286  
Ju°
<>(
msg
->
GëEndCﬁumn
());

289 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
Obje˘
> 
Cl⁄eEÀmítAt
(

290 
v8
::
H™dÀ
<v8::
Aºay
> 
¨øy


291 , 
uöt32_t
 
ödex
) {

292  
	gMaybeLoˇl
<
	gv8
::
Obje˘
>(
¨øy
->
Cl⁄eEÀmítAt
(
ödex
));

295 
NAN_INLINE
 
	gMaybeLoˇl
<
	gv8
::
VÆue
> 
CÆl
(

296 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
fun


297 , 
v8
::
Loˇl
<v8::
Obje˘
> 
ªcv


298 , 
¨gc


299 , 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[]) {

300  
MaybeLoˇl
<
v8
::
VÆue
>(
fun
->
CÆl
(
ªcv
, 
¨gc
, 
¨gv
));

	@node_modules/nan/nan_new.h

9 #i‚de‡
NAN_NEW_H_


10 
	#NAN_NEW_H_


	)

12 
«me•a˚
 
	gimp
 {

15 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gv8
::
Loˇl
<
T
> 
To
(
v8
::Loˇl<v8::
I¡egî
> 
i
);

17 
	gãm∂©e
 <>

18 
ölöe


19 
	gv8
::
Loˇl
<
v8
::
I¡egî
>

20 
To
<
v8
::
I¡egî
>(v8::
Loˇl
<v8::I¡egî> 
i
) {

21  
N™
::
To
<
v8
::
I¡egî
>(
i
).
ToLoˇlChecked
();

24 
	gãm∂©e
 <>

25 
ölöe


26 
	gv8
::
Loˇl
<
v8
::
I¡32
>

27 
To
<
v8
::
I¡32
>(v8::
Loˇl
<v8::
I¡egî
> 
i
) {

28  
N™
::
To
<
v8
::
I¡32
>(
i
).
ToLoˇlChecked
();

31 
	gãm∂©e
 <>

32 
ölöe


33 
	gv8
::
Loˇl
<
v8
::
Uöt32
>

34 
To
<
v8
::
Uöt32
>(v8::
Loˇl
<v8::
I¡egî
> 
i
) {

35  
N™
::
To
<
v8
::
Uöt32
>(
i
).
ToLoˇlChecked
();

38 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sFa˘‹yBa£
 {

39 
	gv8
::
	tLoˇl
<
	tT
> 
	tªtu∫_t
;

42 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sMaybeFa˘‹yBa£
 {

43 
	gMaybeLoˇl
<
	tT
> 
	tªtu∫_t
;

46 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gFa˘‹y
;

48 
	gãm∂©e
 <>

49 
	gFa˘‹y
<
	gv8
::
Aºay
> : 
Fa˘‹yBa£
<
v8
::Array> {

50 
ölöe
 
ªtu∫_t
 
New
();

51 
ölöe
 
ªtu∫_t
 
New
(
Àngth
);

54 
	gãm∂©e
 <>

55 
	gFa˘‹y
<
	gv8
::
Boﬁón
> : 
Fa˘‹yBa£
<
v8
::Boolean> {

56 
ölöe
 
ªtu∫_t
 
New
(
boﬁ
 
vÆue
);

59 
	gãm∂©e
 <>

60 
	gFa˘‹y
<
	gv8
::
BoﬁónObje˘
> : 
Fa˘‹yBa£
<
v8
::BooleanObject> {

61 
ölöe
 
ªtu∫_t
 
New
(
boﬁ
 
vÆue
);

64 
	gãm∂©e
 <>

65 
	gFa˘‹y
<
	gv8
::
C⁄ãxt
> : 
Fa˘‹yBa£
<
v8
::Context> {

66 
ölöe


67 
ªtu∫_t


68 
New
–
v8
::
Exãnsi⁄C⁄figuøti⁄
* 
exãnsi⁄s
 = 
NULL


69 , 
v8
::
Loˇl
<v8::
Obje˘Tem∂©e
> 
tm∂
 = v8::Local<v8::ObjectTemplate>()

70 , 
v8
::
Loˇl
<v8::
VÆue
> 
obj
 = v8::Local<v8::Value>());

73 
	gãm∂©e
 <>

74 
	gFa˘‹y
<
	gv8
::
D©e
> : 
MaybeFa˘‹yBa£
<
v8
::Date> {

75 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

78 
	gãm∂©e
 <>

79 
	gFa˘‹y
<
	gv8
::
Exã∫Æ
> : 
Fa˘‹yBa£
<
v8
::External> {

80 
ölöe
 
ªtu∫_t
 
New
(*
vÆue
);

83 
	gãm∂©e
 <>

84 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄
> : 
Fa˘‹yBa£
<
v8
::Function> {

85 
ölöe


86 
ªtu∫_t


87 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


88 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>());

91 
	gãm∂©e
 <>

92 
	gFa˘‹y
<
	gv8
::
Fun˘i⁄Tem∂©e
> : 
Fa˘‹yBa£
<
v8
::FunctionTemplate> {

93 
ölöe


94 
ªtu∫_t


95 
New
–
Fun˘i⁄CÆlback
 
ˇŒback
 = 
NULL


96 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

97 , 
v8
::
Loˇl
<v8::
Sig«tuª
> 
sig«tuª
 = v8::Local<v8::Signature>());

100 
	gãm∂©e
 <>

101 
	gFa˘‹y
<
	gv8
::
Numbî
> : 
Fa˘‹yBa£
<
v8
::Number> {

102 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

105 
	gãm∂©e
 <>

106 
	gFa˘‹y
<
	gv8
::
NumbîObje˘
> : 
Fa˘‹yBa£
<
v8
::NumberObject> {

107 
ölöe
 
ªtu∫_t
 
New
(
vÆue
);

110 
	gãm∂©e
 <
ty≥«me
 
	gT
>

111 
	gI¡egîFa˘‹y
 : 
Fa˘‹yBa£
<
T
> {

112 
ty≥«me
 
	tFa˘‹yBa£
<
	tT
>::
	tªtu∫_t
Ñeturn_t;

113 
ölöe
 
ªtu∫_t
 
New
(
öt32_t
 
vÆue
);

114 
ölöe
 
ªtu∫_t
 
New
(
uöt32_t
 
vÆue
);

117 
	gãm∂©e
 <>

118 
	gFa˘‹y
<
	gv8
::
I¡egî
> : 
I¡egîFa˘‹y
<
v8
::Integer> {};

120 
	gãm∂©e
 <>

121 
	gFa˘‹y
<
	gv8
::
I¡32
> : 
I¡egîFa˘‹y
<
v8
::Int32> {};

123 
	gãm∂©e
 <>

124 
	gFa˘‹y
<
	gv8
::
Uöt32
> : 
Fa˘‹yBa£
<
v8
::Uint32> {

125 
ölöe
 
ªtu∫_t
 
New
(
öt32_t
 
vÆue
);

126 
ölöe
 
ªtu∫_t
 
New
(
uöt32_t
 
vÆue
);

129 
	gãm∂©e
 <>

130 
	gFa˘‹y
<
	gv8
::
Obje˘
> : 
Fa˘‹yBa£
<
v8
::Object> {

131 
ölöe
 
ªtu∫_t
 
New
();

134 
	gãm∂©e
 <>

135 
	gFa˘‹y
<
	gv8
::
Obje˘Tem∂©e
> : 
Fa˘‹yBa£
<
v8
::ObjectTemplate> {

136 
ölöe
 
ªtu∫_t
 
New
();

139 
	gãm∂©e
 <>

140 
	gFa˘‹y
<
	gv8
::
RegExp
> : 
MaybeFa˘‹yBa£
<
v8
::RegExp> {

141 
ölöe
 
ªtu∫_t
 
New
(

142 
v8
::
Loˇl
<v8::
Såög
> 
∑âîn
, v8::
RegExp
::
Fœgs
 
Êags
);

145 
	gãm∂©e
 <>

146 
	gFa˘‹y
<
	gv8
::
S¸ùt
> : 
MaybeFa˘‹yBa£
<
v8
::Script> {

147 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚
);

148 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚


149 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
);

152 
	gãm∂©e
 <>

153 
	gFa˘‹y
<
	gv8
::
Sig«tuª
> : 
Fa˘‹yBa£
<
v8
::Signature> {

154 
v8
::
	tLoˇl
<
	tv8
::
	tFun˘i⁄Tem∂©e
> 
	tFTH
;

155 
ölöe
 
ªtu∫_t
 
New
(
FTH
 
ª˚ivî
 = FTH());

158 
	gãm∂©e
 <>

159 
	gFa˘‹y
<
	gv8
::
Såög
> : 
MaybeFa˘‹yBa£
<
v8
::String> {

160 
ölöe
 
ªtu∫_t
 
New
();

161 
ölöe
 
ªtu∫_t
 
New
(c⁄° *
vÆue
, 
Àngth
 = -1);

162 
ölöe
 
ªtu∫_t
 
New
(c⁄° 
uöt16_t
 *
vÆue
, 
Àngth
 = -1);

163 
ölöe
 
ªtu∫_t
 
New
(
°d
::
°rög
 c⁄°& 
vÆue
);

165 
ölöe
 
ªtu∫_t
 
New
(
v8
::
Såög
::
Exã∫ÆSåögResour˚
 * 
vÆue
);

166 
ölöe
 
ªtu∫_t
 
New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
);

169 
	gãm∂©e
 <>

170 
	gFa˘‹y
<
	gv8
::
SåögObje˘
> : 
Fa˘‹yBa£
<
v8
::StringObject> {

171 
ölöe
 
ªtu∫_t
 
New
(
v8
::
Loˇl
<v8::
Såög
> 
vÆue
);

176 #i‡(
NODE_MODULE_VERSION
 >= 12)

178 
«me•a˚
 
	gimp
 {

180 
	gãm∂©e
 <>

181 
	gFa˘‹y
<
	gv8
::
UnboundS¸ùt
> : 
MaybeFa˘‹yBa£
<
v8
::UnboundScript> {

182 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚
);

183 
ölöe
 
ªtu∫_t
 
New
–
v8
::
Loˇl
<v8::
Såög
> 
sour˚


184 , 
v8
::
S¸ùtOrigö
 c⁄°& 
‹igö
);

189 
	~"«n_im∂emíèti⁄_12_öl.h
"

193 
	~"«n_im∂emíèti⁄_¥e_12_öl.h
"

199 
	gãm∂©e
 <
ty≥«me
 
	gT
>

200 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


201 
	$New
() {

202  
imp
::
Fa˘‹y
<
T
>::
	`New
();

203 
	}
}

205 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
>

206 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


207 
	$New
(
A0
 
¨g0
) {

208  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
);

209 
	}
}

211 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
>

212 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


213 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
) {

214  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
);

215 
	}
}

217 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
>

218 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


219 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
, 
A2
 
¨g2
) {

220  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
, 
¨g2
);

221 
	}
}

223 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA0
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
>

224 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


225 
	$New
(
A0
 
¨g0
, 
A1
 
¨g1
, 
A2
 
¨g2
, 
A3
 
¨g3
) {

226  
imp
::
Fa˘‹y
<
T
>::
	`New
(
¨g0
, 
¨g1
, 
¨g2
, 
¨g3
);

227 
	}
}

235 
	gãm∂©e
 <
ty≥«me
 
	gT
>

236 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


237 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


238 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()) {

239  
imp
::
Fa˘‹y
<
T
>::
New
(
ˇŒback
, 
d©a
);

243 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gA2
>

244 
ty≥«me
 
	gimp
::
Fa˘‹y
<
T
>::
ªtu∫_t


245 
New
–
Fun˘i⁄CÆlback
 
ˇŒback


246 , 
v8
::
Loˇl
<v8::
VÆue
> 
d©a
 = v8::Local<v8::Value>()

247 , 
A2
 
a2
 = 
	$A2
()) {

248  
imp
::
Fa˘‹y
<
T
>::
	`New
(
ˇŒback
, 
d©a
, 
a2
);

249 
	}
}

253 #i‡
NODE_MODULE_VERSION
 < 
IOJS_3_0_MODULE_VERSION


254 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
H™dÀ
<T> 
h
);

257 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


258 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

259 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T, 
M
> c⁄°& 
p
);

261 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
v8
::
Pîsi°ít
<T> c⁄°& 
p
);

263 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

264 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
Pîsi°ít
<T, 
M
> c⁄°& 
p
);

265 
	gãm∂©e
 <
ty≥«me
 
	gT
>

266 
ölöe
 
	gv8
::
Loˇl
<
T
> 
New
(
GlobÆ
<T> c⁄°& 
p
);

268 
ölöe


269 
	gimp
::
Fa˘‹y
<
v8
::
Boﬁón
>::
ªtu∫_t


270 
	$New
(
boﬁ
 
vÆue
) {

271  
New
<
v8
::
Boﬁón
>(
vÆue
);

272 
	}
}

274 
ölöe


275 
	gimp
::
Fa˘‹y
<
v8
::
I¡32
>::
ªtu∫_t


276 
	$New
(
öt32_t
 
vÆue
) {

277  
New
<
v8
::
I¡32
>(
vÆue
);

278 
	}
}

280 
ölöe


281 
	gimp
::
Fa˘‹y
<
v8
::
Uöt32
>::
ªtu∫_t


282 
	$New
(
uöt32_t
 
vÆue
) {

283  
New
<
v8
::
Uöt32
>(
vÆue
);

284 
	}
}

286 
ölöe


287 
	gimp
::
Fa˘‹y
<
v8
::
Numbî
>::
ªtu∫_t


288 
	$New
(
vÆue
) {

289  
New
<
v8
::
Numbî
>(
vÆue
);

290 
	}
}

292 
ölöe


293 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


294 
	$New
(
°d
::
°rög
 c⁄°& 
vÆue
) {

295  
New
<
v8
::
Såög
>(
vÆue
);

296 
	}
}

298 
ölöe


299 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


300 
	$New
(c⁄° * 
vÆue
, 
Àngth
) {

301  
New
<
v8
::
Såög
>(
vÆue
, 
Àngth
);

302 
	}
}

304 
ölöe


305 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


306 
	$New
(c⁄° 
uöt16_t
 * 
vÆue
, 
Àngth
) {

307  
New
<
v8
::
Såög
>(
vÆue
, 
Àngth
);

308 
	}
}

310 
ölöe


311 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


312 
	$New
(c⁄° * 
vÆue
) {

313  
New
<
v8
::
Såög
>(
vÆue
);

314 
	}
}

316 
ölöe


317 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


318 
	$New
(c⁄° 
uöt16_t
 * 
vÆue
) {

319  
New
<
v8
::
Såög
>(
vÆue
);

320 
	}
}

322 
ölöe


323 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


324 
	$New
(
v8
::
Såög
::
Exã∫ÆSåögResour˚
 * 
vÆue
) {

325  
New
<
v8
::
Såög
>(
vÆue
);

326 
	}
}

328 
ölöe


329 
	gimp
::
Fa˘‹y
<
v8
::
Såög
>::
ªtu∫_t


330 
	$New
(
Exã∫ÆO√ByãSåögResour˚
 * 
vÆue
) {

331  
New
<
v8
::
Såög
>(
vÆue
);

332 
	}
}

334 
ölöe


335 
	gimp
::
Fa˘‹y
<
v8
::
RegExp
>::
ªtu∫_t


336 
New
(
v8
::
Loˇl
<v8::
Såög
> 
∑âîn
, v8::
RegExp
::
Fœgs
 
Êags
) {

337  
New
<
v8
::
RegExp
>(
∑âîn
, 
	gÊags
);

	@node_modules/nan/nan_object_wrap.h

9 #i‚de‡
NAN_OBJECT_WRAP_H_


10 
	#NAN_OBJECT_WRAP_H_


	)

12 ˛as†
	cObje˘Wøp
 {

13 
	mpublic
:

14 
	$Obje˘Wøp
() {

15 
ªfs_
 = 0;

19 
vútuÆ
 ~
	$Obje˘Wøp
() {

20 i‡(
	`≥rsi°ít
().
	`IsEm±y
()) {

24 
	`as£π
(
	`≥rsi°ít
().
	`IsNórDóth
());

25 
	`≥rsi°ít
().
	`CÀ¨Wók
();

26 
	`≥rsi°ít
().
	`Re£t
();

27 
	}
}

30 
	gãm∂©e
 <
˛ass
 
	gT
>

31 
ölöe
 
T
* 
Unwøp
(
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
) {

32 
as£π
(!
obje˘
.
IsEm±y
());

33 
as£π
(
obje˘
->
I¡î«lFõldCou¡
() > 0);

36 * 
	g±r
 = 
GëI¡î«lFõldPoöãr
(
obje˘
, 0);

37 
Obje˘Wøp
* 
	gwøp
 = 
°©ic_ˇ°
<Obje˘Wøp*>(
±r
);

38  
	g°©ic_ˇ°
<
	gT
*>(
	gwøp
);

42 
ölöe
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
	$h™dÀ
() {

43  
	`New
(
	`≥rsi°ít
());

44 
	}
}

47 
ölöe
 
	gPîsi°ít
<
	gv8
::
Obje˘
>& 
	$≥rsi°ít
() {

48  
h™dÀ_
;

49 
	}
}

52 
	g¥Ÿe˘ed
:

53 
ölöe
 
Wøp
(
v8
::
Loˇl
<v8::
Obje˘
> 
obje˘
) {

54 
as£π
(
≥rsi°ít
().
IsEm±y
());

55 
as£π
(
obje˘
->
I¡î«lFõldCou¡
() > 0);

56 
SëI¡î«lFõldPoöãr
(
obje˘
, 0, 
this
);

57 
≥rsi°ít
().
Re£t
(
obje˘
);

58 
MakeWók
();

61 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

62 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

64 
ölöe
 
	$MakeWók
() {

65 
	`≥rsi°ít
().
v8
::
Pîsi°ítBa£
<v8::
Obje˘
>::
	`SëWók
(

66 
this
, 
WókCÆlback
, 
v8
::
WókCÆlbackTy≥
::
kP¨amëî
);

67 
	`≥rsi°ít
().
	`M¨kIndïídít
();

68 
	}
}

70 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


72 
ölöe
 
	$MakeWók
() {

73 
	`≥rsi°ít
().
v8
::
Pîsi°ítBa£
<v8::
Obje˘
>::
	`SëWók
(
this
, 
WókCÆlback
);

74 
	`≥rsi°ít
().
	`M¨kIndïídít
();

75 
	}
}

79 
ölöe
 
	$MakeWók
() {

80 
	`≥rsi°ít
().
≥rsi°ít
.
	`MakeWók
(
this
, 
WókCÆlback
);

81 
	`≥rsi°ít
().
	`M¨kIndïídít
();

82 
	}
}

90 
vútuÆ
 
	$Ref
() {

91 
	`as£π
(!
	`≥rsi°ít
().
	`IsEm±y
());

92 
	`≥rsi°ít
().
	`CÀ¨Wók
();

93 
ªfs_
++;

94 
	}
}

105 
vútuÆ
 
	$Uƒef
() {

106 
	`as£π
(!
	`≥rsi°ít
().
	`IsEm±y
());

107 
	`as£π
(!
	`≥rsi°ít
().
	`IsWók
());

108 
	`as£π
(
ªfs_
 > 0);

109 i‡(--
ªfs_
 == 0)

110 
	`MakeWók
();

111 
	}
}

113 
	gªfs_
;

115 
	g¥iv©e
:

116 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Obje˘Wøp
)

117 #i‡
	`deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

118 (
V8_MAJOR_VERSION
 =4 && 
	`deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

121 
	`WókCÆlback
(
v8
::
WókCÆlbackInfo
<
Obje˘Wøp
> c⁄°& 
öfo
) {

122 
Obje˘Wøp
* 
wøp
 = 
öfo
.
	`GëP¨amëî
();

123 
	`as£π
(
wøp
->
ªfs_
 == 0);

124 
	`as£π
(
wøp
->
h™dÀ_
.
	`IsNórDóth
());

125 
wøp
->
h™dÀ_
.
	`Re£t
();

126 
dñëe
 
wøp
;

127 
	}
}

129 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


132 
WókCÆlback
(
v8
::
WókCÆlbackD©a
<v8::
Obje˘
, 
Obje˘Wøp
> c⁄°& 
d©a
) {

133 
Obje˘Wøp
* 
	gwøp
 = 
d©a
.
GëP¨amëî
();

134 
as£π
(
wøp
->
ªfs_
 == 0);

135 
as£π
(
wøp
->
h™dÀ_
.
IsNórDóth
());

136 
	gwøp
->
	gh™dÀ_
.
Re£t
();

137 
dñëe
 
	gwøp
;

142 
WókCÆlback
(
v8
::
Pîsi°ít
<v8::
VÆue
> 
vÆue
, *
d©a
) {

143 
Obje˘Wøp
 *
	gwøp
 = 
°©ic_ˇ°
<Obje˘Wøp*>(
d©a
);

144 
as£π
(
wøp
->
ªfs_
 == 0);

145 
as£π
(
wøp
->
h™dÀ_
.
IsNórDóth
());

146 
	gwøp
->
	gh™dÀ_
.
Re£t
();

147 
dñëe
 
	gwøp
;

151 
	gPîsi°ít
<
	gv8
::
Obje˘
> 
h™dÀ_
;

	@node_modules/nan/nan_persistent_12_inl.h

9 #i‚de‡
NAN_PERSISTENT_12_INL_H_


10 
	#NAN_PERSISTENT_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
> 
˛ass
 
	gPîsi°ít
 :

13 
public
 
v8
::
Pîsi°ít
<
T
, 
	gM
> {

14 
	gpublic
:

15 
NAN_INLINE
 
Pîsi°ít
(Ë: 
v8
::Pîsi°ít<
T
, 
	gM
>() {}

17 
	gãm∂©e
<
ty≥«me
 
	gS
> 
NAN_INLINE
 
Pîsi°ít
(
v8
::
Loˇl
<
S
> 
th©
) :

18 
v8
::
Pîsi°ít
<
T
, 
	gM
>(
	gv8
::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

20 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

21 
NAN_INLINE
 
Pîsi°ít
(c⁄° 
v8
::Pîsi°ít<
S
, 
M2
> &
th©
) :

22 
v8
::
Pîsi°ít
<
T
, 
	gM2
>(
	gv8
::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

24 
NAN_INLINE
 
Re£t
(Ë{ 
	gv8
::
Pîsi°ítBa£
<
T
>::Reset(); }

26 
	gãm∂©e
 <
ty≥«me
 
	gS
>

27 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

28 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

31 
	gãm∂©e
 <
ty≥«me
 
	gS
>

32 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

33 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

36 
	gãm∂©e
<
ty≥«me
 
	gP
>

37 
NAN_INLINE
 
SëWók
(

38 
P
 *
∑ømëî


39 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


40 , 
WókCÆlbackTy≥
 
ty≥
);

42 
	g¥iv©e
:

43 
NAN_INLINE
 
T
 *
›î©‹
*(Ëc⁄° {  *
Pîsi°ítBa£
<T>::
≥rsi°ít
; }

45 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

46 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M2
> &
th©
) {

47 
TYPE_CHECK
(
T
, 
S
);

49 
	gthis
->
Re£t
();

51 i‡(!
	gth©
.
IsEm±y
()) {

52 
	gthis
->
Re£t
(
th©
);

53 
	gM
::
C›y
(
th©
, 
this
);

58 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

59 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

60 
ãm∂©e
<
ty≥«me
 
T
>

61 
˛ass
 
GlobÆ
 : 
public
 
v8
::GlobÆ<
T
> {

62 
public
:

63 
NAN_INLINE
 
GlobÆ
(Ë: 
v8
::GlobÆ<
T
>() {}

65 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<S> 
th©
) :

66 
v8
::
GlobÆ
<
T
>(v8::
Isﬁ©e
::
GëCuºít
(), 
th©
) {}

68 
ãm∂©e
<
ty≥«me
 
S
>

69 
NAN_INLINE
 
GlobÆ
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
th©
) :

70 
v8
::
GlobÆ
<
S
>(v8::
Isﬁ©e
::
GëCuºít
(), 
th©
) {}

72 
NAN_INLINE
 
Re£t
(Ë{ 
v8
::
Pîsi°ítBa£
<
T
>::Reset(); }

74 
	gãm∂©e
 <
ty≥«me
 
	gS
>

75 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

76 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

79 
	gãm∂©e
 <
ty≥«me
 
	gS
>

80 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

81 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

84 
	gãm∂©e
<
ty≥«me
 
	gP
>

85 
NAN_INLINE
 
SëWók
(

86 
P
 *
∑ømëî


87 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


88 , 
WókCÆlbackTy≥
 
ty≥
) {

89 
	gªöãΩªt_ˇ°
<
	gPîsi°ít
<
	gT
>*>(
	gthis
)->
SëWók
(

90 
∑ømëî
, 
ˇŒback
, 
ty≥
);

94 
	gãm∂©e
<
ty≥«me
 
	gT
>

95 
˛ass
 
	gGlobÆ
 : 
public
 
v8
::
UniquePîsi°ít
<
T
> {

96 
public
:

97 
NAN_INLINE
 
GlobÆ
(Ë: 
v8
::
UniquePîsi°ít
<
T
>() {}

99 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<S> 
th©
) :

100 
v8
::
UniquePîsi°ít
<
T
>(v8::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

102 
	gãm∂©e
<
ty≥«me
 
	gS
>

103 
NAN_INLINE
 
GlobÆ
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
th©
) :

104 
v8
::
UniquePîsi°ít
<
S
>(v8::
Isﬁ©e
::
GëCuºít
(), 
	gth©
) {}

106 
NAN_INLINE
 
Re£t
(Ë{ 
	gv8
::
Pîsi°ítBa£
<
T
>::Reset(); }

108 
	gãm∂©e
 <
ty≥«me
 
	gS
>

109 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

110 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

113 
	gãm∂©e
 <
ty≥«me
 
	gS
>

114 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

115 
v8
::
Pîsi°ítBa£
<
T
>::
Re£t
(v8::
Isﬁ©e
::
GëCuºít
(), 
Ÿhî
);

118 
	gãm∂©e
<
ty≥«me
 
	gP
>

119 
NAN_INLINE
 
SëWók
(

120 
P
 *
∑ømëî


121 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


122 , 
WókCÆlbackTy≥
 
ty≥
) {

123 
	gªöãΩªt_ˇ°
<
	gPîsi°ít
<
	gT
>*>(
	gthis
)->
SëWók
(

124 
∑ømëî
, 
ˇŒback
, 
ty≥
);

	@node_modules/nan/nan_persistent_pre_12_inl.h

9 #i‚de‡
NAN_PERSISTENT_PRE_12_INL_H_


10 
	#NAN_PERSISTENT_PRE_12_INL_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cPîsi°ítBa£
 {

14 
	mv8
::
Pîsi°ít
<
T
> 
≥rsi°ít
;

15 
	mãm∂©e
<
ty≥«me
 
	mU
>

16 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
Pîsi°ítBa£
<U> &
p
);

17 
	mãm∂©e
<
ty≥«me
 
	mU
,Åy≥«mê
	mM
>

18 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
Pîsi°ít
<U, 
M
> &
p
);

19 
	mãm∂©e
<
ty≥«me
 
	mU
>

20 
‰õnd
 
	mv8
::
Loˇl
<
U
> 
New
(c⁄° 
GlobÆ
<U> &
p
);

21 
	mãm∂©e
<
ty≥«me
 
	mS
> 
‰õnd
 
˛ass
 
	mRëu∫VÆue
;

23 
	mpublic
:

24 
NAN_INLINE
 
	$Pîsi°ítBa£
() :

25 
	$≥rsi°ít
() {}

27 
NAN_INLINE
 
	$Re£t
() {

28 
≥rsi°ít
.
	`Di•o£
();

29 
≥rsi°ít
.
	`CÀ¨
();

30 
	}
}

32 
	gãm∂©e
<
ty≥«me
 
	gS
>

33 
NAN_INLINE
 
Re£t
(c⁄° 
v8
::
Loˇl
<
S
> &
Ÿhî
) {

34 
TYPE_CHECK
(
T
, 
S
);

36 i‡(!
	g≥rsi°ít
.
IsEm±y
()) {

37 
	g≥rsi°ít
.
Di•o£
();

40 i‡(
	gŸhî
.
IsEm±y
()) {

41 
	g≥rsi°ít
.
CÀ¨
();

43 
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
Ÿhî
);

47 
	gãm∂©e
<
ty≥«me
 
	gS
>

48 
NAN_INLINE
 
Re£t
(c⁄° 
Pîsi°ítBa£
<
S
> &
Ÿhî
) {

49 
TYPE_CHECK
(
T
, 
S
);

51 i‡(!
	g≥rsi°ít
.
IsEm±y
()) {

52 
	g≥rsi°ít
.
Di•o£
();

55 i‡(
	gŸhî
.
IsEm±y
()) {

56 
	g≥rsi°ít
.
CÀ¨
();

58 
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
Ÿhî
.
≥rsi°ít
);

62 
NAN_INLINE
 
boﬁ
 
	$IsEm±y
(Ëc⁄° {  
≥rsi°ít
.
	`IsEm±y
(); 
	}
}

64 
NAN_INLINE
 
	$Em±y
(Ë{ 
≥rsi°ít
.
	`CÀ¨
(); 
	}
}

66 
	gãm∂©e
<
ty≥«me
 
	gS
>

67 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
) {

68  
this
->
≥rsi°ít
 =
th©
.persistent;

71 
	gãm∂©e
<
ty≥«me
 
	gS
>

72 
NAN_INLINE
 
boﬁ
 
	g›î©‹
==(c⁄° 
v8
::
Loˇl
<
S
> &
th©
) {

73  
this
->
≥rsi°ít
 =
th©
;

76 
	gãm∂©e
<
ty≥«me
 
	gS
>

77 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
) {

78  !
›î©‹
==(
th©
);

81 
	gãm∂©e
<
ty≥«me
 
	gS
>

82 
NAN_INLINE
 
boﬁ
 
	g›î©‹
!=(c⁄° 
v8
::
Loˇl
<
S
> &
th©
) {

83  !
›î©‹
==(
th©
);

86 
	gãm∂©e
<
ty≥«me
 
	gP
>

87 
NAN_INLINE
 
SëWók
(

88 
P
 *
∑ømëî


89 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


90 , 
WókCÆlbackTy≥
 
ty≥
);

92 
NAN_INLINE
 
	$CÀ¨Wók
(Ë{ 
≥rsi°ít
.
	`CÀ¨Wók
(); 
	}
}

94 
NAN_INLINE
 
	$M¨kIndïídít
(Ë{ 
≥rsi°ít
.
	`M¨kIndïídít
(); 
	}
}

96 
NAN_INLINE
 
boﬁ
 
	$IsIndïídít
(Ëc⁄° {  
≥rsi°ít
.
	`IsIndïídít
(); 
	}
}

98 
NAN_INLINE
 
boﬁ
 
	$IsNórDóth
(Ëc⁄° {  
≥rsi°ít
.
	`IsNórDóth
(); 
	}
}

100 
NAN_INLINE
 
boﬁ
 
	$IsWók
(Ëc⁄° {  
≥rsi°ít
.
	`IsWók
(); 
	}
}

102 
	g¥iv©e
:

103 
NAN_INLINE
 
ex∂icô
 
Pîsi°ítBa£
(
v8
::
Pîsi°ít
<
T
> 
th©
) :

104 
	$≥rsi°ít
(
th©
Ë{ 
	}
}

105 
NAN_INLINE
 
ex∂icô
 
	$Pîsi°ítBa£
(
T
 *
vÆ
Ë: 
	$≥rsi°ít
(
vÆ
Ë{
	}
}

106 
ãm∂©e
<
ty≥«me
 
S
,Åy≥«mê
	gM
> 
‰õnd
 
˛ass
 
	gPîsi°ít
;

107 
	gãm∂©e
<
ty≥«me
 
	gS
> 
‰õnd
 
˛ass
 
	gGlobÆ
;

108 
‰õnd
 
˛ass
 
	gObje˘Wøp
;

111 
	gãm∂©e
<
ty≥«me
 
	gT
>

112 ˛as†
	cN⁄C›yabÀPîsi°ítTøôs
 {

113 
	mpublic
:

114 
Pîsi°ít
<
	tT
, 
	tN⁄C›yabÀPîsi°ítTøôs
<T> >

115 
	tN⁄C›yabÀPîsi°ít
;

116 c⁄° 
boﬁ
 
	mkRe£tInDe°ru˘‹
 = 
Ál£
;

117 
	mãm∂©e
<
ty≥«me
 
	mS
,Åy≥«mê
	mM
>

118 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M
> &
sour˚
,

119 
N⁄C›yabÀPîsi°ít
 *
de°
) {

120 
	mUncompûabÀ
<
	mv8
::
Obje˘
>();

123 
	gãm∂©e
<
ty≥«me
 
	gO
> 
NAN_INLINE
 
	$UncompûabÀ
() {

124 
	`TYPE_CHECK
(
O
, 
v8
::
Primôive
);

125 
	}
}

128 
	gãm∂©e
<
ty≥«me
 
	gT
>

129 
	sC›yabÀPîsi°ítTøôs
 {

130 
	mPîsi°ít
<
	tT
, 
	tC›yabÀPîsi°ítTøôs
<T> > 
	tC›yabÀPîsi°ít
;

131 c⁄° 
boﬁ
 
	mkRe£tInDe°ru˘‹
 = 
åue
;

132 
	mãm∂©e
<
ty≥«me
 
	mS
,Åy≥«mê
	mM
>

133 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M
> &
sour˚
,

134 
C›yabÀPîsi°ít
 *
de°
) {}

137 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
> 
˛ass
 
	gPîsi°ít
 :

138 
public
 
Pîsi°ítBa£
<
T
> {

139 
public
:

140 
NAN_INLINE
 
Pîsi°ít
() {}

142 
ãm∂©e
<
ty≥«me
 
S
> 
NAN_INLINE
 
Pîsi°ít
(
v8
::
H™dÀ
<S> 
th©
)

143 : 
Pîsi°ítBa£
<
T
>(
v8
::
Pîsi°ít
<T>::
New
(
th©
)) {

144 
TYPE_CHECK
(
T
, 
S
);

147 
NAN_INLINE
 
Pîsi°ít
(c⁄° Pîsi°íà&
th©
Ë: 
Pîsi°ítBa£
<
T
>() {

148 
C›y
(
th©
);

151 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

152 
NAN_INLINE
 
Pîsi°ít
(c⁄° Pîsi°ít<
S
, 
M2
> &
th©
) :

153 
Pîsi°ítBa£
<
T
>() {

154 
C›y
(
th©
);

157 
NAN_INLINE
 
	gPîsi°ít
 &
	g›î©‹
=(c⁄° 
Pîsi°ít
 &
th©
) {

158 
C›y
(
th©
);

159  *
	gthis
;

162 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gM2
>

163 
NAN_INLINE
 
	gPîsi°ít
 &
	g›î©‹
=(c⁄° 
Pîsi°ít
<
S
, 
	gM2
> &
	gth©
) {

164 
C›y
(
th©
);

165  *
	gthis
;

168 
	gNAN_INLINE
 ~
Pîsi°ít
() {

169 i‡(
	gM
::
kRe£tInDe°ru˘‹
Ë
this
->
Re£t
();

172 
	g¥iv©e
:

173 
NAN_INLINE
 
T
 *
›î©‹
*(Ëc⁄° {  *
Pîsi°ítBa£
<T>::
≥rsi°ít
; }

175 
	gãm∂©e
<
ty≥«me
 
	gS
,Åy≥«mê
	gM2
>

176 
NAN_INLINE
 
C›y
(c⁄° 
Pîsi°ít
<
S
, 
M2
> &
th©
) {

177 
TYPE_CHECK
(
T
, 
S
);

179 
	gthis
->
Re£t
();

181 i‡(!
	gth©
.
IsEm±y
()) {

182 
	gthis
->
	g≥rsi°ít
 = 
v8
::
Pîsi°ít
<
T
>::
New
(
th©
.
≥rsi°ít
);

183 
	gM
::
C›y
(
th©
, 
this
);

188 
	gãm∂©e
<
ty≥«me
 
	gT
>

189 
˛ass
 
	gGlobÆ
 : 
public
 
Pîsi°ítBa£
<
T
> {

190 
	sRVÆue
 {

191 
NAN_INLINE
 
ex∂icô
 
RVÆue
(
GlobÆ
* 
obj
Ë: 
obje˘
(obj) {}

192 
GlobÆ
* 
obje˘
;

195 
	gpublic
:

196 
NAN_INLINE
 
GlobÆ
(Ë: 
Pîsi°ítBa£
<
T
>(0) { }

198 
ãm∂©e
 <
ty≥«me
 
S
>

199 
NAN_INLINE
 
GlobÆ
(
v8
::
Loˇl
<
S
> 
th©
)

200 : 
Pîsi°ítBa£
<
T
>(
v8
::
Pîsi°ít
<T>::
New
(
th©
)) {

201 
TYPE_CHECK
(
T
, 
S
);

204 
	gãm∂©e
 <
ty≥«me
 
	gS
>

205 
NAN_INLINE
 
GlobÆ
(c⁄° 
Pîsi°ítBa£
<
S
> &
th©
)

206 : 
Pîsi°ítBa£
<
T
>(
th©
) {

207 
TYPE_CHECK
(
T
, 
S
);

212 
NAN_INLINE
 
GlobÆ
(
RVÆue
 
rvÆue
)

213 : 
Pîsi°ítBa£
<
T
>(
rvÆue
.
obje˘
->
≥rsi°ít
) {

214 
rvÆue
.
obje˘
->
Re£t
();

216 
	gNAN_INLINE
 ~
GlobÆ
(Ë{ 
	gthis
->
Re£t
(); }

220 
	gãm∂©e
<
ty≥«me
 
	gS
>

221 
NAN_INLINE
 
	gGlobÆ
 &
	g›î©‹
=(
GlobÆ
<
S
> 
rhs
) {

222 
TYPE_CHECK
(
T
, 
S
);

223 
	gthis
->
Re£t
(
rhs
.
≥rsi°ít
);

224 
	grhs
.
Re£t
();

225  *
	gthis
;

230 
NAN_INLINE
 
›î©‹
 
RVÆue
(Ë{  RVÆue(
this
); }

234 
GlobÆ
 
Pass
(Ë{  GlobÆ(
RVÆue
(
this
)); }

236 
	g¥iv©e
:

237 
GlobÆ
(Global &);

238 
	g›î©‹
=(
GlobÆ
 &);

239 
	gãm∂©e
<
ty≥«me
 
	gS
> 
‰õnd
 
˛ass
 
	gRëu∫VÆue
;

	@node_modules/nan/nan_string_bytes.h

22 #i‚de‡
NAN_STRING_BYTES_H_


23 
	#NAN_STRING_BYTES_H_


	)

27 
«me•a˚
 
	gimp
 {

29 
usög
 
	gv8
::
Loˇl
;

30 
usög
 
	gv8
::
Obje˘
;

31 
usög
 
	gv8
::
Såög
;

32 
usög
 
	gv8
::
VÆue
;

37 
	#ba£64_ícoded_size
(
size
Ë((sizê+ 2 - ((sizê+ 2Ë% 3)Ë/ 3 * 4)

	)

43 
boﬁ
 
c⁄èös_n⁄_ascii_¶ow
(c⁄° * 
buf
, 
size_t
 
Àn
) {

44 
size_t
 
	gi
 = 0; i < 
	gÀn
; ++i) {

45 i‡(
	gbuf
[
i
] & 0x80Ë 
	gåue
;

47  
	gÁl£
;

51 
boﬁ
 
c⁄èös_n⁄_ascii
(c⁄° * 
§c
, 
size_t
 
Àn
) {

52 i‡(
	gÀn
 < 16) {

53  
c⁄èös_n⁄_ascii_¶ow
(
§c
, 
Àn
);

56 c⁄° 
	gbyãs_≥r_w‹d
 = (*);

57 c⁄° 
	gÆign_mask
 = 
byãs_≥r_w‹d
 - 1;

58 c⁄° 
	gu«lig√d
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
§c
Ë& 
Æign_mask
;

60 i‡(
	gu«lig√d
 > 0) {

61 c⁄° 
	gn
 = 
byãs_≥r_w‹d
 - 
u«lig√d
;

62 i‡(
c⁄èös_n⁄_ascii_¶ow
(
§c
, 
n
)Ë 
	gåue
;

63 
	g§c
 +
n
;

64 
	gÀn
 -
n
;

68 #i‡
deföed
(
__x86_64__
Ë|| deföed(
_WIN64
)

69 c⁄° 
uöçå_t
 
	gmask
 = 0x8080808080808080ll;

71 c⁄° 
uöçå_t
 
	gmask
 = 0x80808080l;

74 c⁄° 
uöçå_t
* 
	g§cw
 = 
ªöãΩªt_ˇ°
<c⁄° uöçå_t*>(
§c
);

76 
size_t
 
	gi
 = 0, 
	gn
 = 
Àn
 / 
byãs_≥r_w‹d
; i <Ç; ++i) {

77 i‡(
	g§cw
[
i
] & 
	gmask
Ë 
	gåue
;

80 c⁄° 
	gªmaödî
 = 
Àn
 & 
Æign_mask
;

81 i‡(
	gªmaödî
 > 0) {

82 c⁄° 
size_t
 
	goff£t
 = 
Àn
 - 
ªmaödî
;

83 i‡(
c⁄èös_n⁄_ascii_¶ow
(
§c
 + 
off£t
, 
ªmaödî
)Ë 
	gåue
;

86  
	gÁl£
;

90 
f‹˚_ascii_¶ow
(c⁄° * 
§c
, * 
d°
, 
size_t
 
Àn
) {

91 
size_t
 
	gi
 = 0; i < 
	gÀn
; ++i) {

92 
	gd°
[
i
] = 
§c
[i] & 0x7f;

97 
f‹˚_ascii
(c⁄° * 
§c
, * 
d°
, 
size_t
 
Àn
) {

98 i‡(
	gÀn
 < 16) {

99 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
Àn
);

103 c⁄° 
	gbyãs_≥r_w‹d
 = (*);

104 c⁄° 
	gÆign_mask
 = 
byãs_≥r_w‹d
 - 1;

105 c⁄° 
	g§c_u«lign
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
§c
Ë& 
Æign_mask
;

106 c⁄° 
	gd°_u«lign
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
d°
Ë& 
Æign_mask
;

108 i‡(
	g§c_u«lign
 > 0) {

109 i‡(
	g§c_u«lign
 =
d°_u«lign
) {

110 c⁄° 
u«lign
 = 
byãs_≥r_w‹d
 - 
§c_u«lign
;

111 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
u«lign
);

112 
	g§c
 +
u«lign
;

113 
	gd°
 +
u«lign
;

114 
	gÀn
 -
§c_u«lign
;

116 
f‹˚_ascii_¶ow
(
§c
, 
d°
, 
Àn
);

121 #i‡
deföed
(
__x86_64__
Ë|| deföed(
_WIN64
)

122 c⁄° 
uöçå_t
 
	gmask
 = ~0x8080808080808080ll;

124 c⁄° 
uöçå_t
 
	gmask
 = ~0x80808080l;

127 c⁄° 
uöçå_t
* 
	g§cw
 = 
ªöãΩªt_ˇ°
<c⁄° uöçå_t*>(
§c
);

128 
uöçå_t
* 
	gd°w
 = 
ªöãΩªt_ˇ°
<uöçå_t*>(
d°
);

130 
size_t
 
	gi
 = 0, 
	gn
 = 
Àn
 / 
byãs_≥r_w‹d
; i <Ç; ++i) {

131 
	gd°w
[
i
] = 
§cw
[i] & 
mask
;

134 c⁄° 
	gªmaödî
 = 
Àn
 & 
Æign_mask
;

135 i‡(
	gªmaödî
 > 0) {

136 c⁄° 
size_t
 
	goff£t
 = 
Àn
 - 
ªmaödî
;

137 
f‹˚_ascii_¶ow
(
§c
 + 
off£t
, 
d°
 + off£t, 
ªmaödî
);

142 
size_t
 
ba£64_ícode
(c⁄° * 
§c
,

143 
size_t
 
¶í
,

144 * 
d°
,

145 
size_t
 
dÀn
) {

147 
as£π
(
dÀn
 >
ba£64_ícoded_size
(
¶í
) &&

150 
	gdÀn
 = 
ba£64_ícoded_size
(
¶í
);

152 
	ga
;

153 
	gb
;

154 
	gc
;

155 
	gi
;

156 
	gk
;

157 
	gn
;

159 c⁄° 
	gèbÀ
[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

163 
	gi
 = 0;

164 
	gk
 = 0;

165 
	gn
 = 
¶í
 / 3 * 3;

167 
	gi
 < 
	gn
) {

168 
	ga
 = 
§c
[
i
 + 0] & 0xff;

169 
	gb
 = 
§c
[
i
 + 1] & 0xff;

170 
	gc
 = 
§c
[
i
 + 2] & 0xff;

172 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

173 
	gd°
[
k
 + 1] = 
èbÀ
[((
a
 & 3Ë<< 4Ë| (
b
 >> 4)];

174 
	gd°
[
k
 + 2] = 
èbÀ
[((
b
 & 0x0fË<< 2Ë| (
c
 >> 6)];

175 
	gd°
[
k
 + 3] = 
èbÀ
[
c
 & 0x3f];

177 
	gi
 += 3;

178 
	gk
 += 4;

181 i‡(
	gn
 !
¶í
) {

182 
¶í
 - 
n
) {

184 
a
 = 
§c
[
i
 + 0] & 0xff;

185 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

186 
	gd°
[
k
 + 1] = 
èbÀ
[(
a
 & 3) << 4];

187 
	gd°
[
k
 + 2] = '=';

188 
	gd°
[
k
 + 3] = '=';

192 
a
 = 
§c
[
i
 + 0] & 0xff;

193 
	gb
 = 
§c
[
i
 + 1] & 0xff;

194 
	gd°
[
k
 + 0] = 
èbÀ
[
a
 >> 2];

195 
	gd°
[
k
 + 1] = 
èbÀ
[((
a
 & 3Ë<< 4Ë| (
b
 >> 4)];

196 
	gd°
[
k
 + 2] = 
èbÀ
[(
b
 & 0x0f) << 2];

197 
	gd°
[
k
 + 3] = '=';

202  
	gdÀn
;

206 
size_t
 
hex_ícode
(c⁄° * 
§c
, size_à
¶í
, * 
d°
, size_à
dÀn
) {

208 
as£π
(
dÀn
 >
¶í
 * 2 &&

211 
	gdÀn
 = 
¶í
 * 2;

212 
uöt32_t
 
	gi
 = 0, 
	gk
 = 0; k < 
	gdÀn
; i += 1, k += 2) {

213 c⁄° 
hex
[] = "0123456789abcdef";

214 
uöt8_t
 
	gvÆ
 = 
°©ic_ˇ°
<uöt8_t>(
§c
[
i
]);

215 
	gd°
[
k
 + 0] = 
hex
[
vÆ
 >> 4];

216 
	gd°
[
k
 + 1] = 
hex
[
vÆ
 & 15];

219  
	gdÀn
;

224 
	gLoˇl
<
	gVÆue
> 
Encode
(c⁄° * 
buf
,

225 
size_t
 
buÊí
,

226 
Encodög
 
ícodög
) {

227 
as£π
(
buÊí
 <
node
::
Buf„r
::
kMaxLígth
);

228 i‡(!
	gbuÊí
 && 
	gícodög
 !
BUFFER
)

229  
New
("").
ToLoˇlChecked
();

231 
	gLoˇl
<
	gSåög
> 
	gvÆ
;

232 
	gícodög
) {

233 
	gBUFFER
:

234  
C›yBuf„r
(
buf
, 
buÊí
).
ToLoˇlChecked
();

236 
	gASCII
:

237 i‡(
c⁄èös_n⁄_ascii
(
buf
, 
buÊí
)) {

238 * 
	gout
 = 
√w
 [
buÊí
];

239 
f‹˚_ascii
(
buf
, 
out
, 
buÊí
);

240 
	gvÆ
 = 
New
<
Såög
>(
out
, 
	gbuÊí
).
ToLoˇlChecked
();

241 
	gdñëe
[] 
	gout
;

243 
	gvÆ
 = 
New
<
Såög
>(
buf
, 
	gbuÊí
).
ToLoˇlChecked
();

247 
	gUTF8
:

248 
vÆ
 = 
New
<
Såög
>(
buf
, 
	gbuÊí
).
ToLoˇlChecked
();

251 
	gBINARY
: {

253 c⁄° *
cbuf
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
buf
);

254 
uöt16_t
 * 
	gtwobyãbuf
 = 
√w
 uöt16_t[
buÊí
];

255 
size_t
 
	gi
 = 0; i < 
	gbuÊí
; i++) {

257 
	gtwobyãbuf
[
i
] = 
cbuf
[i];

259 
	gvÆ
 = 
New
<
Såög
>(
twobyãbuf
, 
	gbuÊí
).
ToLoˇlChecked
();

260 
	gdñëe
[] 
	gtwobyãbuf
;

264 
	gBASE64
: {

265 
size_t
 
dÀn
 = 
ba£64_ícoded_size
(
buÊí
);

266 * 
	gd°
 = 
√w
 [
dÀn
];

268 
size_t
 
	gwrôãn
 = 
ba£64_ícode
(
buf
, 
buÊí
, 
d°
, 
dÀn
);

269 
as£π
(
wrôãn
 =
dÀn
);

271 
	gvÆ
 = 
New
<
Såög
>(
d°
, 
	gdÀn
).
ToLoˇlChecked
();

272 
	gdñëe
[] 
	gd°
;

276 
	gUCS2
: {

277 c⁄° 
uöt16_t
* 
d©a
 = 
ªöãΩªt_ˇ°
<c⁄° uöt16_t*>(
buf
);

278 
	gvÆ
 = 
New
<
Såög
>(
d©a
, 
	gbuÊí
 / 2).
ToLoˇlChecked
();

282 
	gHEX
: {

283 
size_t
 
dÀn
 = 
buÊí
 * 2;

284 * 
	gd°
 = 
√w
 [
dÀn
];

285 
size_t
 
	gwrôãn
 = 
hex_ícode
(
buf
, 
buÊí
, 
d°
, 
dÀn
);

286 
as£π
(
wrôãn
 =
dÀn
);

288 
	gvÆ
 = 
New
<
Såög
>(
d°
, 
	gdÀn
).
ToLoˇlChecked
();

289 
	gdñëe
[] 
	gd°
;

294 
as£π
(0 && "unknownÉncoding");

298  
	gvÆ
;

301 #unde‡
ba£64_ícoded_size


	@node_modules/nan/nan_typedarray_contents.h

9 #i‚de‡
NAN_TYPEDARRAY_CONTENTS_H_


10 
	#NAN_TYPEDARRAY_CONTENTS_H_


	)

12 
	gãm∂©e
<
ty≥«me
 
	gT
>

13 ˛as†
	cTy≥dAºayC⁄ã¡s
 {

14 
	mpublic
:

15 
NAN_INLINE
 
ex∂icô
 
Ty≥dAºayC⁄ã¡s
(
v8
::
Loˇl
<v8::
VÆue
> 
‰om
) :

16 
Àngth_
(0), 
	$d©a_
(
NULL
) {

18 
size_t
 
Àngth
 = 0;

19 * 
d©a
 = 
NULL
;

21 #i‡
	`deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

22 (
V8_MAJOR_VERSION
 =4 && 
	`deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

24 i‡(
‰om
->
	`IsAºayBuf„rVõw
()) {

25 
v8
::
Loˇl
<v8::
AºayBuf„rVõw
> 
¨øy
 =

26 
v8
::
Loˇl
<v8::
AºayBuf„rVõw
>::
	`Ca°
(
‰om
);

28 c⁄° 
size_t
 
byã_Àngth
 = 
¨øy
->
	`ByãLígth
();

29 c⁄° 
±rdiff_t
 
byã_off£t
 = 
¨øy
->
	`ByãOff£t
();

30 
v8
::
Loˇl
<v8::
AºayBuf„r
> 
buf„r
 = 
¨øy
->
	`Buf„r
();

32 
Àngth
 = 
byã_Àngth
 / (
T
);

33 
d©a
 = 
°©ic_ˇ°
<*>(
buf„r
->
	`GëC⁄ã¡s
().
	`D©a
()Ë+ 
byã_off£t
;

38 i‡(
‰om
->
	`IsObje˘
(Ë&& !‰om->
	`IsNuŒ
()) {

39 
v8
::
Loˇl
<v8::
Obje˘
> 
¨øy
 = v8::Loˇl<v8::Obje˘>::
	`Ca°
(
‰om
);

41 
MaybeLoˇl
<
v8
::
VÆue
> 
buf„r
 = 
	`Gë
(
¨øy
,

42 
New
<
v8
::
Såög
>("buf„r").
	`ToLoˇlChecked
());

43 
MaybeLoˇl
<
v8
::
VÆue
> 
byã_Àngth
 = 
	`Gë
(
¨øy
,

44 
New
<
v8
::
Såög
>("byãLígth").
	`ToLoˇlChecked
());

45 
MaybeLoˇl
<
v8
::
VÆue
> 
byã_off£t
 = 
	`Gë
(
¨øy
,

46 
New
<
v8
::
Såög
>("byãOff£t").
	`ToLoˇlChecked
());

48 i‡(!
buf„r
.
	`IsEm±y
() &&

49 !
byã_Àngth
.
	`IsEm±y
(Ë&& byã_Àngth.
	`ToLoˇlChecked
()->
	`IsUöt32
() &&

50 !
byã_off£t
.
	`IsEm±y
(Ë&& byã_off£t.
	`ToLoˇlChecked
()->
	`IsUöt32
()) {

51 
d©a
 = 
¨øy
->
	`GëIndexedPr›îtõsExã∫ÆAºayD©a
();

52 if(
d©a
) {

53 
Àngth
 = 
byã_Àngth
.
	`ToLoˇlChecked
()->
	`Uöt32VÆue
(Ë/ (
T
);

60 #i‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER >1900 || 
__˝lu•lus
 >= 201103L

61 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë% 
	`Æignof
 (
T
) == 0);

62 #ñi‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER >1600 || deföed(
__GNUC__
)

63 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë% 
	`__Æignof
(
T
) == 0);

65 
	`as£π
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
d©a
Ë%  (
T
) == 0);

68 
Àngth_
 = 
Àngth
;

69 
d©a_
 = 
°©ic_ˇ°
<
T
*>(
d©a
);

72 
NAN_INLINE
 
size_t
 
	$Àngth
(Ëc⁄° {  
Àngth_
; 
	}
}

73 
NAN_INLINE
 
T
* 
	g›î©‹
*(Ë{  
	gd©a_
; }

74 
NAN_INLINE
 c⁄° 
T
* 
	g›î©‹
*(Ëc⁄° {  
	gd©a_
; }

76 
	g¥iv©e
:

77 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
Ty≥dAºayC⁄ã¡s
)

80 *
›î©‹
 
	`√w
(
size_t
 
size
);

81 
›î©‹
 
	`dñëe
(*, 
size_t
);

83 
size_t
 
Àngth_
;

84 
T
* 
d©a_
;

85 
	}
};

	@node_modules/nan/nan_weak.h

9 #i‚de‡
NAN_WEAK_H_


10 
	#NAN_WEAK_H_


	)

12 c⁄° 
	gkI¡î«lFõldsInWókCÆlback
 = 2;

13 c⁄° 
	gkNoI¡î«lFõldIndex
 = -1;

15 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

16 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

17 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

18 
v8
::
WókCÆlbackInfo
<WókCÆlbackInfo<
T
> > c⁄°&

	)

19 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

20 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

21 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

22 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

23 #ñi‡
NODE_MODULE_VERSION
 > 
IOJS_1_1_MODULE_VERSION


24 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

25 
v8
::
Ph™tomCÆlbackD©a
<
WókCÆlbackInfo
<
T
> > c⁄°&

	)

26 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

27 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

28 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

29 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

30 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


31 
	#NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 \

32 
v8
::
Ph™tomCÆlbackD©a
<
WókCÆlbackInfo
<
T
> > c⁄°&

	)

33 
	#NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 \

34 
v8
::
I¡î«lFõldsCÆlbackD©a
<
WókCÆlbackInfo
<
T
>, > c⁄°&

	)

35 
	#NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


	)

36 
	#NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


	)

37 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


38 
	#NAN_WEAK_CALLBACK_DATA_TYPE_
 \

39 
v8
::
WókCÆlbackD©a
<
S
, 
WókCÆlbackInfo
<
T
> > c⁄°&

	)

40 
	#NAN_WEAK_CALLBACK_SIG_
 
NAN_WEAK_CALLBACK_DATA_TYPE_


	)

42 
	#NAN_WEAK_CALLBACK_DATA_TYPE_
 *

	)

43 
	#NAN_WEAK_CALLBACK_SIG_
 \

44 
v8
::
Pîsi°ít
<v8::
VÆue
>, 
NAN_WEAK_CALLBACK_DATA_TYPE_


	)

47 
	gãm∂©e
<
ty≥«me
 
	gT
>

48 ˛as†
	cWókCÆlbackInfo
 {

49 
	mpublic
:

50 (*
	tCÆlback
)(c⁄° 
	tWókCÆlbackInfo
<
	tT
>& 
	td©a
);

51 
	`WókCÆlbackInfo
(

52 
Pîsi°ít
<
v8
::
VÆue
> *
≥rsi°ít


53 , 
CÆlback
 
ˇŒback


54 , *
∑ømëî


55 , *
fõld1
 = 0

56 , *
fõld2
 = 0) :

57 
	`ˇŒback_
(
ˇŒback
), 
	`isﬁ©e_
(0), 
	$∑ømëî_
(
∑ømëî
) {

58 
°d
::
	`mem˝y
(&
≥rsi°ít_
, 
≥rsi°ít
,  (
v8
::
Pîsi°ít
<v8::
VÆue
>));

59 
öã∫Æ_fõlds_
[0] = 
fõld1
;

60 
öã∫Æ_fõlds_
[1] = 
fõld2
;

62 
NAN_INLINE
 
v8
::
Isﬁ©e
 *
	$GëIsﬁ©e
(Ëc⁄° {  
isﬁ©e_
; 
	}
}

63 
NAN_INLINE
 
T
 *
	$GëP¨amëî
(Ëc⁄° {  
°©ic_ˇ°
<
T
*>(
∑ømëî_
); 
	}
}

64 
NAN_INLINE
 *
	$GëI¡î«lFõld
(
ödex
) const {

65 
	`as£π
((
ödex
 == 0 || index == 1) && "internal field index out of bounds");

66 i‡(
ödex
 == 0) {

67  
öã∫Æ_fõlds_
[0];

69  
öã∫Æ_fõlds_
[1];

71 
	}
}

73 
	g¥iv©e
:

74 
	$NAN_DISALLOW_ASSIGN_COPY_MOVE
(
WókCÆlbackInfo
)

75 
CÆlback
 
ˇŒback_
;

76 
v8
::
Isﬁ©e
 *
isﬁ©e_
;

77 *
∑ømëî_
;

78 *
öã∫Æ_fõlds_
[
kI¡î«lFõldsInWókCÆlback
];

79 
v8
::
Pîsi°ít
<v8::
VÆue
> 
≥rsi°ít_
;

80 
ãm∂©e
<
ty≥«me
 
S
,Åy≥«mê
M
> 
‰õnd
 
˛ass
 
Pîsi°ít
;

81 
ãm∂©e
<
ty≥«me
 
S
> 
‰õnd
 
˛ass
 
Pîsi°ítBa£
;

82 #i‡
NODE_MODULE_VERSION
 <
NODE_0_12_MODULE_VERSION


83 #i‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


84 
ãm∂©e
<
ty≥«me
 
S
>

85 
	`övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
);

86 
ãm∂©e
<
ty≥«me
 
S
>

87 
WókCÆlbackInfo
 *
	`unwøp
(
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
);

89 
	`övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
);

90 
WókCÆlbackInfo
 *
	`unwøp
(
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
);

93 
	`övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
);

94 
	`övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
);

95 
WókCÆlbackInfo
 *
	`unwøµ¨amëî
(

96 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
);

97 
WókCÆlbackInfo
 *
	`unwø±wofõld
(

98 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
);

100 
	}
};

103 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

104 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

106 
ãm∂©e
<
ty≥«me
 
T
>

108 
WókCÆlbackInfo
<
T
>::
	$övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
) {

109 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøµ¨amëî
(
d©a
);

110 i‡(
d©a
.
	`IsFú°Pass
()) {

111 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

112 
d©a
.
	`SëSec⁄dPassCÆlback
(
övokï¨amëî
);

114 
cböfo
->
	`ˇŒback_
(*cbinfo);

115 
dñëe
 
cböfo
;

117 
	}
}

119 
	gãm∂©e
<
ty≥«me
 
	gT
>

121 
	gWókCÆlbackInfo
<
	gT
>::
	$övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
) {

122 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwø±wofõld
(
d©a
);

123 i‡(
d©a
.
	`IsFú°Pass
()) {

124 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

125 
d©a
.
	`SëSec⁄dPassCÆlback
(
övokëwofõld
);

127 
cböfo
->
	`ˇŒback_
(*cbinfo);

128 
dñëe
 
cböfo
;

130 
	}
}

132 
	gãm∂©e
<
ty≥«me
 
	gT
>

133 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøµ¨amëî
(

134 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
) {

135 
WókCÆlbackInfo
<
T
> *
cböfo
 =

136 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëP¨amëî
());

137 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

138  
cböfo
;

139 
	}
}

141 
	gãm∂©e
<
ty≥«me
 
	gT
>

142 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwø±wofõld
(

143 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
) {

144 
WókCÆlbackInfo
<
T
> *
cböfo
 =

145 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëI¡î«lFõld
(0));

146 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

147  
cböfo
;

148 
	}
}

150 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_SIG_


151 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_SIG_


152 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


153 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


154 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


156 
	gãm∂©e
<
ty≥«me
 
	gT
>

158 
	gWókCÆlbackInfo
<
	gT
>::
	$övokï¨amëî
(
NAN_WEAK_PARAMETER_CALLBACK_SIG_
 
d©a
) {

159 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøµ¨amëî
(
d©a
);

160 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

161 
cböfo
->
	`ˇŒback_
(*cbinfo);

162 
dñëe
 
cböfo
;

163 
	}
}

165 
	gãm∂©e
<
ty≥«me
 
	gT
>

167 
	gWókCÆlbackInfo
<
	gT
>::
	$övokëwofõld
(
NAN_WEAK_TWOFIELD_CALLBACK_SIG_
 
d©a
) {

168 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwø±wofõld
(
d©a
);

169 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

170 
cböfo
->
	`ˇŒback_
(*cbinfo);

171 
dñëe
 
cböfo
;

172 
	}
}

174 
	gãm∂©e
<
ty≥«me
 
	gT
>

175 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøµ¨amëî
(

176 
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_
 
d©a
) {

177 
WókCÆlbackInfo
<
T
> *
cböfo
 =

178 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëP¨amëî
());

179 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

180  
cböfo
;

181 
	}
}

183 
	gãm∂©e
<
ty≥«me
 
	gT
>

184 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwø±wofõld
(

185 
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_
 
d©a
) {

186 
WókCÆlbackInfo
<
T
> *
cböfo
 =

187 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
.
	`GëI¡î«lFõld1
());

188 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

189  
cböfo
;

190 
	}
}

192 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_SIG_


193 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_SIG_


194 #unde‡
NAN_WEAK_PARAMETER_CALLBACK_DATA_TYPE_


195 #unde‡
NAN_WEAK_TWOFIELD_CALLBACK_DATA_TYPE_


196 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


198 
	gãm∂©e
<
ty≥«me
 
	gT
>

199 
	gãm∂©e
<
ty≥«me
 
	gS
>

200 
	gWókCÆlbackInfo
<
	gT
>::
	$övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
) {

201 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøp
(
d©a
);

202 
cböfo
->
≥rsi°ít_
.
	`Re£t
();

203 
cböfo
->
	`ˇŒback_
(*cbinfo);

204 
dñëe
 
cböfo
;

205 
	}
}

207 
	gãm∂©e
<
ty≥«me
 
	gT
>

208 
	gãm∂©e
<
ty≥«me
 
	gS
>

209 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøp
(

210 
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
) {

211 *
∑ømëî
 = 
d©a
.
	`GëP¨amëî
();

212 
WókCÆlbackInfo
<
T
> *
cböfo
 =

213 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
∑ømëî
);

214 
cböfo
->
isﬁ©e_
 = 
d©a
.
	`GëIsﬁ©e
();

215  
cböfo
;

216 
	}
}

218 #unde‡
NAN_WEAK_CALLBACK_SIG_


219 #unde‡
NAN_WEAK_CALLBACK_DATA_TYPE_


222 
	gãm∂©e
<
ty≥«me
 
	gT
>

223 
	gWókCÆlbackInfo
<
	gT
>::
	$övoke
(
NAN_WEAK_CALLBACK_SIG_
 
d©a
) {

224 
WókCÆlbackInfo
<
T
> *
cböfo
 = 
	`unwøp
(
d©a
);

225 
cböfo
->
≥rsi°ít_
.
	`Di•o£
();

226 
cböfo
->
≥rsi°ít_
.
	`CÀ¨
();

227 
cböfo
->
	`ˇŒback_
(*cbinfo);

228 
dñëe
 
cböfo
;

229 
	}
}

231 
	gãm∂©e
<
ty≥«me
 
	gT
>

232 
	gWókCÆlbackInfo
<
	gT
> *WókCÆlbackInfo<T>::
	$unwøp
(

233 
NAN_WEAK_CALLBACK_DATA_TYPE_
 
d©a
) {

234 
WókCÆlbackInfo
<
T
> *
cböfo
 =

235 
°©ic_ˇ°
<
WókCÆlbackInfo
<
T
>*>(
d©a
);

236 
cböfo
->
isﬁ©e_
 = 
v8
::
Isﬁ©e
::
	`GëCuºít
();

237  
cböfo
;

238 
	}
}

240 #unde‡
NAN_WEAK_CALLBACK_SIG_


241 #unde‡
NAN_WEAK_CALLBACK_DATA_TYPE_


244 #i‡
deföed
(
V8_MAJOR_VERSION
) && (V8_MAJOR_VERSION > 4 || \

245 (
	gV8_MAJOR_VERSION
 =4 && 
deföed
(
V8_MINOR_VERSION
) && V8_MINOR_VERSION >= 3))

246 
ãm∂©e
<
ty≥«me
 
T
,Åy≥«mê
	gM
>

247 
	gãm∂©e
<
ty≥«me
 
	gP
>

248 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

249 
P
 *
∑ømëî


250 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


251 , 
WókCÆlbackTy≥
 
ty≥
) {

252 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

253 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

254 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

255 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

256 , 
	gˇŒback


257 , 
	g∑ømëî
);

258 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(

259 
wcbd


260 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî


261 , 
ty≥
);

263 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

264 
as£π
((*
£lf
)->
IsObje˘
());

265 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

266 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

267 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

268 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

270 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

271 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

272 , 
	gˇŒback


274 , 
	göã∫Æ_fõlds
[0]

275 , 
	göã∫Æ_fõlds
[1]);

276 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

277 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(

278 
°©ic_ˇ°
<
WókCÆlbackInfo
<
P
>*>(0)

279 , 
WókCÆlbackInfo
<
P
>::
övokëwofõld


280 , 
ty≥
);

283 #ñi‡
NODE_MODULE_VERSION
 > 
IOJS_1_1_MODULE_VERSION


284 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

285 
	gãm∂©e
<
ty≥«me
 
	gP
>

286 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

287 
P
 *
∑ømëî


288 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


289 , 
WókCÆlbackTy≥
 
ty≥
) {

290 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

291 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

292 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

293 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

294 , 
	gˇŒback


295 , 
	g∑ømëî
);

296 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

297 
wcbd


298 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî
);

300 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

301 
as£π
((*
£lf
)->
IsObje˘
());

302 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

303 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

304 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

305 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

307 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

308 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

309 , 
	gˇŒback


311 , 
	göã∫Æ_fõlds
[0]

312 , 
	göã∫Æ_fõlds
[1]);

313 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

314 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

315 
°©ic_ˇ°
<
WókCÆlbackInfo
<
P
>*>(0)

316 , 
WókCÆlbackInfo
<
P
>::
övokëwofõld


318 , 
cou¡
 > 1 ? 1 : 
kNoI¡î«lFõldIndex
);

321 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_12_MODULE_VERSION


322 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

323 
	gãm∂©e
<
ty≥«me
 
	gP
>

324 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

325 
P
 *
∑ømëî


326 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


327 , 
WókCÆlbackTy≥
 
ty≥
) {

328 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

329 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

330 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

331 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

332 , 
	gˇŒback


333 , 
	g∑ømëî
);

334 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

335 
wcbd


336 , 
WókCÆlbackInfo
<
P
>::
övokï¨amëî
);

338 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

339 
as£π
((*
£lf
)->
IsObje˘
());

340 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

341 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

342 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

343 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

345 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

346 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

347 , 
	gˇŒback


349 , 
	göã∫Æ_fõlds
[0]

350 , 
	göã∫Æ_fõlds
[1]);

351 (*
	g£lf
)->
SëAlig√dPoöãrInI¡î«lFõld
(0, 
wcbd
);

352 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëPh™tom
(

353 
WókCÆlbackInfo
<
P
>::
övokëwofõld


355 , 
cou¡
 > 1 ? 1 : 
kNoI¡î«lFõldIndex
);

358 #ñi‡
NODE_MODULE_VERSION
 > 
NODE_0_10_MODULE_VERSION


359 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM
>

360 
	gãm∂©e
<
ty≥«me
 
	gP
>

361 
NAN_INLINE
 
	gPîsi°ít
<
	gT
, 
	gM
>::
SëWók
(

362 
P
 *
∑ømëî


363 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


364 , 
WókCÆlbackTy≥
 
ty≥
) {

365 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

366 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

367 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

368 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

369 , 
	gˇŒback


370 , 
	g∑ømëî
);

371 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

373 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

374 
as£π
((*
£lf
)->
IsObje˘
());

375 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

376 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

377 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

378 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëAlig√dPoöãrFromI¡î«lFõld
(i);

380 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

381 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

382 , 
	gˇŒback


384 , 
	göã∫Æ_fõlds
[0]

385 , 
	göã∫Æ_fõlds
[1]);

386 
	gv8
::
Pîsi°ítBa£
<
T
>::
SëWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

390 
	gãm∂©e
<
ty≥«me
 
	gT
>

391 
	gãm∂©e
<
ty≥«me
 
	gP
>

392 
NAN_INLINE
 
	gPîsi°ítBa£
<
	gT
>::
SëWók
(

393 
P
 *
∑ømëî


394 , 
ty≥«me
 
WókCÆlbackInfo
<
P
>::
CÆlback
 
ˇŒback


395 , 
WókCÆlbackTy≥
 
ty≥
) {

396 
	gWókCÆlbackInfo
<
	gP
> *
	gwcbd
;

397 i‡(
	gty≥
 =
WókCÆlbackTy≥
::
kP¨amëî
) {

398 
wcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

399 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

400 , 
	gˇŒback


401 , 
	g∑ømëî
);

402 
	g≥rsi°ít
.
MakeWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

404 
	gv8
::
Loˇl
<
T
>* 
£lf
 = 
ªöãΩªt_ˇ°
<
v8
::Loˇl<T>*>(
this
);

405 
as£π
((*
£lf
)->
IsObje˘
());

406 
	gcou¡
 = (*
£lf
)->
I¡î«lFõldCou¡
();

407 *
	göã∫Æ_fõlds
[
kI¡î«lFõldsInWókCÆlback
] = {0, 0};

408 
	gi
 = 0; i < 
	gcou¡
 && i < 
	gkI¡î«lFõldsInWókCÆlback
; i++) {

409 
	göã∫Æ_fõlds
[
i
] = (*
£lf
)->
GëPoöãrFromI¡î«lFõld
(i);

411 
	gwcbd
 = 
√w
 
WókCÆlbackInfo
<
P
>(

412 
ªöãΩªt_ˇ°
<
Pîsi°ít
<
v8
::
VÆue
>*>(
this
)

413 , 
	gˇŒback


415 , 
	göã∫Æ_fõlds
[0]

416 , 
	göã∫Æ_fõlds
[1]);

417 
	g≥rsi°ít
.
MakeWók
(
wcbd
, 
WókCÆlbackInfo
<
P
>::
övoke
);

	@node_modules/node-gyp/gyp/data/win/large-pdb-shim.cc

	@node_modules/node-gyp/src/win_delay_load_hook.c

10 #ifde‡
_MSC_VER


12 #i‚de‡
WIN32_LEAN_AND_MEAN


13 
	#WIN32_LEAN_AND_MEAN


	)

16 
	~<wödows.h
>

18 
	~<dñayimp.h
>

19 
	~<°rög.h
>

21 
FARPROC
 
WINAPI
 
	$lﬂd_exe_hook
(
evít
, 
DñayLﬂdInfo
* 
öfo
) {

22 
HMODULE
 
m
;

23 i‡(
evít
 !
dliNŸePªLﬂdLibøry
)

24  
NULL
;

26 i‡(
	`_°ricmp
(
öfo
->
szDŒ
, "iojs.exe") != 0 &&

27 
	`_°ricmp
(
öfo
->
szDŒ
, "node.exe") != 0)

28  
NULL
;

30 
m
 = 
	`GëModuÀH™dÀ
(
NULL
);

31  (
FARPROC
Ë
m
;

32 
	}
}

34 
P‚DliHook
 
	g__p‚DliNŸifyHook2
 = 
lﬂd_exe_hook
;

	@node_modules/node-sass/src/binding.cpp

1 
	~<«n.h
>

2 
	~<ve˘‹
>

3 
	~"ßss_c⁄ãxt_wøµî.h
"

4 
	~"cu°om_fun˘i⁄_bridge.h
"

5 
	~"¸óã_°rög.h
"

6 
	~"ßss_ty≥s/Á˘‹y.h
"

8 
Sass_Imp‹t_Li°
 
	$ßss_imp‹ãr
(c⁄° * 
cur_∑th
, 
Sass_Imp‹ãr_E¡ry
 
cb
, 
Sass_Compûî
* 
comp
)

10 * 
cookõ
 = 
	`ßss_imp‹ãr_gë_cookõ
(
cb
);

11 
Sass_Imp‹t
* 
¥evious
 = 
	`ßss_compûî_gë_œ°_imp‹t
(
comp
);

12 c⁄° * 
¥ev_∑th
 = 
	`ßss_imp‹t_gë_abs_∑th
(
¥evious
);

13 
Cu°omImp‹ãrBridge
& 
bridge
 = *(
°©ic_ˇ°
<Cu°omImp‹ãrBridge*>(
cookõ
));

15 
°d
::
ve˘‹
<*> 
¨gv
;

16 
¨gv
.
	`push_back
((*)
cur_∑th
);

17 
¨gv
.
	`push_back
((*)
¥ev_∑th
);

19  
	`bridge
(
¨gv
);

20 
	}
}

22 
Sass_VÆue
* 
	$ßss_cu°om_fun˘i⁄
(c⁄° 
Sass_VÆue
* 
s_¨gs
, 
Sass_Fun˘i⁄_E¡ry
 
cb
, 
Sass_Compûî
* 
comp
)

24 * 
cookõ
 = 
	`ßss_fun˘i⁄_gë_cookõ
(
cb
);

25 
Cu°omFun˘i⁄Bridge
& 
bridge
 = *(
°©ic_ˇ°
<Cu°omFun˘i⁄Bridge*>(
cookõ
));

27 
°d
::
ve˘‹
<*> 
¨gv
;

28 
l
 = 
	`ßss_li°_gë_Àngth
(
s_¨gs
), 
i
 = 0; i <Ü; i++) {

29 
¨gv
.
	`push_back
((*)
	`ßss_li°_gë_vÆue
(
s_¨gs
, 
i
));

32  
	`bridge
(
¨gv
);

33 
	}
}

35 
Exåa˘O±i⁄s
(
v8
::
Loˇl
<v8::
Obje˘
> 
›ti⁄s
, * 
˝å
, 
ßss_c⁄ãxt_wøµî
* 
˘x_w
, 
boﬁ
 
is_fûe
, boﬁ 
is_sync
) {

36 
	gN™
::
H™dÀSc›e
 
sc›e
;

38 
Sass_C⁄ãxt
* 
	g˘x
;

40 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
ªsu…_
 = 
N™
::
Gë
(

41 
›ti⁄s
,

42 
N™
::
New
("ªsu…").
ToLoˇlChecked
()

43 ).
ToLoˇlChecked
();

44 i‡(!
	gªsu…_
->
IsObje˘
()) {

45 
	gN™
::
ThrowTy≥Eº‹
("\"result\"Élement isÇotán object");

49 
	g˘x_w
->
	gªsu…
.
Re£t
(
ªsu…_
.
As
<
v8
::
Obje˘
>());

51 i‡(
	gis_fûe
) {

52 
	g˘x_w
->
	gf˘x
 = (
Sass_Fûe_C⁄ãxt
*Ë
˝å
;

53 
	g˘x
 = 
ßss_fûe_c⁄ãxt_gë_c⁄ãxt
(
˘x_w
->
f˘x
);

56 
	g˘x_w
->
	gd˘x
 = (
Sass_D©a_C⁄ãxt
*Ë
˝å
;

57 
	g˘x
 = 
ßss_d©a_c⁄ãxt_gë_c⁄ãxt
(
˘x_w
->
d˘x
);

60 
Sass_O±i⁄s
* 
	gßss_›ti⁄s
 = 
ßss_c⁄ãxt_gë_›ti⁄s
(
˘x
);

62 
	g˘x_w
->
	gis_sync
 = 
is_sync
;

64 i‡(!
	gis_sync
) {

65 
	g˘x_w
->
	gªque°
.
	gd©a
 = 
˘x_w
;

68 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
suc˚ss_ˇŒback
 = v8::Loˇl<v8::Fun˘i⁄>::
Ca°
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("suc˚ss").
ToLoˇlChecked
()).ToLocalChecked());

69 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
îr‹_ˇŒback
 = v8::Loˇl<v8::Fun˘i⁄>::
Ca°
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("îr‹").
ToLoˇlChecked
()).ToLocalChecked());

71 
	g˘x_w
->
	gsuc˚ss_ˇŒback
 = 
√w
 
N™
::
CÆlback
(
suc˚ss_ˇŒback
);

72 
	g˘x_w
->
	gîr‹_ˇŒback
 = 
√w
 
N™
::
CÆlback
(
îr‹_ˇŒback
);

75 i‡(!
	gis_fûe
) {

76 
	g˘x_w
->
	gfûe
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("fûe").
ToLoˇlChecked
()));

77 
ßss_›ti⁄_£t_öput_∑th
(
ßss_›ti⁄s
, 
˘x_w
->
fûe
);

80 
	gödít_Àn
 = 
N™
::
To
<
öt32_t
>(

81 
N™
::
Gë
(

82 
›ti⁄s
,

83 
N™
::
New
("ödítWidth").
ToLoˇlChecked
()

84 ).
ToLoˇlChecked
()).
FromJu°
();

86 
	g˘x_w
->
	gödít
 = (*)
mÆloc
(
ödít_Àn
 + 1);

88 
°r˝y
(
˘x_w
->
ödít
, 
°d
::
°rög
(

89 
ödít_Àn
,

90 
N™
::
To
<
öt32_t
>(

91 
N™
::
Gë
(

92 
›ti⁄s
,

93 
N™
::
New
("ödítTy≥").
ToLoˇlChecked
()

94 ).
ToLoˇlChecked
()).
FromJu°
() == 1 ? '\t' : ' '

95 ).
c_°r
());

97 
	g˘x_w
->
	glöe„ed
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("löe„ed").
ToLoˇlChecked
()));

98 
	g˘x_w
->
	gö˛ude_∑th
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("ö˛udeP©hs").
ToLoˇlChecked
()));

99 
	g˘x_w
->
	gout_fûe
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("outFûe").
ToLoˇlChecked
()));

100 
	g˘x_w
->
	gsour˚_m≠
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("sour˚M≠").
ToLoˇlChecked
()));

101 
	g˘x_w
->
	gsour˚_m≠_roŸ
 = 
¸óã_°rög
(
N™
::
Gë
(
›ti⁄s
, N™::
New
("sour˚M≠RoŸ").
ToLoˇlChecked
()));

103 
ßss_›ti⁄_£t_ouçut_∑th
(
ßss_›ti⁄s
, 
˘x_w
->
out_fûe
);

104 
ßss_›ti⁄_£t_ouçut_°yÀ
(
ßss_›ti⁄s
, (
Sass_Ouçut_StyÀ
)
N™
::
To
<
öt32_t
>(N™::
Gë
(
›ti⁄s
, N™::
New
("°yÀ").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

105 
ßss_›ti⁄_£t_is_ödíãd_sy¡ax_§c
(
ßss_›ti⁄s
, 
N™
::
To
<
boﬁ
>(N™::
Gë
(
›ti⁄s
, N™::
New
("ödíãdSy¡ax").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

106 
ßss_›ti⁄_£t_sour˚_commíts
(
ßss_›ti⁄s
, 
N™
::
To
<
boﬁ
>(N™::
Gë
(
›ti⁄s
, N™::
New
("sour˚Commíts").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

107 
ßss_›ti⁄_£t_omô_sour˚_m≠_uæ
(
ßss_›ti⁄s
, 
N™
::
To
<
boﬁ
>(N™::
Gë
(
›ti⁄s
, N™::
New
("omôSour˚M≠Uæ").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

108 
ßss_›ti⁄_£t_sour˚_m≠_embed
(
ßss_›ti⁄s
, 
N™
::
To
<
boﬁ
>(N™::
Gë
(
›ti⁄s
, N™::
New
("sour˚M≠Embed").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

109 
ßss_›ti⁄_£t_sour˚_m≠_c⁄ã¡s
(
ßss_›ti⁄s
, 
N™
::
To
<
boﬁ
>(N™::
Gë
(
›ti⁄s
, N™::
New
("sour˚M≠C⁄ã¡s").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

110 
ßss_›ti⁄_£t_sour˚_m≠_fûe
(
ßss_›ti⁄s
, 
˘x_w
->
sour˚_m≠
);

111 
ßss_›ti⁄_£t_sour˚_m≠_roŸ
(
ßss_›ti⁄s
, 
˘x_w
->
sour˚_m≠_roŸ
);

112 
ßss_›ti⁄_£t_ö˛ude_∑th
(
ßss_›ti⁄s
, 
˘x_w
->
ö˛ude_∑th
);

113 
ßss_›ti⁄_£t_¥ecisi⁄
(
ßss_›ti⁄s
, 
N™
::
To
<
öt32_t
>(N™::
Gë
(
›ti⁄s
, N™::
New
("¥ecisi⁄").
ToLoˇlChecked
()).ToLoˇlChecked()).
FromJu°
());

114 
ßss_›ti⁄_£t_ödít
(
ßss_›ti⁄s
, 
˘x_w
->
ödít
);

115 
ßss_›ti⁄_£t_löe„ed
(
ßss_›ti⁄s
, 
˘x_w
->
löe„ed
);

117 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
imp‹ãr_ˇŒback
 = 
N™
::
Gë
(
›ti⁄s
, N™::
New
("imp‹ãr").
ToLoˇlChecked
()).ToLocalChecked();

119 i‡(
	gimp‹ãr_ˇŒback
->
IsFun˘i⁄
()) {

120 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
imp‹ãr
 = 
imp‹ãr_ˇŒback
.
As
<v8::Function>();

122 
Cu°omImp‹ãrBridge
 *
	gbridge
 = 
√w
 Cu°omImp‹ãrBridge(
imp‹ãr
, 
˘x_w
->
is_sync
);

123 
	g˘x_w
->
	gimp‹ãr_bridges
.
push_back
(
bridge
);

125 
Sass_Imp‹ãr_Li°
 
	gc_imp‹ãrs
 = 
ßss_make_imp‹ãr_li°
(1);

126 
	gc_imp‹ãrs
[0] = 
ßss_make_imp‹ãr
(
ßss_imp‹ãr
, 0, 
bridge
);

128 
ßss_›ti⁄_£t_c_imp‹ãrs
(
ßss_›ti⁄s
, 
c_imp‹ãrs
);

130 i‡(
	gimp‹ãr_ˇŒback
->
IsAºay
()) {

131 
	gv8
::
Loˇl
<
v8
::
Aºay
> 
imp‹ãrs
 = 
imp‹ãr_ˇŒback
.
As
<v8::Array>();

132 
Sass_Imp‹ãr_Li°
 
	gc_imp‹ãrs
 = 
ßss_make_imp‹ãr_li°
(
imp‹ãrs
->
Lígth
());

134 
size_t
 
	gi
 = 0; i < 
	gimp‹ãrs
->
Lígth
(); ++i) {

135 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
ˇŒback
 = v8::Loˇl<v8::Fun˘i⁄>::
Ca°
(
N™
::
Gë
(
imp‹ãrs
, 
°©ic_ˇ°
<
uöt32_t
>(
i
)).
ToLoˇlChecked
());

137 
Cu°omImp‹ãrBridge
 *
	gbridge
 = 
√w
 Cu°omImp‹ãrBridge(
ˇŒback
, 
˘x_w
->
is_sync
);

138 
	g˘x_w
->
	gimp‹ãr_bridges
.
push_back
(
bridge
);

140 
	gc_imp‹ãrs
[
i
] = 
ßss_make_imp‹ãr
(
ßss_imp‹ãr
, 
imp‹ãrs
->
Lígth
(Ë- i - 1, 
bridge
);

143 
ßss_›ti⁄_£t_c_imp‹ãrs
(
ßss_›ti⁄s
, 
c_imp‹ãrs
);

146 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
cu°om_fun˘i⁄s
 = 
N™
::
Gë
(
›ti⁄s
, N™::
New
("fun˘i⁄s").
ToLoˇlChecked
()).ToLocalChecked();

148 i‡(
	gcu°om_fun˘i⁄s
->
IsObje˘
()) {

149 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
fun˘i⁄s
 = 
cu°om_fun˘i⁄s
.
As
<v8::Object>();

150 
	gv8
::
Loˇl
<
v8
::
Aºay
> 
sig«tuªs
 = 
N™
::
GëOwnPr›îtyNames
(
fun˘i⁄s
).
ToLoˇlChecked
();

151 
	gnum_sig«tuªs
 = 
sig«tuªs
->
Lígth
();

152 
Sass_Fun˘i⁄_Li°
 
	g‚_li°
 = 
ßss_make_fun˘i⁄_li°
(
num_sig«tuªs
);

154 
	gi
 = 0; i < 
	gnum_sig«tuªs
; i++) {

155 
	gv8
::
Loˇl
<
v8
::
Såög
> 
sig«tuª
 = v8::Loˇl<v8::Såög>::
Ca°
(
N™
::
Gë
(
sig«tuªs
, N™::
New
(
i
)).
ToLoˇlChecked
());

156 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
ˇŒback
 = v8::Loˇl<v8::Fun˘i⁄>::
Ca°
(
N™
::
Gë
(
fun˘i⁄s
, 
sig«tuª
).
ToLoˇlChecked
());

158 
Cu°omFun˘i⁄Bridge
 *
	gbridge
 = 
√w
 Cu°omFun˘i⁄Bridge(
ˇŒback
, 
˘x_w
->
is_sync
);

159 
	g˘x_w
->
	gfun˘i⁄_bridges
.
push_back
(
bridge
);

161 
Sass_Fun˘i⁄_E¡ry
 
	g‚
 = 
ßss_make_fun˘i⁄
(
¸óã_°rög
(
sig«tuª
), 
ßss_cu°om_fun˘i⁄
, 
bridge
);

162 
ßss_fun˘i⁄_£t_li°_íåy
(
‚_li°
, 
i
, 
‚
);

165 
ßss_›ti⁄_£t_c_fun˘i⁄s
(
ßss_›ti⁄s
, 
‚_li°
);

170 
	$GëSèts
(
ßss_c⁄ãxt_wøµî
* 
˘x_w
, 
Sass_C⁄ãxt
* 
˘x
) {

171 
N™
::
H™dÀSc›e
 
sc›e
;

173 ** 
ö˛uded_fûes
 = 
	`ßss_c⁄ãxt_gë_ö˛uded_fûes
(
˘x
);

174 
v8
::
Loˇl
<v8::
Aºay
> 
¨r
 = 
N™
::
New
<v8::Array>();

176 i‡(
ö˛uded_fûes
) {

177 
i
 = 0; 
ö˛uded_fûes
[i] !
nuŒ±r
; ++i) {

178 
N™
::
	`Së
(
¨r
, 
i
, N™::
New
<
v8
::
Såög
>(
ö˛uded_fûes
[i]).
	`ToLoˇlChecked
());

182 
v8
::
Loˇl
<v8::
Obje˘
> 
ªsu…
 = 
N™
::
	`New
(
˘x_w
->result);

183 
	`as£π
(
ªsu…
->
	`IsObje˘
());

185 
v8
::
Loˇl
<v8::
VÆue
> 
°©s
 = 
N™
::
	`Gë
(

186 
ªsu…
,

187 
N™
::
	`New
("°©s").
	`ToLoˇlChecked
()

188 ).
	`ToLoˇlChecked
();

189 i‡(
°©s
->
	`IsObje˘
()) {

190 
N™
::
	`Së
(

191 
°©s
.
As
<
v8
::
Obje˘
>(),

192 
N™
::
	`New
("ö˛udedFûes").
	`ToLoˇlChecked
(),

193 
¨r


196 
N™
::
	`ThrowTy≥Eº‹
("\"result.stats\"Élement isÇotán object");

198 
	}
}

200 
	$GëResu…
(
ßss_c⁄ãxt_wøµî
* 
˘x_w
, 
Sass_C⁄ãxt
* 
˘x
, 
boﬁ
 
is_sync
 = 
Ál£
) {

201 
N™
::
H™dÀSc›e
 
sc›e
;

202 
v8
::
Loˇl
<v8::
Obje˘
> 
ªsu…
;

204 
°©us
 = 
	`ßss_c⁄ãxt_gë_îr‹_°©us
(
˘x
);

206 
ªsu…
 = 
N™
::
	`New
(
˘x_w
->result);

207 
	`as£π
(
ªsu…
->
	`IsObje˘
());

209 i‡(
°©us
 == 0) {

210 c⁄° * 
css
 = 
	`ßss_c⁄ãxt_gë_ouçut_°rög
(
˘x
);

211 c⁄° * 
m≠
 = 
	`ßss_c⁄ãxt_gë_sour˚_m≠_°rög
(
˘x
);

213 
N™
::
	`Së
(
ªsu…
, N™::
	`New
("css").
	`ToLoˇlChecked
(), N™::
	`C›yBuf„r
(
css
, 
°©ic_ˇ°
<
uöt32_t
>(
	`°æí
(css))).ToLocalChecked());

215 
	`GëSèts
(
˘x_w
, 
˘x
);

217 i‡(
m≠
) {

218 
N™
::
	`Së
(
ªsu…
, N™::
	`New
("m≠").
	`ToLoˇlChecked
(), N™::
	`C›yBuf„r
(
m≠
, 
°©ic_ˇ°
<
uöt32_t
>(
	`°æí
(map))).ToLocalChecked());

221 i‡(
is_sync
) {

222 
N™
::
	`Së
(
ªsu…
, N™::
	`New
("îr‹").
	`ToLoˇlChecked
(), N™::
New
<
v8
::
Såög
>(
	`ßss_c⁄ãxt_gë_îr‹_js⁄
(
˘x
)).ToLocalChecked());

225  
°©us
;

226 
	}
}

228 
	$MakeCÆlback
(
uv_w‹k_t
* 
ªq
) {

229 
N™
::
H™dÀSc›e
 
sc›e
;

231 
N™
::
TryC©ch
 
åy_ˇtch
;

232 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = 
°©ic_ˇ°
<ßss_c⁄ãxt_wøµî*>(
ªq
->
d©a
);

233 
Sass_C⁄ãxt
* 
˘x
;

235 i‡(
˘x_w
->
d˘x
) {

236 
˘x
 = 
	`ßss_d©a_c⁄ãxt_gë_c⁄ãxt
(
˘x_w
->
d˘x
);

239 
˘x
 = 
	`ßss_fûe_c⁄ãxt_gë_c⁄ãxt
(
˘x_w
->
f˘x
);

242 
°©us
 = 
	`GëResu…
(
˘x_w
, 
˘x
);

244 i‡(
°©us
 =0 && 
˘x_w
->
suc˚ss_ˇŒback
) {

246 
˘x_w
->
suc˚ss_ˇŒback
->
	`CÆl
(0, 0);

248 i‡(
˘x_w
->
îr‹_ˇŒback
) {

250 c⁄° * 
îr
 = 
	`ßss_c⁄ãxt_gë_îr‹_js⁄
(
˘x
);

251 
v8
::
Loˇl
<v8::
VÆue
> 
¨gv
[] = {

252 
N™
::
New
<
v8
::
Såög
>(
îr
).
	`ToLoˇlChecked
()

254 
˘x_w
->
îr‹_ˇŒback
->
	`CÆl
(1, 
¨gv
);

256 i‡(
åy_ˇtch
.
	`HasCaught
()) {

257 
N™
::
	`F©ÆEx˚±i⁄
(
åy_ˇtch
);

260 
	`ßss_‰ì_c⁄ãxt_wøµî
(
˘x_w
);

261 
	}
}

263 
	$NAN_METHOD
(
ªndî
) {

265 
v8
::
Loˇl
<v8::
Obje˘
> 
›ti⁄s
 = 
N™
::
To
<v8::Obje˘>(
öfo
[0]).
	`ToLoˇlChecked
();

266 * 
sour˚_°rög
 = 
	`¸óã_°rög
(
N™
::
	`Gë
(
›ti⁄s
, N™::
	`New
("d©a").
	`ToLoˇlChecked
()));

267 
Sass_D©a_C⁄ãxt
* 
d˘x
 = 
	`ßss_make_d©a_c⁄ãxt
(
sour˚_°rög
);

268 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = 
	`ßss_make_c⁄ãxt_wøµî
();

270 i‡(
	`Exåa˘O±i⁄s
(
›ti⁄s
, 
d˘x
, 
˘x_w
, 
Ál£
, false) >= 0) {

272 
°©us
 = 
	`uv_queue_w‹k
(
	`uv_deÁu…_lo›
(), &
˘x_w
->
ªque°
, 
compûe_ô
, (
uv_a·î_w‹k_cb
)
MakeCÆlback
);

274 
	`as£π
(
°©us
 == 0);

276 
	}
}

278 
	$NAN_METHOD
(
ªndî_sync
) {

280 
v8
::
Loˇl
<v8::
Obje˘
> 
›ti⁄s
 = 
N™
::
To
<v8::Obje˘>(
öfo
[0]).
	`ToLoˇlChecked
();

281 * 
sour˚_°rög
 = 
	`¸óã_°rög
(
N™
::
	`Gë
(
›ti⁄s
, N™::
	`New
("d©a").
	`ToLoˇlChecked
()));

282 
Sass_D©a_C⁄ãxt
* 
d˘x
 = 
	`ßss_make_d©a_c⁄ãxt
(
sour˚_°rög
);

283 
Sass_C⁄ãxt
* 
˘x
 = 
	`ßss_d©a_c⁄ãxt_gë_c⁄ãxt
(
d˘x
);

284 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = 
	`ßss_make_c⁄ãxt_wøµî
();

285 
ªsu…
 = -1;

287 i‡((
ªsu…
 = 
	`Exåa˘O±i⁄s
(
›ti⁄s
, 
d˘x
, 
˘x_w
, 
Ál£
, 
åue
)) >= 0) {

288 
	`compûe_d©a
(
d˘x
);

289 
ªsu…
 = 
	`GëResu…
(
˘x_w
, 
˘x
, 
åue
);

292 
	`ßss_‰ì_c⁄ãxt_wøµî
(
˘x_w
);

293 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(
ªsu…
 == 0);

294 
	}
}

296 
	$NAN_METHOD
(
ªndî_fûe
) {

298 
v8
::
Loˇl
<v8::
Obje˘
> 
›ti⁄s
 = 
N™
::
To
<v8::Obje˘>(
öfo
[0]).
	`ToLoˇlChecked
();

299 * 
öput_∑th
 = 
	`¸óã_°rög
(
N™
::
	`Gë
(
›ti⁄s
, N™::
	`New
("fûe").
	`ToLoˇlChecked
()));

300 
Sass_Fûe_C⁄ãxt
* 
f˘x
 = 
	`ßss_make_fûe_c⁄ãxt
(
öput_∑th
);

301 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = 
	`ßss_make_c⁄ãxt_wøµî
();

303 i‡(
	`Exåa˘O±i⁄s
(
›ti⁄s
, 
f˘x
, 
˘x_w
, 
åue
, 
Ál£
) >= 0) {

305 
°©us
 = 
	`uv_queue_w‹k
(
	`uv_deÁu…_lo›
(), &
˘x_w
->
ªque°
, 
compûe_ô
, (
uv_a·î_w‹k_cb
)
MakeCÆlback
);

306 
	`as£π
(
°©us
 == 0);

308 
	}
}

310 
	$NAN_METHOD
(
ªndî_fûe_sync
) {

312 
v8
::
Loˇl
<v8::
Obje˘
> 
›ti⁄s
 = 
N™
::
To
<v8::Obje˘>(
öfo
[0]).
	`ToLoˇlChecked
();

313 * 
öput_∑th
 = 
	`¸óã_°rög
(
N™
::
	`Gë
(
›ti⁄s
, N™::
	`New
("fûe").
	`ToLoˇlChecked
()));

314 
Sass_Fûe_C⁄ãxt
* 
f˘x
 = 
	`ßss_make_fûe_c⁄ãxt
(
öput_∑th
);

315 
Sass_C⁄ãxt
* 
˘x
 = 
	`ßss_fûe_c⁄ãxt_gë_c⁄ãxt
(
f˘x
);

316 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = 
	`ßss_make_c⁄ãxt_wøµî
();

317 
ªsu…
 = -1;

319 i‡((
ªsu…
 = 
	`Exåa˘O±i⁄s
(
›ti⁄s
, 
f˘x
, 
˘x_w
, 
åue
,Årue)) >= 0) {

320 
	`compûe_fûe
(
f˘x
);

321 
ªsu…
 = 
	`GëResu…
(
˘x_w
, 
˘x
, 
åue
);

324 
	`‰ì
(
öput_∑th
);

325 
	`ßss_‰ì_c⁄ãxt_wøµî
(
˘x_w
);

327 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(
ªsu…
 == 0);

328 
	}
}

330 
	$NAN_METHOD
(
libßss_vîsi⁄
) {

331 
öfo
.
	`GëRëu∫VÆue
().
	`Së
(
N™
::
New
<
v8
::
Såög
>(
	`libßss_vîsi⁄
()).
	`ToLoˇlChecked
());

332 
	}
}

334 
	$NAN_MODULE_INIT
(
Regi°îModuÀ
) {

335 
N™
::
	`SëMëhod
(
èrgë
, "ªndî", 
ªndî
);

336 
N™
::
	`SëMëhod
(
èrgë
, "ªndîSync", 
ªndî_sync
);

337 
N™
::
	`SëMëhod
(
èrgë
, "ªndîFûe", 
ªndî_fûe
);

338 
N™
::
	`SëMëhod
(
èrgë
, "ªndîFûeSync", 
ªndî_fûe_sync
);

339 
N™
::
	`SëMëhod
(
èrgë
, "libßssVîsi⁄", 
libßss_vîsi⁄
);

340 
SassTy≥s
::
Fa˘‹y
::
	`öôExp‹ts
(
èrgë
);

341 
	}
}

343 
NODE_MODULE
(
bödög
, 
Regi°îModuÀ
);

	@node_modules/node-sass/src/callback_bridge.h

1 #i‚de‡
CALLBACK_BRIDGE_H


2 
	#CALLBACK_BRIDGE_H


	)

4 
	~<ve˘‹
>

5 
	~<«n.h
>

6 
	~<Æg‹ôhm
>

7 
	~<uv.h
>

9 
	#COMMA
 ,

	)

11 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
 = *>

12 ˛as†
	cCÆlbackBridge
 {

13 
public
:

14 
CÆlbackBridge
(
v8
::
Loˇl
<v8::
Fun˘i⁄
>, 
boﬁ
);

15 
	mvútuÆ
 ~
CÆlbackBridge
();

18 
T
 
	$›î©‹
()(
°d
::
ve˘‹
<*>);

20 
¥Ÿe˘ed
:

23 
N™
::
MaybeLoˇl
<
v8
::
Fun˘i⁄
> 
	`gë_wøµî_c⁄°ru˘‹
();

24 
	`async_g⁄e
(
uv_h™dÀ_t
 *
h™dÀ
);

25 
	`NAN_METHOD
(
New
);

26 
	`NAN_METHOD
(
Rëu∫CÆlback
);

27 
N™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
wøµî_c⁄°ru˘‹
;

28 
N™
::
Pîsi°ít
<
v8
::
Obje˘
> 
wøµî
;

32 
	`di•©ched_async_uv_ˇŒback
(
uv_async_t
*);

37 
vútuÆ
 
T
 
	`po°_¥o˚ss_ªtu∫_vÆue
(
v8
::
Loˇl
<v8::
VÆue
>) const =0;

40 
vútuÆ
 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
	`¥e_¥o˚ss_¨gs
(°d::ve˘‹<
L
>) const =0;

42 
N™
::
CÆlback
* 
ˇŒback
;

43 
boﬁ
 
is_sync
;

45 
uv_muãx_t
 
cv_muãx
;

46 
uv_c⁄d_t
 
c⁄dôi⁄_v¨übÀ
;

47 
uv_async_t
 *
async
;

48 
°d
::
ve˘‹
<
L
> 
¨gv
;

49 
boﬁ
 
has_ªtu∫ed
;

50 
T
 
ªtu∫_vÆue
;

53 
ãm∂©e
 <
ty≥«me
 
T
,Åy≥«mê
L
>

54 
N™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
CÆlbackBridge
<
T
, 
L
>::
wøµî_c⁄°ru˘‹
;

56 
ãm∂©e
 <
ty≥«me
 
T
,Åy≥«mê
L
>

57 
CÆlbackBridge
<
T
, 
L
>::
	`CÆlbackBridge
(
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
ˇŒback
, 
boﬁ
 
is_sync
Ë: 
	`ˇŒback
(
√w
 
N™
::
	`CÆlback
(ˇŒback)), 
	$is_sync
(
is_sync
) {

62 
N™
::
H™dÀSc›e
 
sc›e
;

63 
	`uv_muãx_öô
(&
this
->
cv_muãx
);

64 
	`uv_c⁄d_öô
(&
this
->
c⁄dôi⁄_v¨übÀ
);

65 i‡(!
is_sync
) {

66 
this
->
async
 = 
√w
 
uv_async_t
;

67 
this
->
async
->
d©a
 = (*)Åhis;

68 
	`uv_async_öô
(
	`uv_deÁu…_lo›
(), 
this
->
async
, (
uv_async_cb
Ë
di•©ched_async_uv_ˇŒback
);

71 
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
func
 = 
CÆlbackBridge
<
T
, 
L
>::
	`gë_wøµî_c⁄°ru˘‹
().
	`ToLoˇlChecked
();

72 
wøµî
.
	`Re£t
(
N™
::
	`NewIn°™˚
(
func
).
	`ToLoˇlChecked
());

73 
N™
::
	`SëI¡î«lFõldPoöãr
(N™::
	`New
(
wøµî
), 0, 
this
);

74 
	}
}

76 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

77 
	gCÆlbackBridge
<
	gT
, 
	gL
>::~
	$CÆlbackBridge
() {

78 
dñëe
 
this
->
ˇŒback
;

79 
this
->
wøµî
.
	`Re£t
();

80 
	`uv_c⁄d_de°roy
(&
this
->
c⁄dôi⁄_v¨übÀ
);

81 
	`uv_muãx_de°roy
(&
this
->
cv_muãx
);

83 i‡(!
is_sync
) {

84 
	`uv_˛o£
((
uv_h™dÀ_t
*)
this
->
async
, &
async_g⁄e
);

86 
	}
}

88 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

89 
T
 
	gCÆlbackBridge
<
	gT
, 
	gL
>::
	$›î©‹
()(
°d
::
ve˘‹
<*> 
¨gv
) {

91 i‡(
this
->
is_sync
) {

100 
N™
::
H™dÀSc›e
 
sc›e
;

101 
N™
::
TryC©ch
 
åy_ˇtch
;

102 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
¨gv_v8
 = 
	`¥e_¥o˚ss_¨gs
(
¨gv
);

103 i‡(
åy_ˇtch
.
	`HasCaught
()) {

104 
N™
::
	`F©ÆEx˚±i⁄
(
åy_ˇtch
);

107 
¨gv_v8
.
	`push_back
(
N™
::
	`New
(
wøµî
));

109  
this
->
	`po°_¥o˚ss_ªtu∫_vÆue
(

110 
this
->
ˇŒback
->
	`CÆl
(
¨gv_v8
.
	`size
(), &argv_v8[0])

127 
this
->
¨gv
 =árgv;

129 
	`uv_muãx_lock
(&
this
->
cv_muãx
);

130 
this
->
has_ªtu∫ed
 = 
Ál£
;

131 
	`uv_async_£nd
(
this
->
async
);

132 !
this
->
has_ªtu∫ed
) {

133 
	`uv_c⁄d_waô
(&
this
->
c⁄dôi⁄_v¨übÀ
, &this->
cv_muãx
);

135 
	`uv_muãx_u∆ock
(&
this
->
cv_muãx
);

136  
this
->
ªtu∫_vÆue
;

138 
	}
}

140 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

141 
	gCÆlbackBridge
<
	gT
, 
	gL
>::
	$di•©ched_async_uv_ˇŒback
(
uv_async_t
 *
ªq
) {

142 
CÆlbackBridge
* 
bridge
 = 
°©ic_ˇ°
<CÆlbackBridge*>(
ªq
->
d©a
);

153 
N™
::
H™dÀSc›e
 
sc›e
;

154 
N™
::
TryC©ch
 
åy_ˇtch
;

156 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
¨gv_v8
 = 
bridge
->
	`¥e_¥o˚ss_¨gs
(bridge->
¨gv
);

157 i‡(
åy_ˇtch
.
	`HasCaught
()) {

158 
N™
::
	`F©ÆEx˚±i⁄
(
åy_ˇtch
);

160 
¨gv_v8
.
	`push_back
(
N™
::
	`New
(
bridge
->
wøµî
));

162 
bridge
->
ˇŒback
->
	`CÆl
(
¨gv_v8
.
	`size
(), &argv_v8[0]);

164 i‡(
åy_ˇtch
.
	`HasCaught
()) {

165 
N™
::
	`F©ÆEx˚±i⁄
(
åy_ˇtch
);

167 
	}
}

169 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

170 
NAN_METHOD
(
CÆlbackBridge
<
T
 
COMMA
 
L
>::
Rëu∫CÆlback
) {

179 
CÆlbackBridge
<
T
, 
	gL
>* 
	gbridge
 = 
°©ic_ˇ°
<CÆlbackBridge<T, L>*>(
	gN™
::
GëI¡î«lFõldPoöãr
(
öfo
.
This
(), 0));

180 
	gN™
::
TryC©ch
 
åy_ˇtch
;

182 
	gbridge
->
	gªtu∫_vÆue
 = 
bridge
->
po°_¥o˚ss_ªtu∫_vÆue
(
öfo
[0]);

185 
uv_muãx_lock
(&
bridge
->
cv_muãx
);

186 
	gbridge
->
	ghas_ªtu∫ed
 = 
åue
;

187 
uv_muãx_u∆ock
(&
bridge
->
cv_muãx
);

190 
uv_c⁄d_brﬂdˇ°
(&
bridge
->
c⁄dôi⁄_v¨übÀ
);

192 i‡(
	gåy_ˇtch
.
HasCaught
()) {

193 
	gN™
::
F©ÆEx˚±i⁄
(
åy_ˇtch
);

197 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

198 
	gN™
::
MaybeLoˇl
<
v8
::
Fun˘i⁄
> 
CÆlbackBridge
<
T
, 
	gL
>::
	$gë_wøµî_c⁄°ru˘‹
() {

200 i‡(
wøµî_c⁄°ru˘‹
.
	`IsEm±y
()) {

201 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::FunctionTemplate>(New);

202 
çl
->
	`SëCœssName
(
N™
::
	`New
("CÆlbackBridge").
	`ToLoˇlChecked
());

203 
çl
->
	`In°™˚Tem∂©e
()->
	`SëI¡î«lFõldCou¡
(1);

205 
N™
::
	`SëPrŸŸy≥Tem∂©e
(
çl
, "success",

206 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
Rëu∫CÆlback
)

209 
wøµî_c⁄°ru˘‹
.
	`Re£t
(
N™
::
	`GëFun˘i⁄
(
çl
).
	`ToLoˇlChecked
());

212  
N™
::
	`New
(
wøµî_c⁄°ru˘‹
);

213 
	}
}

215 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

216 
NAN_METHOD
(
CÆlbackBridge
<
T
 
COMMA
 
L
>::
New
) {

217 
öfo
.
GëRëu∫VÆue
().
Së
(öfo.
This
());

220 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gL
>

221 
	gCÆlbackBridge
<
	gT
, 
	gL
>::
	$async_g⁄e
(
uv_h™dÀ_t
 *
h™dÀ
) {

222 
	`dñëe
 (
uv_async_t
 *)
h™dÀ
;

223 
	}
}

	@node_modules/node-sass/src/create_string.cpp

1 
	~<«n.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~"¸óã_°rög.h
"

6 * 
¸óã_°rög
(
N™
::
MaybeLoˇl
<
v8
::
VÆue
> 
maybevÆue
) {

7 
v8
::
Loˇl
<v8::
VÆue
> 
vÆue
;

9 i‡(
	gmaybevÆue
.
ToLoˇl
(&
vÆue
)) {

10 i‡(
	gvÆue
->
IsNuŒ
(Ë|| !vÆue->
IsSåög
()) {

17 
	gv8
::
Såög
::
Utf8VÆue
 
°rög
(
vÆue
);

18 *
	g°r
 = (*)
mÆloc
(
°rög
.
Àngth
() + 1);

19 
°r˝y
(
°r
, *
°rög
);

20  
	g°r
;

	@node_modules/node-sass/src/create_string.h

1 #i‚de‡
CREATE_STRING_H


2 
	#CREATE_STRING_H


	)

4 
	~<«n.h
>

6 * 
¸óã_°rög
(
N™
::
MaybeLoˇl
<
v8
::
VÆue
>);

	@node_modules/node-sass/src/custom_function_bridge.cpp

1 
	~<«n.h
>

2 
	~<°dex˚±
>

3 
	~"cu°om_fun˘i⁄_bridge.h
"

4 
	~"ßss_ty≥s/Á˘‹y.h
"

5 
	~"ßss_ty≥s/vÆue.h
"

7 
Sass_VÆue
* 
	gCu°omFun˘i⁄Bridge
::
po°_¥o˚ss_ªtu∫_vÆue
(
v8
::
Loˇl
<v8::
VÆue
> 
vÆ
) const {

8 
SassTy≥s
::
VÆue
 *
v_
;

9 i‡((
	gv_
 = 
SassTy≥s
::
Fa˘‹y
::
unwøp
(
vÆ
))) {

10  
v_
->
gë_ßss_vÆue
();

12  
ßss_make_îr‹
("A SassValue object wasÉxpected.");

16 
	g°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
Cu°omFun˘i⁄Bridge
::
¥e_¥o˚ss_¨gs
(
°d
::ve˘‹<*> 
ö
) const {

17 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
¨gv
 = std::vector<v8::Local<v8::Value>>();

19 * 
	gvÆue
 : 
ö
) {

20 
¨gv
.
push_back
(
SassTy≥s
::
Fa˘‹y
::
¸óã
(
°©ic_ˇ°
<
Sass_VÆue
*>(
vÆue
))->
gë_js_obje˘
());

23  
	g¨gv
;

	@node_modules/node-sass/src/custom_function_bridge.h

1 #i‚de‡
CUSTOM_FUNCTION_BRIDGE_H


2 
	#CUSTOM_FUNCTION_BRIDGE_H


	)

4 
	~<«n.h
>

5 
	~<ßss/vÆues.h
>

6 
	~<ßss/fun˘i⁄s.h
>

7 
	~"ˇŒback_bridge.h
"

9 
˛ass
 
	gCu°omFun˘i⁄Bridge
 : 
public
 
CÆlbackBridge
<
Sass_VÆue
*> {

10 
public
:

11 
Cu°omFun˘i⁄Bridge
(
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
cb
, 
boﬁ
 
is_sync
Ë: 
CÆlbackBridge
<
Sass_VÆue
*>(cb, 
	gis_sync
) {}

13 
	g¥iv©e
:

14 
Sass_VÆue
* 
po°_¥o˚ss_ªtu∫_vÆue
(
v8
::
Loˇl
<v8::
VÆue
>) const;

15 
	g°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
¥e_¥o˚ss_¨gs
(
°d
::vector<*>) const;

	@node_modules/node-sass/src/custom_importer_bridge.cpp

1 
	~<«n.h
>

2 
	~<°dex˚±
>

3 
	~"cu°om_imp‹ãr_bridge.h
"

4 
	~"¸óã_°rög.h
"

6 
SassImp‹tLi°
 
	gCu°omImp‹ãrBridge
::
po°_¥o˚ss_ªtu∫_vÆue
(
v8
::
Loˇl
<v8::
VÆue
> 
ªtu∫ed_vÆue
) const {

7 
SassImp‹tLi°
 
imp‹ts
 = 0;

8 
	gN™
::
H™dÀSc›e
 
sc›e
;

10 i‡(
	gªtu∫ed_vÆue
->
IsAºay
()) {

11 
	gv8
::
Loˇl
<
v8
::
Aºay
> 
¨øy
 = 
ªtu∫ed_vÆue
.
As
<v8::Array>();

13 
	gimp‹ts
 = 
ßss_make_imp‹t_li°
(
¨øy
->
Lígth
());

15 
size_t
 
	gi
 = 0; i < 
	g¨øy
->
Lígth
(); ++i) {

16 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
vÆue
 = 
N™
::
Gë
(
¨øy
, 
°©ic_ˇ°
<
uöt32_t
>(
i
)).
ToLoˇlChecked
();

18 i‡(!
	gvÆue
->
IsObje˘
()) {

19 autÿ
	gíåy
 = 
ßss_make_imp‹t_íåy
(0, 0, 0);

20 
ßss_imp‹t_£t_îr‹
(
íåy
, "returnedárray must only contain objectÜiterals", -1, -1);

24 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obje˘
 = 
vÆue
.
As
<v8::Object>();

26 i‡(
	gvÆue
->
IsN©iveEº‹
()) {

27 * 
	gmesßge
 = 
¸óã_°rög
(
N™
::
Gë
(
obje˘
, N™::
New
<
v8
::
Såög
>("mesßge").
ToLoˇlChecked
()));

29 
	gimp‹ts
[
i
] = 
ßss_make_imp‹t_íåy
(0, 0, 0);

31 
ßss_imp‹t_£t_îr‹
(
imp‹ts
[
i
], 
mesßge
, -1, -1);

34 
	gimp‹ts
[
i
] = 
gë_imp‹ãr_íåy
(
obje˘
);

38 i‡(
	gªtu∫ed_vÆue
->
IsN©iveEº‹
()) {

39 
	gimp‹ts
 = 
ßss_make_imp‹t_li°
(1);

40 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
obje˘
 = 
ªtu∫ed_vÆue
.
As
<v8::Object>();

41 * 
	gmesßge
 = 
¸óã_°rög
(
N™
::
Gë
(
obje˘
, N™::
New
<
v8
::
Såög
>("mesßge").
ToLoˇlChecked
()));

43 
	gimp‹ts
[0] = 
ßss_make_imp‹t_íåy
(0, 0, 0);

45 
ßss_imp‹t_£t_îr‹
(
imp‹ts
[0], 
mesßge
, -1, -1);

47 i‡(
	gªtu∫ed_vÆue
->
IsObje˘
()) {

48 
	gimp‹ts
 = 
ßss_make_imp‹t_li°
(1);

49 
	gimp‹ts
[0] = 
gë_imp‹ãr_íåy
(
ªtu∫ed_vÆue
.
As
<
v8
::
Obje˘
>());

52  
	gimp‹ts
;

55 
Sass_Imp‹t
* 
	gCu°omImp‹ãrBridge
::
check_ªtu∫ed_°rög
(
N™
::
MaybeLoˇl
<
v8
::
VÆue
> 
vÆue
, c⁄° *
msg
) const

57 
	gv8
::
Loˇl
<
v8
::
VÆue
> 
checked
;

58 i‡(
	gvÆue
.
ToLoˇl
(&
checked
)) {

59 i‡(!
	gchecked
->
IsUndeföed
(Ë&& !checked->
IsSåög
()) {

60 
	gîr
;

62  
	gnuŒ±r
;

65 
	gîr
:

66 autÿ
íåy
 = 
ßss_make_imp‹t_íåy
(0, 0, 0);

67 
ßss_imp‹t_£t_îr‹
(
íåy
, 
msg
, -1, -1);

68  
	gíåy
;

71 
Sass_Imp‹t
* 
	gCu°omImp‹ãrBridge
::
gë_imp‹ãr_íåy
(c⁄° 
v8
::
Loˇl
<v8::
Obje˘
>& 
obje˘
) const {

72 autÿ
ªtu∫ed_fûe
 = 
N™
::
Gë
(
obje˘
, N™::
New
<
v8
::
Såög
>("fûe").
ToLoˇlChecked
());

73 autÿ
	gªtu∫ed_c⁄ã¡s
 = 
N™
::
Gë
(
obje˘
, N™::
New
<
v8
::
Såög
>("c⁄ã¡s").
ToLoˇlChecked
()).ToLocalChecked();

74 autÿ
	gªtu∫ed_m≠
 = 
N™
::
Gë
(
obje˘
, N™::
New
<
v8
::
Såög
>("m≠").
ToLoˇlChecked
());

75 
Sass_Imp‹t
 *
	gîr
;

77 i‡((
	gîr
 = 
check_ªtu∫ed_°rög
(
ªtu∫ed_fûe
, "returned value of `file` must beá string")))

78  
	gîr
;

80 i‡((
	gîr
 = 
check_ªtu∫ed_°rög
(
ªtu∫ed_c⁄ã¡s
, "returned value of `contents` must beá string")))

81  
	gîr
;

83 i‡((
	gîr
 = 
check_ªtu∫ed_°rög
(
ªtu∫ed_m≠
, "returned value of `returned_map` must beá string")))

84  
	gîr
;

86 * 
	g∑th
 = 
¸óã_°rög
(
ªtu∫ed_fûe
);

87 * 
	gc⁄ã¡s
 = 
¸óã_°rög
(
ªtu∫ed_c⁄ã¡s
);

88 * 
	g§cm≠
 = 
¸óã_°rög
(
ªtu∫ed_m≠
);

90  
ßss_make_imp‹t_íåy
(
∑th
, 
c⁄ã¡s
, 
§cm≠
);

93 
	g°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
Cu°omImp‹ãrBridge
::
¥e_¥o˚ss_¨gs
(
°d
::ve˘‹<*> 
ö
) const {

94 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
out
;

96 * 
	g±r
 : 
ö
) {

97 
out
.
push_back
(
N™
::
New
<
v8
::
Såög
>((c⁄°*)
±r
).
ToLoˇlChecked
());

100  
	gout
;

	@node_modules/node-sass/src/custom_importer_bridge.h

1 #i‚de‡
CUSTOM_IMPORTER_BRIDGE_H


2 
	#CUSTOM_IMPORTER_BRIDGE_H


	)

4 
	~<«n.h
>

5 
	~<ßss/fun˘i⁄s.h
>

6 
	~<ßss/vÆues.h
>

7 
	~"ˇŒback_bridge.h
"

9 
Sass_Imp‹t_Li°
 
	tSassImp‹tLi°
;

11 
˛ass
 
	gCu°omImp‹ãrBridge
 : 
public
 
CÆlbackBridge
<
SassImp‹tLi°
> {

12 
public
:

13 
Cu°omImp‹ãrBridge
(
v8
::
Loˇl
<v8::
Fun˘i⁄
> 
cb
, 
boﬁ
 
is_sync
Ë: 
CÆlbackBridge
<
SassImp‹tLi°
>(cb, 
	gis_sync
) {}

15 
	g¥iv©e
:

16 
SassImp‹tLi°
 
po°_¥o˚ss_ªtu∫_vÆue
(
v8
::
Loˇl
<v8::
VÆue
>) const;

17 
Sass_Imp‹t
* 
check_ªtu∫ed_°rög
(
N™
::
MaybeLoˇl
<
v8
::
VÆue
> 
vÆue
, c⁄° *
msg
) const;

18 
Sass_Imp‹t
* 
gë_imp‹ãr_íåy
(c⁄° 
v8
::
Loˇl
<v8::
Obje˘
>&) const;

19 
	g°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
¥e_¥o˚ss_¨gs
(
°d
::vector<*>) const;

	@node_modules/node-sass/src/libsass/contrib/plugin.cpp

1 
	~<c°rög
>

2 
	~<io°ªam
>

3 
	~<°döt.h
>

4 
	~<ßss.h
>

9 "C" c⁄° * 
ADDCALL
 
	$libßss_gë_vîsi⁄
() {

10  
	`libßss_vîsi⁄
();

11 
	}
}

13 
Sass_VÆue
* 
	$cu°om_fun˘i⁄
(c⁄° 
Sass_VÆue
* 
s_¨gs
, 
Sass_Fun˘i⁄_E¡ry
 
cb
, 
Sass_Compûî
* 
comp
)

16 
Sass_C⁄ãxt
* 
˘x
 = 
	`ßss_compûî_gë_c⁄ãxt
(
comp
);

17 
Sass_O±i⁄s
* 
›ts
 = 
	`ßss_compûî_gë_›ti⁄s
(
comp
);

19 * 
cookõ
 = 
	`ßss_fun˘i⁄_gë_cookõ
(
cb
);

21  
	`ßss_make_numbî
((
öçå_t
)
cookõ
, "px");

22 
	}
}

24 "C" 
Sass_Fun˘i⁄_Li°
 
ADDCALL
 
	$libßss_lﬂd_fun˘i⁄s
()

27 
Sass_Fun˘i⁄_E¡ry
 
c_func
 =

28 
	`ßss_make_fun˘i⁄
("foo()", 
cu°om_fun˘i⁄
, (*)42);

30 
Sass_Fun˘i⁄_Li°
 
‚_li°
 = 
	`ßss_make_fun˘i⁄_li°
(1);

32 
	`ßss_fun˘i⁄_£t_li°_íåy
(
‚_li°
, 0, 
c_func
);

34  
‚_li°
;

35 
	}
}

37 
Sass_Imp‹t_Li°
 
	$cu°om_imp‹ãr
(c⁄° * 
cur_∑th
, 
Sass_Imp‹ãr_E¡ry
 
cb
, 
Sass_Compûî
* 
comp
)

40 * 
cookõ
 = 
	`ßss_imp‹ãr_gë_cookõ
(
cb
);

42 
Sass_Imp‹t_Li°
 
öcs
 = 
	`ßss_make_imp‹t_li°
(1);

44 
öcs
[0] = 
	`ßss_make_imp‹t_íåy
(
cur_∑th
, 0, 0);

46  
öcs
;

47 
	}
}

49 "C" 
Sass_Imp‹ãr_Li°
 
ADDCALL
 
	$libßss_lﬂd_imp‹ãrs
()

52 
Sass_Imp‹ãr_E¡ry
 
c_imp
 =

53 
	`ßss_make_imp‹ãr
(
cu°om_imp‹ãr
, - 99, (*)42);

55 
Sass_Imp‹ãr_Li°
 
imp_li°
 = 
	`ßss_make_imp‹ãr_li°
(1);

57 
	`ßss_imp‹ãr_£t_li°_íåy
(
imp_li°
, 0, 
c_imp
);

59  
imp_li°
;

60 
	}
}

	@node_modules/node-sass/src/libsass/include/sass.h

1 #i‚de‡
SASS_H


2 
	#SASS_H


	)

7 
	~<ßss/ba£.h
>

8 
	~<ßss/vîsi⁄.h
>

9 
	~<ßss/vÆues.h
>

10 
	~<ßss/fun˘i⁄s.h
>

11 
	~<ßss/c⁄ãxt.h
>

12 
	~<ßss2scss.h
>

	@node_modules/node-sass/src/libsass/include/sass/base.h

1 #i‚de‡
SASS_BASE_H


2 
	#SASS_BASE_H


	)

4 #ifde‡
_MSC_VER


5 #¥agm®
w¨nög
(
dißbÀ
 : 4503)

6 #i‚de‡
_SCL_SECURE_NO_WARNINGS


7 
	#_SCL_SECURE_NO_WARNINGS


	)

9 #i‚de‡
_CRT_SECURE_NO_WARNINGS


10 
	#_CRT_SECURE_NO_WARNINGS


	)

12 #i‚de‡
_CRT_NONSTDC_NO_DEPRECATE


13 
	#_CRT_NONSTDC_NO_DEPRECATE


	)

17 
	~<°ddef.h
>

18 
	~<°dboﬁ.h
>

20 #ifde‡
__GNUC__


21 
	#DEPRECATED
(
func
Ëfun¯
	`__©åibuã__
 ((
dïªˇãd
))

	)

22 #ñi‡
deföed
(
_MSC_VER
)

23 
	#DEPRECATED
(
func
Ë
	`__de˛•ec
(
dïªˇãd
Ë
	)
func

25 #¥agm®
mesßge
("WARNING: YouÇeedÅo implement DEPRECATED forÅhis compiler")

26 
	#DEPRECATED
(
func
Ë
	)
func

29 #ifde‡
_WIN32


32 #ifde‡
ADD_EXPORTS


33 
	#ADDAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

34 
	#ADDCALL
 
__cde˛


	)

36 
	#ADDAPI


	)

37 
	#ADDCALL


	)

43 
	#ADDAPI


	)

44 
	#ADDCALL


	)

49 #ifde‡
__˝lu•lus


55 
	eSass_Ouçut_StyÀ
 {

56 
SASS_STYLE_NESTED
,

57 
SASS_STYLE_EXPANDED
,

58 
SASS_STYLE_COMPACT
,

59 
SASS_STYLE_COMPRESSED
,

61 
SASS_STYLE_INSPECT
,

62 
SASS_STYLE_TO_SASS


66 * 
ßss_Æloc_mem‹y
(
size_t
 
size
);

68 * 
ßss_c›y_c_°rög
(c⁄° * 
°r
);

70 
ßss_‰ì_mem‹y
(* 
±r
);

73 
ADDAPI
 * 
ADDCALL
 
ßss_°rög_quŸe
 (c⁄° * 
°r
, c⁄° 
quŸe_m¨k
);

74 
ADDAPI
 * 
ADDCALL
 
ßss_°rög_unquŸe
 (c⁄° * 
°r
);

77 
ADDAPI
 * 
ADDCALL
 
ßss_ªsﬁve_fûe
 (c⁄° * 
∑th
, c⁄° * 
öcs
[]);

80 
ADDAPI
 c⁄° * 
ADDCALL
 
libßss_vîsi⁄
();

83 
ADDAPI
 c⁄° * 
ADDCALL
 
libßss_œnguage_vîsi⁄
();

85 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/libsass/include/sass/context.h

1 #i‚de‡
SASS_C_CONTEXT_H


2 
	#SASS_C_CONTEXT_H


	)

4 
	~<°ddef.h
>

5 
	~<°dboﬁ.h
>

6 
	~<ßss/ba£.h
>

7 
	~<ßss/vÆues.h
>

8 
	~<ßss/fun˘i⁄s.h
>

10 #ifde‡
__˝lu•lus


16 
Sass_Compûî
;

19 
Sass_O±i⁄s
;

20 
Sass_C⁄ãxt
;

21 
Sass_Fûe_C⁄ãxt
;

22 
Sass_D©a_C⁄ãxt
;

25 
	eSass_Compûî_Sèã
 {

26 
SASS_COMPILER_CREATED
,

27 
SASS_COMPILER_PARSED
,

28 
SASS_COMPILER_EXECUTED


32 
ADDAPI
 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_make_›ti⁄s
 ();

34 
ADDAPI
 
Sass_Fûe_C⁄ãxt
* 
ADDCALL
 
ßss_make_fûe_c⁄ãxt
 (c⁄° * 
öput_∑th
);

35 
ADDAPI
 
Sass_D©a_C⁄ãxt
* 
ADDCALL
 
ßss_make_d©a_c⁄ãxt
 (* 
sour˚_°rög
);

38 
ADDAPI
 
ADDCALL
 
ßss_compûe_fûe_c⁄ãxt
 (
Sass_Fûe_C⁄ãxt
* 
˘x
);

39 
ADDAPI
 
ADDCALL
 
ßss_compûe_d©a_c⁄ãxt
 (
Sass_D©a_C⁄ãxt
* 
˘x
);

42 
ADDAPI
 
Sass_Compûî
* 
ADDCALL
 
ßss_make_fûe_compûî
 (
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
);

43 
ADDAPI
 
Sass_Compûî
* 
ADDCALL
 
ßss_make_d©a_compûî
 (
Sass_D©a_C⁄ãxt
* 
d©a_˘x
);

47 
ADDAPI
 
ADDCALL
 
ßss_compûî_∑r£
(
Sass_Compûî
* 
compûî
);

48 
ADDAPI
 
ADDCALL
 
ßss_compûî_execuã
(
Sass_Compûî
* 
compûî
);

52 
ADDAPI
 
ADDCALL
 
ßss_dñëe_compûî
(
Sass_Compûî
* 
compûî
);

55 
ADDAPI
 
ADDCALL
 
ßss_dñëe_fûe_c⁄ãxt
 (
Sass_Fûe_C⁄ãxt
* 
˘x
);

56 
ADDAPI
 
ADDCALL
 
ßss_dñëe_d©a_c⁄ãxt
 (
Sass_D©a_C⁄ãxt
* 
˘x
);

59 
ADDAPI
 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_fûe_c⁄ãxt_gë_c⁄ãxt
 (
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
);

60 
ADDAPI
 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_d©a_c⁄ãxt_gë_c⁄ãxt
 (
Sass_D©a_C⁄ãxt
* 
d©a_˘x
);

63 
ADDAPI
 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_c⁄ãxt_gë_›ti⁄s
 (
Sass_C⁄ãxt
* 
˘x
);

64 
ADDAPI
 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_fûe_c⁄ãxt_gë_›ti⁄s
 (
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
);

65 
ADDAPI
 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_d©a_c⁄ãxt_gë_›ti⁄s
 (
Sass_D©a_C⁄ãxt
* 
d©a_˘x
);

66 
ADDAPI
 
ADDCALL
 
ßss_fûe_c⁄ãxt_£t_›ti⁄s
 (
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
, 
Sass_O±i⁄s
* 
›t
);

67 
ADDAPI
 
ADDCALL
 
ßss_d©a_c⁄ãxt_£t_›ti⁄s
 (
Sass_D©a_C⁄ãxt
* 
d©a_˘x
, 
Sass_O±i⁄s
* 
›t
);

71 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_gë_¥ecisi⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
);

72 
ADDAPI
 
Sass_Ouçut_StyÀ
 
ADDCALL
 
ßss_›ti⁄_gë_ouçut_°yÀ
 (
Sass_O±i⁄s
* 
›ti⁄s
);

73 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_›ti⁄_gë_sour˚_commíts
 (
Sass_O±i⁄s
* 
›ti⁄s
);

74 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_›ti⁄_gë_sour˚_m≠_embed
 (
Sass_O±i⁄s
* 
›ti⁄s
);

75 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_›ti⁄_gë_sour˚_m≠_c⁄ã¡s
 (
Sass_O±i⁄s
* 
›ti⁄s
);

76 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_›ti⁄_gë_omô_sour˚_m≠_uæ
 (
Sass_O±i⁄s
* 
›ti⁄s
);

77 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_›ti⁄_gë_is_ödíãd_sy¡ax_§c
 (
Sass_O±i⁄s
* 
›ti⁄s
);

78 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_ödít
 (
Sass_O±i⁄s
* 
›ti⁄s
);

79 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_löe„ed
 (
Sass_O±i⁄s
* 
›ti⁄s
);

80 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_öput_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
);

81 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_ouçut_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
);

82 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_∂ugö_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
);

83 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_ö˛ude_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
);

84 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_sour˚_m≠_fûe
 (
Sass_O±i⁄s
* 
›ti⁄s
);

85 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_›ti⁄_gë_sour˚_m≠_roŸ
 (
Sass_O±i⁄s
* 
›ti⁄s
);

86 
ADDAPI
 
Sass_Imp‹ãr_Li°
 
ADDCALL
 
ßss_›ti⁄_gë_c_hódîs
 (
Sass_O±i⁄s
* 
›ti⁄s
);

87 
ADDAPI
 
Sass_Imp‹ãr_Li°
 
ADDCALL
 
ßss_›ti⁄_gë_c_imp‹ãrs
 (
Sass_O±i⁄s
* 
›ti⁄s
);

88 
ADDAPI
 
Sass_Fun˘i⁄_Li°
 
ADDCALL
 
ßss_›ti⁄_gë_c_fun˘i⁄s
 (
Sass_O±i⁄s
* 
›ti⁄s
);

91 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_¥ecisi⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
¥ecisi⁄
);

92 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_ouçut_°yÀ
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
Sass_Ouçut_StyÀ
 
ouçut_°yÀ
);

93 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_sour˚_commíts
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
boﬁ
 
sour˚_commíts
);

94 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_sour˚_m≠_embed
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
boﬁ
 
sour˚_m≠_embed
);

95 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_sour˚_m≠_c⁄ã¡s
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
boﬁ
 
sour˚_m≠_c⁄ã¡s
);

96 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_omô_sour˚_m≠_uæ
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
boﬁ
 
omô_sour˚_m≠_uæ
);

97 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_is_ödíãd_sy¡ax_§c
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
boﬁ
 
is_ödíãd_sy¡ax_§c
);

98 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_ödít
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
ödít
);

99 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_löe„ed
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
löe„ed
);

100 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_öput_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
öput_∑th
);

101 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_ouçut_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
ouçut_∑th
);

102 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_∂ugö_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
∂ugö_∑th
);

103 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_ö˛ude_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
ö˛ude_∑th
);

104 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_sour˚_m≠_fûe
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
sour˚_m≠_fûe
);

105 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_sour˚_m≠_roŸ
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
sour˚_m≠_roŸ
);

106 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_c_hódîs
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
Sass_Imp‹ãr_Li°
 
c_hódîs
);

107 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_c_imp‹ãrs
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
Sass_Imp‹ãr_Li°
 
c_imp‹ãrs
);

108 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_£t_c_fun˘i⁄s
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
Sass_Fun˘i⁄_Li°
 
c_fun˘i⁄s
);

112 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_ouçut_°rög
 (
Sass_C⁄ãxt
* 
˘x
);

113 
ADDAPI
 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_°©us
 (
Sass_C⁄ãxt
* 
˘x
);

114 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_js⁄
 (
Sass_C⁄ãxt
* 
˘x
);

115 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_ãxt
 (
Sass_C⁄ãxt
* 
˘x
);

116 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_mesßge
 (
Sass_C⁄ãxt
* 
˘x
);

117 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_fûe
 (
Sass_C⁄ãxt
* 
˘x
);

118 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_§c
 (
Sass_C⁄ãxt
* 
˘x
);

119 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_löe
 (
Sass_C⁄ãxt
* 
˘x
);

120 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_c⁄ãxt_gë_îr‹_cﬁumn
 (
Sass_C⁄ãxt
* 
˘x
);

121 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_c⁄ãxt_gë_sour˚_m≠_°rög
 (
Sass_C⁄ãxt
* 
˘x
);

122 
ADDAPI
 ** 
ADDCALL
 
ßss_c⁄ãxt_gë_ö˛uded_fûes
 (
Sass_C⁄ãxt
* 
˘x
);

125 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_c⁄ãxt_gë_ö˛uded_fûes_size
 (
Sass_C⁄ãxt
* 
˘x
);

128 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_îr‹_js⁄
 (
Sass_C⁄ãxt
* 
˘x
);

129 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_îr‹_ãxt
 (
Sass_C⁄ãxt
* 
˘x
);

130 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_îr‹_mesßge
 (
Sass_C⁄ãxt
* 
˘x
);

131 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_îr‹_fûe
 (
Sass_C⁄ãxt
* 
˘x
);

132 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_ouçut_°rög
 (
Sass_C⁄ãxt
* 
˘x
);

133 
ADDAPI
 * 
ADDCALL
 
ßss_c⁄ãxt_èke_sour˚_m≠_°rög
 (
Sass_C⁄ãxt
* 
˘x
);

134 
ADDAPI
 ** 
ADDCALL
 
ßss_c⁄ãxt_èke_ö˛uded_fûes
 (
Sass_C⁄ãxt
* 
˘x
);

137 
ADDAPI
 
Sass_Compûî_Sèã
 
ADDCALL
 
ßss_compûî_gë_°©e
(
Sass_Compûî
* 
compûî
);

138 
ADDAPI
 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_compûî_gë_c⁄ãxt
(
Sass_Compûî
* 
compûî
);

139 
ADDAPI
 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_compûî_gë_›ti⁄s
(
Sass_Compûî
* 
compûî
);

140 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_compûî_gë_imp‹t_°ack_size
(
Sass_Compûî
* 
compûî
);

141 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_compûî_gë_œ°_imp‹t
(
Sass_Compûî
* 
compûî
);

142 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_compûî_gë_imp‹t_íåy
(
Sass_Compûî
* 
compûî
, 
size_t
 
idx
);

145 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_push_∂ugö_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
∑th
);

146 
ADDAPI
 
ADDCALL
 
ßss_›ti⁄_push_ö˛ude_∑th
 (
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
∑th
);

148 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/libsass/include/sass/functions.h

1 #i‚de‡
SASS_C_FUNCTIONS_H


2 
	#SASS_C_FUNCTIONS_H


	)

4 
	~<°ddef.h
>

5 
	~<°dboﬁ.h
>

6 
	~<ßss/ba£.h
>

8 #ifde‡
__˝lu•lus


14 
Sass_Imp‹t
;

15 
Sass_O±i⁄s
;

16 
Sass_Compûî
;

17 
Sass_Imp‹ãr
;

18 
Sass_Fun˘i⁄
;

21 
Sass_Imp‹t
 (*
	tSass_Imp‹t_E¡ry
);

22 
Sass_Imp‹t
* (*
	tSass_Imp‹t_Li°
);

24 
Sass_Imp‹ãr
 (*
	tSass_Imp‹ãr_E¡ry
);

25 
Sass_Imp‹ãr
* (*
	tSass_Imp‹ãr_Li°
);

27 
Sass_Imp‹t_Li°
 (*
	tSass_Imp‹ãr_Fn
)

28 (c⁄° * 
	tuæ
, 
	tSass_Imp‹ãr_E¡ry
 
	tcb
, 
	tSass_Compûî
* 
	tcompûî
);

31 
Sass_Fun˘i⁄
 (*
	tSass_Fun˘i⁄_E¡ry
);

32 
Sass_Fun˘i⁄
* (*
	tSass_Fun˘i⁄_Li°
);

34 
Sass_VÆue
* (*
	tSass_Fun˘i⁄_Fn
)

35 (c⁄° 
	tSass_VÆue
*, 
	tSass_Fun˘i⁄_E¡ry
 
	tcb
, 
	tSass_Compûî
* 
	tcompûî
);

39 
ADDAPI
 
Sass_Imp‹ãr_Li°
 
ADDCALL
 
ßss_make_imp‹ãr_li°
 (
size_t
 
Àngth
);

40 
ADDAPI
 
Sass_Imp‹ãr_E¡ry
 
ADDCALL
 
ßss_imp‹ãr_gë_li°_íåy
 (
Sass_Imp‹ãr_Li°
 
li°
, 
size_t
 
idx
);

41 
ADDAPI
 
ADDCALL
 
ßss_imp‹ãr_£t_li°_íåy
 (
Sass_Imp‹ãr_Li°
 
li°
, 
size_t
 
idx
, 
Sass_Imp‹ãr_E¡ry
 
íåy
);

46 
ADDAPI
 
Sass_Imp‹ãr_E¡ry
 
ADDCALL
 
ßss_make_imp‹ãr
 (
Sass_Imp‹ãr_Fn
 
imp‹ãr
, 
¥i‹ôy
, * 
cookõ
);

49 
ADDAPI
 
Sass_Imp‹ãr_Fn
 
ADDCALL
 
ßss_imp‹ãr_gë_fun˘i⁄
 (
Sass_Imp‹ãr_E¡ry
 
cb
);

50 
ADDAPI
 
ADDCALL
 
ßss_imp‹ãr_gë_¥i‹ôy
 (
Sass_Imp‹ãr_E¡ry
 
cb
);

51 
ADDAPI
 * 
ADDCALL
 
ßss_imp‹ãr_gë_cookõ
 (
Sass_Imp‹ãr_E¡ry
 
cb
);

54 
ADDAPI
 
ADDCALL
 
ßss_dñëe_imp‹ãr
 (
Sass_Imp‹ãr_E¡ry
 
cb
);

57 
ADDAPI
 
Sass_Imp‹t_Li°
 
ADDCALL
 
ßss_make_imp‹t_li°
 (
size_t
 
Àngth
);

59 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_make_imp‹t_íåy
 (c⁄° * 
∑th
, * 
sour˚
, * 
§cm≠
);

60 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_make_imp‹t
 (c⁄° * 
imp_∑th
, c⁄° * 
abs_ba£
, * 
sour˚
, * 
§cm≠
);

62 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_imp‹t_£t_îr‹
(Sass_Imp‹t_E¡ry 
imp‹t
, c⁄° * 
mesßge
, 
size_t
 
löe
, size_à
cﬁ
);

66 
ADDAPI
 
ADDCALL
 
ßss_imp‹t_£t_li°_íåy
 (
Sass_Imp‹t_Li°
 
li°
, 
size_t
 
idx
, 
Sass_Imp‹t_E¡ry
 
íåy
);

67 
ADDAPI
 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_imp‹t_gë_li°_íåy
 (
Sass_Imp‹t_Li°
 
li°
, 
size_t
 
idx
);

70 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_imp_∑th
 (
Sass_Imp‹t_E¡ry
);

71 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_abs_∑th
 (
Sass_Imp‹t_E¡ry
);

72 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_sour˚
 (
Sass_Imp‹t_E¡ry
);

73 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_§cm≠
 (
Sass_Imp‹t_E¡ry
);

76 
ADDAPI
 * 
ADDCALL
 
ßss_imp‹t_èke_sour˚
 (
Sass_Imp‹t_E¡ry
);

77 
ADDAPI
 * 
ADDCALL
 
ßss_imp‹t_èke_§cm≠
 (
Sass_Imp‹t_E¡ry
);

79 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_imp‹t_gë_îr‹_löe
 (
Sass_Imp‹t_E¡ry
);

80 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_imp‹t_gë_îr‹_cﬁumn
 (
Sass_Imp‹t_E¡ry
);

81 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_îr‹_mesßge
 (
Sass_Imp‹t_E¡ry
);

84 
ADDAPI
 
ADDCALL
 
ßss_dñëe_imp‹t_li°
 (
Sass_Imp‹t_Li°
);

86 
ADDAPI
 
ADDCALL
 
ßss_dñëe_imp‹t
 (
Sass_Imp‹t_E¡ry
);

91 
ADDAPI
 
Sass_Fun˘i⁄_Li°
 
ADDCALL
 
ßss_make_fun˘i⁄_li°
 (
size_t
 
Àngth
);

92 
ADDAPI
 
Sass_Fun˘i⁄_E¡ry
 
ADDCALL
 
ßss_make_fun˘i⁄
 (c⁄° * 
sig«tuª
, 
Sass_Fun˘i⁄_Fn
 
cb
, * 
cookõ
);

95 
ADDAPI
 
Sass_Fun˘i⁄_E¡ry
 
ADDCALL
 
ßss_fun˘i⁄_gë_li°_íåy
(
Sass_Fun˘i⁄_Li°
 
li°
, 
size_t
 
pos
);

96 
ADDAPI
 
ADDCALL
 
ßss_fun˘i⁄_£t_li°_íåy
(
Sass_Fun˘i⁄_Li°
 
li°
, 
size_t
 
pos
, 
Sass_Fun˘i⁄_E¡ry
 
cb
);

99 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_fun˘i⁄_gë_sig«tuª
 (
Sass_Fun˘i⁄_E¡ry
 
cb
);

100 
ADDAPI
 
Sass_Fun˘i⁄_Fn
 
ADDCALL
 
ßss_fun˘i⁄_gë_fun˘i⁄
 (
Sass_Fun˘i⁄_E¡ry
 
cb
);

101 
ADDAPI
 * 
ADDCALL
 
ßss_fun˘i⁄_gë_cookõ
 (
Sass_Fun˘i⁄_E¡ry
 
cb
);

104 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/libsass/include/sass/values.h

1 #i‚de‡
SASS_C_VALUES_H


2 
	#SASS_C_VALUES_H


	)

4 
	~<°ddef.h
>

5 
	~<°dboﬁ.h
>

6 
	~<ßss/ba£.h
>

8 #ifde‡
__˝lu•lus


14 
Sass_VÆue
;

17 
	eSass_Tag
 {

18 
SASS_BOOLEAN
,

19 
SASS_NUMBER
,

20 
SASS_COLOR
,

21 
SASS_STRING
,

22 
SASS_LIST
,

23 
SASS_MAP
,

24 
SASS_NULL
,

25 
SASS_ERROR
,

26 
SASS_WARNING


30 
	eSass_Sï¨©‹
 {

31 
SASS_COMMA
,

32 
SASS_SPACE
,

33 
SASS_HASH


37 
	eSass_OP
 {

38 
AND
, 
OR
,

39 
EQ
, 
NEQ
, 
GT
, 
GTE
, 
LT
, 
LTE
,

40 
ADD
, 
SUB
, 
MUL
, 
DIV
, 
MOD
,

41 
NUM_OPS


46 
ADDAPI
 
Sass_Tag
 
ADDCALL
 
ßss_vÆue_gë_èg
 (c⁄° 
Sass_VÆue
* 
v
);

50 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_nuŒ
 (c⁄° 
Sass_VÆue
* 
v
);

51 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_numbî
 (c⁄° 
Sass_VÆue
* 
v
);

52 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_°rög
 (c⁄° 
Sass_VÆue
* 
v
);

53 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_boﬁón
 (c⁄° 
Sass_VÆue
* 
v
);

54 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_cﬁ‹
 (c⁄° 
Sass_VÆue
* 
v
);

55 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_li°
 (c⁄° 
Sass_VÆue
* 
v
);

56 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_m≠
 (c⁄° 
Sass_VÆue
* 
v
);

57 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_îr‹
 (c⁄° 
Sass_VÆue
* 
v
);

58 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_w¨nög
 (c⁄° 
Sass_VÆue
* 
v
);

61 
ADDAPI
 
ADDCALL
 
ßss_numbî_gë_vÆue
 (c⁄° 
Sass_VÆue
* 
v
);

62 
ADDAPI
 
ADDCALL
 
ßss_numbî_£t_vÆue
 (
Sass_VÆue
* 
v
, 
vÆue
);

63 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_numbî_gë_unô
 (c⁄° 
Sass_VÆue
* 
v
);

64 
ADDAPI
 
ADDCALL
 
ßss_numbî_£t_unô
 (
Sass_VÆue
* 
v
, * 
unô
);

67 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss_°rög_gë_vÆue
 (c⁄° 
Sass_VÆue
* 
v
);

68 
ADDAPI
 
ADDCALL
 
ßss_°rög_£t_vÆue
 (
Sass_VÆue
* 
v
, * 
vÆue
);

69 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_°rög_is_quŸed
(c⁄° 
Sass_VÆue
* 
v
);

70 
ADDAPI
 
ADDCALL
 
ßss_°rög_£t_quŸed
(
Sass_VÆue
* 
v
, 
boﬁ
 
quŸed
);

73 
ADDAPI
 
boﬁ
 
ADDCALL
 
ßss_boﬁón_gë_vÆue
 (c⁄° 
Sass_VÆue
* 
v
);

74 
ADDAPI
 
ADDCALL
 
ßss_boﬁón_£t_vÆue
 (
Sass_VÆue
* 
v
, 
boﬁ
 
vÆue
);

77 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_gë_r
 (c⁄° 
Sass_VÆue
* 
v
);

78 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_£t_r
 (
Sass_VÆue
* 
v
, 
r
);

79 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_gë_g
 (c⁄° 
Sass_VÆue
* 
v
);

80 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_£t_g
 (
Sass_VÆue
* 
v
, 
g
);

81 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_gë_b
 (c⁄° 
Sass_VÆue
* 
v
);

82 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_£t_b
 (
Sass_VÆue
* 
v
, 
b
);

83 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_gë_a
 (c⁄° 
Sass_VÆue
* 
v
);

84 
ADDAPI
 
ADDCALL
 
ßss_cﬁ‹_£t_a
 (
Sass_VÆue
* 
v
, 
a
);

87 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_li°_gë_Àngth
 (c⁄° 
Sass_VÆue
* 
v
);

89 
ADDAPI
 
Sass_Sï¨©‹
 
ADDCALL
 
ßss_li°_gë_£∑øt‹
 (c⁄° 
Sass_VÆue
* 
v
);

90 
ADDAPI
 
ADDCALL
 
ßss_li°_£t_£∑øt‹
 (
Sass_VÆue
* 
v
, 
Sass_Sï¨©‹
 
vÆue
);

92 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_li°_gë_vÆue
 (c⁄° Sass_VÆue* 
v
, 
size_t
 
i
);

93 
ADDAPI
 
ADDCALL
 
ßss_li°_£t_vÆue
 (
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_VÆue* 
vÆue
);

96 
ADDAPI
 
size_t
 
ADDCALL
 
ßss_m≠_gë_Àngth
 (c⁄° 
Sass_VÆue
* 
v
);

98 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_m≠_gë_key
 (c⁄° Sass_VÆue* 
v
, 
size_t
 
i
);

99 
ADDAPI
 
ADDCALL
 
ßss_m≠_£t_key
 (
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_Value*);

100 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_m≠_gë_vÆue
 (c⁄° Sass_VÆue* 
v
, 
size_t
 
i
);

101 
ADDAPI
 
ADDCALL
 
ßss_m≠_£t_vÆue
 (
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_Value*);

104 
ADDAPI
 * 
ADDCALL
 
ßss_îr‹_gë_mesßge
 (c⁄° 
Sass_VÆue
* 
v
);

105 
ADDAPI
 
ADDCALL
 
ßss_îr‹_£t_mesßge
 (
Sass_VÆue
* 
v
, * 
msg
);

108 
ADDAPI
 * 
ADDCALL
 
ßss_w¨nög_gë_mesßge
 (c⁄° 
Sass_VÆue
* 
v
);

109 
ADDAPI
 
ADDCALL
 
ßss_w¨nög_£t_mesßge
 (
Sass_VÆue
* 
v
, * 
msg
);

112 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_nuŒ
 ();

113 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_boﬁón
 (
boﬁ
 
vÆ
);

114 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_°rög
 (c⁄° * 
vÆ
);

115 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_q°rög
 (c⁄° * 
vÆ
);

116 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_numbî
 (
vÆ
, c⁄° * 
unô
);

117 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_cﬁ‹
 (
r
, 
g
, 
b
, 
a
);

118 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_li°
 (
size_t
 
Àn
, 
Sass_Sï¨©‹
 
£p
);

119 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_m≠
 (
size_t
 
Àn
);

120 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_îr‹
 (c⁄° * 
msg
);

121 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_make_w¨nög
 (c⁄° * 
msg
);

126 
ADDAPI
 
ADDCALL
 
ßss_dñëe_vÆue
 (
Sass_VÆue
* 
vÆ
);

129 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_˛⁄e_vÆue
 (c⁄° Sass_VÆue* 
vÆ
);

132 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_vÆue_°rögify
 (c⁄° Sass_VÆue* 
a
, 
boﬁ
 
com¥es£d
, 
¥ecisi⁄
);

135 
ADDAPI
 
Sass_VÆue
* 
ADDCALL
 
ßss_vÆue_›
 (
Sass_OP
 
›
, c⁄° Sass_VÆue* 
a
, c⁄° Sass_VÆue* 
b
);

138 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/libsass/include/sass/version.h

1 #i‚de‡
SASS_VERSION_H


2 
	#SASS_VERSION_H


	)

4 #i‚de‡
LIBSASS_VERSION


5 
	#LIBSASS_VERSION
 "[NA]"

	)

8 #i‚de‡
LIBSASS_LANGUAGE_VERSION


9 
	#LIBSASS_LANGUAGE_VERSION
 "[NA]"

	)

	@node_modules/node-sass/src/libsass/include/sass2scss.h

7 #i‚de‡
SASS2SCSS_H


8 
	#SASS2SCSS_H


	)

10 #ifde‡
_WIN32


13 #ifde‡
ADD_EXPORTS


14 
	#ADDAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

15 
	#ADDCALL
 
__cde˛


	)

17 
	#ADDAPI


	)

18 
	#ADDCALL


	)

24 
	#ADDAPI


	)

25 
	#ADDCALL


	)

29 #ifde‡
__˝lu•lus


31 
	~<°ack
>

32 
	~<°rög
>

33 
	~<c°rög
>

34 
	~<s°ªam
>

35 
	~<io°ªam
>

37 #i‚de‡
SASS2SCSS_VERSION


40 
	#SASS2SCSS_VERSION
 "1.0.6"

	)

44 
«me•a˚
 
	gSass


48 c⁄° 
	gSASS2SCSS_PRETTIFY_0
 = 0;

49 c⁄° 
	gSASS2SCSS_PRETTIFY_1
 = 1;

50 c⁄° 
	gSASS2SCSS_PRETTIFY_2
 = 2;

51 c⁄° 
	gSASS2SCSS_PRETTIFY_3
 = 3;

54 c⁄° 
	gSASS2SCSS_KEEP_COMMENT
 = 32;

56 c⁄° 
	gSASS2SCSS_STRIP_COMMENT
 = 64;

58 c⁄° 
	gSASS2SCSS_CONVERT_COMMENT
 = 128;

61 c⁄° 
	g°d
::
°rög
 
SASS2SCSS_FIND_WHITESPACE
 = " \t\n\v\f\r";

65 
	sc⁄vîãr


68 
	g›ti⁄s
;

70 
boﬁ
 
	g£À˘‹
;

72 
boﬁ
 
	gcomma
;

74 
boﬁ
 
	g¥›îty
;

76 
boﬁ
 
	g£micﬁ⁄
;

78 
	g°d
::
°rög
 
commít
;

80 
boﬁ
 
	gíd_of_fûe
;

82 
	g°d
::
°rög
 
whôe•a˚
;

84 
	g°d
::
°ack
<
°d
::
°rög
> 
ödíts
;

88 * 
ßss2scss
 (c⁄° 
°d
::
°rög
& 
ßss
, c⁄° 
›ti⁄s
);

98 
	#SASS2SCSS_PRETTIFY_0
 0

	)

99 
	#SASS2SCSS_PRETTIFY_1
 1

	)

100 
	#SASS2SCSS_PRETTIFY_2
 2

	)

101 
	#SASS2SCSS_PRETTIFY_3
 3

	)

104 
	#SASS2SCSS_KEEP_COMMENT
 32

	)

106 
	#SASS2SCSS_STRIP_COMMENT
 64

	)

108 
	#SASS2SCSS_CONVERT_COMMENT
 128

	)

111 
ADDAPI
 * 
ADDCALL
 
ßss2scss
 (c⁄° * 
ßss
, c⁄° 
›ti⁄s
);

114 
ADDAPI
 c⁄° * 
ADDCALL
 
ßss2scss_vîsi⁄
();

116 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/libsass/src/ast.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"c⁄ãxt.hµ
"

4 
	~"node.hµ
"

5 
	~"exãnd.hµ
"

6 
	~"emôãr.hµ
"

7 
	~"cﬁ‹_m≠s.hµ
"

8 
	~<£t
>

9 
	~<iom™ù
>

10 
	~<io°ªam
>

11 
	~<Æg‹ôhm
>

12 
	~<fun˘i⁄Æ
>

13 
	~<c˘y≥
>

14 
	~<loˇÀ
>

16 
«me•a˚
 
	gSass
 {

18 
NuŒ
 
ßss_nuŒ
(
Sass
::NuŒ(
P¨£rSèã
("null")));

20 
boﬁ
 
	gSuµ‹ts_O≥øt‹
::
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
) const {

21  
dy«mic_ˇ°
<
Suµ‹ts_Neg©i⁄
*>(
c⁄d
) ||

22 (
dy«mic_ˇ°
<
Suµ‹ts_O≥øt‹
*>(
c⁄d
) &&

23 
dy«mic_ˇ°
<
Suµ‹ts_O≥øt‹
*>(
c⁄d
)->
›î™d
() != operand());

26 
boﬁ
 
	gSuµ‹ts_Neg©i⁄
::
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
) const {

27  
dy«mic_ˇ°
<
Suµ‹ts_Neg©i⁄
*>(
c⁄d
) ||

28 
dy«mic_ˇ°
<
Suµ‹ts_O≥øt‹
*>(
c⁄d
);

31 
	g°d
::
°rög
 & 
°r_…rim
(
°d
::°rög & 
°r
)

33 autÿ
ô2
 = 
°d
::
föd_if
–
°r
.
begö
(Ë, så.
íd
(Ë, [](
ch
){  !°d::
is•a˚
<>(ch , std::
loˇÀ
::
˛assic
() ) ; } );

34 
	g°r
.
îa£
–
°r
.
begö
(Ë, 
ô2
);

35  
	g°r
;

38 
	g°d
::
°rög
 & 
°r_πrim
(
°d
::°rög & 
°r
)

40 autÿ
ô1
 = 
°d
::
föd_if
–
°r
.
rbegö
(Ë, så.
ªnd
(Ë, [](
ch
){  !°d::
is•a˚
<>(ch , std::
loˇÀ
::
˛assic
() ) ; } );

41 
	g°r
.
îa£
–
ô1
.
ba£
(Ë, 
°r
.
íd
() );

42  
	g°r
;

45 
	gSåög_C⁄°™t
::
πrim
()

47 
vÆue_
 = 
°r_πrim
(value_);

49 
	gSåög_C⁄°™t
::
…rim
()

51 
vÆue_
 = 
°r_…rim
(value_);

53 
	gSåög_C⁄°™t
::
åim
()

55 
πrim
();

56 
…rim
();

59 
	gSåög_Schema
::
πrim
()

61 i‡(!
em±y
()) {

62 i‡(
Såög
* 
°r
 = 
dy«mic_ˇ°
<Såög*>(
œ°
())Ë°r->
πrim
();

65 
	gSåög_Schema
::
…rim
()

67 i‡(!
em±y
()) {

68 i‡(
Såög
* 
°r
 = 
dy«mic_ˇ°
<Såög*>(
fú°
())Ë°r->
…rim
();

71 
	gSåög_Schema
::
åim
()

73 
πrim
();

74 
…rim
();

77 
boﬁ
 
	gAt_RoŸ_Quîy
::
ex˛ude
(
°d
::
°rög
 
°r
)

79 
boﬁ
 
wôh
 = 
„©uª
(Ë&& 
unquŸe
(„©uª()->
to_°rög
()).
com∑ª
("with") == 0;

80 
Li°
* 
	gl
 = 
°©ic_ˇ°
<Li°*>(
vÆue
());

81 
	g°d
::
°rög
 
v
;

83 i‡(
	gwôh
)

85 i‡(!
	gl
 ||Ü->
Àngth
(Ë=0Ë 
°r
.
com∑ª
("rule") != 0;

86 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i)

88 
	gv
 = 
unquŸe
((*
l
)[
i
]->
to_°rög
());

89 i‡(
	gv
.
com∑ª
("Æl"Ë=0 || 
v
 =
°r
Ë 
Ál£
;

91  
	gåue
;

95 i‡(!
	gl
 || !l->
Àngth
()Ë 
	g°r
.
com∑ª
("rule") == 0;

96 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i)

98 
	gv
 = 
unquŸe
((*
l
)[
i
]->
to_°rög
());

99 i‡(
	gv
.
com∑ª
("Æl"Ë=0 || 
v
 =
°r
Ë 
åue
;

101  
	gÁl£
;

105 
	gAST_Node
::
upd©e_p°©e
(c⁄° 
P¨£rSèã
& 
p°©e
)

107 
p°©e_
.
off£t
 +
p°©e
 -Östate_ +Östate.offset;

110 
ölöe
 
boﬁ
 
is_ns_eq
(c⁄° 
°d
::
°rög
& 
l
, c⁄° std::°rög& 
r
)

112 i‡(
l
.
em±y
(Ë&& 
r
.em±y()Ë 
åue
;

113 i‡(
	gl
.
em±y
(Ë&& 
	gr
 ="*"Ë 
åue
;

114 i‡(
	gr
.
em±y
(Ë&& 
	gl
 ="*"Ë 
åue
;

115  
	gl
 =
r
;

120 
boﬁ
 
	gCompound_Sñe˘‹
::
›î©‹
< (c⁄° 
Compound_Sñe˘‹
& 
rhs
) const

122 
size_t
 
L
 = 
°d
::
mö
(
Àngth
(), 
rhs
.length());

123 
size_t
 
	gi
 = 0; i < 
	gL
; ++i)

125 
Sim∂e_Sñe˘‹
* 
	gl
 = (*
this
)[
i
];

126 
Sim∂e_Sñe˘‹
* 
	gr
 = 
rhs
[
i
];

127 i‡(!
	gl
 && !
	gr
Ë 
	gÁl£
;

128 i‡(!
	gr
Ë 
	gÁl£
;

129 i‡(!
	gl
Ë 
	gåue
;

130 i‡(*
	gl
 !*
r
)

131 {  *
l
 < *
r
; }

134  
Àngth
(Ë< 
	grhs
.length();

137 
boﬁ
 
	gCompound_Sñe˘‹
::
has_∑ª¡_ªf
()

139 
Sim∂e_Sñe˘‹
* 
s
 : *
this
) {

140 i‡(
s
 && s->
has_∑ª¡_ªf
()Ë 
åue
;

142  
	gÁl£
;

145 
boﬁ
 
	gCom∂ex_Sñe˘‹
::
has_∑ª¡_ªf
()

147  (
hód
(Ë&& hód()->
has_∑ª¡_ªf
()) ||

148 (
èû
(Ë&&Åaû()->
has_∑ª¡_ªf
());

151 
boﬁ
 
	gCom∂ex_Sñe˘‹
::
›î©‹
< (c⁄° 
Com∂ex_Sñe˘‹
& 
rhs
) const

154 c⁄° 
Com∂ex_Sñe˘‹
* 
l
 = 
this
;

155 c⁄° 
Com∂ex_Sñe˘‹
* 
	gr
 = &
rhs
;

156 
Compound_Sñe˘‹
* 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

157 
Compound_Sñe˘‹
* 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

159 
	gåue
)

162 i‡(
	gl
 &&Ü->
is_em±y_™˚°‹
())

164 
	gl
 = 
l
->
èû
();

165 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

169 i‡(
	gr
 &&Ñ->
is_em±y_™˚°‹
())

171 
	gr
 = 
r
->
èû
();

172 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

176 i‡(!
	gl
Ë !!
	gr
;

177 i‡(!
	gr
Ë 
	gÁl£
;

179 i‡(!
	gl_h
 && !
	gr_h
)

182 i‡(
	gl
->
combö©‹
(Ë!
r
->combinator())

183 {  
l
->
combö©‹
(Ë< 
r
->combinator(); }

185 
	gl
 = 
l
->
èû
();

186 
	gr
 = 
r
->
èû
();

188 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

189 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

192 i‡(!
	gr_h
Ë 
	gåue
;

193 i‡(!
	gl_h
Ë 
	gÁl£
;

195 i‡(*
	gl_h
 =*
r_h
)

198 i‡(
l
->
combö©‹
(Ë!
r
->combinator())

199 {  
l
->
combö©‹
(Ë< 
r
->combinator(); }

201 
	gl
 = 
l
->
èû
();

202 
	gr
 = 
r
->
èû
();

204 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

205 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

208  *
	gl_h
 < *
	gr_h
;

210  
	gåue
;

213 
boﬁ
 
	gCom∂ex_Sñe˘‹
::
›î©‹
=(c⁄° 
Com∂ex_Sñe˘‹
& 
rhs
) const

216 c⁄° 
Com∂ex_Sñe˘‹
* 
l
 = 
this
;

217 c⁄° 
Com∂ex_Sñe˘‹
* 
	gr
 = &
rhs
;

218 
Compound_Sñe˘‹
* 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

219 
Compound_Sñe˘‹
* 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

221 
	gåue
)

224 i‡(
	gl
 &&Ü->
is_em±y_™˚°‹
())

226 
	gl
 = 
l
->
èû
();

227 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

231 i‡(
	gr
 &&Ñ->
is_em±y_™˚°‹
())

233 
	gr
 = 
r
->
èû
();

234 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

238 i‡(!
	gr
Ë !
	gl
;

239 i‡(!
	gl
Ë !
	gr
;

241 i‡(!
	gl_h
 && !
	gr_h
)

244 i‡(
	gl
->
combö©‹
(Ë!
r
->combinator())

245 {  
l
->
combö©‹
(Ë< 
r
->combinator(); }

247 
	gl
 = 
l
->
èû
();

248 
	gr
 = 
r
->
èû
();

250 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

251 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

254 i‡(!
	gr_h
Ë !
	gl_h
;

255 i‡(!
	gl_h
Ë !
	gr_h
;

257 i‡(*
	gl_h
 =*
r_h
)

260 i‡(
l
->
combö©‹
(Ë!
r
->combinator())

261 {  
l
->
combö©‹
(Ë=
r
->combinator(); }

263 
	gl
 = 
l
->
èû
();

264 
	gr
 = 
r
->
èû
();

266 
	gl_h
 = 
l
 ?Ü->
hód
() : 0;

267 
	gr_h
 = 
r
 ?Ñ->
hód
() : 0;

273  
	gÁl£
;

276 
Compound_Sñe˘‹
* 
	gCompound_Sñe˘‹
::
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

278 
Compound_Sñe˘‹
* 
	gunifõd
 = 
rhs
;

279 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

281 i‡(!
	gunifõd
) ;

282 
	gunifõd
 = (*
this
)[
i
]->
unify_wôh
(
unifõd
, 
˘x
);

284  
	gunifõd
;

287 
boﬁ
 
	gSim∂e_Sñe˘‹
::
›î©‹
=(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

289 i‡(c⁄° 
P£udo_Sñe˘‹
* 
Õ
 = 
dy«mic_ˇ°
<c⁄° P£udo_Sñe˘‹*>(
this
)Ë *Õ =
rhs
;

290 i‡(c⁄° 
Wøµed_Sñe˘‹
* 
	glw
 = 
dy«mic_ˇ°
<c⁄° Wøµed_Sñe˘‹*>(
this
)Ë *
lw
 =
rhs
;

291 i‡(c⁄° 
Aâribuã_Sñe˘‹
* 
	gœ
 = 
dy«mic_ˇ°
<c⁄° Aâribuã_Sñe˘‹*>(
this
)Ë *
œ
 =
rhs
;

292 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

293 {  
«me
(Ë=
rhs
.name(); }

294  
ns
(Ë=
rhs
.ns();

297 
boﬁ
 
	gSim∂e_Sñe˘‹
::
›î©‹
< (c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

299 i‡(c⁄° 
P£udo_Sñe˘‹
* 
Õ
 = 
dy«mic_ˇ°
<c⁄° P£udo_Sñe˘‹*>(
this
)Ë *Õ =
rhs
;

300 i‡(c⁄° 
Wøµed_Sñe˘‹
* 
	glw
 = 
dy«mic_ˇ°
<c⁄° Wøµed_Sñe˘‹*>(
this
)Ë *
lw
 < 
rhs
;

301 i‡(c⁄° 
Aâribuã_Sñe˘‹
* 
	gœ
 = 
dy«mic_ˇ°
<c⁄° Aâribuã_Sñe˘‹*>(
this
)Ë *
œ
 < 
rhs
;

302 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

303 {  
«me
(Ë< 
	grhs
.name(); }

304  
ns
(Ë< 
	grhs
.ns();

307 
boﬁ
 
	gSñe˘‹_Li°
::
›î©‹
=(c⁄° 
Sñe˘‹
& 
rhs
) const

310 i‡(c⁄° 
Sñe˘‹_Li°
* 
ls
 = 
dy«mic_ˇ°
<c⁄° Sñe˘‹_Li°*>(&
rhs
)Ë{  *
this
 == *ls; }

311 i‡(c⁄° 
Com∂ex_Sñe˘‹
* 
	gls
 = 
dy«mic_ˇ°
<c⁄° Com∂ex_Sñe˘‹*>(&
rhs
)Ë{  *
this
 =*
ls
; }

312 i‡(c⁄° 
Compound_Sñe˘‹
* 
	gls
 = 
dy«mic_ˇ°
<c⁄° Compound_Sñe˘‹*>(&
rhs
)Ë{  *
this
 =*
ls
; }

314  
	gthis
 =&
rhs
;

318 
boﬁ
 
	gSñe˘‹_Li°
::
›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

321 i‡(c⁄° 
Li°
* 
ls
 = 
dy«mic_ˇ°
<c⁄° Li°*>(&
rhs
)Ë{  *
this
 == *ls; }

322 i‡(c⁄° 
Sñe˘‹
* 
	gls
 = 
dy«mic_ˇ°
<c⁄° Sñe˘‹*>(&
rhs
)Ë{  *
this
 =*
ls
; }

324  
	gÁl£
;

327 
boﬁ
 
	gSñe˘‹_Li°
::
›î©‹
=(c⁄° 
Sñe˘‹_Li°
& 
rhs
) const

330 
size_t
 
i
 = 0, 
	gn
 = 0;

331 
size_t
 
	giL
 = 
Àngth
();

332 
size_t
 
	gnL
 = 
rhs
.
Àngth
();

334 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
l_l°
 = 
this
->
ñemíts
();

335 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
r_l°
 = 
rhs
.
ñemíts
();

336 
	g°d
::
s‹t
(
l_l°
.
begö
(),Ü_l°.
íd
(), 
cmp_com∂ex_£À˘‹
());

337 
	g°d
::
s‹t
(
r_l°
.
begö
(),Ñ_l°.
íd
(), 
cmp_com∂ex_£À˘‹
());

339 
	gåue
)

342 i‡(
	gi
 =
iL
Ë iL =
nL
;

343 i‡(
	gn
 =
nL
Ë 
iL
 ==ÇL;

345 
Com∂ex_Sñe˘‹
* 
	gl
 = 
l_l°
[
i
];

346 
Com∂ex_Sñe˘‹
* 
	gr
 = 
r_l°
[
n
];

348 i‡(!
	gl
Ë++
	gi
;

349 i‡(!
	gr
Ë++
	gn
;

351 i‡(*
	gl
 !*
r
)

352 {  
Ál£
; }

354 ++
	gi
; ++
	gn
;

357  
	gåue
;

360 
Compound_Sñe˘‹
* 
	gSim∂e_Sñe˘‹
::
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

362 
size_t
 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

363 { i‡(
to_°rög
(
˘x
.
c_›ti⁄s
Ë=(*
rhs
)[
i
]->to_string(ctx.c_options)) Ñhs; }

366 
size_t
 
	gi
, 
	gL
;

367 
boﬁ
 
	gfound
 = 
Ál£
;

368 i‡(
ty≥id
(*
this
Ë=ty≥id(
P£udo_Sñe˘‹
Ë||Åy≥id(*thisË=ty≥id(
Wøµed_Sñe˘‹
))

370 
i
 = 0, 
	gL
 = 
rhs
->
Àngth
(); 
	gi
 < L; ++i)

372 i‡((
	gdy«mic_ˇ°
<
	gP£udo_Sñe˘‹
*>((*
	grhs
)[
i
]Ë|| dy«mic_ˇ°<
	gWøµed_Sñe˘‹
*>((*rhs)[i])Ë&& (*rhs)[
L
-1]->
is_p£udo_ñemít
())

373 { 
	gfound
 = 
åue
; ; }

378 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

380 i‡(
	gdy«mic_ˇ°
<
	gP£udo_Sñe˘‹
*>((*
	grhs
)[
i
]Ë|| dy«mic_ˇ°<
	gWøµed_Sñe˘‹
*>((*rhs)[i]))

381 { 
	gfound
 = 
åue
; ; }

384 i‡(!
	gfound
)

386 
Compound_Sñe˘‹
* 
	g˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, *
rhs
);

387 (*
	g˝y
Ë<< 
	gthis
;

388  
	g˝y
;

390 
Compound_Sñe˘‹
* 
	g˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
rhs
->
p°©e
());

391 
size_t
 
	gj
 = 0; j < 
	gi
; ++j)

392 { (*
	g˝y
Ë<< (*
	grhs
)[
j
]; }

393 (*
	g˝y
Ë<< 
	gthis
;

394 
size_t
 
	gj
 = 
i
; j < 
	gL
; ++j)

395 { (*
	g˝y
Ë<< (*
	grhs
)[
j
]; }

396  
	g˝y
;

399 
Sim∂e_Sñe˘‹
* 
	gTy≥_Sñe˘‹
::
unify_wôh
(Sim∂e_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

403 i‡(
has_univîßl_ns
())

407 i‡(!
	grhs
->
is_univîßl_ns
())

410 
Ty≥_Sñe˘‹
* 
	gts
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ty≥_Sñe˘‹, *
this
);

412 i‡(
	gts
->
«me
(Ë="*"Ë{ 
ts
->«me(
rhs
->name()); }

414 
	gts
->
ns
(
rhs
->ns());Ås->
has_ns
(rhs->has_ns());

416  
	gts
;

421 i‡(
«me
(Ë="*" && 
rhs
->name() != "*")

424 
Ty≥_Sñe˘‹
* 
ts
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ty≥_Sñe˘‹, *
this
);

426 
	gts
->
«me
(
rhs
->name());

428  
	gts
;

431  
	gthis
;

434 
Compound_Sñe˘‹
* 
	gTy≥_Sñe˘‹
::
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

439 i‡(
	grhs
->
Àngth
() == 0) {

440 
Compound_Sñe˘‹
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
rhs
->
p°©e
());

441 (*
	g˝y
Ë<< 
	gthis
;

442  
	g˝y
;

445 
Sim∂e_Sñe˘‹
* 
	grhs_0
 = (*
rhs
)[0];

447 i‡(
«me
() == "*")

449 i‡(
ty≥id
(*
rhs_0
Ë=ty≥id(
Ty≥_Sñe˘‹
))

452 
Compound_Sñe˘‹
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, *
rhs
);

453 
Ty≥_Sñe˘‹
* 
	gts
 = 
°©ic_ˇ°
<Ty≥_Sñe˘‹*>(
rhs_0
);

454 (*
	g˝y
)[0] = 
this
->
unify_wôh
(
ts
, 
˘x
);

455  
	g˝y
;

457 i‡(
	gdy«mic_ˇ°
<
	gSñe˘‹_QuÆifõr
*>(
	grhs_0
)) {

459 
Compound_Sñe˘‹
* 
	g˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
rhs
->
p°©e
());

460 i‡(
has_ns
(Ë&& !
	grhs_0
->has_ns()) {

461 i‡(
ns
(Ë!"*"Ë(*
˝y
Ë<< 
this
;

463 
size_t
 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

464 { (*
	g˝y
Ë<< (*
	grhs
)[
i
]; }

465  
	g˝y
;

469  
	grhs
;

472 i‡(
ty≥id
(*
rhs_0
Ë=ty≥id(
Ty≥_Sñe˘‹
))

475 i‡(
rhs_0
->
«me
(Ë!"*" &&Ñhs_0->
ns
() != "*" &&Ñhs_0->name() !=Çame())  0;

477 
Compound_Sñe˘‹
* 
	gc›y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, *
rhs
);

478 (*
	gc›y
)[0] = 
this
->
unify_wôh
(
rhs_0
, 
˘x
);

479  
	gc›y
;

483 
Compound_Sñe˘‹
* 
	g˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
rhs
->
p°©e
());

484 i‡(
«me
(Ë!"*"Ë(*
˝y
Ë<< 
this
;

485 (*
	g˝y
Ë+
rhs
;

486  
	g˝y
;

489 
Compound_Sñe˘‹
* 
	gSñe˘‹_QuÆifõr
::
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

491 i‡(
«me
()[0] == '#')

493 
size_t
 
i
 = 0, 
	gL
 = 
rhs
->
Àngth
(); 
	gi
 < L; ++i)

495 
Sim∂e_Sñe˘‹
* 
	grhs_i
 = (*
rhs
)[
i
];

496 i‡(
ty≥id
(*
rhs_i
Ë=ty≥id(
Sñe˘‹_QuÆifõr
) &&

497 
°©ic_ˇ°
<
Sñe˘‹_QuÆifõr
*>(
rhs_i
)->
«me
()[0] == '#' &&

498 
°©ic_ˇ°
<
Sñe˘‹_QuÆifõr
*>(
rhs_i
)->
«me
() !=Çame())

502 
	grhs
->
has_löe_bªak
(has_line_break());

503  
	gSim∂e_Sñe˘‹
::
unify_wôh
(
rhs
, 
˘x
);

506 
Compound_Sñe˘‹
* 
	gP£udo_Sñe˘‹
::
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

508 i‡(
is_p£udo_ñemít
())

510 
size_t
 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

512 
Sim∂e_Sñe˘‹
* 
	grhs_i
 = (*
rhs
)[
i
];

513 i‡(
ty≥id
(*
rhs_i
Ë=ty≥id(
P£udo_Sñe˘‹
) &&

514 
°©ic_ˇ°
<
P£udo_Sñe˘‹
*>(
rhs_i
)->
is_p£udo_ñemít
() &&

515 
°©ic_ˇ°
<
P£udo_Sñe˘‹
*>(
rhs_i
)->
«me
() !=Çame())

519  
	gSim∂e_Sñe˘‹
::
unify_wôh
(
rhs
, 
˘x
);

522 
boﬁ
 
	gAâribuã_Sñe˘‹
::
›î©‹
< (c⁄° 
Aâribuã_Sñe˘‹
& 
rhs
) const

524 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns())) {

525 i‡(
«me
(Ë=
rhs
.name()) {

526 i‡(
m©chî
(Ë=
rhs
.matcher()) {

527  
vÆue
(Ë< 
rhs
.value();

528 } {  
m©chî
(Ë< 
	grhs
.matcher(); }

529 } {  
«me
(Ë< 
	grhs
.name(); }

531  
	gÁl£
;

534 
boﬁ
 
	gAâribuã_Sñe˘‹
::
›î©‹
< (c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

536 i‡(c⁄° 
Aâribuã_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° Aâribuã_Sñe˘‹*>(&
rhs
))

538  *
this
 < *
w
;

540 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

541 {  
«me
(Ë< 
	grhs
.name(); }

542  
ns
(Ë< 
	grhs
.ns();

545 
boﬁ
 
	gAâribuã_Sñe˘‹
::
›î©‹
=(c⁄° 
Aâribuã_Sñe˘‹
& 
rhs
) const

547 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()Ë&& 
«me
() ==Ñhs.name())

548 {  
m©chî
(Ë=
rhs
.m©chî(Ë&& 
vÆue
() ==Ñhs.value(); }

549  
	gÁl£
;

552 
boﬁ
 
	gAâribuã_Sñe˘‹
::
›î©‹
=(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

554 i‡(c⁄° 
Aâribuã_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° Aâribuã_Sñe˘‹*>(&
rhs
))

556  *
this
 =*
w
;

558 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

559 {  
«me
(Ë=
rhs
.name(); }

560  
ns
(Ë=
rhs
.ns();

563 
boﬁ
 
	gP£udo_Sñe˘‹
::
›î©‹
=(c⁄° 
P£udo_Sñe˘‹
& 
rhs
) const

565 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()Ë&& 
«me
() ==Ñhs.name())

567 
Ex¥essi⁄
* 
lhs_ex
 = 
ex¥essi⁄
();

568 
Ex¥essi⁄
* 
	grhs_ex
 = 
rhs
.
ex¥essi⁄
();

569 i‡(
	grhs_ex
 && 
	glhs_ex
Ë *lhs_ex =*
rhs_ex
;

570  
	glhs_ex
 =
rhs_ex
;

572  
	gÁl£
;

575 
boﬁ
 
	gP£udo_Sñe˘‹
::
›î©‹
=(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

577 i‡(c⁄° 
P£udo_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° P£udo_Sñe˘‹*>(&
rhs
))

579  *
this
 =*
w
;

581 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

582 {  
«me
(Ë=
rhs
.name(); }

583  
ns
(Ë=
rhs
.ns();

586 
boﬁ
 
	gP£udo_Sñe˘‹
::
›î©‹
< (c⁄° 
P£udo_Sñe˘‹
& 
rhs
) const

588 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()Ë&& 
«me
() ==Ñhs.name())

589 {  *(
ex¥essi⁄
()Ë< *(
rhs
.expression()); }

590 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

591 {  
«me
(Ë< 
	grhs
.name(); }

592  
ns
(Ë< 
	grhs
.ns();

595 
boﬁ
 
	gP£udo_Sñe˘‹
::
›î©‹
< (c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

597 i‡(c⁄° 
P£udo_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° P£udo_Sñe˘‹*>(&
rhs
))

599  *
this
 < *
w
;

601 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

602 {  
«me
(Ë< 
	grhs
.name(); }

603  
ns
(Ë< 
	grhs
.ns();

606 
boﬁ
 
	gWøµed_Sñe˘‹
::
›î©‹
=(c⁄° 
Wøµed_Sñe˘‹
& 
rhs
) const

608 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()Ë&& 
«me
() ==Ñhs.name())

609 {  *(
£À˘‹
()Ë=*(
rhs
.selector()); }

610  
	gÁl£
;

613 
boﬁ
 
	gWøµed_Sñe˘‹
::
›î©‹
=(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

615 i‡(c⁄° 
Wøµed_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° Wøµed_Sñe˘‹*>(&
rhs
))

617  *
this
 =*
w
;

619 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

620 {  
«me
(Ë=
rhs
.name(); }

621  
ns
(Ë=
rhs
.ns();

624 
boﬁ
 
	gWøµed_Sñe˘‹
::
›î©‹
< (c⁄° 
Wøµed_Sñe˘‹
& 
rhs
) const

626 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()Ë&& 
«me
() ==Ñhs.name())

627 {  *(
£À˘‹
()Ë< *(
rhs
.selector()); }

628 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

629 {  
«me
(Ë< 
	grhs
.name(); }

630  
ns
(Ë< 
	grhs
.ns();

633 
boﬁ
 
	gWøµed_Sñe˘‹
::
›î©‹
< (c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const

635 i‡(c⁄° 
Wøµed_Sñe˘‹
* 
w
 = 
dy«mic_ˇ°
<c⁄° Wøµed_Sñe˘‹*>(&
rhs
))

637  *
this
 < *
w
;

639 i‡(
is_ns_eq
(
ns
(), 
rhs
.ns()))

640 {  
«me
(Ë< 
	grhs
.name(); }

641  
ns
(Ë< 
	grhs
.ns();

644 
boﬁ
 
	gWøµed_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Wøµed_Sñe˘‹
* 
sub
)

646 i‡(
this
->
«me
(Ë!
sub
->«me()Ë 
Ál£
;

647 i‡(
	gthis
->
«me
(Ë=":cuºít"Ë 
Ál£
;

648 i‡(
Sñe˘‹_Li°
* 
	grhs_li°
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
sub
->
£À˘‹
())) {

649 i‡(
Sñe˘‹_Li°
* 
lhs_li°
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
£À˘‹
())) {

650  
lhs_li°
->
is_su≥r£À˘‹_of
(
rhs_li°
);

652 
îr‹
("is_su≥r£À˘‹Éx≥˘edá Sñe˘‹_Li°", 
sub
->
p°©e
());

654 
îr‹
("is_su≥r£À˘‹Éx≥˘edá Sñe˘‹_Li°", 
sub
->
p°©e
());

656  
	gÁl£
;

659 
boﬁ
 
	gCompound_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
* 
rhs
, 
°d
::
°rög
 
wøµed
)

661 
Com∂ex_Sñe˘‹
* 
ôem
 : 
rhs
->
ñemíts
()) {

662 i‡(
is_su≥r£À˘‹_of
(
ôem
, 
wøµed
)Ë 
	gåue
;

664  
	gÁl£
;

667 
boﬁ
 
	gCompound_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
* 
rhs
, 
°d
::
°rög
 
wøµed
)

669 i‡(
rhs
->
hód
()Ë 
is_su≥r£À˘‹_of
‘hs->hód(), 
wøµed
);

670  
	gÁl£
;

673 
boﬁ
 
	gCompound_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
rhs
, 
°d
::
°rög
 
wøµög
)

675 
Compound_Sñe˘‹
* 
lhs
 = 
this
;

676 
Sim∂e_Sñe˘‹
* 
	glba£
 = 
lhs
->
ba£
();

677 
Sim∂e_Sñe˘‹
* 
	grba£
 = 
rhs
->
ba£
();

681 
	g°d
::
£t
<
°d
::
°rög
> 
Õsuedo£t
, 
	gΩsuedo£t
;

682 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

684 i‡((*
	gthis
)[
i
]->
is_p£udo_ñemít
()) {

685 
	g°d
::
°rög
 
p£udo
((*
this
)[
i
]->
to_°rög
());

686 
	gp£udo
 = 
p£udo
.
sub°r
’£udo.
föd_fú°_nŸ_of
(":"));

687 
	gÕsuedo£t
.
ö£π
(
p£udo
);

690 
size_t
 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

692 i‡((*
	grhs
)[
i
]->
is_p£udo_ñemít
()) {

693 
	g°d
::
°rög
 
p£udo
((*
rhs
)[
i
]->
to_°rög
());

694 
	gp£udo
 = 
p£udo
.
sub°r
’£udo.
föd_fú°_nŸ_of
(":"));

695 
	gΩsuedo£t
.
ö£π
(
p£udo
);

698 i‡(
	gÕsuedo£t
 !
Ωsuedo£t
) {

699  
Ál£
;

702 
	g°d
::
£t
<
°d
::
°rög
> 
l£t
, 
	gr£t
;

704 i‡(
	glba£
 && 
	grba£
)

706 i‡(
	glba£
->
to_°rög
(Ë=
rba£
->to_string()) {

707 
size_t
 
i
 = 1, 
	gL
 = 
Àngth
(); 
	gi
 < L; ++i)

708 { 
	gl£t
.
ö£π
((*
this
)[
i
]->
to_°rög
()); }

709 
size_t
 
	gi
 = 1, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i)

710 { 
	gr£t
.
ö£π
((*
rhs
)[
i
]->
to_°rög
()); }

711  
ö˛udes
(
r£t
.
begö
(),Ñ£t.
íd
(), 
l£t
.begin(),Üset.end());

713  
	gÁl£
;

716 
size_t
 
	gi
 = 0, 
	giL
 = 
Àngth
(); i < iL; ++i)

718 
Sñe˘‹
* 
	glhs
 = (*
this
)[
i
];

720 i‡(
Wøµed_Sñe˘‹
* 
	gwøµed
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
lhs
)) {

721 i‡(
wøµed
->
«me
() == ":not") {

722 i‡(
Sñe˘‹_Li°
* 
nŸ_li°
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
wøµed
->
£À˘‹
())) {

723 i‡(
nŸ_li°
->
is_su≥r£À˘‹_of
(
rhs
, 
wøµed
->
«me
())Ë 
Ál£
;

725 
throw
 
	g°d
::
ru¡ime_îr‹
("wrappedÇot selector isÇotáÜist");

728 i‡(
	gwøµed
->
«me
(Ë=":m©ches" || 
wøµed
->name() == ":-moz-any") {

729 
lhs
 = 
wøµed
->
£À˘‹
();

730 i‡(
Sñe˘‹_Li°
* 
	gli°
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
wøµed
->
£À˘‹
())) {

731 i‡(
Compound_Sñe˘‹
* 
comp
 = 
dy«mic_ˇ°
<Compound_Sñe˘‹*>(
rhs
)) {

732 i‡(!
wøµög
.
em±y
(Ë&& wøµög !
wøµed
->
«me
()Ë 
Ál£
;

733 i‡(
	gwøµög
.
em±y
(Ë|| wøµög !
wøµed
->
«me
()) {;

734 i‡(
	gli°
->
is_su≥r£À˘‹_of
(
comp
, 
wøµed
->
«me
())Ë 
	gåue
;

739 
Sim∂e_Sñe˘‹
* 
	grhs_£l
 = 
rhs
->
ñemíts
().
size
(Ë> 
i
 ? (*rhs)[i] : 0;

740 i‡(
Wøµed_Sñe˘‹
* 
	gwøµed_r
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
rhs_£l
)) {

741 i‡(
wøµed
->
«me
(Ë=
wøµed_r
->name()) {

742 i‡(
wøµed
->
is_su≥r£À˘‹_of
(
wøµed_r
)) {

744 
	gr£t
.
ö£π
(
lhs
->
to_°rög
());

750 
	gl£t
.
ö£π
(
lhs
->
to_°rög
());

753 
size_t
 
	gn
 = 0, 
	gnL
 = 
rhs
->
Àngth
();Ç <ÇL; ++n)

755 autÿ
	gr
 = (*
rhs
)[
n
];

756 i‡(
Wøµed_Sñe˘‹
* 
	gwøµed
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
r
)) {

757 i‡(
wøµed
->
«me
() == ":not") {

758 i‡(
Sñe˘‹_Li°
* 
ls
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
wøµed
->
£À˘‹
())) {

759 
ls
->
ªmove_∑ª¡_£À˘‹s
();

760 i‡(
is_su≥r£À˘‹_of
(
ls
, 
wøµed
->
«me
())Ë 
	gÁl£
;

763 i‡(
	gwøµed
->
«me
(Ë=":m©ches" || 
wøµed
->name() == ":-moz-any") {

764 i‡(!
wøµög
.
em±y
()) {

765 i‡(
wøµög
 !
wøµed
->
«me
()Ë 
Ál£
;

767 i‡(
Sñe˘‹_Li°
* 
	gls
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
wøµed
->
£À˘‹
())) {

768 
ls
->
ªmove_∑ª¡_£À˘‹s
();

769  (
is_su≥r£À˘‹_of
(
ls
, 
wøµed
->
«me
()));

773 
	gr£t
.
ö£π
(
r
->
to_°rög
());

779 i‡(
	gl£t
.
em±y
()Ë 
	gåue
;

781  
ö˛udes
(
r£t
.
begö
(),Ñ£t.
íd
(), 
l£t
.begin(),Üset.end());

786 
Com∂ex_Sñe˘‹
* 
	gCompound_Sñe˘‹
::
to_com∂ex
(
Mem‹y_M™agî
& 
mem
)

789  
SASS_MEMORY_NEW
(
mem
, 
Com∂ex_Sñe˘‹
,

790 
p°©e
(),

791 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
,

792 
this
,

796 
Sñe˘‹_Li°
* 
	gCom∂ex_Sñe˘‹
::
unify_wôh
(
Com∂ex_Sñe˘‹
* 
Ÿhî
, 
C⁄ãxt
& 
˘x
)

800 
Com∂ex_Sñe˘‹
* 
	gl_œ°
 = 
this
->
œ°
();

801 
Com∂ex_Sñe˘‹
* 
	gr_œ°
 = 
Ÿhî
->
œ°
();

804 
SASS_ASSERT
(
l_œ°
, "lhs isÇull");

805 
SASS_ASSERT
(
r_œ°
, "rhs isÇull");

810 i‡(
	gl_œ°
->
combö©‹
(Ë!
Combö©‹
::
ANCESTOR_OF
)  0;

811 i‡(
	gr_œ°
->
combö©‹
(Ë!
Combö©‹
::
ANCESTOR_OF
 )  0;

814 
Compound_Sñe˘‹
* 
	gl_œ°_hód
 = 
l_œ°
->
hód
();

815 
Compound_Sñe˘‹
* 
	gr_œ°_hód
 = 
r_œ°
->
hód
();

818 
SASS_ASSERT
(
l_œ°_hód
, "lhs head isÇull");

819 
SASS_ASSERT
(
r_œ°_hód
, "rhs head isÇull");

822 
Compound_Sñe˘‹
* 
	gunifõd
 = 
r_œ°_hód
->
unify_wôh
(
l_œ°_hód
, 
˘x
);

825 i‡(
	gunifõd
 == 0)  0;

828 
boﬁ
 
	gis_univîßl
 = 
l_œ°_hód
->
is_univîßl
() ||

829 
r_œ°_hód
->
is_univîßl
();

831 i‡(
	gis_univîßl
)

834 
	gl_œ°
->
hód
(0);

835 
	gr_œ°
->
hód
(
unifõd
);

839 
Node
 
	glhsNode
 = 
com∂exSñe˘‹ToNode
(
this
, 
˘x
);

840 
Node
 
	grhsNode
 = 
com∂exSñe˘‹ToNode
(
Ÿhî
, 
˘x
);

843 i‡(!
	gis_univîßl
)

846 
Com∂ex_Sñe˘‹
* 
	gÁke
 = 
unifõd
->
to_com∂ex
(
˘x
.
mem
);

847 
Node
 
	gunifõd_node
 = 
com∂exSñe˘‹ToNode
(
Áke
, 
˘x
);

849 
	grhsNode
.
∂us
(
unifõd_node
);

853 
Node
 
	gnode
 = 
Exãnd
::
subwóve
(
lhsNode
, 
rhsNode
, 
˘x
);

854 
Sñe˘‹_Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
());

855 
NodeDequePå
 
	gcﬁ
 = 
node
.
cﬁÀ˘i⁄
();

856 
	gNodeDeque
::
ôî©‹
 
ô
 = 
cﬁ
->
begö
(), 
	gíd
 = cﬁ->
íd
(); 
	gô
 !=Énd; it++)

857 { (*
	gªsu…
Ë<< 
nodeToCom∂exSñe˘‹
(
Node
::
«iveTrim
(*
ô
, 
˘x
), ctx); }

860  
	gªsu…
->
Àngth
() ?Ñesult : 0;

864 
boﬁ
 
	gCompound_Sñe˘‹
::
›î©‹
=(c⁄° 
Compound_Sñe˘‹
& 
rhs
) const

867 
size_t
 
i
 = 0, 
	gn
 = 0;

868 
size_t
 
	giL
 = 
Àngth
();

869 
size_t
 
	gnL
 = 
rhs
.
Àngth
();

871 
	g°d
::
ve˘‹
<
Sim∂e_Sñe˘‹
*> 
l_l°
 = 
this
->
ñemíts
();

872 
	g°d
::
ve˘‹
<
Sim∂e_Sñe˘‹
*> 
r_l°
 = 
rhs
.
ñemíts
();

873 
	g°d
::
s‹t
(
l_l°
.
begö
(),Ü_l°.
íd
(), 
cmp_sim∂e_£À˘‹
());

874 
	g°d
::
s‹t
(
r_l°
.
begö
(),Ñ_l°.
íd
(), 
cmp_sim∂e_£À˘‹
());

876 
	gåue
)

879 i‡(
	gi
 =
iL
Ë iL =
nL
;

880 i‡(
	gn
 =
nL
Ë 
iL
 ==ÇL;

882 
Sim∂e_Sñe˘‹
* 
	gl
 = 
l_l°
[
i
];

883 
Sim∂e_Sñe˘‹
* 
	gr
 = 
r_l°
[
n
];

885 i‡(!
	gl
Ë++
	gi
;

886 i‡(!
	gr
Ë++
	gn
;

888 i‡(*
	gl
 !*
r
)

889 {  
Ál£
; }

891 ++
	gi
; ++
	gn
;

894  
	gåue
;

897 
boﬁ
 
	gCom∂ex_Sñe˘‹_Poöãr_Com∑ª
::
›î©‹
(Ë(c⁄° 
Com∂ex_Sñe˘‹
* c⁄° 
pLe·
, c⁄° Com∂ex_Sñe˘‹* c⁄° 
	gpRight
) const {

898  *
	gpLe·
 < *
	gpRight
;

901 
boﬁ
 
	gCom∂ex_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
rhs
, 
°d
::
°rög
 
wøµög
)

903  
œ°
()->
hód
(Ë&&Üa°()->hód()->
is_su≥r£À˘‹_of
(
rhs
, 
wøµög
);

906 
boﬁ
 
	gCom∂ex_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
* 
rhs
, 
°d
::
°rög
 
wøµög
)

908 
Com∂ex_Sñe˘‹
* 
lhs
 = 
this
;

910 i‡(!
	glhs
->
hód
(Ë|| !
	grhs
->head())

911 {  
	gÁl£
; }

912 c⁄° 
Com∂ex_Sñe˘‹
* 
	gl_ö√rmo°
 = 
lhs
->
ö√rmo°
();

913 i‡(
	gl_ö√rmo°
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)

914 {  
Ál£
; }

915 c⁄° 
Com∂ex_Sñe˘‹
* 
	gr_ö√rmo°
 = 
rhs
->
ö√rmo°
();

916 i‡(
	gr_ö√rmo°
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)

917 {  
Ál£
; }

919 
size_t
 
	gl_Àn
 = 
lhs
->
Àngth
(), 
	gr_Àn
 = 
rhs
->length();

920 i‡(
	gl_Àn
 > 
	gr_Àn
)

921 {  
	gÁl£
; }

923 i‡(
	gl_Àn
 == 1)

924 {  
lhs
->
hód
()->
is_su≥r£À˘‹_of
(
rhs
->
œ°
()->hód(), 
wøµög
); }

928 i‡(
	grhs
->
èû
(Ë&& 
	glhs
->èû(Ë&& 
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
) {

929 
Com∂ex_Sñe˘‹
* 
lhs_èû
 = 
lhs
->
èû
();

930 
Com∂ex_Sñe˘‹
* 
	grhs_èû
 = 
rhs
->
èû
();

931 i‡(
	glhs_èû
->
combö©‹
(Ë!
rhs_èû
->combö©‹()Ë 
Ál£
;

932 i‡(
	glhs_èû
->
hód
(Ë&& !
	grhs_èû
->hód()Ë 
	gÁl£
;

933 i‡(!
	glhs_èû
->
hód
(Ë&& 
	grhs_èû
->hód()Ë 
	gÁl£
;

934 i‡(
	glhs_èû
->
hód
(Ë&& 
	grhs_èû
->head()) {

935 i‡(!
	glhs_èû
->
hód
()->
is_su≥r£À˘‹_of
(
rhs_èû
->hód())Ë 
	gÁl£
;

939 
boﬁ
 
	gfound
 = 
Ál£
;

940 
Com∂ex_Sñe˘‹
* 
	gm¨kî
 = 
rhs
;

941 
size_t
 
	gi
 = 0, 
	gL
 = 
rhs
->
Àngth
(); i < L; ++i) {

942 i‡(
	gi
 =
L
-1)

943 {  
Ál£
; }

944 i‡(
	glhs
->
hód
(Ë&& 
	gm¨kî
->hód(Ë&&Ühs->hód()->
is_su≥r£À˘‹_of
(
m¨kî
->hód(), 
wøµög
))

945 { 
	gfound
 = 
åue
; ; }

946 
	gm¨kî
 = 
m¨kî
->
èû
();

948 i‡(!
	gfound
)

949 {  
	gÁl£
; }

964 i‡(
	glhs
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)

966 i‡(
m¨kî
->
combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)

967 {  
Ál£
; }

968 i‡(!(
	glhs
->
combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PRECEDES
 ? 
m¨kî
->combö©‹(Ë!Com∂ex_Sñe˘‹::
PARENT_OF
 : 
lhs
->combinator() == marker->combinator()))

969 {  
Ál£
; }

970  
	glhs
->
èû
()->
is_su≥r£À˘‹_of
(
m¨kî
->tail());

972 i‡(
	gm¨kî
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)

974 i‡(
m¨kî
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
PARENT_OF
)

975 {  
Ál£
; }

976  
	glhs
->
èû
()->
is_su≥r£À˘‹_of
(
m¨kî
->tail());

980  
	glhs
->
èû
()->
is_su≥r£À˘‹_of
(
m¨kî
->tail());

983  
	gÁl£
;

986 
size_t
 
	gCom∂ex_Sñe˘‹
::
Àngth
() const

989 i‡(!
èû
())  1;

990  1 + 
èû
()->
Àngth
();

993 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
c⁄ãxt
(
C⁄ãxt
& 
˘x
)

995 i‡(!
èû
())  0;

996 i‡(!
hód
()Ë 
èû
()->
c⁄ãxt
(
˘x
);

997 
Com∂ex_Sñe˘‹
* 
	g˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, 
p°©e
(), 
combö©‹
(), 
hód
(), 
èû
()->
c⁄ãxt
(ctx));

998 
	g˝y
->
medü_block
(media_block());

999  
	g˝y
;

1006 
	gCom∂ex_Sñe˘‹
::
≠≥nd
(
C⁄ãxt
& 
˘x
, 
Com∂ex_Sñe˘‹
* 
ss
)

1009 
Com∂ex_Sñe˘‹
* 
	gt
 = 
ss
->
èû
();

1010 
Combö©‹
 
	gc
 = 
ss
->
combö©‹
();

1011 
Såög
* 
	gr
 = 
ss
->
ª„ªn˚
();

1012 
Compound_Sñe˘‹
* 
	gh
 = 
ss
->
hód
();

1014 i‡(
	gss
->
has_löe_„ed
()Ëhas_löe_„ed(
åue
);

1015 i‡(
	gss
->
has_löe_bªak
()Ëhas_löe_bªak(
åue
);

1018 i‡(
	gh
 && h->
Àngth
()) {

1019 i‡(
œ°
()->
combö©‹
(Ë!
ANCESTOR_OF
 && 
c
 != ANCESTOR_OF) {

1020 
îr‹
("InvÆidÖ¨íà£À˘‹", 
p°©e_
);

1021 } i‡(
œ°
()->
	ghód_
 &&Üa°()->hód_->
Àngth
()) {

1022 
Compound_Sñe˘‹
* 
	grh
 = 
œ°
()->
hód
();

1023 
size_t
 
	gi
 = 0, 
	gL
 = 
h
->
Àngth
();

1024 i‡(
	gdy«mic_ˇ°
<
	gTy≥_Sñe˘‹
*>(
	gh
->
fú°
())) {

1025 i‡(
Sñe˘‹_QuÆifõr
* 
	gsq
 = 
dy«mic_ˇ°
<Sñe˘‹_QuÆifõr*>(
rh
->
œ°
())) {

1026 
Sñe˘‹_QuÆifõr
* 
sqs
 = 
√w
 Sñe˘‹_QuÆifõr(*
sq
);

1027 
	gsqs
->
«me
(
sqs
->«me(Ë+ (*
h
)[0]->name());

1028 (*
	grh
)[
rh
->
Àngth
()-1] = 
sqs
;

1029 
	gi
 = 1; i < 
	gL
; ++iË*
	grh
 << (*
	gh
)[
i
];

1030 } i‡(
Ty≥_Sñe˘‹
* 
	gts
 = 
dy«mic_ˇ°
<Ty≥_Sñe˘‹*>(
rh
->
œ°
())) {

1031 
Ty≥_Sñe˘‹
* 
tss
 = 
√w
 Ty≥_Sñe˘‹(*
ts
);

1032 
	gtss
->
«me
(
tss
->«me(Ë+ (*
h
)[0]->name());

1033 (*
	grh
)[
rh
->
Àngth
()-1] = 
tss
;

1034 
	gi
 = 1; i < 
	gL
; ++iË*
	grh
 << (*
	gh
)[
i
];

1035 } i‡(
Sñe˘‹_Pœ˚hﬁdî
* 
	gps
 = 
dy«mic_ˇ°
<Sñe˘‹_Pœ˚hﬁdî*>(
rh
->
œ°
())) {

1036 
Sñe˘‹_Pœ˚hﬁdî
* 
pss
 = 
√w
 Sñe˘‹_Pœ˚hﬁdî(*
ps
);

1037 
	gpss
->
«me
(
pss
->«me(Ë+ (*
h
)[0]->name());

1038 (*
	grh
)[
rh
->
Àngth
()-1] = 
pss
;

1039 
	gi
 = 1; i < 
	gL
; ++iË*
	grh
 << (*
	gh
)[
i
];

1041 *
œ°
()->
	ghód_
 +
h
;

1044 *
œ°
()->
	ghód_
 +
h
;

1047 *
œ°
()->
	ghód_
 +
h
;

1053 i‡(
œ°
()) {

1054 i‡(
œ°
()->
combö©‹
(Ë!
ANCESTOR_OF
 && 
c
 != ANCESTOR_OF) {

1055 
Com∂ex_Sñe˘‹
* 
öãr
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, 
p°©e
());

1056 
	göãr
->
ª„ªn˚
(
r
);

1057 
	göãr
->
combö©‹
(
c
);

1058 
	göãr
->
èû
(
t
);

1059 
œ°
()->
èû
(
öãr
);

1061 i‡(
œ°
()->
combö©‹
(Ë=
ANCESTOR_OF
) {

1062 
œ°
()->
combö©‹
(
c
);

1063 
œ°
()->
ª„ªn˚
(
r
);

1065 
œ°
()->
èû
(
t
);

1072 
Sñe˘‹_Li°
* 
	gSñe˘‹_Li°
::
∑ª¡ize
(Sñe˘‹_Li°* 
ps
, 
C⁄ãxt
& 
˘x
)

1074 i‡(!
	gthis
->
has_∑ª¡_ªf
()) Åhis;

1075 
Sñe˘‹_Li°
* 
	gss
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
());

1076 
size_t
 
	gpi
 = 0, 
	gpL
 = 
ps
->
Àngth
();Öi <ÖL; ++pi) {

1077 
Sñe˘‹_Li°
* 
	gli°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
());

1078 *
	gli°
 << (*
	gps
)[
pi
];

1079 
size_t
 
	gsi
 = 0, 
	gsL
 = 
this
->
Àngth
(); si < sL; ++si) {

1080 *
	gss
 +(*
this
)[
si
]->
∑ª¡ize
(
li°
, 
˘x
);

1083  
	gss
;

1086 
Sñe˘‹_Li°
* 
	gCom∂ex_Sñe˘‹
::
∑ª¡ize
(Sñe˘‹_Li°* 
∑ª¡s
, 
C⁄ãxt
& 
˘x
)

1089 
Com∂ex_Sñe˘‹
* 
	gèû
 = 
this
->
èû
();

1090 
Compound_Sñe˘‹
* 
	ghód
 = 
this
->
hód
();

1093 
Sñe˘‹_Li°
* 
	gèûs
 = 
èû
 ?Åaû->
∑ª¡ize
(
∑ª¡s
, 
˘x
) : 0;

1095 i‡(
	ghód
 && hód->
Àngth
() > 0) {

1097 
Sñe˘‹_Li°
* 
	gªtvÆ
 = 0;

1100 i‡(
	gdy«mic_ˇ°
<
	gP¨ít_Sñe˘‹
*>((*
	ghód
)[0])) {

1101 
	gªtvÆ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Sñe˘‹_Li°
, 
p°©e
());

1102 i‡(
	g∑ª¡s
 &&Ö¨íts->
Àngth
()) {

1103 i‡(
	gèûs
 &&Åaûs->
Àngth
() > 0) {

1104 
size_t
 
	gn
 = 0, 
	gnL
 = 
èûs
->
Àngth
();Ç <ÇL; ++n) {

1105 
size_t
 
	gi
 = 0, 
	giL
 = 
∑ª¡s
->
Àngth
(); i < iL; ++i) {

1106 
Com∂ex_Sñe˘‹
* 
	gt
 = (*
èûs
)[
n
];

1107 
Com∂ex_Sñe˘‹
* 
	g∑ª¡
 = (*
∑ª¡s
)[
i
];

1108 
Com∂ex_Sñe˘‹
* 
	gs
 = 
∑ª¡
->
˛⁄eFuŒy
(
˘x
);

1109 
Com∂ex_Sñe˘‹
* 
	gss
 = 
this
->
˛⁄e
(
˘x
);

1110 
	gss
->
èû
(
t
 ?Å->
˛⁄e
(
˘x
) : 0);

1111 
Compound_Sñe˘‹
* 
	gh
 = 
hód_
->
˛⁄e
(
˘x
);

1112 i‡(
	gh
->
Àngth
()Ëh->
îa£
(
h
->
begö
());

1113 
	gss
->
hód
(
h
->
Àngth
() ? h : 0);

1114 
	gs
->
≠≥nd
(
˘x
, 
ss
);

1115 *
	gªtvÆ
 << 
	gs
;

1122 
size_t
 
	gi
 = 0, 
	giL
 = 
∑ª¡s
->
Àngth
(); i < iL; ++i) {

1123 
Com∂ex_Sñe˘‹
* 
	g∑ª¡
 = (*
∑ª¡s
)[
i
];

1124 
Com∂ex_Sñe˘‹
* 
	gs
 = 
∑ª¡
->
˛⁄eFuŒy
(
˘x
);

1125 
Com∂ex_Sñe˘‹
* 
	gss
 = 
this
->
˛⁄e
(
˘x
);

1128 i‡(
	g∑ª¡
->
œ°
()->
combö©‹
(Ë!
ANCESTOR_OF
) {

1129 
throw
 
Ex˚±i⁄
::
InvÆidP¨ít
(
∑ª¡
, 
ss
);

1131 
	gss
->
èû
—aû ?Åaû->
˛⁄e
(
˘x
) : 0);

1132 
Compound_Sñe˘‹
* 
	gh
 = 
hód_
->
˛⁄e
(
˘x
);

1133 i‡(
	gh
->
Àngth
()Ëh->
îa£
(
h
->
begö
());

1134 
	gss
->
hód
(
h
->
Àngth
() ? h : 0);

1136 
	gss
->
has_löe_„ed
(
Ál£
);

1137 
	gs
->
≠≥nd
(
˘x
, 
ss
);

1138 *
	gªtvÆ
 << 
	gs
;

1144 i‡(
	gèûs
 &&Åaûs->
Àngth
() > 0) {

1145 
size_t
 
	gn
 = 0, 
	gnL
 = 
èûs
->
Àngth
();Ç <ÇL; ++n) {

1146 
Com∂ex_Sñe˘‹
* 
	g˝y
 = 
this
->
˛⁄e
(
˘x
);

1147 
	g˝y
->
èû
((*
èûs
)[
n
]->
˛⁄eFuŒy
(
˘x
));

1148 
	g˝y
->
hód
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Compound_Sñe˘‹
, hód->
p°©e
()));

1149 
size_t
 
	gi
 = 1, 
	gL
 = 
this
->
hód
()->
Àngth
(); i < L; ++i)

1150 *
	g˝y
->
hód
(Ë<< (*
	gthis
->hód())[
i
];

1151 i‡(!
	g˝y
->
hód
()->
Àngth
()) cpy->head(0);

1152 *
	gªtvÆ
 << 
	g˝y
->
skù_em±y_ª„ªn˚
();

1157 
Com∂ex_Sñe˘‹
* 
	g˝y
 = 
this
->
˛⁄e
(
˘x
);

1158 
	g˝y
->
hód
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Compound_Sñe˘‹
, hód->
p°©e
()));

1159 
size_t
 
	gi
 = 1, 
	gL
 = 
this
->
hód
()->
Àngth
(); i < L; ++i)

1160 *
	g˝y
->
hód
(Ë<< (*
	gthis
->hód())[
i
];

1161 i‡(!
	g˝y
->
hód
()->
Àngth
()) cpy->head(0);

1162 *
	gªtvÆ
 << 
	g˝y
->
skù_em±y_ª„ªn˚
();

1168 
	gªtvÆ
 = 
this
->
èûs
(
˘x
,Åails);

1171 
Sim∂e_Sñe˘‹
* 
	gss
 : *
hód
) {

1172 i‡(
Wøµed_Sñe˘‹
* 
ws
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
ss
)) {

1173 i‡(
Sñe˘‹_Li°
* 
¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ws
->
£À˘‹
())) {

1174 i‡(
∑ª¡s
Ë
ws
->
£À˘‹
(
¶
->
∑ª¡ize
’¨íts, 
˘x
));

1179  
	gªtvÆ
;

1184  
	gthis
->
èûs
(
˘x
,Åails);

1191 
Sñe˘‹_Li°
* 
	gCom∂ex_Sñe˘‹
::
èûs
(
C⁄ãxt
& 
˘x
, Selector_List*Åails)

1193 
Sñe˘‹_Li°
* 
	grv
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e_
);

1194 i‡(
	gèûs
 &&Åaûs->
Àngth
()) {

1195 
size_t
 
	gi
 = 0, 
	giL
 = 
èûs
->
Àngth
(); i < iL; ++i) {

1196 
Com∂ex_Sñe˘‹
* 
	g¥
 = 
this
->
˛⁄e
(
˘x
);

1197 
	g¥
->
èû
((*
èûs
)[
i
]);

1198 *
	grv
 << 
	g¥
;

1202 *
	grv
 << 
	gthis
;

1204  
	grv
;

1208 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
fú°
()

1211 
Com∂ex_Sñe˘‹
* 
cur
 = 
this
;

1212 c⁄° 
Compound_Sñe˘‹
* 
	ghód
;

1214 
	gcur
)

1217 
	ghód
 = 
cur
->
hód_
;

1219 i‡(!
	ghód
 || hód->
Àngth
(Ë!1 || !
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>((*
hód
)[0])) {

1223 
	gcur
 = 
cur
->
èû_
;

1226  
	gcur
;

1230 c⁄° 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
fú°
() const

1233 c⁄° 
Com∂ex_Sñe˘‹
* 
cur
 = 
this
->
èû_
;

1234 c⁄° 
Compound_Sñe˘‹
* 
	ghód
 = 
hód_
;

1236 
	gcur
)

1239 
	ghód
 = 
cur
->
hód_
;

1241 i‡(
	ghód
 && hód->
Àngth
() == 1)

1244 i‡(!
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>((*
hód
)[0])) ;

1247 
	gcur
 = 
cur
->
èû_
;

1250  
	gcur
;

1254 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
œ°
()

1257  
èû_
?Åaû_->
œ°
(Ë: 
this
;

1261 c⁄° 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
œ°
() const

1264  
èû_
?Åaû_->
œ°
(Ë: 
this
;

1268 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
Com∂ex_Sñe˘‹
::
˛ór_ö√rmo°
()

1270 
Combö©‹
 
c
;

1271 i‡(!
èû
() ||Åail()->tail() == 0)

1272 { 
c
 = 
combö©‹
(); combö©‹(
ANCESTOR_OF
); 
èû
(0); }

1274 { 
	gc
 = 
èû
()->
˛ór_ö√rmo°
(); }

1275  
	gc
;

1278 
	gCom∂ex_Sñe˘‹
::
£t_ö√rmo°
(
Com∂ex_Sñe˘‹
* 
vÆ
, 
Combö©‹
 
c
)

1280 i‡(!
èû
())

1281 { 
èû
(
vÆ
); 
combö©‹
(
c
); }

1283 { 
èû
()->
£t_ö√rmo°
(
vÆ
, 
c
); }

1286 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
˛⁄e
(
C⁄ãxt
& 
˘x
) const

1288 
Com∂ex_Sñe˘‹
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, *
this
);

1289 
	g˝y
->
is_›ti⁄Æ
(
this
->is_optional());

1290 
	g˝y
->
medü_block
(
this
->media_block());

1291 i‡(
èû
()Ë
	g˝y
->èû—aû()->
˛⁄e
(
˘x
));

1292  
	g˝y
;

1295 
Com∂ex_Sñe˘‹
* 
	gCom∂ex_Sñe˘‹
::
˛⁄eFuŒy
(
C⁄ãxt
& 
˘x
) const

1297 
Com∂ex_Sñe˘‹
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, *
this
);

1298 
	g˝y
->
is_›ti⁄Æ
(
this
->is_optional());

1299 
	g˝y
->
medü_block
(
this
->media_block());

1300 i‡(
hód
()) {

1301 
	g˝y
->
hód
(hód()->
˛⁄e
(
˘x
));

1304 i‡(
èû
()) {

1305 
	g˝y
->
èû
—aû()->
˛⁄eFuŒy
(
˘x
));

1308  
	g˝y
;

1311 
Compound_Sñe˘‹
* 
	gCompound_Sñe˘‹
::
˛⁄e
(
C⁄ãxt
& 
˘x
) const

1313 
Compound_Sñe˘‹
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, *
this
);

1314 
	g˝y
->
is_›ti⁄Æ
(
this
->is_optional());

1315 
	g˝y
->
medü_block
(
this
->media_block());

1316 
	g˝y
->
exãnded
(
this
->extended());

1317  
	g˝y
;

1320 
Sñe˘‹_Li°
* 
	gSñe˘‹_Li°
::
˛⁄e
(
C⁄ãxt
& 
˘x
) const

1322 
Sñe˘‹_Li°
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, *
this
);

1323 
	g˝y
->
is_›ti⁄Æ
(
this
->is_optional());

1324 
	g˝y
->
medü_block
(
this
->media_block());

1325  
	g˝y
;

1328 
Sñe˘‹_Li°
* 
	gSñe˘‹_Li°
::
˛⁄eFuŒy
(
C⁄ãxt
& 
˘x
) const

1330 
Sñe˘‹_Li°
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
());

1331 
	g˝y
->
is_›ti⁄Æ
(
this
->is_optional());

1332 
	g˝y
->
medü_block
(
this
->media_block());

1333 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i) {

1334 *
	g˝y
 << (*
	gthis
)[
i
]->
˛⁄eFuŒy
(
˘x
);

1336  
	g˝y
;

1347 
	gSñe˘‹_Li°
::
ªmove_∑ª¡_£À˘‹s
()

1350 
size_t
 
i
 = 0, 
	gL
 = 
Àngth
(); 
	gi
 < L; ++i) {

1351 i‡(!(*
	gthis
)[
i
]->
hód
()) ;

1352 i‡((*
	gthis
)[
i
]->
hód
()->
is_em±y_ª„ªn˚
()) {

1354 i‡((*
	gthis
)[
i
]->
combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
) {

1355 i‡((*
this
)[
i
]->
èû
(Ë!
NULL
) {

1356 i‡((*
this
)[
i
]->
has_löe_„ed
()) {

1357 (*
this
)[
i
]->
èû
()->
has_löe_„ed
(
åue
);

1359 (*
	gthis
)[
i
] = (*
this
)[i]->
èû
();

1364 (*
	gthis
)[
i
]->
hód
()->
îa£
((*
this
)[i]->hód()->
begö
());

1370 
boﬁ
 
	gSñe˘‹_Li°
::
has_∑ª¡_ªf
()

1372 
Com∂ex_Sñe˘‹
* 
s
 : *
this
) {

1373 i‡(
s
 && s->
has_∑ª¡_ªf
()Ë 
åue
;

1375  
	gÁl£
;

1378 
boﬁ
 
	gSñe˘‹_Schema
::
has_∑ª¡_ªf
()

1380 i‡(
Såög_Schema
* 
schema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
c⁄ã¡s
())) {

1381  
schema
->
Àngth
(Ë> 0 && 
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>(schema->
©
(0)Ë!
NULL
;

1383  
	gÁl£
;

1386 
	gSñe˘‹_Li°
::
adju°_a·î_pushög
(
Com∂ex_Sñe˘‹
* 
c
)

1393 
boﬁ
 
Com∂ex_Sñe˘‹
::
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
 *
sub
, 
°d
::
°rög
 
wøµög
)

1396 
size_t
 
i
 = 0, 
	gL
 = 
sub
->
Àngth
(); 
	gi
 < L; ++i) {

1397 i‡(!
is_su≥r£À˘‹_of
((*
sub
)[
i
], 
wøµög
)Ë 
	gÁl£
;

1399  
	gåue
;

1404 
boﬁ
 
	gSñe˘‹_Li°
::
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
 *
sub
, 
°d
::
°rög
 
wøµög
)

1407 
size_t
 
i
 = 0, 
	gL
 = 
sub
->
Àngth
(); 
	gi
 < L; ++i) {

1408 i‡(!
is_su≥r£À˘‹_of
((*
sub
)[
i
], 
wøµög
)Ë 
	gÁl£
;

1410  
	gåue
;

1415 
boﬁ
 
	gSñe˘‹_Li°
::
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
 *
sub
, 
°d
::
°rög
 
wøµög
)

1418 
size_t
 
i
 = 0, 
	gL
 = 
Àngth
(); 
	gi
 < L; ++i) {

1419 i‡((*
	gthis
)[
i
]->
is_su≥r£À˘‹_of
(
sub
, 
wøµög
)Ë 
	gåue
;

1421  
	gÁl£
;

1426 
boﬁ
 
	gSñe˘‹_Li°
::
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
 *
sub
, 
°d
::
°rög
 
wøµög
)

1429 
size_t
 
i
 = 0, 
	gL
 = 
Àngth
(); 
	gi
 < L; ++i) {

1430 i‡((*
	gthis
)[
i
]->
is_su≥r£À˘‹_of
(
sub
)Ë 
	gåue
;

1432  
	gÁl£
;

1435 
Sñe˘‹_Li°
* 
	gSñe˘‹_Li°
::
unify_wôh
(Sñe˘‹_Li°* 
rhs
, 
C⁄ãxt
& 
˘x
) {

1436 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
unifõd_com∂ex_£À˘‹s
;

1438 
size_t
 
	glhs_i
 = 0, 
	glhs_L
 = 
Àngth
();Ühs_i <Ühs_L; ++lhs_i) {

1439 
Com∂ex_Sñe˘‹
* 
	g£q1
 = (*
this
)[
lhs_i
];

1440 
size_t
 
	grhs_i
 = 0, 
	grhs_L
 = 
rhs
->
Àngth
();Ñhs_i <Ñhs_L; ++rhs_i) {

1441 
Com∂ex_Sñe˘‹
* 
	g£q2
 = (*
rhs
)[
rhs_i
];

1443 
Sñe˘‹_Li°
* 
	gªsu…
 = 
£q1
->
unify_wôh
(
£q2
, 
˘x
);

1444 if–
	gªsu…
 ) {

1445 
size_t
 
	gi
 = 0, 
	gL
 = 
ªsu…
->
Àngth
(); i < L; ++i) {

1446 
	gunifõd_com∂ex_£À˘‹s
.
push_back
–(*
ªsu…
)[
i
] );

1453 
Sñe˘‹_Li°
* 
	gföÆ_ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
());

1454 autÿ
	gôr
 = 
unifõd_com∂ex_£À˘‹s
.
begö
(); iå !unifõd_com∂ex_£À˘‹s.
íd
(); ++itr) {

1455 *
	gföÆ_ªsu…
 << *
	gôr
;

1457  
	gföÆ_ªsu…
;

1460 
	gSñe˘‹_Li°
::
p›uœã_exãnds
(
Sñe˘‹_Li°
* 
exãndì
, 
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
exãnds
)

1463 
Sñe˘‹_Li°
* 
	gexãndî
 = 
this
;

1464 autÿ
	gcom∂ex_£l
 : 
exãndì
->
ñemíts
()) {

1465 
Com∂ex_Sñe˘‹
* 
c
 = 
com∂ex_£l
;

1469 
Compound_Sñe˘‹
* 
	gcompound_£l
 = 
c
->
hód
();

1470 
Com∂ex_Sñe˘‹
* 
	gpIãr
 = 
com∂ex_£l
;

1471 
	gpIãr
) {

1472 
Compound_Sñe˘‹
* 
	gpHód
 = 
pIãr
->
hód
();

1473 i‡(
	gpHód
 && 
	gdy«mic_ˇ°
<
	gP¨ít_Sñe˘‹
*>’Hód->
ñemíts
()[0]Ë=
NULL
) {

1474 
compound_£l
 = 
pHód
;

1478 
	gpIãr
 = 
pIãr
->
èû
();

1481 i‡(!
	gpIãr
->
hód
(Ë||ÖIãr->
èû
()) {

1482 
îr‹
("√°ed sñe˘‹†mayÇŸ bêexãnded", 
c
->
p°©e
());

1485 
	gcompound_£l
->
is_›ti⁄Æ
(
exãndì
->is_optional());

1487 
size_t
 
	gi
 = 0, 
	gL
 = 
exãndî
->
Àngth
(); i < L; ++i) {

1488 
	gexãnds
.
put
(
compound_£l
->
to_°r_vec
(), 
°d
::
make_∑ú
((*
exãndî
)[
i
], compound_sel));

1493 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
Compound_Sñe˘‹
::
to_°r_vec
()

1495 
°d
::
ve˘‹
<°d::
°rög
> 
ªsu…
;

1496 
	gªsu…
.
ª£rve
(
Àngth
());

1497 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

1498 { 
	gªsu…
.
push_back
((*
this
)[
i
]->
to_°rög
()); }

1499  
	gªsu…
;

1502 
Compound_Sñe˘‹
* 
	gCompound_Sñe˘‹
::
möus
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
)

1504 
Compound_Sñe˘‹
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
p°©e
());

1508 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

1510 
boﬁ
 
	gfound
 = 
Ál£
;

1511 
	g°d
::
°rög
 
thisSñe˘‹
((*
this
)[
i
]->
to_°rög
(
˘x
.
c_›ti⁄s
));

1512 
size_t
 
	gj
 = 0, 
	gM
 = 
rhs
->
Àngth
(); j < M; ++j)

1514 i‡(
	gthisSñe˘‹
 =(*
rhs
)[
j
]->
to_°rög
(
˘x
.
c_›ti⁄s
))

1516 
found
 = 
åue
;

1520 i‡(!
	gfound
Ë(*
	gªsu…
Ë<< (*
	gthis
)[
i
];

1523  
	gªsu…
;

1526 
	gCompound_Sñe˘‹
::
mîgeSour˚s
(
Sour˚sSë
& 
sour˚s
, 
C⁄ãxt
& 
˘x
)

1528 
	gSour˚sSë
::
ôî©‹
 iãøt‹ = 
sour˚s
.
begö
(), 
	gídIãøt‹
 = sour˚s.
íd
(); 
	gôî©‹
 !
ídIãøt‹
; ++iterator) {

1529 
	gthis
->
	gsour˚s_
.
ö£π
((*
ôî©‹
)->
˛⁄e
(
˘x
));

1533 
Argumít
* 
	gArgumíts
::
gë_ª°_¨gumít
()

1535 
Argumít
* 
¨g
 = 0;

1536 i‡(
	gthis
->
has_ª°_¨gumít
()) {

1537 autÿ
	ga
 : 
this
->
ñemíts
()) {

1538 i‡(
a
->
is_ª°_¨gumít
()) {

1539 
¨g
 = 
a
;

1545  
	g¨g
;

1548 
Argumít
* 
	gArgumíts
::
gë_keyw‹d_¨gumít
()

1550 
Argumít
* 
¨g
 = 0;

1551 i‡(
	gthis
->
has_keyw‹d_¨gumít
()) {

1552 autÿ
	ga
 : 
this
->
ñemíts
()) {

1553 i‡(
a
->
is_keyw‹d_¨gumít
()) {

1554 
¨g
 = 
a
;

1560  
	g¨g
;

1563 
	gArgumíts
::
adju°_a·î_pushög
(
Argumít
* 
a
)

1565 i‡(!
a
->
«me
().
em±y
()) {

1566 i‡–
has_keyw‹d_¨gumít_
) {

1567 
îr‹
("«medárgumít†mu°Öª˚dêv¨übÀ-Àngthárgumít", 
a
->
p°©e
());

1569 
	ghas_«med_¨gumíts_
 = 
åue
;

1571 i‡(
	ga
->
is_ª°_¨gumít
()) {

1572 i‡(
	ghas_ª°_¨gumít_
) {

1573 
îr‹
("fun˘i⁄†™d mixö†may o∆y bêˇŒed wôh o√ v¨übÀ-Àngthárgumít", 
a
->
p°©e
());

1575 i‡(
	ghas_keyw‹d_¨gumít_
) {

1576 
îr‹
("⁄ly keyw‹dárgumít†may fﬁlow v¨übÀárgumíts", 
a
->
p°©e
());

1578 
	ghas_ª°_¨gumít_
 = 
åue
;

1580 i‡(
	ga
->
is_keyw‹d_¨gumít
()) {

1581 i‡(
	ghas_keyw‹d_¨gumít_
) {

1582 
îr‹
("fun˘i⁄†™d mixö†may o∆y bêˇŒed wôh o√ keyw‹dárgumít", 
a
->
p°©e
());

1584 
	ghas_keyw‹d_¨gumít_
 = 
åue
;

1587 i‡(
	ghas_ª°_¨gumít_
) {

1588 
îr‹
("‹döÆárgumít†mu°Öª˚dêv¨übÀ-Àngthárgumíts", 
a
->
p°©e
());

1590 i‡(
	ghas_«med_¨gumíts_
) {

1591 
îr‹
("‹döÆárgumít†mu°Öª˚dê«medárgumíts", 
a
->
p°©e
());

1596 
boﬁ
 
	gRuÀ£t
::
is_övisibÀ
() const {

1597 
Sñe˘‹_Li°
* 
¶
 = 
°©ic_ˇ°
<Sñe˘‹_Li°*>(
£À˘‹
());

1598 
size_t
 
	gi
 = 0, 
	gL
 = 
¶
->
Àngth
(); i < L; ++i)

1599 i‡(!(*
	g¶
)[
i
]->
has_∂a˚hﬁdî
()Ë 
	gÁl£
;

1600  
	gåue
;

1603 
boﬁ
 
	gMedü_Block
::
is_övisibÀ
() const {

1604 
size_t
 
i
 = 0, 
	gL
 = 
block
()->
Àngth
(); 
	gi
 < L; ++i) {

1605 i‡(!(*
block
())[
i
]->
is_övisibÀ
()Ë 
	gÁl£
;

1607  
	gåue
;

1610 
	gNumbî
::
Numbî
(
P¨£rSèã
 
p°©e
, 
vÆ
, 
°d
::
°rög
 
u
, 
boﬁ
 
zîo
)

1611 : 
VÆue
(
p°©e
),

1612 
vÆue_
(
vÆ
),

1613 
zîo_
(
zîo
),

1614 
numî©‹_unôs_
(
°d
::
ve˘‹
<°d::
°rög
>()),

1615 
díomö©‹_unôs_
(
°d
::
ve˘‹
<°d::
°rög
>()),

1616 
hash_
(0)

1618 
size_t
 
	gl
 = 0, 
	gr
 = 0;

1619 i‡(!
	gu
.
em±y
()) {

1620 
boﬁ
 
	gnomö©‹
 = 
åue
;

1621 
	gåue
) {

1622 
	gr
 = 
u
.
föd_fú°_of
("*/", 
l
);

1623 
	g°d
::
°rög
 
unô
(
u
.
sub°r
(
l
, 
r
 =
°d
::°rög::
≈os
 ?Ñ :Ñ -Ü));

1624 i‡(!
	gunô
.
em±y
()) {

1625 i‡(
	gnomö©‹
Ë
	gnumî©‹_unôs_
.
push_back
(
unô
);

1626 
	gdíomö©‹_unôs_
.
push_back
(
unô
);

1628 i‡(
	gr
 =
°d
::
°rög
::
≈os
) ;

1631 i‡(
	gu
[
r
] == '/')

1632 
nomö©‹
 = 
Ál£
;

1633 
	gl
 = 
r
 + 1;

1636 
c⁄¸ëe_ty≥
(
NUMBER
);

1639 
	g°d
::
°rög
 
Numbî
::
unô
() const

1641 
°d
::
°rög
 
u
;

1642 
size_t
 
	gi
 = 0, 
	gS
 = 
numî©‹_unôs_
.
size
(); i < S; ++i) {

1643 i‡(
	gi
Ë
	gu
 += '*';

1644 
	gu
 +
numî©‹_unôs_
[
i
];

1646 i‡(!
	gdíomö©‹_unôs_
.
em±y
()Ë
	gu
 += '/';

1647 
size_t
 
	gi
 = 0, 
	gS
 = 
díomö©‹_unôs_
.
size
(); i < S; ++i) {

1648 i‡(
	gi
Ë
	gu
 += '*';

1649 
	gu
 +
díomö©‹_unôs_
[
i
];

1651  
	gu
;

1654 
boﬁ
 
	gNumbî
::
is_vÆid_css_unô
() const

1656  
numî©‹_unôs
().
size
() <= 1 &&

1657 
díomö©‹_unôs
().
size
() == 0;

1660 
boﬁ
 
	gNumbî
::
is_unôÀss
() const

1661 {  
numî©‹_unôs_
.
em±y
(Ë&& 
díomö©‹_unôs_
.empty(); }

1663 
	gNumbî
::
n‹mÆize
(c⁄° 
°d
::
°rög
& 
¥e„ªd
, 
boﬁ
 
°ri˘
)

1670 
	g°d
::
m≠
<
°d
::
°rög
, > 
	gexp⁄íts
;

1673 
size_t
 
	gi
 = 0, 
	gS
 = 
numî©‹_unôs_
.
size
(); i < S; ++iË++ 
	gexp⁄íts
[numî©‹_unôs_[
i
]];

1674 
size_t
 
	gi
 = 0, 
	gS
 = 
díomö©‹_unôs_
.
size
(); i < S; ++iË-- 
	gexp⁄íts
[díomö©‹_unôs_[
i
]];

1677 
	gÁ˘‹
 = 1;

1681 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
nom_ô
 = 
numî©‹_unôs_
.
begö
();

1682 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
nom_íd
 = 
numî©‹_unôs_
.
íd
();

1683 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
díom_ô
 = 
díomö©‹_unôs_
.
begö
();

1684 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
díom_íd
 = 
díomö©‹_unôs_
.
íd
();

1688 
	gdíom_ô
 !
díom_íd
)

1691 c⁄° 
°d
::
°rög
 
díom
 = *(
díom_ô
 ++);

1693 i‡(
	gexp⁄íts
[
díom
] >= 0) ;

1695 i‡(
°rög_to_unô
(
díom
Ë=
UNKNOWN
) ;

1697 
	gnom_ô
 !
nom_íd
)

1700 c⁄° 
°d
::
°rög
 
nom
 = *(
nom_ô
 ++);

1702 i‡(
	gexp⁄íts
[
nom
] <= 0) ;

1704 i‡(
°rög_to_unô
(
nom
Ë=
UNKNOWN
) ;

1707 
	gÁ˘‹
 *
c⁄vîsi⁄_Á˘‹
(
nom
, 
díom
, 
°ri˘
);

1709 -- 
	gexp⁄íts
[
nom
]; ++Éxp⁄íts[
díom
];

1716 
	gnumî©‹_unôs_
.
˛ór
();

1717 
	gdíomö©‹_unôs_
.
˛ór
();

1720 autÿ
	gexp
 : 
exp⁄íts
)

1724 
size_t
 
i
 = 0, 
	gS
 = 
abs
(
exp
.
£c⁄d
); 
	gi
 < S; ++i)

1728 i‡(!
	gexp
.
	gfú°
.
em±y
()) {

1729 i‡(
	gexp
.
	g£c⁄d
 < 0Ë
	gdíomö©‹_unôs_
.
push_back
(
exp
.
fú°
);

1730 i‡(
	gexp
.
	g£c⁄d
 > 0Ë
	gnumî©‹_unôs_
.
push_back
(
exp
.
fú°
);

1737 
	gvÆue_
 *
Á˘‹
;

1741 
	gåy
 { 
c⁄vît
(
¥e„ªd
, 
°ri˘
); }

1742 
ˇtch
 (
öcom∑tibÀUnôs
& 
îr
)

1743 { 
îr‹
(
îr
.
wh©
(), 
p°©e
()); }

1744 
ˇtch
 (...Ë{ 
	gthrow
; }

1749 
	gNumbî
::
c⁄vît_Á˘‹
(c⁄° 
Numbî
& 
n
) const

1760 
°d
::
ve˘‹
<°d::
°rög
> 
l_miss_nums
(0);

1761 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
l_miss_dís
(0);

1763 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
r_nums
(
n
.
numî©‹_unôs_
);

1764 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
r_dís
(
n
.
díomö©‹_unôs_
);

1766 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
c⁄°_ôî©‹
 
l_num_ô
 = 
numî©‹_unôs_
.
begö
();

1767 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
c⁄°_ôî©‹
 
l_num_íd
 = 
numî©‹_unôs_
.
íd
();

1769 
boﬁ
 
	gl_unôÀss
 = 
is_unôÀss
();

1770 
boﬁ
 
	gr_unôÀss
 = 
n
.
is_unôÀss
();

1773 
	gÁ˘‹
 = 1;

1776 
	gl_num_ô
 !
l_num_íd
)

1779 c⁄° 
°d
::
°rög
 
l_num
 = *(
l_num_ô
 ++);

1781 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
r_num_ô
 = 
r_nums
.
begö
();

1782 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
r_num_íd
 = 
r_nums
.
íd
();

1784 
boﬁ
 
	gfound
 = 
Ál£
;

1786 
	gr_num_ô
 !
r_num_íd
)

1789 c⁄° 
°d
::
°rög
 
r_num
 = *(
r_num_ô
);

1791 
	gc⁄vîsi⁄
 = 
c⁄vîsi⁄_Á˘‹
(
l_num
, 
r_num
, 
Ál£
);

1793 i‡(
	gc⁄vîsi⁄
 == 0) {

1794 ++ 
r_num_ô
;

1798 
	gÁ˘‹
 *
c⁄vîsi⁄
;

1800 
	gr_nums
.
îa£
(
r_num_ô
);

1802 
	gfound
 = 
åue
;

1807 i‡(!
	gfound
Ë
	gl_miss_nums
.
push_back
(
l_num
);

1810 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
c⁄°_ôî©‹
 
l_dí_ô
 = 
díomö©‹_unôs_
.
begö
();

1811 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
c⁄°_ôî©‹
 
l_dí_íd
 = 
díomö©‹_unôs_
.
íd
();

1814 
	gl_dí_ô
 !
l_dí_íd
)

1817 c⁄° 
°d
::
°rög
 
l_dí
 = *(
l_dí_ô
 ++);

1819 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
r_dí_ô
 = 
r_dís
.
begö
();

1820 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
r_dí_íd
 = 
r_dís
.
íd
();

1822 
boﬁ
 
	gfound
 = 
Ál£
;

1824 
	gr_dí_ô
 !
r_dí_íd
)

1827 c⁄° 
°d
::
°rög
 
r_dí
 = *(
r_dí_ô
);

1829 
	gc⁄vîsi⁄
 = 
c⁄vîsi⁄_Á˘‹
(
l_dí
, 
r_dí
, 
Ál£
);

1831 i‡(
	gc⁄vîsi⁄
 == 0) {

1832 ++ 
r_dí_ô
;

1836 
	gÁ˘‹
 *
c⁄vîsi⁄
;

1838 
	gr_dís
.
îa£
(
r_dí_ô
);

1840 
	gfound
 = 
åue
;

1845 i‡(!
	gfound
Ë
	gl_miss_dís
.
push_back
(
l_dí
);

1849 i‡(
	gl_miss_nums
.
size
(Ë> 0 && !
	gr_unôÀss
) {

1850 
throw
 
	gEx˚±i⁄
::
Incom∑tibÀUnôs
(
n
, *
this
);

1852 i‡(
	gl_miss_dís
.
size
(Ë> 0 && !
	gr_unôÀss
) {

1853 
throw
 
	gEx˚±i⁄
::
Incom∑tibÀUnôs
(
n
, *
this
);

1855 i‡(
	gr_nums
.
size
(Ë> 0 && !
	gl_unôÀss
) {

1856 
throw
 
	gEx˚±i⁄
::
Incom∑tibÀUnôs
(
n
, *
this
);

1858 i‡(
	gr_dís
.
size
(Ë> 0 && !
	gl_unôÀss
) {

1859 
throw
 
	gEx˚±i⁄
::
Incom∑tibÀUnôs
(
n
, *
this
);

1862  
	gÁ˘‹
;

1866 
boﬁ
 
	gNumbî
::
c⁄vît
(c⁄° 
°d
::
°rög
& 
¥e„ªd
, boﬁ 
°ri˘
)

1869 i‡(
	g¥e„ªd
.
em±y
()Ë 
	gåue
;

1875 
	g°d
::
m≠
<
°d
::
°rög
, > 
	gexp⁄íts
;

1878 
size_t
 
	gi
 = 0, 
	gS
 = 
numî©‹_unôs_
.
size
(); i < S; ++iË++ 
	gexp⁄íts
[numî©‹_unôs_[
i
]];

1879 
size_t
 
	gi
 = 0, 
	gS
 = 
díomö©‹_unôs_
.
size
(); i < S; ++iË-- 
	gexp⁄íts
[díomö©‹_unôs_[
i
]];

1882 
	gÁ˘‹
 = 1;

1884 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
díom_ô
 = 
díomö©‹_unôs_
.
begö
();

1885 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
díom_íd
 = 
díomö©‹_unôs_
.
íd
();

1889 
	gdíom_ô
 !
díom_íd
)

1892 c⁄° 
°d
::
°rög
 
díom
 = *(
díom_ô
 ++);

1894 i‡(
	gdíom
 =
¥e„ªd
) ;

1896 i‡(
	gexp⁄íts
[
díom
] >= 0) ;

1898 i‡(
°rög_to_unô
(
díom
Ë=
UNKNOWN
) ;

1901 
	gÁ˘‹
 *
c⁄vîsi⁄_Á˘‹
(
díom
, 
¥e„ªd
, 
°ri˘
);

1903 ++ 
	gexp⁄íts
[
díom
]; --Éxp⁄íts[
¥e„ªd
];

1906 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
nom_ô
 = 
numî©‹_unôs_
.
begö
();

1907 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
nom_íd
 = 
numî©‹_unôs_
.
íd
();

1910 
	gnom_ô
 !
nom_íd
)

1913 c⁄° 
°d
::
°rög
 
nom
 = *(
nom_ô
 ++);

1915 i‡(
	gnom
 =
¥e„ªd
) ;

1917 i‡(
	gexp⁄íts
[
nom
] <= 0) ;

1919 i‡(
°rög_to_unô
(
nom
Ë=
UNKNOWN
) ;

1922 
	gÁ˘‹
 *
c⁄vîsi⁄_Á˘‹
(
nom
, 
¥e„ªd
, 
°ri˘
);

1924 -- 
	gexp⁄íts
[
nom
]; ++Éxp⁄íts[
¥e„ªd
];

1928 
	gnumî©‹_unôs_
.
˛ór
();

1929 
	gdíomö©‹_unôs_
.
˛ór
();

1932 autÿ
	gexp
 : 
exp⁄íts
)

1936 
size_t
 
i
 = 0, 
	gS
 = 
abs
(
exp
.
£c⁄d
); 
	gi
 < S; ++i)

1940 i‡(!
	gexp
.
	gfú°
.
em±y
()) {

1941 i‡(
	gexp
.
	g£c⁄d
 < 0Ë
	gdíomö©‹_unôs_
.
push_back
(
exp
.
fú°
);

1942 i‡(
	gexp
.
	g£c⁄d
 > 0Ë
	gnumî©‹_unôs_
.
push_back
(
exp
.
fú°
);

1949 
	gvÆue_
 *
Á˘‹
;

1952  
	gåue
;

1957 
	g°d
::
°rög
 
Numbî
::
föd_c⁄vîtibÀ_unô
() const

1959 
size_t
 
i
 = 0, 
	gS
 = 
numî©‹_unôs_
.
size
(); 
	gi
 < S; ++i) {

1960 
	g°d
::
°rög
 
u
(
numî©‹_unôs_
[
i
]);

1961 i‡(
°rög_to_unô
(
u
Ë!
UNKNOWN
)  u;

1963 
size_t
 
	gi
 = 0, 
	gS
 = 
díomö©‹_unôs_
.
size
(); i < S; ++i) {

1964 
	g°d
::
°rög
 
u
(
díomö©‹_unôs_
[
i
]);

1965 i‡(
°rög_to_unô
(
u
Ë!
UNKNOWN
)  u;

1967  
	g°d
::
°rög
();

1970 
boﬁ
 
	gCu°om_W¨nög
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1972 i‡(c⁄° 
Cu°om_W¨nög
* 
r
 = 
dy«mic_ˇ°
<c⁄° Cu°om_W¨nög*>(&
rhs
)) {

1973  
mesßge
(Ë=
r
->message();

1975  
	gÁl£
;

1978 
boﬁ
 
	gCu°om_Eº‹
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1980 i‡(c⁄° 
Cu°om_Eº‹
* 
r
 = 
dy«mic_ˇ°
<c⁄° Cu°om_Eº‹*>(&
rhs
)) {

1981  
mesßge
(Ë=
r
->message();

1983  
	gÁl£
;

1986 
boﬁ
 
	gNumbî
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1988 i‡(c⁄° 
Numbî
* 
r
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(&
rhs
)) {

1989 
size_t
 
lhs_unôs
 = 
numî©‹_unôs_
.
size
(Ë+ 
díomö©‹_unôs_
.size();

1990 
size_t
 
	grhs_unôs
 = 
r
->
numî©‹_unôs_
.
size
(Ë+Ñ->
díomö©‹_unôs_
.size();

1992 i‡(!
	glhs_unôs
 || !
	grhs_unôs
) {

1993  
	g°d
::
Ábs
(
vÆue
(Ë- 
r
->vÆue()Ë< 
NUMBER_EPSILON
;

1995  (
	gnumî©‹_unôs_
 =
r
->
numî©‹_unôs_
) &&

1996 (
díomö©‹_unôs_
 =
r
->denominator_units_) &&

1997 
°d
::
Ábs
(
vÆue
(Ë- 
r
->vÆue()Ë< 
NUMBER_EPSILON
;

1999  
	gÁl£
;

2002 
boﬁ
 
	gNumbî
::
›î©‹
< (c⁄° 
Numbî
& 
rhs
) const

2004 
size_t
 
lhs_unôs
 = 
numî©‹_unôs_
.
size
(Ë+ 
díomö©‹_unôs_
.size();

2005 
size_t
 
	grhs_unôs
 = 
rhs
.
numî©‹_unôs_
.
size
(Ë+Ñhs.
díomö©‹_unôs_
.size();

2007 i‡(!
	glhs_unôs
 || !
	grhs_unôs
) {

2008  
vÆue
(Ë< 
	grhs
.value();

2011 
Numbî
 
tmp_r
(
rhs
);

2012 
	gtmp_r
.
n‹mÆize
(
föd_c⁄vîtibÀ_unô
());

2013 
	g°d
::
°rög
 
l_unô
(
unô
());

2014 
	g°d
::
°rög
 
r_unô
(
tmp_r
.
unô
());

2015 i‡(
unô
(Ë!
tmp_r
.unit()) {

2016 
îr‹
("ˇ¬Ÿ com∑ªÇumbî†wôh incom∑tibÀ unôs", 
p°©e
());

2018  
vÆue
(Ë< 
	gtmp_r
.value();

2021 
boﬁ
 
	gSåög_QuŸed
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2023 i‡(c⁄° 
Såög_QuŸed
* 
q°r
 = 
dy«mic_ˇ°
<c⁄° Såög_QuŸed*>(&
rhs
)) {

2024  (
vÆue
(Ë=
q°r
->value());

2025 } i‡(c⁄° 
Såög_C⁄°™t
* 
	gc°r
 = 
dy«mic_ˇ°
<c⁄° Såög_C⁄°™t*>(&
rhs
)) {

2026  (
vÆue
(Ë=
c°r
->value());

2028  
	gÁl£
;

2031 
boﬁ
 
	gSåög_C⁄°™t
::
is_övisibÀ
() const {

2032  
vÆue_
.
em±y
(Ë&& 
quŸe_m¨k_
 == 0;

2035 
boﬁ
 
	gSåög_C⁄°™t
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2037 i‡(c⁄° 
Såög_QuŸed
* 
q°r
 = 
dy«mic_ˇ°
<c⁄° Såög_QuŸed*>(&
rhs
)) {

2038  (
vÆue
(Ë=
q°r
->value());

2039 } i‡(c⁄° 
Såög_C⁄°™t
* 
	gc°r
 = 
dy«mic_ˇ°
<c⁄° Såög_C⁄°™t*>(&
rhs
)) {

2040  (
vÆue
(Ë=
c°r
->value());

2042  
	gÁl£
;

2045 
boﬁ
 
	gSåög_Schema
::
is_À·_öãΩﬁ™t
() const

2047  
Àngth
(Ë&& 
fú°
()->
is_À·_öãΩﬁ™t
();

2049 
boﬁ
 
	gSåög_Schema
::
is_right_öãΩﬁ™t
() const

2051  
Àngth
(Ë&& 
œ°
()->
is_right_öãΩﬁ™t
();

2054 
boﬁ
 
	gSåög_Schema
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2056 i‡(c⁄° 
Såög_Schema
* 
r
 = 
dy«mic_ˇ°
<c⁄° Såög_Schema*>(&
rhs
)) {

2057 i‡(
Àngth
(Ë!
r
->Àngth()Ë 
Ál£
;

2058 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i) {

2059 
Ex¥essi⁄
* 
	grv
 = (*
r
)[
i
];

2060 
Ex¥essi⁄
* 
	glv
 = (*
this
)[
i
];

2061 i‡(!
	glv
 || !
	grv
Ë 
	gÁl£
;

2062 i‡(!(*
	glv
 =*
rv
)Ë 
Ál£
;

2064  
	gåue
;

2066  
	gÁl£
;

2069 
boﬁ
 
	gBoﬁón
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2071 i‡(c⁄° 
Boﬁón
* 
r
 = 
dy«mic_ˇ°
<c⁄° Boﬁón*>(&
rhs
)) {

2072  (
vÆue
(Ë=
r
->value());

2074  
	gÁl£
;

2077 
boﬁ
 
	gCﬁ‹
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2079 i‡(c⁄° 
Cﬁ‹
* 
r
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(&
rhs
)) {

2080  
r_
 =
r
->r() &&

2081 
g_
 =
r
->
g
() &&

2082 
b_
 =
r
->
b
() &&

2083 
a_
 =
r
->
a
();

2085  
	gÁl£
;

2088 
boﬁ
 
	gLi°
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2090 i‡(c⁄° 
Li°
* 
r
 = 
dy«mic_ˇ°
<c⁄° Li°*>(&
rhs
)) {

2091 i‡(
Àngth
(Ë!
r
->Àngth()Ë 
Ál£
;

2092 i‡(
£∑øt‹
(Ë!
r
->£∑øt‹()Ë 
Ál£
;

2093 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i) {

2094 
Ex¥essi⁄
* 
	grv
 = (*
r
)[
i
];

2095 
Ex¥essi⁄
* 
	glv
 = (*
this
)[
i
];

2096 i‡(!
	glv
 || !
	grv
Ë 
	gÁl£
;

2097 i‡(!(*
	glv
 =*
rv
)Ë 
Ál£
;

2099  
	gåue
;

2101  
	gÁl£
;

2104 
boﬁ
 
	gM≠
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2106 i‡(c⁄° 
M≠
* 
r
 = 
dy«mic_ˇ°
<c⁄° M≠*>(&
rhs
)) {

2107 i‡(
Àngth
(Ë!
r
->Àngth()Ë 
Ál£
;

2108 autÿ
	gkey
 : 
keys
()) {

2109 
Ex¥essi⁄
* 
lv
 = 
©
(
key
);

2110 
Ex¥essi⁄
* 
	grv
 = 
r
->
©
(
key
);

2111 i‡(!
	grv
 || !
	glv
Ë 
	gÁl£
;

2112 i‡(!(*
	glv
 =*
rv
)Ë 
Ál£
;

2114  
	gåue
;

2116  
	gÁl£
;

2119 
boﬁ
 
	gNuŒ
::
›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const

2121  
rhs
.
c⁄¸ëe_ty≥
(Ë=
NULL_VAL
;

2124 
size_t
 
	gLi°
::
size
() const {

2125 i‡(!
is_¨gli°_
Ë 
Àngth
();

2128 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i) {

2129 i‡(
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>((*
this
)[
i
])) {

2130 i‡(!
¨g
->
«me
().
em±y
()Ë 
i
;

2133  
Àngth
();

2136 
Ex¥essi⁄
* 
	gHashed
::
©
(Ex¥essi⁄* 
k
) const

2138 i‡(
ñemíts_
.
cou¡
(
k
))

2139 {  
ñemíts_
.
©
(
k
); }

2140 {  &
	gßss_nuŒ
; }

2143 
boﬁ
 
	gBö¨y_Ex¥essi⁄
::
is_À·_öãΩﬁ™t
() const

2145  
is_öãΩﬁ™t
(Ë|| (
À·
(Ë&&Üe·()->
is_À·_öãΩﬁ™t
());

2147 
boﬁ
 
	gBö¨y_Ex¥essi⁄
::
is_right_öãΩﬁ™t
() const

2149  
is_öãΩﬁ™t
(Ë|| (
right
(Ë&&Ñight()->
is_right_öãΩﬁ™t
());

2154 
boﬁ
 
	gBö¨y_Ex¥essi⁄
::
ˇn_dñay
() const

2156 
boﬁ
 
l_dñay
 = 
Ál£
;

2157 
boﬁ
 
	gr_dñay
 = 
Ál£
;

2158 i‡(
›
().
	g›î™d
 =
Sass_OP
::
DIV
) {

2159 i‡(
TextuÆ
* 
é
 = 
dy«mic_ˇ°
<TextuÆ*>(
À·
())) {

2160 
l_dñay
 = 
é
->
ty≥
(Ë=
TextuÆ
::
NUMBER
 ||

2161 
é
->
ty≥
(Ë=
TextuÆ
::
DIMENSION
;

2163 
	gl_dñay
 = 
dy«mic_ˇ°
<
Numbî
*>(
À·
()Ë!
NULL
;

2165 i‡(
TextuÆ
* 
	gå
 = 
dy«mic_ˇ°
<TextuÆ*>(
right
())) {

2166 
r_dñay
 = 
å
->
ty≥
(Ë=
TextuÆ
::
NUMBER
 ||

2167 
å
->
ty≥
(Ë=
TextuÆ
::
DIMENSION
;

2169 
	gr_dñay
 = 
dy«mic_ˇ°
<
Numbî
*>(
right
()Ë!
NULL
;

2172  
	gl_dñay
 && 
	gr_dñay
;

2175 
	g°d
::
°rög
 
AST_Node
::
to_°rög
(
Sass_In•e˘_O±i⁄s
 
›t
) const

2177 
Sass_Ouçut_O±i⁄s
 
out
(
›t
);

2178 
Emôãr
 
emôãr
(
out
);

2179 
In•e˘
 
i
(
emôãr
);

2180 
	gi
.
	gö_de˛¨©i⁄
 = 
åue
;

2182 
	gc⁄°_ˇ°
<
	gAST_Node
*>(
	gthis
)->
≥rf‹m
(&
i
);

2183  
	gi
.
gë_buf„r
();

2186 
	g°d
::
°rög
 
AST_Node
::
to_°rög
() const

2188  
to_°rög
({ 
NESTED
, 5 });

2191 
	g°d
::
°rög
 
Såög_QuŸed
::
ö•e˘
() const

2193  
quŸe
(
vÆue_
, '*');

2196 
	g°d
::
°rög
 
Såög_C⁄°™t
::
ö•e˘
() const

2198  
quŸe
(
vÆue_
, '*');

2204 
Ex¥essi⁄
* 
	gLi°
::
vÆue_©_ödex
(
size_t
 
i
) {

2205 i‡(
is_¨gli°_
) {

2206 i‡(
Argumít
* 
¨g
 = 
dy«mic_ˇ°
<Argumít*>((*
this
)[
i
])) {

2207  
¨g
->
vÆue
();

2209  (*
	gthis
)[
i
];

2212  (*
	gthis
)[
i
];

	@node_modules/node-sass/src/libsass/src/ast.hpp

1 #i‚de‡
SASS_AST_H


2 
	#SASS_AST_H


	)

4 
	~<£t
>

5 
	~<deque
>

6 
	~<ve˘‹
>

7 
	~<°rög
>

8 
	~<s°ªam
>

9 
	~<io°ªam
>

10 
	~<ty≥öfo
>

11 
	~<Æg‹ôhm
>

12 
	~<un‹dîed_m≠
>

13 
	~"ßss/ba£.h
"

15 #ifde‡
__˛™g__


29 #¥agm®
˛™g
 
dügno°ic
 
push


30 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Woverloaded-virtual"

34 
	~"utû.hµ
"

35 
	~"unôs.hµ
"

36 
	~"c⁄ãxt.hµ
"

37 
	~"posôi⁄.hµ
"

38 
	~"c⁄°™ts.hµ
"

39 
	~"›î©i⁄.hµ
"

40 
	~"posôi⁄.hµ
"

41 
	~"ö•e˘.hµ
"

42 
	~"sour˚_m≠.hµ
"

43 
	~"ívú⁄mít.hµ
"

44 
	~"îr‹_h™dlög.hµ
"

45 
	~"a°_def_ma¸os.hµ
"

46 
	~"a°_fwd_de˛.hµ
"

47 
	~"sour˚_m≠.hµ
"

49 
	~"ßss.h
"

51 
«me•a˚
 
	gSass
 {

55 c⁄° 
	gNUMBER_EPSILON
 = 0.00000000000001;

59 ˛as†
	cO≥ønd
 {

60 
	gpublic
:

61 
O≥ønd
(
Sass_OP
 
›î™d
, 
boﬁ
 
ws_bef‹e
 = 
Ál£
, boﬁ 
ws_a·î
 = false)

62 : 
›î™d
(›î™d), 
ws_bef‹e
(ws_bef‹e), 
ws_a·î
(ws_after)

64 
	gpublic
:

65 
Sass_OP
 
›î™d
;

66 
boﬁ
 
	gws_bef‹e
;

67 
boﬁ
 
	gws_a·î
;

74 
	gãm∂©e
 <
ty≥«me
 
	gT
>

75 
	$hash_comböe
 (
°d
::
size_t
& 
£ed
, c⁄° 
T
& 
vÆ
)

77 
£ed
 ^
°d
::
hash
<
T
>()(
vÆ
) + 0x9e3779b9

78 + (
£ed
<<6) + (seed>>2);

79 
	}
}

84 ˛as†
	cAST_Node
 : 
public
 
Mem‹y_Obje˘
 {

85 
ADD_PROPERTY
(
P¨£rSèã
, 
p°©e
)

86 
	gpublic
:

87 
AST_Node
(
P¨£rSèã
 
p°©e
)

88 : 
p°©e_
(
p°©e
)

90 
vútuÆ
 ~
AST_Node
() = 0;

91 
vútuÆ
 
size_t
 
hash
() {  0; }

92 
vútuÆ
 
	g°d
::
°rög
 
ö•e˘
(Ëc⁄° {  
to_°rög
({ 
INSPECT
, 5 }); }

93 
vútuÆ
 
	g°d
::
°rög
 
to_ßss
(Ëc⁄° {  
to_°rög
({ 
TO_SASS
, 5 }); }

94 
vútuÆ
 
	g°d
::
°rög
 
to_°rög
(
Sass_In•e˘_O±i⁄s
 
›t
) const;

95 
vútuÆ
 
	g°d
::
°rög
 
to_°rög
() const;

97 
	gpublic
:

98 
upd©e_p°©e
(c⁄° 
P¨£rSèã
& 
p°©e
);

99 
	gpublic
:

100 
Off£t
 
off
(Ë{  
p°©e
(); }

101 
Posôi⁄
 
pos
(Ë{  
p°©e
(); }

102 
ATTACH_OPERATIONS
()

104 
ölöe
 
	gAST_Node
::~
	$AST_Node
(Ë{ 
	}
}

112 ˛as†
	cEx¥essi⁄
 : 
public
 
AST_Node
 {

113 
public
:

114 
	eC⁄¸ëe_Ty≥
 {

115 
NONE
,

116 
	gBOOLEAN
,

117 
	gNUMBER
,

118 
	gCOLOR
,

119 
	gSTRING
,

120 
	gLIST
,

121 
	gMAP
,

122 
	gSELECTOR
,

123 
	gNULL_VAL
,

124 
	gC_WARNING
,

125 
	gC_ERROR
,

126 
	gNUM_TYPES


128 
	g¥iv©e
:

130 
ADD_PROPERTY
(
boﬁ
, 
is_dñayed
)

131 
ADD_PROPERTY
(
boﬁ
, 
is_ex∑nded
)

132 
ADD_PROPERTY
(
boﬁ
, 
is_öãΩﬁ™t
)

133 
ADD_PROPERTY
(
C⁄¸ëe_Ty≥
, 
c⁄¸ëe_ty≥
)

134 
	gpublic
:

135 
Ex¥essi⁄
(
P¨£rSèã
 
p°©e
,

136 
boﬁ
 
d
 = 
Ál£
, boﬁ 
e
 = fÆ£, boﬁ 
i
 = fÆ£, 
C⁄¸ëe_Ty≥
 
˘
 = 
NONE
)

137 : 
AST_Node
(
p°©e
),

138 
is_dñayed_
(
d
),

139 
is_ex∑nded_
(
d
),

140 
is_öãΩﬁ™t_
(
i
),

141 
c⁄¸ëe_ty≥_
(
˘
)

143 
vútuÆ
 
›î©‹
 
boﬁ
(Ë{  
	gåue
; }

144 
	gvútuÆ
 ~
Ex¥essi⁄
() { }

145 
vútuÆ
 
	g°d
::
°rög
 
ty≥
() {  ""; }

146 
vútuÆ
 
boﬁ
 
is_övisibÀ
(Ëc⁄° {  
	gÁl£
; }

147 
	g°d
::
°rög
 
ty≥_«me
() {  ""; }

148 
vútuÆ
 
boﬁ
 
is_Ál£
(Ë{  
	gÁl£
; }

149 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
Ëc⁄° {  
Ál£
; }

150 
vútuÆ
 
£t_dñayed
(
boﬁ
 
dñayed
Ë{ 
is_dñayed
(delayed); }

151 
vútuÆ
 
boﬁ
 
has_öãΩﬁ™t
(Ëc⁄° {  
is_öãΩﬁ™t
(); }

152 
vútuÆ
 
boﬁ
 
is_À·_öãΩﬁ™t
(Ëc⁄° {  
is_öãΩﬁ™t
(); }

153 
vútuÆ
 
boﬁ
 
is_right_öãΩﬁ™t
(Ëc⁄° {  
is_öãΩﬁ™t
(); }

154 
vútuÆ
 
	g°d
::
°rög
 
ö•e˘
(Ëc⁄° {  
to_°rög
({ 
INSPECT
, 5 }); }

155 
vútuÆ
 
	g°d
::
°rög
 
to_ßss
(Ëc⁄° {  
to_°rög
({ 
TO_SASS
, 5 }); }

156 
vútuÆ
 
size_t
 
hash
() {  0; }

162 ˛as†
	cPªVÆue
 : 
public
 
Ex¥essi⁄
 {

163 
public
:

164 
PªVÆue
(
P¨£rSèã
 
p°©e
,

165 
boﬁ
 
d
 = 
Ál£
, boﬁ 
e
 = fÆ£, boﬁ 
i
 = fÆ£, 
C⁄¸ëe_Ty≥
 
˘
 = 
NONE
)

166 : 
Ex¥essi⁄
(
p°©e
, 
d
, 
e
, 
i
, 
˘
)

168 
	gvútuÆ
 ~
PªVÆue
() { }

174 ˛as†
	cVÆue
 : 
public
 
Ex¥essi⁄
 {

175 
public
:

176 
VÆue
(
P¨£rSèã
 
p°©e
,

177 
boﬁ
 
d
 = 
Ál£
, boﬁ 
e
 = fÆ£, boﬁ 
i
 = fÆ£, 
C⁄¸ëe_Ty≥
 
˘
 = 
NONE
)

178 : 
Ex¥essi⁄
(
p°©e
, 
d
, 
e
, 
i
, 
˘
)

180 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const = 0;

188 
«me•a˚
 
	g°d
 {

189 
	gãm∂©e
<>

190 
	ghash
<
	gSass
::
Ex¥essi⁄
*>

192 
size_t
 
›î©‹
()(
Sass
::
Ex¥essi⁄
* 
s
) const

194  
s
->
hash
();

197 
	gãm∂©e
<>

198 
	gequÆ_to
<
	gSass
::
Ex¥essi⁄
*>

200 
boﬁ
 
›î©‹
()–
Sass
::
Ex¥essi⁄
* 
lhs
, 
	gSass
::Ex¥essi⁄* 
rhs
) const

202  
lhs
->
hash
(Ë=
rhs
->hash();

207 
«me•a˚
 
	gSass
 {

214 
	gãm∂©e
 <
ty≥«me
 
	gT
>

215 ˛as†
	cVe˘‹ized
 {

216 
	g°d
::
ve˘‹
<
T
> 
ñemíts_
;

217 
	g¥Ÿe˘ed
:

218 
size_t
 
hash_
;

219 
ª£t_hash
(Ë{ 
	ghash_
 = 0; }

220 
vútuÆ
 
adju°_a·î_pushög
(
T
 
ñemít
) { }

221 
	gpublic
:

222 
Ve˘‹ized
(
size_t
 
s
 = 0Ë: 
ñemíts_
(
°d
::
ve˘‹
<
T
>())

223 { 
ñemíts_
.
ª£rve
(
s
); }

224 
	gvútuÆ
 ~
Ve˘‹ized
() = 0;

225 
size_t
 
Àngth
(Ëc⁄° {  
	gñemíts_
.
size
(); }

226 
boﬁ
 
em±y
(Ëc⁄° {  
	gñemíts_
.empty(); }

227 
T
 
œ°
(Ëc⁄° {  
	gñemíts_
.
back
(); }

228 
T
 
fú°
(Ëc⁄° {  
	gñemíts_
.
‰⁄t
(); }

229 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ë{  
	gñemíts_
[
i
]; }

230 
vútuÆ
 c⁄° 
	gT
& 
©
(
size_t
 
i
Ëc⁄° {  
	gñemíts_
.at(i); }

231 c⁄° 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ëc⁄° {  
	gñemíts_
[
i
]; }

232 
	gVe˘‹ized
& 
	g›î©‹
<<(
T
 
	gñemít
)

234 i‡(!
	gñemít
Ë *
	gthis
;

235 
ª£t_hash
();

236 
	gñemíts_
.
push_back
(
ñemít
);

237 
adju°_a·î_pushög
(
ñemít
);

238  *
	gthis
;

240 
	gVe˘‹ized
& 
	g›î©‹
+=(
Ve˘‹ized
* 
v
)

242 
size_t
 
i
 = 0, 
	gL
 = 
v
->
Àngth
(); 
	gi
 < L; ++iË*
	gthis
 << (*
	gv
)[i];

243  *
	gthis
;

245 
	gVe˘‹ized
& 
unshi·
(
T
 
ñemít
)

247 
	gñemíts_
.
ö£π
(
ñemíts_
.
begö
(), 
ñemít
);

248  *
	gthis
;

250 
	g°d
::
ve˘‹
<
T
>& 
ñemíts
(Ë{  
ñemíts_
; }

251 c⁄° 
	g°d
::
ve˘‹
<
T
>& 
ñemíts
(Ëc⁄° {  
ñemíts_
; }

252 
	g°d
::
ve˘‹
<
T
>& 
ñemíts
(
°d
::ve˘‹<T>& 
e
Ë{ 
ñemíts_
 =É;  
	gñemíts_
; }

254 
vútuÆ
 
size_t
 
hash
()

256 i‡(
	ghash_
 == 0) {

257 
T
& 
ñ
 : 
ñemíts_
) {

258 
hash_comböe
(
hash_
, 
ñ
->
hash
());

261  
	ghash_
;

264 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
ôî©‹
 
íd
(Ë{  
ñemíts_
.end(); }

265 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
ôî©‹
 
begö
(Ë{  
ñemíts_
.begin(); }

266 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
ñemíts_
.end(); }

267 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
ñemíts_
.begin(); }

268 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
ôî©‹
 
îa£
—y≥«mê
°d
::ve˘‹<T>::ôî©‹ 
ñ
Ë{  
ñemíts_
.erase(el); }

269 
ty≥«me
 
	g°d
::
ve˘‹
<
T
>::
c⁄°_ôî©‹
 
îa£
—y≥«mê
°d
::ve˘‹<T>::c⁄°_ôî©‹ 
ñ
Ë{  
ñemíts_
.erase(el); }

272 
	gãm∂©e
 <
ty≥«me
 
	gT
>

273 
ölöe
 
	gVe˘‹ized
<
	gT
>::~
	$Ve˘‹ized
(Ë{ 
	}
}

279 ˛as†
	cHashed
 {

280 
	sHashEx¥essi⁄
 {

281 
size_t
 
›î©‹
(Ë(
Ex¥essi⁄
* 
ex
) const {

282  
ex
 ?Éx->
hash
() : 0;

285 
	sCom∑ªEx¥essi⁄
 {

286 
boﬁ
 
›î©‹
()(c⁄° 
Ex¥essi⁄
* 
	glhs
, c⁄° Ex¥essi⁄* 
	grhs
) const {

287  
	glhs
 && 
	grhs
 && *lh†=*
rhs
;

290 
	g°d
::
	tun‹dîed_m≠
<

291 
	tEx¥essi⁄
*,

292 
	tEx¥essi⁄
*,

293 
	tHashEx¥essi⁄
,

294 
	tCom∑ªEx¥essi⁄


295 > 
	tEx¥essi⁄M≠
;

296 
	g¥iv©e
:

297 
Ex¥essi⁄M≠
 
ñemíts_
;

298 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
li°_
;

299 
	g¥Ÿe˘ed
:

300 
size_t
 
hash_
;

301 
Ex¥essi⁄
* 
	gdu∂iˇã_key_
;

302 
ª£t_hash
(Ë{ 
	ghash_
 = 0; }

303 
ª£t_du∂iˇã_key
(Ë{ 
	gdu∂iˇã_key_
 = 0; }

304 
vútuÆ
 
adju°_a·î_pushög
(
°d
::
∑ú
<
Ex¥essi⁄
*, Ex¥essi⁄*> 
p
) { }

305 
	gpublic
:

306 
Hashed
(
size_t
 
s
 = 0Ë: 
ñemíts_
(
Ex¥essi⁄M≠
(s)), 
li°_
(
°d
::
ve˘‹
<
Ex¥essi⁄
*>())

307 { 
ñemíts_
.
ª£rve
(
s
); 
	gli°_
.ª£rve(s); 
ª£t_du∂iˇã_key
(); }

308 
	gvútuÆ
 ~
Hashed
();

309 
size_t
 
Àngth
(Ëc⁄° {  
	gli°_
.
size
(); }

310 
boﬁ
 
em±y
(Ëc⁄° {  
	gli°_
.empty(); }

311 
boﬁ
 
has
(
Ex¥essi⁄
* 
k
Ëc⁄° {  
	gñemíts_
.
cou¡
(k) == 1; }

312 
Ex¥essi⁄
* 
©
(Ex¥essi⁄* 
k
) const;

313 
boﬁ
 
has_du∂iˇã_key
(Ëc⁄° {  
	gdu∂iˇã_key_
 != 0; }

314 
Ex¥essi⁄
* 
gë_du∂iˇã_key
(Ëc⁄° {  
	gdu∂iˇã_key_
; }

315 c⁄° 
Ex¥essi⁄M≠
 
ñemíts
(Ë{  
	gñemíts_
; }

316 
	gHashed
& 
	g›î©‹
<<(
	g°d
::
∑ú
<
Ex¥essi⁄
*, 
	gEx¥essi⁄
*> 
	gp
)

318 
ª£t_hash
();

320 i‡(!
has
(
p
.
fú°
)Ë
	gli°_
.
push_back
(p.first);

321 i‡(!
	gdu∂iˇã_key_
Ëdu∂iˇã_key_ = 
p
.
fú°
;

323 
	gñemíts_
[
p
.
fú°
] =Ö.
£c⁄d
;

325 
adju°_a·î_pushög
(
p
);

326  *
	gthis
;

328 
	gHashed
& 
	g›î©‹
+=(
Hashed
* 
h
)

330 i‡(
Àngth
() == 0) {

331 
this
->
ñemíts_
 = 
h
->elements_;

332 
	gthis
->
	gli°_
 = 
h
->
li°_
;

333  *
	gthis
;

336 autÿ
	gkey
 : 
h
->
keys
()) {

337 *
this
 << 
°d
::
make_∑ú
(
key
, 
h
->
©
(key));

340 
ª£t_du∂iˇã_key
();

341  *
	gthis
;

343 c⁄° 
	gEx¥essi⁄M≠
& 
∑ús
(Ëc⁄° {  
	gñemíts_
; }

344 c⁄° 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*>& 
keys
(Ëc⁄° {  
li°_
; }

346 
	g°d
::
un‹dîed_m≠
<
Ex¥essi⁄
*, 
	gEx¥essi⁄
*>::
ôî©‹
 
íd
(Ë{  
ñemíts_
.end(); }

347 
	g°d
::
un‹dîed_m≠
<
Ex¥essi⁄
*, 
	gEx¥essi⁄
*>::
ôî©‹
 
begö
(Ë{  
ñemíts_
.begin(); }

348 
	g°d
::
un‹dîed_m≠
<
Ex¥essi⁄
*, 
	gEx¥essi⁄
*>::
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
ñemíts_
.end(); }

349 
	g°d
::
un‹dîed_m≠
<
Ex¥essi⁄
*, 
	gEx¥essi⁄
*>::
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
ñemíts_
.begin(); }

352 
ölöe
 
	gHashed
::~
	$Hashed
(Ë{ 
	}
}

360 ˛as†
	cSèãmít
 : 
public
 
AST_Node
 {

361 
public
:

362 
	eSèãmít_Ty≥
 {

363 
NONE
,

364 
	gRULESET
,

365 
	gMEDIA
,

366 
	gDIRECTIVE
,

367 
	gSUPPORTS
,

368 
	gATROOT
,

369 
	gBUBBLE
,

370 
	gCONTENT
,

371 
	gKEYFRAMERULE
,

372 
	gDECLARATION
,

373 
	gASSIGNMENT
,

374 
	gIMPORT_STUB
,

375 
	gIMPORT
,

376 
	gCOMMENT
,

377 
	gWARNING
,

378 
	gRETURN
,

379 
	gEXTEND
,

380 
	gERROR
,

381 
	gDEBUGSTMT
,

382 
	gWHILE
,

383 
	gEACH
,

384 
	gFOR
,

385 
	gIF


387 
	g¥iv©e
:

388 
ADD_PROPERTY
(
Block
*, 
block
)

389 
ADD_PROPERTY
(
Sèãmít_Ty≥
, 
°©emít_ty≥
)

390 
ADD_PROPERTY
(
size_t
, 
èbs
)

391 
ADD_PROPERTY
(
boﬁ
, 
group_íd
)

392 
	gpublic
:

393 
Sèãmít
(
P¨£rSèã
 
p°©e
, 
Sèãmít_Ty≥
 
°
 = 
NONE
, 
size_t
 
t
 = 0)

394 : 
AST_Node
(
p°©e
), 
°©emít_ty≥_
(
°
), 
èbs_
(
t
), 
group_íd_
(
Ál£
)

396 
	gvútuÆ
 ~
Sèãmít
() = 0;

398 
vútuÆ
 
boﬁ
 
is_hoi°abÀ
(Ë{  
	gÁl£
; }

399 
vútuÆ
 
boﬁ
 
is_övisibÀ
(Ëc⁄° {  
	gÁl£
; }

400 
vútuÆ
 
boﬁ
 
bubbÀs
(Ë{  
	gÁl£
; }

401 
vútuÆ
 
Block
* 
block
() {  0; }

402 
vútuÆ
 
boﬁ
 
has_c⁄ã¡
()

404  
	g°©emít_ty≥_
 =
CONTENT
;

407 
ölöe
 
	gSèãmít
::~
	$Sèãmít
(Ë{ 
	}
}

412 
˛ass
 
Block
 : 
public
 
Sèãmít
,Öubli¯
	gVe˘‹ized
<
	gSèãmít
*> {

413 
ADD_PROPERTY
(
boﬁ
, 
is_roŸ
)

414 
ADD_PROPERTY
(
boﬁ
, 
is_©_roŸ
);

416 
ADD_PROPERTY
(
boﬁ
, 
has_hoi°abÀ
)

417 
ADD_PROPERTY
(
boﬁ
, 
has_n⁄_hoi°abÀ
)

418 
	g¥Ÿe˘ed
:

419 
adju°_a·î_pushög
(
Sèãmít
* 
s
)

421 i‡(
s
->
is_hoi°abÀ
()Ë
has_hoi°abÀ_
 = 
åue
;

422 
	ghas_n⁄_hoi°abÀ_
 = 
åue
;

424 
	gpublic
:

425 
Block
(
P¨£rSèã
 
p°©e
, 
size_t
 
s
 = 0, 
boﬁ
 
r
 = 
Ál£
)

426 : 
Sèãmít
(
p°©e
),

427 
	gVe˘‹ized
<
	gSèãmít
*>(
	gs
),

428 
is_roŸ_
(
r
),

429 
is_©_roŸ_
(
Ál£
),

430 
has_hoi°abÀ_
(
Ál£
),

431 
has_n⁄_hoi°abÀ_
(
Ál£
)

433 
vútuÆ
 
boﬁ
 
has_c⁄ã¡
()

435 
size_t
 
	gi
 = 0, 
	gL
 = 
ñemíts
().
size
(); i < L; ++i) {

436 i‡(
ñemíts
()[
i
]->
has_c⁄ã¡
()Ë 
	gåue
;

438  
	gSèãmít
::
has_c⁄ã¡
();

440 
Block
* 
block
(Ë{  
	gthis
; }

441 
ATTACH_OPERATIONS
()

447 ˛as†
	cHas_Block
 : 
public
 
Sèãmít
 {

448 
ADD_PROPERTY
(
Block
*, 
block
)

449 
	gpublic
:

450 
Has_Block
(
P¨£rSèã
 
p°©e
, 
Block
* 
b
)

451 : 
Sèãmít
(
p°©e
), 
block_
(
b
)

453 
vútuÆ
 
boﬁ
 
has_c⁄ã¡
()

455  (
	gblock_
 && block_->
has_c⁄ã¡
()Ë|| 
	gSèãmít
::has_content();

457 
	gvútuÆ
 ~
Has_Block
() = 0;

459 
ölöe
 
	gHas_Block
::~
	$Has_Block
(Ë{ 
	}
}

465 ˛as†
	cRuÀ£t
 : 
public
 
Has_Block
 {

466 
ADD_PROPERTY
(
Sñe˘‹
*, 
£À˘‹
)

467 
ADD_PROPERTY
(
boﬁ
, 
©_roŸ
);

468 
ADD_PROPERTY
(
boﬁ
, 
is_roŸ
);

469 
	gpublic
:

470 
RuÀ£t
(
P¨£rSèã
 
p°©e
, 
Sñe˘‹
* 
s
 = 0, 
Block
* 
b
 = 0)

471 : 
Has_Block
(
p°©e
, 
b
), 
£À˘‹_
(
s
), 
©_roŸ_
(
Ál£
), 
is_roŸ_
(false)

472 { 
°©emít_ty≥
(
RULESET
); }

473 
boﬁ
 
is_övisibÀ
() const;

475 
boﬁ
 
is_hoi°abÀ
(Ë{  
	gåue
; }

476 
ATTACH_OPERATIONS
()

482 ˛as†
	cPr›£t
 : 
public
 
Has_Block
 {

483 
ADD_PROPERTY
(
Såög
*, 
¥›îty_‰agmít
)

484 
	gpublic
:

485 
Pr›£t
(
P¨£rSèã
 
p°©e
, 
Såög
* 
pf
, 
Block
* 
b
 = 0)

486 : 
Has_Block
(
p°©e
, 
b
), 
¥›îty_‰agmít_
(
pf
)

488 
ATTACH_OPERATIONS
()

494 ˛as†
	cBubbÀ
 : 
public
 
Sèãmít
 {

495 
ADD_PROPERTY
(
Sèãmít
*, 
node
)

496 
ADD_PROPERTY
(
boﬁ
, 
group_íd
)

497 
	gpublic
:

498 
BubbÀ
(
P¨£rSèã
 
p°©e
, 
Sèãmít
* 
n
, Sèãmít* 
g
 = 0, 
size_t
 
t
 = 0)

499 : 
Sèãmít
(
p°©e
, Sèãmít::
BUBBLE
, 
t
), 
node_
(
n
), 
group_íd_
(
g
 == 0)

501 
boﬁ
 
bubbÀs
(Ë{  
åue
; }

502 
ATTACH_OPERATIONS
()

508 ˛as†
	cMedü_Block
 : 
public
 
Has_Block
 {

509 
ADD_PROPERTY
(
Li°
*, 
medü_quîõs
)

510 
	gpublic
:

511 
Medü_Block
(
P¨£rSèã
 
p°©e
, 
Li°
* 
mqs
, 
Block
* 
b
)

512 : 
Has_Block
(
p°©e
, 
b
), 
medü_quîõs_
(
mqs
)

513 { 
°©emít_ty≥
(
MEDIA
); }

514 
Medü_Block
(
P¨£rSèã
 
p°©e
, 
Li°
* 
mqs
, 
Block
* 
b
, 
Sñe˘‹
* 
s
)

515 : 
Has_Block
(
p°©e
, 
b
), 
medü_quîõs_
(
mqs
)

516 { 
°©emít_ty≥
(
MEDIA
); }

517 
boﬁ
 
bubbÀs
(Ë{  
	gåue
; }

518 
boﬁ
 
is_hoi°abÀ
(Ë{  
	gåue
; }

519 
boﬁ
 
is_övisibÀ
() const;

520 
ATTACH_OPERATIONS
()

527 ˛as†
	cDúe˘ive
 : 
public
 
Has_Block
 {

528 
ADD_PROPERTY
(
°d
::
°rög
, 
keyw‹d
)

529 
ADD_PROPERTY
(
Sñe˘‹
*, 
£À˘‹
)

530 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

531 
	gpublic
:

532 
Dúe˘ive
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
kwd
, 
Sñe˘‹
* 
£l
 = 0, 
Block
* 
b
 = 0, 
Ex¥essi⁄
* 
vÆ
 = 0)

533 : 
Has_Block
(
p°©e
, 
b
), 
keyw‹d_
(
kwd
), 
£À˘‹_
(
£l
), 
vÆue_
(
vÆ
)

534 { 
°©emít_ty≥
(
DIRECTIVE
); }

535 
boﬁ
 
bubbÀs
(Ë{  
is_key‰ames
(Ë|| 
is_medü
(); }

536 
boﬁ
 
is_medü
() {

537  
	gkeyw‹d_
.
com∑ª
("@-webkit-media") == 0 ||

538 
keyw‹d_
.
com∑ª
("@-moz-media") == 0 ||

539 
keyw‹d_
.
com∑ª
("@-o-media") == 0 ||

540 
keyw‹d_
.
com∑ª
("@media") == 0;

542 
boﬁ
 
is_key‰ames
() {

543  
	gkeyw‹d_
.
com∑ª
("@-webkit-keyframes") == 0 ||

544 
keyw‹d_
.
com∑ª
("@-moz-keyframes") == 0 ||

545 
keyw‹d_
.
com∑ª
("@-o-keyframes") == 0 ||

546 
keyw‹d_
.
com∑ª
("@keyframes") == 0;

548 
ATTACH_OPERATIONS
()

554 ˛as†
	cKey‰ame_RuÀ
 : 
public
 
Has_Block
 {

555 
ADD_PROPERTY
(
Sñe˘‹
*, 
£À˘‹
)

556 
	gpublic
:

557 
Key‰ame_RuÀ
(
P¨£rSèã
 
p°©e
, 
Block
* 
b
)

558 : 
Has_Block
(
p°©e
, 
b
), 
£À˘‹_
(0)

559 { 
°©emít_ty≥
(
KEYFRAMERULE
); }

560 
ATTACH_OPERATIONS
()

566 ˛as†
	cDe˛¨©i⁄
 : 
public
 
Sèãmít
 {

567 
ADD_PROPERTY
(
Såög
*, 
¥›îty
)

568 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

569 
ADD_PROPERTY
(
boﬁ
, 
is_imp‹è¡
)

570 
ADD_PROPERTY
(
boﬁ
, 
is_ödíãd
)

571 
	gpublic
:

572 
De˛¨©i⁄
(
P¨£rSèã
 
p°©e
,

573 
Såög
* 
¥›
, 
Ex¥essi⁄
* 
vÆ
, 
boﬁ
 
i
 = 
Ál£
)

574 : 
Sèãmít
(
p°©e
), 
¥›îty_
(
¥›
), 
vÆue_
(
vÆ
), 
is_imp‹è¡_
(
i
), 
is_ödíãd_
(
Ál£
)

575 { 
°©emít_ty≥
(
DECLARATION
); }

576 
ATTACH_OPERATIONS
()

582 ˛as†
	cAssignmít
 : 
public
 
Sèãmít
 {

583 
ADD_PROPERTY
(
°d
::
°rög
, 
v¨übÀ
)

584 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

585 
ADD_PROPERTY
(
boﬁ
, 
is_deÁu…
)

586 
ADD_PROPERTY
(
boﬁ
, 
is_globÆ
)

587 
	gpublic
:

588 
Assignmít
(
P¨£rSèã
 
p°©e
,

589 
°d
::
°rög
 
v¨
, 
Ex¥essi⁄
* 
vÆ
,

590 
boﬁ
 
is_deÁu…
 = 
Ál£
,

591 
boﬁ
 
is_globÆ
 = 
Ál£
)

592 : 
Sèãmít
(
p°©e
), 
v¨übÀ_
(
v¨
), 
vÆue_
(
vÆ
), 
is_deÁu…_
(
is_deÁu…
), 
is_globÆ_
(
is_globÆ
)

593 { 
°©emít_ty≥
(
ASSIGNMENT
); }

594 
ATTACH_OPERATIONS
()

601 ˛as†
	cImp‹t
 : 
public
 
Sèãmít
 {

602 
°d
::
ve˘‹
<
Ex¥essi⁄
*> 
uæs_
;

603 
	g°d
::
ve˘‹
<
In˛ude
> 
öcs_
;

604 
ADD_PROPERTY
(
Li°
*, 
medü_quîõs
);

605 
	gpublic
:

606 
Imp‹t
(
P¨£rSèã
 
p°©e
)

607 : 
Sèãmít
(
p°©e
),

608 
uæs_
(
°d
::
ve˘‹
<
Ex¥essi⁄
*>()),

609 
öcs_
(
°d
::
ve˘‹
<
In˛ude
>()),

610 
medü_quîõs_
(0)

611 { 
°©emít_ty≥
(
IMPORT
); }

612 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*>& 
uæs
(Ë{  
uæs_
; }

613 
	g°d
::
ve˘‹
<
In˛ude
>& 
öcs
(Ë{  
öcs_
; }

614 
ATTACH_OPERATIONS
()

619 ˛as†
	cImp‹t_Stub
 : 
public
 
Sèãmít
 {

620 
In˛ude
 
ªsour˚_
;

621 
	gpublic
:

622 
°d
::
°rög
 
abs_∑th
(Ë{  
ªsour˚_
.abs_path; };

623 
	g°d
::
°rög
 
imp_∑th
(Ë{  
ªsour˚_
.imp_path; };

624 
In˛ude
 
ªsour˚
(Ë{  
	gªsour˚_
; };

626 
Imp‹t_Stub
(
P¨£rSèã
 
p°©e
, 
In˛ude
 
ªs
)

627 : 
Sèãmít
(
p°©e
), 
ªsour˚_
(
ªs
)

628 { 
°©emít_ty≥
(
IMPORT_STUB
); }

629 
ATTACH_OPERATIONS
()

635 ˛as†
	cW¨nög
 : 
public
 
Sèãmít
 {

636 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
mesßge
)

637 
	gpublic
:

638 
W¨nög
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
msg
)

639 : 
Sèãmít
(
p°©e
), 
mesßge_
(
msg
)

640 { 
°©emít_ty≥
(
WARNING
); }

641 
ATTACH_OPERATIONS
()

647 ˛as†
	cEº‹
 : 
public
 
Sèãmít
 {

648 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
mesßge
)

649 
	gpublic
:

650 
Eº‹
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
msg
)

651 : 
Sèãmít
(
p°©e
), 
mesßge_
(
msg
)

652 { 
°©emít_ty≥
(
ERROR
); }

653 
ATTACH_OPERATIONS
()

659 ˛as†
	cDebug
 : 
public
 
Sèãmít
 {

660 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

661 
	gpublic
:

662 
Debug
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
vÆ
)

663 : 
Sèãmít
(
p°©e
), 
vÆue_
(
vÆ
)

664 { 
°©emít_ty≥
(
DEBUGSTMT
); }

665 
ATTACH_OPERATIONS
()

671 ˛as†
	cCommít
 : 
public
 
Sèãmít
 {

672 
ADD_PROPERTY
(
Såög
*, 
ãxt
)

673 
ADD_PROPERTY
(
boﬁ
, 
is_imp‹è¡
)

674 
	gpublic
:

675 
Commít
(
P¨£rSèã
 
p°©e
, 
Såög
* 
txt
, 
boﬁ
 
is_imp‹è¡
)

676 : 
Sèãmít
(
p°©e
), 
ãxt_
(
txt
), 
is_imp‹è¡_
(
is_imp‹è¡
)

677 { 
°©emít_ty≥
(
COMMENT
); }

678 
vútuÆ
 
boﬁ
 
is_övisibÀ
() const

679 {  
	gÁl£
; }

680 
ATTACH_OPERATIONS
()

686 ˛as†
	cIf
 : 
public
 
Has_Block
 {

687 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
¥ediˇã
)

688 
ADD_PROPERTY
(
Block
*, 
Æã∫©ive
)

689 
	gpublic
:

690 
If
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
¥ed
, 
Block
* 
c⁄
, Block* 
Æt
 = 0)

691 : 
Has_Block
(
p°©e
, 
c⁄
), 
¥ediˇã_
(
¥ed
), 
Æã∫©ive_
(
Æt
)

692 { 
°©emít_ty≥
(
IF
); }

693 
vútuÆ
 
boﬁ
 
has_c⁄ã¡
()

695  
	gHas_Block
::
has_c⁄ã¡
(Ë|| (
Æã∫©ive_
 &&álternative_->has_content());

697 
ATTACH_OPERATIONS
()

703 ˛as†
	cF‹
 : 
public
 
Has_Block
 {

704 
ADD_PROPERTY
(
°d
::
°rög
, 
v¨übÀ
)

705 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
lowî_bound
)

706 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
uµî_bound
)

707 
ADD_PROPERTY
(
boﬁ
, 
is_ö˛usive
)

708 
	gpublic
:

709 
F‹
(
P¨£rSèã
 
p°©e
,

710 
°d
::
°rög
 
v¨
, 
Ex¥essi⁄
* 
lo
, Ex¥essi⁄* 
hi
, 
Block
* 
b
, 
boﬁ
 
öc
)

711 : 
Has_Block
(
p°©e
, 
b
),

712 
v¨übÀ_
(
v¨
), 
lowî_bound_
(
lo
), 
uµî_bound_
(
hi
), 
is_ö˛usive_
(
öc
)

713 { 
°©emít_ty≥
(
FOR
); }

714 
ATTACH_OPERATIONS
()

720 ˛as†
	cEach
 : 
public
 
Has_Block
 {

721 
ADD_PROPERTY
(
°d
::
ve˘‹
<°d::
°rög
>, 
v¨übÀs
)

722 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
li°
)

723 
	gpublic
:

724 
Each
(
P¨£rSèã
 
p°©e
, 
°d
::
ve˘‹
<°d::
°rög
> 
v¨s
, 
Ex¥essi⁄
* 
l°
, 
Block
* 
b
)

725 : 
Has_Block
(
p°©e
, 
b
), 
v¨übÀs_
(
v¨s
), 
li°_
(
l°
)

726 { 
°©emít_ty≥
(
EACH
); }

727 
ATTACH_OPERATIONS
()

733 ˛as†
	cWhûe
 : 
public
 
Has_Block
 {

734 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
¥ediˇã
)

735 
	gpublic
:

736 
Whûe
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
¥ed
, 
Block
* 
b
)

737 : 
Has_Block
(
p°©e
, 
b
), 
¥ediˇã_
(
¥ed
)

738 { 
°©emít_ty≥
(
WHILE
); }

739 
ATTACH_OPERATIONS
()

745 ˛as†
	cRëu∫
 : 
public
 
Sèãmít
 {

746 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

747 
	gpublic
:

748 
Rëu∫
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
vÆ
)

749 : 
Sèãmít
(
p°©e
), 
vÆue_
(
vÆ
)

750 { 
°©emít_ty≥
(
RETURN
); }

751 
ATTACH_OPERATIONS
()

757 ˛as†
	cExãnsi⁄
 : 
public
 
Sèãmít
 {

758 
ADD_PROPERTY
(
Sñe˘‹
*, 
£À˘‹
)

759 
	gpublic
:

760 
Exãnsi⁄
(
P¨£rSèã
 
p°©e
, 
Sñe˘‹
* 
s
)

761 : 
Sèãmít
(
p°©e
), 
£À˘‹_
(
s
)

762 { 
°©emít_ty≥
(
EXTEND
); }

763 
ATTACH_OPERATIONS
()

770 
	gBackåa˚
;

771 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

772 c⁄° * 
	tSig«tuª
;

773 
	gEx¥essi⁄
* (*
	tN©ive_Fun˘i⁄
)(
	tEnv
&, Env&, 
	tC⁄ãxt
&, 
	tSig«tuª
, 
	tP¨£rSèã
, 
	tBackåa˚
*);

774 c⁄° * 
	tSig«tuª
;

775 ˛as†
	cDeföôi⁄
 : 
public
 
Has_Block
 {

776 
public
:

777 
	eTy≥
 { 
MIXIN
, 
	gFUNCTION
 };

778 
ADD_PROPERTY
(
°d
::
°rög
, 
«me
)

779 
ADD_PROPERTY
(
P¨amëîs
*, 
∑ømëîs
)

780 
ADD_PROPERTY
(
Env
*, 
ívú⁄mít
)

781 
ADD_PROPERTY
(
Ty≥
, 
ty≥
)

782 
ADD_PROPERTY
(
N©ive_Fun˘i⁄
, 
«tive_fun˘i⁄
)

783 
ADD_PROPERTY
(
Sass_Fun˘i⁄_E¡ry
, 
c_fun˘i⁄
)

784 
ADD_PROPERTY
(*, 
cookõ
)

785 
ADD_PROPERTY
(
boﬁ
, 
is_ovîlﬂd_°ub
)

786 
ADD_PROPERTY
(
Sig«tuª
, 
sig«tuª
)

787 
	gpublic
:

788 
Deföôi⁄
(
P¨£rSèã
 
p°©e
,

789 
°d
::
°rög
 
n
,

790 
P¨amëîs
* 
∑øms
,

791 
Block
* 
b
,

792 
Ty≥
 
t
)

793 : 
Has_Block
(
p°©e
, 
b
),

794 
«me_
(
n
),

795 
∑ømëîs_
(
∑øms
),

796 
ívú⁄mít_
(0),

797 
ty≥_
(
t
),

798 
«tive_fun˘i⁄_
(0),

799 
c_fun˘i⁄_
(0),

800 
cookõ_
(0),

801 
is_ovîlﬂd_°ub_
(
Ál£
),

802 
sig«tuª_
(0)

804 
Deföôi⁄
(
P¨£rSèã
 
p°©e
,

805 
Sig«tuª
 
sig
,

806 
°d
::
°rög
 
n
,

807 
P¨amëîs
* 
∑øms
,

808 
N©ive_Fun˘i⁄
 
func_±r
,

809 
boﬁ
 
ovîlﬂd_°ub
 = 
Ál£
)

810 : 
Has_Block
(
p°©e
, 0),

811 
«me_
(
n
),

812 
∑ømëîs_
(
∑øms
),

813 
ívú⁄mít_
(0),

814 
ty≥_
(
FUNCTION
),

815 
«tive_fun˘i⁄_
(
func_±r
),

816 
c_fun˘i⁄_
(0),

817 
cookõ_
(0),

818 
is_ovîlﬂd_°ub_
(
ovîlﬂd_°ub
),

819 
sig«tuª_
(
sig
)

821 
Deföôi⁄
(
P¨£rSèã
 
p°©e
,

822 
Sig«tuª
 
sig
,

823 
°d
::
°rög
 
n
,

824 
P¨amëîs
* 
∑øms
,

825 
Sass_Fun˘i⁄_E¡ry
 
c_func
,

826 
boﬁ
 
wh©evî
,

827 
boﬁ
 
wh©evî2
)

828 : 
Has_Block
(
p°©e
, 0),

829 
«me_
(
n
),

830 
∑ømëîs_
(
∑øms
),

831 
ívú⁄mít_
(0),

832 
ty≥_
(
FUNCTION
),

833 
«tive_fun˘i⁄_
(0),

834 
c_fun˘i⁄_
(
c_func
),

835 
cookõ_
(
ßss_fun˘i⁄_gë_cookõ
(
c_func
)),

836 
is_ovîlﬂd_°ub_
(
Ál£
),

837 
sig«tuª_
(
sig
)

839 
ATTACH_OPERATIONS
()

845 ˛as†
	cMixö_CÆl
 : 
public
 
Has_Block
 {

846 
ADD_PROPERTY
(
°d
::
°rög
, 
«me
)

847 
ADD_PROPERTY
(
Argumíts
*, 
¨gumíts
)

848 
	gpublic
:

849 
Mixö_CÆl
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, 
Argumíts
* 
¨gs
, 
Block
* 
b
 = 0)

850 : 
Has_Block
(
p°©e
, 
b
), 
«me_
(
n
), 
¨gumíts_
(
¨gs
)

852 
ATTACH_OPERATIONS
()

858 ˛as†
	cC⁄ã¡
 : 
public
 
Sèãmít
 {

859 
ADD_PROPERTY
(
Medü_Block
*, 
medü_block
)

860 
	gpublic
:

861 
C⁄ã¡
(
P¨£rSèã
 
p°©e
Ë: 
Sèãmít
(pstate)

862 { 
°©emít_ty≥
(
CONTENT
); }

863 
ATTACH_OPERATIONS
()

870 
˛ass
 
	gLi°
 : 
public
 
VÆue
,Öubli¯
	gVe˘‹ized
<
	gEx¥essi⁄
*> {

871 
adju°_a·î_pushög
(
Ex¥essi⁄
* 
e
Ë{ 
is_ex∑nded
(
Ál£
); }

872 
	g¥iv©e
:

873 
ADD_PROPERTY
(
Sass_Sï¨©‹
, 
£∑øt‹
)

874 
ADD_PROPERTY
(
boﬁ
, 
is_¨gli°
)

875 
ADD_PROPERTY
(
boﬁ
, 
‰om_£À˘‹
)

876 
	gpublic
:

877 
Li°
(
P¨£rSèã
 
p°©e
,

878 
size_t
 
size
 = 0, 
Sass_Sï¨©‹
 
£p
 = 
SASS_SPACE
, 
boﬁ
 
¨gl
 = 
Ál£
)

879 : 
VÆue
(
p°©e
),

880 
	gVe˘‹ized
<
	gEx¥essi⁄
*>(
	gsize
),

881 
£∑øt‹_
(
£p
),

882 
is_¨gli°_
(
¨gl
),

883 
‰om_£À˘‹_
(
Ál£
)

884 { 
c⁄¸ëe_ty≥
(
LIST
); }

885 
	g°d
::
°rög
 
ty≥
(Ë{  
is_¨gli°_
 ? "arglist" : "list"; }

886 
	g°d
::
°rög
 
ty≥_«me
() {  "list"; }

887 c⁄° * 
£p_°rög
(
boﬁ
 
com¥es£d
 = 
Ál£
) const {

888  
£∑øt‹
(Ë=
SASS_SPACE
 ?

889 " " : (
com¥es£d
 ? "," : ", ");

891 
boﬁ
 
is_övisibÀ
(Ëc⁄° {  
em±y
(); }

892 
Ex¥essi⁄
* 
vÆue_©_ödex
(
size_t
 
i
);

894 
vútuÆ
 
size_t
 
size
() const;

896 
vútuÆ
 
size_t
 
hash
()

898 i‡(
	ghash_
 == 0) {

899 
hash_
 = 
°d
::
hash
<°d::
°rög
>()(
£p_°rög
());

900 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

901 
hash_comböe
(
hash_
, (
ñemíts
()[
i
])->
hash
());

903  
	ghash_
;

906 
vútuÆ
 
£t_dñayed
(
boﬁ
 
dñayed
)

908 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

909 (
ñemíts
()[
i
])->
£t_dñayed
(
dñayed
);

910 
is_dñayed
(
dñayed
);

913 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

915 
ATTACH_OPERATIONS
()

921 
˛ass
 
	gM≠
 : 
public
 
VÆue
,Öubli¯
	gHashed
 {

922 
adju°_a·î_pushög
(
°d
::
∑ú
<
Ex¥essi⁄
*, Ex¥essi⁄*> 
p
Ë{ 
is_ex∑nded
(
Ál£
); }

923 
	gpublic
:

924 
M≠
(
P¨£rSèã
 
p°©e
,

925 
size_t
 
size
 = 0)

926 : 
VÆue
(
p°©e
),

927 
Hashed
(
size
)

928 { 
c⁄¸ëe_ty≥
(
MAP
); }

929 
	g°d
::
°rög
 
ty≥
() {  "map"; }

930 
	g°d
::
°rög
 
ty≥_«me
() {  "map"; }

931 
boﬁ
 
is_övisibÀ
(Ëc⁄° {  
em±y
(); }

933 
vútuÆ
 
size_t
 
hash
()

935 i‡(
	ghash_
 == 0) {

936 autÿ
key
 : 
keys
()) {

937 
hash_comböe
(
hash_
, 
key
->
hash
());

938 
hash_comböe
(
hash_
, 
©
(
key
)->
hash
());

942  
	ghash_
;

945 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

947 
ATTACH_OPERATIONS
()

950 
ölöe
 c⁄° 
	g°d
::
°rög
 
	$ßss_›_to_«me
(
Sass_OP
 
›
) {

951 
›
) {

952 
AND
:  "and"; ;

953 
OR
:  "or"; ;

954 
EQ
:  "eq"; ;

955 
NEQ
:  "neq"; ;

956 
GT
:  "gt"; ;

957 
GTE
:  "gte"; ;

958 
LT
:  "lt"; ;

959 
LTE
:  "lte"; ;

960 
ADD
:  "plus"; ;

961 
SUB
:  "sub"; ;

962 
MUL
:  "times"; ;

963 
DIV
:  "div"; ;

964 
MOD
:  "mod"; ;

966 
NUM_OPS
:  "[OPS]"; ;

969 
	}
}

976 ˛as†
	cBö¨y_Ex¥essi⁄
 : 
public
 
PªVÆue
 {

977 
¥iv©e
:

978 
ADD_HASHED
(
O≥ønd
, 
›
)

979 
ADD_HASHED
(
Ex¥essi⁄
*, 
À·
)

980 
ADD_HASHED
(
Ex¥essi⁄
*, 
right
)

981 
size_t
 
	ghash_
;

982 
	gpublic
:

983 
Bö¨y_Ex¥essi⁄
(
P¨£rSèã
 
p°©e
,

984 
O≥ønd
 
›
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
)

985 : 
PªVÆue
(
p°©e
), 
›_
(
›
), 
À·_
(
lhs
), 
right_
(
rhs
), 
hash_
(0)

987 c⁄° 
	g°d
::
°rög
 
ty≥_«me
() {

988 
ty≥
()) {

989 
AND
:  "and"; ;

990 
	gOR
:  "or"; ;

991 
	gEQ
:  "eq"; ;

992 
	gNEQ
:  "neq"; ;

993 
	gGT
:  "gt"; ;

994 
	gGTE
:  "gte"; ;

995 
	gLT
:  "lt"; ;

996 
	gLTE
:  "lte"; ;

997 
	gADD
:  "add"; ;

998 
	gSUB
:  "sub"; ;

999 
	gMUL
:  "mul"; ;

1000 
	gDIV
:  "div"; ;

1001 
	gMOD
:  "mod"; ;

1003 
	gNUM_OPS
:  "[OPS]"; ;

1007 c⁄° 
	g°d
::
°rög
 
£∑øt‹
() {

1008 
ty≥
()) {

1009 
AND
:  "&&"; ;

1010 
	gOR
:  "||"; ;

1011 
	gEQ
:  "=="; ;

1012 
	gNEQ
:  "!="; ;

1013 
	gGT
:  ">"; ;

1014 
	gGTE
:  ">="; ;

1015 
	gLT
:  "<"; ;

1016 
	gLTE
:  "<="; ;

1017 
	gADD
:  "+"; ;

1018 
	gSUB
:  "-"; ;

1019 
	gMUL
:  "*"; ;

1020 
	gDIV
:  "/"; ;

1021 
	gMOD
:  "%"; ;

1023 
	gNUM_OPS
:  "[OPS]"; ;

1027 
boﬁ
 
is_À·_öãΩﬁ™t
() const;

1028 
boﬁ
 
is_right_öãΩﬁ™t
() const;

1029 
boﬁ
 
has_öãΩﬁ™t
() const

1031  
is_À·_öãΩﬁ™t
() ||

1032 
is_right_öãΩﬁ™t
();

1034 
vútuÆ
 
boﬁ
 
ˇn_dñay
() const;

1035 
ª£t_whôe•a˚
()

1037 
	g›_
.
	gws_bef‹e
 = 
Ál£
;

1038 
	g›_
.
	gws_a·î
 = 
Ál£
;

1040 
vútuÆ
 
£t_dñayed
(
boﬁ
 
dñayed
)

1042 
right
()->
£t_dñayed
(
dñayed
);

1043 
À·
()->
£t_dñayed
(
dñayed
);

1044 
is_dñayed
(
dñayed
);

1046 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1048 
åy


1050 c⁄° 
Bö¨y_Ex¥essi⁄
* 
m
 = 
dy«mic_ˇ°
<c⁄° Bö¨y_Ex¥essi⁄*>(&
rhs
);

1051 i‡(
	gm
 =0Ë 
Ál£
;

1052  
ty≥
(Ë=
m
->type() &&

1053 
À·
(Ë=
m
->left() &&

1054 
right
(Ë=
m
->right();

1056 
ˇtch
 (
°d
::
bad_ˇ°
&)

1058  
Ál£
;

1060 
ˇtch
 (...Ë{ 
	gthrow
; }

1062 
vútuÆ
 
size_t
 
hash
()

1064 i‡(
	ghash_
 == 0) {

1065 
hash_
 = 
°d
::
hash
<
size_t
>()(
ty≥
());

1066 
hash_comböe
(
hash_
, 
À·
()->
hash
());

1067 
hash_comböe
(
hash_
, 
right
()->
hash
());

1069  
	ghash_
;

1071 
Sass_OP
 
ty≥
(Ëc⁄° {  
	g›_
.
	g›î™d
; }

1072 
ATTACH_OPERATIONS
()

1078 ˛as†
	cU«ry_Ex¥essi⁄
 : 
public
 
Ex¥essi⁄
 {

1079 
public
:

1080 
	eTy≥
 { 
PLUS
, 
	gMINUS
, 
	gNOT
 };

1081 
	g¥iv©e
:

1082 
ADD_HASHED
(
Ty≥
, 
ty≥
)

1083 
ADD_HASHED
(
Ex¥essi⁄
*, 
›î™d
)

1084 
size_t
 
	ghash_
;

1085 
	gpublic
:

1086 
U«ry_Ex¥essi⁄
(
P¨£rSèã
 
p°©e
, 
Ty≥
 
t
, 
Ex¥essi⁄
* 
o
)

1087 : 
Ex¥essi⁄
(
p°©e
), 
ty≥_
(
t
), 
›î™d_
(
o
), 
hash_
(0)

1089 c⁄° 
	g°d
::
°rög
 
ty≥_«me
() {

1090 
ty≥_
) {

1091 
PLUS
:  "plus"; ;

1092 
	gMINUS
:  "minus"; ;

1093 
	gNOT
:  "not"; ;

1097 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1099 
åy


1101 c⁄° 
U«ry_Ex¥essi⁄
* 
m
 = 
dy«mic_ˇ°
<c⁄° U«ry_Ex¥essi⁄*>(&
rhs
);

1102 i‡(
	gm
 =0Ë 
Ál£
;

1103  
ty≥
(Ë=
m
->type() &&

1104 
›î™d
(Ë=
m
->operand();

1106 
ˇtch
 (
°d
::
bad_ˇ°
&)

1108  
Ál£
;

1110 
ˇtch
 (...Ë{ 
	gthrow
; }

1112 
vútuÆ
 
size_t
 
hash
()

1114 i‡(
	ghash_
 == 0) {

1115 
hash_
 = 
°d
::
hash
<
size_t
>()(
ty≥_
);

1116 
hash_comböe
(
hash_
, 
›î™d
()->
hash
());

1118  
	ghash_
;

1120 
ATTACH_OPERATIONS
()

1126 ˛as†
	cArgumít
 : 
public
 
Ex¥essi⁄
 {

1127 
ADD_HASHED
(
Ex¥essi⁄
*, 
vÆue
)

1128 
ADD_HASHED
(
°d
::
°rög
, 
«me
)

1129 
ADD_PROPERTY
(
boﬁ
, 
is_ª°_¨gumít
)

1130 
ADD_PROPERTY
(
boﬁ
, 
is_keyw‹d_¨gumít
)

1131 
size_t
 
	ghash_
;

1132 
	gpublic
:

1133 
Argumít
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
vÆ
, 
°d
::
°rög
 
n
 = "", 
boﬁ
 
ª°
 = 
Ál£
, boﬁ 
keyw‹d
 = false)

1134 : 
Ex¥essi⁄
(
p°©e
), 
vÆue_
(
vÆ
), 
«me_
(
n
), 
is_ª°_¨gumít_
(
ª°
), 
is_keyw‹d_¨gumít_
(
keyw‹d
), 
hash_
(0)

1136 i‡(!
	g«me_
.
em±y
(Ë&& 
	gis_ª°_¨gumít_
) {

1137 
îr‹
("v¨übÀ-ÀngthárgumíàmayÇŸ bê∑s£d byÇame", 
p°©e
);

1141 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1143 
åy


1145 c⁄° 
Argumít
* 
m
 = 
dy«mic_ˇ°
<c⁄° Argumít*>(&
rhs
);

1146 i‡(!(
	gm
 && 
«me
(Ë=
m
->«me())Ë 
Ál£
;

1147  *
vÆue
(Ë=*
m
->value();

1149 
ˇtch
 (
°d
::
bad_ˇ°
&)

1151  
Ál£
;

1153 
ˇtch
 (...Ë{ 
	gthrow
; }

1156 
vútuÆ
 
size_t
 
hash
()

1158 i‡(
	ghash_
 == 0) {

1159 
hash_
 = 
°d
::
hash
<°d::
°rög
>()(
«me
());

1160 
hash_comböe
(
hash_
, 
vÆue
()->
hash
());

1162  
	ghash_
;

1165 
ATTACH_OPERATIONS
()

1173 
˛ass
 
	gArgumíts
 : 
public
 
Ex¥essi⁄
,Öubli¯
	gVe˘‹ized
<
	gArgumít
*> {

1174 
ADD_PROPERTY
(
boﬁ
, 
has_«med_¨gumíts
)

1175 
ADD_PROPERTY
(
boﬁ
, 
has_ª°_¨gumít
)

1176 
ADD_PROPERTY
(
boﬁ
, 
has_keyw‹d_¨gumít
)

1177 
	g¥Ÿe˘ed
:

1178 
adju°_a·î_pushög
(
Argumít
* 
a
);

1179 
	gpublic
:

1180 
Argumíts
(
P¨£rSèã
 
p°©e
)

1181 : 
Ex¥essi⁄
(
p°©e
),

1182 
	gVe˘‹ized
<
	gArgumít
*>(),

1183 
has_«med_¨gumíts_
(
Ál£
),

1184 
has_ª°_¨gumít_
(
Ál£
),

1185 
has_keyw‹d_¨gumít_
(
Ál£
)

1188 
Argumít
* 
gë_ª°_¨gumít
();

1189 
Argumít
* 
gë_keyw‹d_¨gumít
();

1191 
ATTACH_OPERATIONS
()

1197 ˛as†
	cFun˘i⁄_CÆl
 : 
public
 
PªVÆue
 {

1198 
ADD_HASHED
(
°d
::
°rög
, 
«me
)

1199 
ADD_HASHED
(
Argumíts
*, 
¨gumíts
)

1200 
ADD_PROPERTY
(*, 
cookõ
)

1201 
size_t
 
	ghash_
;

1202 
	gpublic
:

1203 
Fun˘i⁄_CÆl
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, 
Argumíts
* 
¨gs
, * 
cookõ
)

1204 : 
PªVÆue
(
p°©e
), 
«me_
(
n
), 
¨gumíts_
(
¨gs
), 
cookõ_
(
cookõ
), 
hash_
(0)

1205 { 
c⁄¸ëe_ty≥
(
STRING
); }

1206 
Fun˘i⁄_CÆl
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, 
Argumíts
* 
¨gs
)

1207 : 
PªVÆue
(
p°©e
), 
«me_
(
n
), 
¨gumíts_
(
¨gs
), 
cookõ_
(0), 
hash_
(0)

1208 { 
c⁄¸ëe_ty≥
(
STRING
); }

1210 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1212 
åy


1214 c⁄° 
Fun˘i⁄_CÆl
* 
m
 = 
dy«mic_ˇ°
<c⁄° Fun˘i⁄_CÆl*>(&
rhs
);

1215 i‡(!(
	gm
 && 
«me
(Ë=
m
->«me())Ë 
Ál£
;

1216 i‡(!(
	gm
 && 
¨gumíts
()->
Àngth
(Ë=
m
->¨gumíts()->Àngth())Ë 
Ál£
;

1217 
size_t
 
	gi
 =0, 
	gL
 = 
¨gumíts
()->
Àngth
(); i < L; ++i)

1218 i‡(!((*
¨gumíts
())[
i
] =(*
m
->¨gumíts())[i])Ë 
Ál£
;

1219  
	gåue
;

1221 
ˇtch
 (
°d
::
bad_ˇ°
&)

1223  
Ál£
;

1225 
ˇtch
 (...Ë{ 
	gthrow
; }

1228 
vútuÆ
 
size_t
 
hash
()

1230 i‡(
	ghash_
 == 0) {

1231 
hash_
 = 
°d
::
hash
<°d::
°rög
>()(
«me
());

1232 autÿ
	g¨gumít
 : 
¨gumíts
()->
ñemíts
())

1233 
hash_comböe
(
hash_
, 
¨gumít
->
hash
());

1235  
	ghash_
;

1238 
ATTACH_OPERATIONS
()

1244 ˛as†
	cFun˘i⁄_CÆl_Schema
 : 
public
 
Ex¥essi⁄
 {

1245 
ADD_PROPERTY
(
Såög
*, 
«me
)

1246 
ADD_PROPERTY
(
Argumíts
*, 
¨gumíts
)

1247 
	gpublic
:

1248 
Fun˘i⁄_CÆl_Schema
(
P¨£rSèã
 
p°©e
, 
Såög
* 
n
, 
Argumíts
* 
¨gs
)

1249 : 
Ex¥essi⁄
(
p°©e
), 
«me_
(
n
), 
¨gumíts_
(
¨gs
)

1250 { 
c⁄¸ëe_ty≥
(
STRING
); }

1251 
ATTACH_OPERATIONS
()

1257 ˛as†
	cV¨übÀ
 : 
public
 
PªVÆue
 {

1258 
ADD_PROPERTY
(
°d
::
°rög
, 
«me
)

1259 
	gpublic
:

1260 
V¨übÀ
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
)

1261 : 
PªVÆue
(
p°©e
), 
«me_
(
n
)

1264 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1266 
åy


1268 c⁄° 
V¨übÀ
* 
e
 = 
dy«mic_ˇ°
<c⁄° V¨übÀ*>(&
rhs
);

1269  
	ge
 && 
«me
(Ë=
e
->name();

1271 
ˇtch
 (
°d
::
bad_ˇ°
&)

1273  
Ál£
;

1275 
ˇtch
 (...Ë{ 
	gthrow
; }

1278 
vútuÆ
 
size_t
 
hash
()

1280  
	g°d
::
hash
<
°d
::
°rög
>()(
«me
());

1283 
ATTACH_OPERATIONS
()

1290 ˛as†
	cTextuÆ
 : 
public
 
Ex¥essi⁄
 {

1291 
public
:

1292 
	eTy≥
 { 
NUMBER
, 
	gPERCENTAGE
, 
	gDIMENSION
, 
	gHEX
 };

1293 
	g¥iv©e
:

1294 
ADD_HASHED
(
Ty≥
, 
ty≥
)

1295 
ADD_HASHED
(
°d
::
°rög
, 
vÆue
)

1296 
size_t
 
	ghash_
;

1297 
	gpublic
:

1298 
TextuÆ
(
P¨£rSèã
 
p°©e
, 
Ty≥
 
t
, 
°d
::
°rög
 
vÆ
)

1299 : 
Ex¥essi⁄
(
p°©e
, 
åue
), 
ty≥_
(
t
), 
vÆue_
(
vÆ
),

1300 
hash_
(0)

1303 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const

1305 
åy


1307 c⁄° 
TextuÆ
* 
e
 = 
dy«mic_ˇ°
<c⁄° TextuÆ*>(&
rhs
);

1308  
	ge
 && 
vÆue
(Ë=
e
->vÆue(Ë&& 
ty≥
() ==É->type();

1310 
ˇtch
 (
°d
::
bad_ˇ°
&)

1312  
Ál£
;

1314 
ˇtch
 (...Ë{ 
	gthrow
; }

1317 
vútuÆ
 
size_t
 
hash
()

1319 i‡(
	ghash_
 == 0) {

1320 
hash_
 = 
°d
::
hash
<°d::
°rög
>()(
vÆue_
);

1321 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
ty≥_
));

1323  
	ghash_
;

1326 
ATTACH_OPERATIONS
()

1332 ˛as†
	cNumbî
 : 
public
 
VÆue
 {

1333 
ADD_HASHED
(, 
vÆue
)

1334 
ADD_PROPERTY
(
boﬁ
, 
zîo
)

1335 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
numî©‹_unôs_
;

1336 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
díomö©‹_unôs_
;

1337 
size_t
 
	ghash_
;

1338 
	gpublic
:

1339 
Numbî
(
P¨£rSèã
 
p°©e
, 
vÆ
, 
°d
::
°rög
 
u
 = "", 
boﬁ
 
zîo
 = 
åue
);

1340 
boﬁ
 
zîo
(Ë{  
	gzîo_
; }

1341 
boﬁ
 
is_vÆid_css_unô
() const;

1342 
	g°d
::
ve˘‹
<
°d
::
°rög
>& 
numî©‹_unôs
(Ë{  
numî©‹_unôs_
; }

1343 
	g°d
::
ve˘‹
<
°d
::
°rög
>& 
díomö©‹_unôs
(Ë{  
díomö©‹_unôs_
; }

1344 c⁄° 
	g°d
::
ve˘‹
<
°d
::
°rög
>& 
numî©‹_unôs
(Ëc⁄° {  
numî©‹_unôs_
; }

1345 c⁄° 
	g°d
::
ve˘‹
<
°d
::
°rög
>& 
díomö©‹_unôs
(Ëc⁄° {  
díomö©‹_unôs_
; }

1346 
	g°d
::
°rög
 
ty≥
() {  "number"; }

1347 
	g°d
::
°rög
 
ty≥_«me
() {  "number"; }

1348 
	g°d
::
°rög
 
unô
() const;

1350 
boﬁ
 
is_unôÀss
() const;

1351 
c⁄vît_Á˘‹
(c⁄° 
Numbî
&) const;

1352 
boﬁ
 
c⁄vît
(c⁄° 
°d
::
°rög
& 
unô
 = "", boﬁ 
°ri˘
 = 
Ál£
);

1353 
n‹mÆize
(c⁄° 
°d
::
°rög
& 
unô
 = "", 
boﬁ
 
°ri˘
 = 
Ál£
);

1355 
	g°d
::
°rög
 
föd_c⁄vîtibÀ_unô
() const;

1357 
vútuÆ
 
size_t
 
hash
()

1359 i‡(
	ghash_
 == 0) {

1360 
hash_
 = 
°d
::
hash
<>()(
vÆue_
);

1361 c⁄°áutÿ
	gnumî©‹
 : 
numî©‹_unôs
())

1362 
hash_comböe
(
hash_
, 
°d
::
hash
<°d::
°rög
>()(
numî©‹
));

1363 c⁄°áutÿ
	gdíomö©‹
 : 
díomö©‹_unôs
())

1364 
hash_comböe
(
hash_
, 
°d
::
hash
<°d::
°rög
>()(
díomö©‹
));

1366  
	ghash_
;

1369 
vútuÆ
 
boﬁ
 
	g›î©‹
< (c⁄° 
	gNumbî
& 
	grhs
) const;

1370 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1372 
ATTACH_OPERATIONS
()

1378 ˛as†
	cCﬁ‹
 : 
public
 
VÆue
 {

1379 
ADD_HASHED
(, 
r
)

1380 
ADD_HASHED
(, 
g
)

1381 
ADD_HASHED
(, 
b
)

1382 
ADD_HASHED
(, 
a
)

1383 
ADD_PROPERTY
(
°d
::
°rög
, 
di•
)

1384 
size_t
 
	ghash_
;

1385 
	gpublic
:

1386 
Cﬁ‹
(
P¨£rSèã
 
p°©e
, 
r
, 
g
, 
b
, 
a
 = 1, c⁄° 
°d
::
°rög
 
di•
 = "")

1387 : 
VÆue
(
p°©e
), 
r_
(
r
), 
g_
(
g
), 
b_
(
b
), 
a_
(
a
), 
di•_
(
di•
),

1388 
hash_
(0)

1389 { 
c⁄¸ëe_ty≥
(
COLOR
); }

1390 
	g°d
::
°rög
 
ty≥
() {  "color"; }

1391 
	g°d
::
°rög
 
ty≥_«me
() {  "color"; }

1393 
vútuÆ
 
size_t
 
hash
()

1395 i‡(
	ghash_
 == 0) {

1396 
hash_
 = 
°d
::
hash
<>()(
a_
);

1397 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
r_
));

1398 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
g_
));

1399 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
b_
));

1401  
	ghash_
;

1404 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1406 
ATTACH_OPERATIONS
()

1412 ˛as†
	cCu°om_Eº‹
 : 
public
 
VÆue
 {

1413 
ADD_PROPERTY
(
°d
::
°rög
, 
mesßge
)

1414 
	gpublic
:

1415 
Cu°om_Eº‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
)

1416 : 
VÆue
(
p°©e
), 
mesßge_
(
msg
)

1417 { 
c⁄¸ëe_ty≥
(
C_ERROR
); }

1418 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1419 
ATTACH_OPERATIONS
()

1425 ˛as†
	cCu°om_W¨nög
 : 
public
 
VÆue
 {

1426 
ADD_PROPERTY
(
°d
::
°rög
, 
mesßge
)

1427 
	gpublic
:

1428 
Cu°om_W¨nög
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
)

1429 : 
VÆue
(
p°©e
), 
mesßge_
(
msg
)

1430 { 
c⁄¸ëe_ty≥
(
C_WARNING
); }

1431 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1432 
ATTACH_OPERATIONS
()

1438 ˛as†
	cBoﬁón
 : 
public
 
VÆue
 {

1439 
ADD_HASHED
(
boﬁ
, 
vÆue
)

1440 
size_t
 
	ghash_
;

1441 
	gpublic
:

1442 
Boﬁón
(
P¨£rSèã
 
p°©e
, 
boﬁ
 
vÆ
)

1443 : 
VÆue
(
p°©e
), 
vÆue_
(
vÆ
),

1444 
hash_
(0)

1445 { 
c⁄¸ëe_ty≥
(
BOOLEAN
); }

1446 
vútuÆ
 
›î©‹
 
boﬁ
(Ë{  
	gvÆue_
; }

1447 
	g°d
::
°rög
 
ty≥
() {  "bool"; }

1448 
	g°d
::
°rög
 
ty≥_«me
() {  "bool"; }

1449 
vútuÆ
 
boﬁ
 
is_Ál£
(Ë{  !
	gvÆue_
; }

1451 
vútuÆ
 
size_t
 
hash
()

1453 i‡(
	ghash_
 == 0) {

1454 
hash_
 = 
°d
::
hash
<
boﬁ
>()(
vÆue_
);

1456  
	ghash_
;

1459 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1461 
ATTACH_OPERATIONS
()

1468 ˛as†
	cSåög
 : 
public
 
VÆue
 {

1469 
ADD_PROPERTY
(
boﬁ
, 
ßss_fix_1291
)

1470 
	gpublic
:

1471 
Såög
(
P¨£rSèã
 
p°©e
, 
boﬁ
 
dñayed
 = 
Ál£
, boﬁ 
ßss_fix_1291
 = false)

1472 : 
VÆue
(
p°©e
, 
dñayed
), 
ßss_fix_1291_
(
ßss_fix_1291
)

1473 { 
c⁄¸ëe_ty≥
(
STRING
); }

1474 
	g°d
::
°rög
 
ty≥_«me
() {  "string"; }

1475 
	gvútuÆ
 ~
Såög
() = 0;

1476 
vútuÆ
 
πrim
() = 0;

1477 
vútuÆ
 
…rim
() = 0;

1478 
vútuÆ
 
åim
() = 0;

1479 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const = 0;

1480 
ATTACH_OPERATIONS
()

1482 
ölöe
 
	gSåög
::~
	$Såög
(Ë{ 
	}
};

1488 
˛ass
 
	gSåög_Schema
 : 
public
 
Såög
,Öubli¯
	gVe˘‹ized
<
	gEx¥essi⁄
*> {

1490 
size_t
 
	ghash_
;

1491 
	gpublic
:

1492 
Såög_Schema
(
P¨£rSèã
 
p°©e
, 
size_t
 
size
 = 0, 
boﬁ
 
has_öãΩﬁ™ts
 = 
Ál£
)

1493 : 
Såög
(
p°©e
), 
	gVe˘‹ized
<
	gEx¥essi⁄
*>(
	gsize
), 
hash_
(0)

1494 { 
c⁄¸ëe_ty≥
(
STRING
); }

1495 
	g°d
::
°rög
 
ty≥
() {  "string"; }

1496 
	g°d
::
°rög
 
ty≥_«me
() {  "string"; }

1498 
boﬁ
 
is_À·_öãΩﬁ™t
() const;

1499 
boﬁ
 
is_right_öãΩﬁ™t
() const;

1501 
boﬁ
 
has_öãΩﬁ™ts
() {

1502 autÿ
	gñ
 : 
ñemíts
()) {

1503 i‡(
ñ
->
is_öãΩﬁ™t
()Ë 
åue
;

1505  
	gÁl£
;

1507 
vútuÆ
 
πrim
();

1508 
vútuÆ
 
…rim
();

1509 
vútuÆ
 
åim
();

1511 
vútuÆ
 
size_t
 
hash
()

1513 i‡(
	ghash_
 == 0) {

1514 autÿ
°rög
 : 
ñemíts
())

1515 
hash_comböe
(
hash_
, 
°rög
->
hash
());

1517  
	ghash_
;

1520 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1522 
ATTACH_OPERATIONS
()

1528 ˛as†
	cSåög_C⁄°™t
 : 
public
 
Såög
 {

1529 
ADD_PROPERTY
(, 
quŸe_m¨k
)

1530 
ADD_PROPERTY
(
boﬁ
, 
ˇn_com¥ess_whôe•a˚
)

1531 
ADD_HASHED
(
°d
::
°rög
, 
vÆue
)

1532 
	g¥Ÿe˘ed
:

1533 
size_t
 
hash_
;

1534 
	gpublic
:

1535 
Såög_C⁄°™t
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
vÆ
)

1536 : 
Såög
(
p°©e
), 
quŸe_m¨k_
(0), 
ˇn_com¥ess_whôe•a˚_
(
Ál£
), 
vÆue_
(
ªad_css_°rög
(
vÆ
)), 
hash_
(0)

1538 
Såög_C⁄°™t
(
P¨£rSèã
 
p°©e
, c⁄° * 
beg
)

1539 : 
Såög
(
p°©e
), 
quŸe_m¨k_
(0), 
ˇn_com¥ess_whôe•a˚_
(
Ál£
), 
vÆue_
(
ªad_css_°rög
(
°d
::
°rög
(
beg
))), 
hash_
(0)

1541 
Såög_C⁄°™t
(
P¨£rSèã
 
p°©e
, c⁄° * 
beg
, c⁄° * 
íd
)

1542 : 
Såög
(
p°©e
), 
quŸe_m¨k_
(0), 
ˇn_com¥ess_whôe•a˚_
(
Ál£
), 
vÆue_
(
ªad_css_°rög
(
°d
::
°rög
(
beg
, 
íd
-beg))), 
hash_
(0)

1544 
Såög_C⁄°™t
(
P¨£rSèã
 
p°©e
, c⁄° 
Tokí
& 
tok
)

1545 : 
Såög
(
p°©e
), 
quŸe_m¨k_
(0), 
ˇn_com¥ess_whôe•a˚_
(
Ál£
), 
vÆue_
(
ªad_css_°rög
(
°d
::
°rög
(
tok
.
begö
,Åok.
íd
))), 
hash_
(0)

1547 
	g°d
::
°rög
 
ty≥
() {  "string"; }

1548 
	g°d
::
°rög
 
ty≥_«me
() {  "string"; }

1549 
vútuÆ
 
boﬁ
 
is_övisibÀ
() const;

1550 
vútuÆ
 
πrim
();

1551 
vútuÆ
 
…rim
();

1552 
vútuÆ
 
åim
();

1554 
vútuÆ
 
size_t
 
hash
()

1556 i‡(
	ghash_
 == 0) {

1557 
hash_
 = 
°d
::
hash
<°d::
°rög
>()(
vÆue_
);

1559  
	ghash_
;

1562 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1563 
vútuÆ
 
	g°d
::
°rög
 
ö•e˘
() const;

1566 
doubÀ_quŸe
() {  '"'; }

1567 
sögÀ_quŸe
() {  '\''; }

1569 
ATTACH_OPERATIONS
()

1575 ˛as†
	cSåög_QuŸed
 : 
public
 
Såög_C⁄°™t
 {

1576 
public
:

1577 
Såög_QuŸed
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
vÆ
, 
q
 = 0, 
boﬁ
 
kìp_utf8_esˇ≥s
 = 
Ál£
)

1578 : 
Såög_C⁄°™t
(
p°©e
, 
vÆ
)

1580 
	gvÆue_
 = 
unquŸe
(
vÆue_
, &
quŸe_m¨k_
, 
kìp_utf8_esˇ≥s
);

1581 i‡(
	gq
 && 
	gquŸe_m¨k_
ËquŸe_m¨k_ = 
q
;

1583 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1584 
vútuÆ
 
	g°d
::
°rög
 
ö•e˘
() const;

1585 
ATTACH_OPERATIONS
()

1591 
˛ass
 
	gMedü_Quîy
 : 
public
 
Ex¥essi⁄
,

1592 
public
 
	gVe˘‹ized
<
	gMedü_Quîy_Ex¥essi⁄
*> {

1593 
ADD_PROPERTY
(
Såög
*, 
medü_ty≥
)

1594 
ADD_PROPERTY
(
boﬁ
, 
is_√g©ed
)

1595 
ADD_PROPERTY
(
boﬁ
, 
is_ª°ri˘ed
)

1596 
	gpublic
:

1597 
Medü_Quîy
(
P¨£rSèã
 
p°©e
,

1598 
Såög
* 
t
 = 0, 
size_t
 
s
 = 0, 
boﬁ
 
n
 = 
Ál£
, boﬁ 
r
 = false)

1599 : 
Ex¥essi⁄
(
p°©e
), 
	gVe˘‹ized
<
	gMedü_Quîy_Ex¥essi⁄
*>(
	gs
),

1600 
medü_ty≥_
(
t
), 
is_√g©ed_
(
n
), 
is_ª°ri˘ed_
(
r
)

1602 
ATTACH_OPERATIONS
()

1608 ˛as†
	cMedü_Quîy_Ex¥essi⁄
 : 
public
 
Ex¥essi⁄
 {

1609 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
„©uª
)

1610 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

1611 
ADD_PROPERTY
(
boﬁ
, 
is_öãΩﬁ©ed
)

1612 
	gpublic
:

1613 
Medü_Quîy_Ex¥essi⁄
(
P¨£rSèã
 
p°©e
,

1614 
Ex¥essi⁄
* 
f
, Ex¥essi⁄* 
v
, 
boﬁ
 
i
 = 
Ál£
)

1615 : 
Ex¥essi⁄
(
p°©e
), 
„©uª_
(
f
), 
vÆue_
(
v
), 
is_öãΩﬁ©ed_
(
i
)

1617 
ATTACH_OPERATIONS
()

1623 ˛as†
	cSuµ‹ts_Block
 : 
public
 
Has_Block
 {

1624 
ADD_PROPERTY
(
Suµ‹ts_C⁄dôi⁄
*, 
c⁄dôi⁄
)

1625 
	gpublic
:

1626 
Suµ‹ts_Block
(
P¨£rSèã
 
p°©e
, 
Suµ‹ts_C⁄dôi⁄
* 
c⁄dôi⁄
, 
Block
* 
block
 = 0)

1627 : 
Has_Block
(
p°©e
, 
block
), 
c⁄dôi⁄_
(
c⁄dôi⁄
)

1628 { 
°©emít_ty≥
(
SUPPORTS
); }

1629 
boﬁ
 
is_hoi°abÀ
(Ë{  
	gåue
; }

1630 
boﬁ
 
bubbÀs
(Ë{  
	gåue
; }

1631 
ATTACH_OPERATIONS
()

1637 ˛as†
	cSuµ‹ts_C⁄dôi⁄
 : 
public
 
Ex¥essi⁄
 {

1638 
public
:

1639 
Suµ‹ts_C⁄dôi⁄
(
P¨£rSèã
 
p°©e
)

1640 : 
Ex¥essi⁄
(
p°©e
)

1642 
vútuÆ
 
boﬁ
 
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
Ëc⁄° {  
Ál£
; }

1643 
ATTACH_OPERATIONS
()

1649 ˛as†
	cSuµ‹ts_O≥øt‹
 : 
public
 
Suµ‹ts_C⁄dôi⁄
 {

1650 
public
:

1651 
	eO≥ønd
 { 
AND
, 
	gOR
 };

1652 
	g¥iv©e
:

1653 
ADD_PROPERTY
(
Suµ‹ts_C⁄dôi⁄
*, 
À·
);

1654 
ADD_PROPERTY
(
Suµ‹ts_C⁄dôi⁄
*, 
right
);

1655 
ADD_PROPERTY
(
O≥ønd
, 
›î™d
);

1656 
	gpublic
:

1657 
Suµ‹ts_O≥øt‹
(
P¨£rSèã
 
p°©e
, 
Suµ‹ts_C⁄dôi⁄
* 
l
, Suµ‹ts_C⁄dôi⁄* 
r
, 
O≥ønd
 
o
)

1658 : 
Suµ‹ts_C⁄dôi⁄
(
p°©e
), 
À·_
(
l
), 
right_
(
r
), 
›î™d_
(
o
)

1660 
vútuÆ
 
boﬁ
 
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
) const;

1661 
ATTACH_OPERATIONS
()

1667 ˛as†
	cSuµ‹ts_Neg©i⁄
 : 
public
 
Suµ‹ts_C⁄dôi⁄
 {

1668 
¥iv©e
:

1669 
ADD_PROPERTY
(
Suµ‹ts_C⁄dôi⁄
*, 
c⁄dôi⁄
);

1670 
	gpublic
:

1671 
Suµ‹ts_Neg©i⁄
(
P¨£rSèã
 
p°©e
, 
Suµ‹ts_C⁄dôi⁄
* 
c
)

1672 : 
Suµ‹ts_C⁄dôi⁄
(
p°©e
), 
c⁄dôi⁄_
(
c
)

1674 
vútuÆ
 
boﬁ
 
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
) const;

1675 
ATTACH_OPERATIONS
()

1681 ˛as†
	cSuµ‹ts_De˛¨©i⁄
 : 
public
 
Suµ‹ts_C⁄dôi⁄
 {

1682 
¥iv©e
:

1683 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
„©uª
);

1684 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
);

1685 
	gpublic
:

1686 
Suµ‹ts_De˛¨©i⁄
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
f
, Ex¥essi⁄* 
v
)

1687 : 
Suµ‹ts_C⁄dôi⁄
(
p°©e
), 
„©uª_
(
f
), 
vÆue_
(
v
)

1689 
vútuÆ
 
boﬁ
 
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
Ëc⁄° {  
	gÁl£
; }

1690 
ATTACH_OPERATIONS
()

1696 ˛as†
	cSuµ‹ts_I¡îpﬁ©i⁄
 : 
public
 
Suµ‹ts_C⁄dôi⁄
 {

1697 
¥iv©e
:

1698 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
);

1699 
	gpublic
:

1700 
Suµ‹ts_I¡îpﬁ©i⁄
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
v
)

1701 : 
Suµ‹ts_C⁄dôi⁄
(
p°©e
), 
vÆue_
(
v
)

1703 
vútuÆ
 
boﬁ
 
√eds_∑ªns
(
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
Ëc⁄° {  
	gÁl£
; }

1704 
ATTACH_OPERATIONS
()

1710 ˛as†
	cAt_RoŸ_Quîy
 : 
public
 
Ex¥essi⁄
 {

1711 
¥iv©e
:

1712 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
„©uª
)

1713 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
vÆue
)

1714 
	gpublic
:

1715 
At_RoŸ_Quîy
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
f
 = 0, Ex¥essi⁄* 
v
 = 0, 
boﬁ
 
i
 = 
Ál£
)

1716 : 
Ex¥essi⁄
(
p°©e
), 
„©uª_
(
f
), 
vÆue_
(
v
)

1718 
boﬁ
 
ex˛ude
(
°d
::
°rög
 
°r
);

1719 
ATTACH_OPERATIONS
()

1725 ˛as†
	cAt_RoŸ_Block
 : 
public
 
Has_Block
 {

1726 
ADD_PROPERTY
(
At_RoŸ_Quîy
*, 
ex¥essi⁄
)

1727 
	gpublic
:

1728 
At_RoŸ_Block
(
P¨£rSèã
 
p°©e
, 
Block
* 
b
 = 0, 
At_RoŸ_Quîy
* 
e
 = 0)

1729 : 
Has_Block
(
p°©e
, 
b
), 
ex¥essi⁄_
(
e
)

1730 { 
°©emít_ty≥
(
ATROOT
); }

1731 
boﬁ
 
is_hoi°abÀ
(Ë{  
	gåue
; }

1732 
boﬁ
 
bubbÀs
(Ë{  
	gåue
; }

1733 
boﬁ
 
ex˛ude_node
(
Sèãmít
* 
s
) {

1734 i‡(
	gs
->
°©emít_ty≥
(Ë=
Sèãmít
::
DIRECTIVE
)

1736  
ex¥essi⁄
()->
ex˛ude
(
°©ic_ˇ°
<
Dúe˘ive
*>(
s
)->
keyw‹d
().
îa£
(0, 1));

1738 i‡(
	gs
->
°©emít_ty≥
(Ë=
Sèãmít
::
MEDIA
)

1740  
ex¥essi⁄
()->
ex˛ude
("media");

1742 i‡(
	gs
->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
)

1744  
ex¥essi⁄
()->
ex˛ude
("rule");

1746 i‡(
	gs
->
°©emít_ty≥
(Ë=
Sèãmít
::
SUPPORTS
)

1748  
ex¥essi⁄
()->
ex˛ude
("supports");

1750 i‡(
	g°©ic_ˇ°
<
	gDúe˘ive
*>(
	gs
)->
is_key‰ames
())

1752  
ex¥essi⁄
()->
ex˛ude
("keyframes");

1754  
	gÁl£
;

1756 
ATTACH_OPERATIONS
()

1762 ˛as†
	cNuŒ
 : 
public
 
VÆue
 {

1763 
public
:

1764 
NuŒ
(
P¨£rSèã
 
p°©e
Ë: 
VÆue
’°©eË{ 
c⁄¸ëe_ty≥
(
NULL_VAL
); }

1765 
	g°d
::
°rög
 
ty≥
() {  "null"; }

1766 
	g°d
::
°rög
 
ty≥_«me
() {  "null"; }

1767 
boﬁ
 
is_övisibÀ
(Ëc⁄° {  
	gåue
; }

1768 
›î©‹
 
boﬁ
(Ë{  
	gÁl£
; }

1769 
boﬁ
 
is_Ál£
(Ë{  
	gåue
; }

1771 
vútuÆ
 
size_t
 
hash
()

1776 
vútuÆ
 
boﬁ
 
	g›î©‹
=(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

1778 
ATTACH_OPERATIONS
()

1784 ˛as†
	cThunk
 : 
public
 
Ex¥essi⁄
 {

1785 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
ex¥essi⁄
)

1786 
ADD_PROPERTY
(
Env
*, 
ívú⁄mít
)

1787 
	gpublic
:

1788 
Thunk
(
P¨£rSèã
 
p°©e
, 
Ex¥essi⁄
* 
exp
, 
Env
* 
ív
 = 0)

1789 : 
Ex¥essi⁄
(
p°©e
), 
ex¥essi⁄_
(
exp
), 
ívú⁄mít_
(
ív
)

1796 ˛as†
	cP¨amëî
 : 
public
 
AST_Node
 {

1797 
ADD_PROPERTY
(
°d
::
°rög
, 
«me
)

1798 
ADD_PROPERTY
(
Ex¥essi⁄
*, 
deÁu…_vÆue
)

1799 
ADD_PROPERTY
(
boﬁ
, 
is_ª°_∑ømëî
)

1800 
	gpublic
:

1801 
P¨amëî
(
P¨£rSèã
 
p°©e
,

1802 
°d
::
°rög
 
n
, 
Ex¥essi⁄
* 
def
 = 0, 
boﬁ
 
ª°
 = 
Ál£
)

1803 : 
AST_Node
(
p°©e
), 
«me_
(
n
), 
deÁu…_vÆue_
(
def
), 
is_ª°_∑ømëî_
(
ª°
)

1805 i‡(
	gdeÁu…_vÆue_
 && 
	gis_ª°_∑ømëî_
) {

1806 
îr‹
("v¨übÀ-ÀngthÖ¨amëî mayÇŸ havê®deÁu… vÆue", 
p°©e
);

1809 
ATTACH_OPERATIONS
()

1817 
˛ass
 
	gP¨amëîs
 : 
public
 
AST_Node
,Öubli¯
	gVe˘‹ized
<
	gP¨amëî
*> {

1818 
ADD_PROPERTY
(
boﬁ
, 
has_›ti⁄Æ_∑ømëîs
)

1819 
ADD_PROPERTY
(
boﬁ
, 
has_ª°_∑ømëî
)

1820 
	g¥Ÿe˘ed
:

1821 
adju°_a·î_pushög
(
P¨amëî
* 
p
)

1823 i‡(
p
->
deÁu…_vÆue
()) {

1824 i‡(
has_ª°_∑ømëî_
) {

1825 
îr‹
("›ti⁄ÆÖ¨amëî†mayÇŸ bêcomböed wôh v¨übÀ-ÀngthÖ¨amëîs", 
p
->
p°©e
());

1827 
	ghas_›ti⁄Æ_∑ømëîs_
 = 
åue
;

1829 i‡(
	gp
->
is_ª°_∑ømëî
()) {

1830 i‡(
	ghas_ª°_∑ømëî_
) {

1831 
îr‹
("fun˘i⁄†™d mixö†ˇ¬Ÿ havêm‹êth™ o√ v¨übÀ-ÀngthÖ¨amëî", 
p
->
p°©e
());

1833 
	ghas_ª°_∑ømëî_
 = 
åue
;

1836 i‡(
	ghas_ª°_∑ømëî_
) {

1837 
îr‹
("ªquúedÖ¨amëî†mu°Öª˚dêv¨übÀ-ÀngthÖ¨amëîs", 
p
->
p°©e
());

1839 i‡(
	ghas_›ti⁄Æ_∑ømëîs_
) {

1840 
îr‹
("ªquúedÖ¨amëî†mu°Öª˚dê›ti⁄ÆÖ¨amëîs", 
p
->
p°©e
());

1844 
	gpublic
:

1845 
P¨amëîs
(
P¨£rSèã
 
p°©e
)

1846 : 
AST_Node
(
p°©e
),

1847 
	gVe˘‹ized
<
	gP¨amëî
*>(),

1848 
has_›ti⁄Æ_∑ømëîs_
(
Ál£
),

1849 
has_ª°_∑ømëî_
(
Ál£
)

1851 
ATTACH_OPERATIONS
()

1857 ˛as†
	cSñe˘‹
 : 
public
 
Ex¥essi⁄
 {

1859 
ADD_PROPERTY
(
boﬁ
, 
has_∂a˚hﬁdî
)

1861 
ADD_PROPERTY
(
boﬁ
, 
has_löe_„ed
)

1863 
ADD_PROPERTY
(
boﬁ
, 
has_löe_bªak
)

1865 
ADD_PROPERTY
(
boﬁ
, 
is_›ti⁄Æ
)

1867 
ADD_PROPERTY
(
Medü_Block
*, 
medü_block
)

1868 
	g¥Ÿe˘ed
:

1869 
size_t
 
hash_
;

1870 
	gpublic
:

1871 
Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
boﬁ
 
r
 = 
Ál£
, boﬁ 
h
 = false)

1872 : 
Ex¥essi⁄
(
p°©e
),

1874 
has_∂a˚hﬁdî_
(
h
),

1875 
has_löe_„ed_
(
Ál£
),

1876 
has_löe_bªak_
(
Ál£
),

1877 
is_›ti⁄Æ_
(
Ál£
),

1878 
medü_block_
(0),

1879 
hash_
(0)

1880 { 
c⁄¸ëe_ty≥
(
SELECTOR
); }

1881 
	gvútuÆ
 ~
Sñe˘‹
() = 0;

1882 
vútuÆ
 
size_t
 
hash
() = 0;

1883 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
() {

1884  
	gÁl£
;

1886 
vútuÆ
 
•ecificôy
() {

1887  
	gC⁄°™ts
::
S≥cificôy_Univîßl
;

1889 
vútuÆ
 
£t_medü_block
(
Medü_Block
* 
mb
) {

1890 
medü_block
(
mb
);

1893 
ölöe
 
	gSñe˘‹
::~
	$Sñe˘‹
(Ë{ 
	}
}

1899 ˛as†
	cSñe˘‹_Schema
 : 
public
 
Sñe˘‹
 {

1900 
ADD_PROPERTY
(
Såög
*, 
c⁄ã¡s
)

1901 
ADD_PROPERTY
(
boﬁ
, 
©_roŸ
);

1902 
	gpublic
:

1903 
Sñe˘‹_Schema
(
P¨£rSèã
 
p°©e
, 
Såög
* 
c
)

1904 : 
Sñe˘‹
(
p°©e
), 
c⁄ã¡s_
(
c
), 
©_roŸ_
(
Ál£
)

1906 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
();

1907 
vútuÆ
 
size_t
 
hash
() {

1908 i‡(
	ghash_
 == 0) {

1909 
hash_comböe
(
hash_
, 
c⁄ã¡s_
->
hash
());

1911  
	ghash_
;

1913 
ATTACH_OPERATIONS
()

1919 ˛as†
	cSim∂e_Sñe˘‹
 : 
public
 
Sñe˘‹
 {

1920 
ADD_PROPERTY
(
°d
::
°rög
, 
ns
);

1921 
ADD_PROPERTY
(
°d
::
°rög
, 
«me
)

1922 
ADD_PROPERTY
(
boﬁ
, 
has_ns
)

1923 
	gpublic
:

1924 
Sim∂e_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
 = "")

1925 : 
Sñe˘‹
(
p°©e
), 
ns_
(""), 
«me_
(
n
), 
has_ns_
(
Ál£
)

1927 
size_t
 
	gpos
 = 
n
.
föd
('|');

1929 i‡(
	gpos
 !
°d
::
°rög
::
≈os
) {

1930 
has_ns_
 = 
åue
;

1931 
	gns_
 = 
n
.
sub°r
(0, 
pos
);

1932 
	g«me_
 = 
n
.
sub°r
(
pos
 + 1);

1935 
vútuÆ
 
	g°d
::
°rög
 
ns_«me
() const

1937 
°d
::
°rög
 
«me
("");

1938 i‡(
	ghas_ns_
)

1939 
	g«me
 +
ns_
 + "|";

1940  
	g«me
 + 
	g«me_
;

1942 
vútuÆ
 
size_t
 
hash
()

1944 i‡(
	ghash_
 == 0) {

1945 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
SELECTOR
));

1946 
hash_comböe
(
hash_
, 
°d
::
hash
<°d::
°rög
>()(
ns
()));

1947 
hash_comböe
(
hash_
, 
°d
::
hash
<°d::
°rög
>()(
«me
()));

1949  
	ghash_
;

1952 
boﬁ
 
is_univîßl_ns
() const

1954  
	ghas_ns_
 && 
	gns_
 == "*";

1956 
boﬁ
 
has_univîßl_ns
() const

1958  !
	ghas_ns_
 || 
	gns_
 == "*";

1960 
boﬁ
 
is_em±y_ns
() const

1962  !
	ghas_ns_
 || 
	gns_
 == "";

1964 
boﬁ
 
has_em±y_ns
() const

1966  
	ghas_ns_
 && 
	gns_
 == "";

1968 
boﬁ
 
has_quÆifõd_ns
() const

1970  
	ghas_ns_
 && 
	gns_
 !"" && 
ns_
 != "*";

1973 
boﬁ
 
is_univîßl
() const

1975  
	g«me_
 == "*";

1978 
	gvútuÆ
 ~
Sim∂e_Sñe˘‹
() = 0;

1979 
vútuÆ
 
Compound_Sñe˘‹
* 
unify_wôh
(Compound_Sñe˘‹*, 
C⁄ãxt
&);

1980 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
(Ë{  
	gÁl£
; };

1981 
vútuÆ
 
boﬁ
 
is_p£udo_ñemít
(Ë{  
	gÁl£
; }

1982 
vútuÆ
 
boﬁ
 
is_p£udo_˛ass
(Ë{  
	gÁl£
; }

1984 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
sub
Ë{  
	gÁl£
; }

1986 
boﬁ
 
	g›î©‹
==(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const;

1987 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
Ëc⁄° {  !(*
this
 ==Ñhs); }

1989 
boﬁ
 
	g›î©‹
<(c⁄° 
	gSim∂e_Sñe˘‹
& 
	grhs
) const;

1991 
ATTACH_OPERATIONS
();

1993 
ölöe
 
	gSim∂e_Sñe˘‹
::~
	$Sim∂e_Sñe˘‹
(Ë{ 
	}
}

2002 ˛as†
	cP¨ít_Sñe˘‹
 : 
public
 
Sim∂e_Sñe˘‹
 {

2003 
public
:

2004 
P¨ít_Sñe˘‹
(
P¨£rSèã
 
p°©e
)

2005 : 
Sim∂e_Sñe˘‹
(
p°©e
, "&")

2007 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
(Ë{  
	gåue
; };

2008 
vútuÆ
 
•ecificôy
()

2012 
	g°d
::
°rög
 
ty≥
() {  "selector"; }

2013 
	g°d
::
°rög
 
ty≥_«me
() {  "selector"; }

2014 
ATTACH_OPERATIONS
()

2020 ˛as†
	cSñe˘‹_Pœ˚hﬁdî
 : 
public
 
Sim∂e_Sñe˘‹
 {

2021 
public
:

2022 
Sñe˘‹_Pœ˚hﬁdî
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
)

2023 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
)

2024 { 
has_∂a˚hﬁdî
(
åue
); }

2026 
	gvútuÆ
 ~
Sñe˘‹_Pœ˚hﬁdî
() {};

2027 
ATTACH_OPERATIONS
()

2033 ˛as†
	cTy≥_Sñe˘‹
 : 
public
 
Sim∂e_Sñe˘‹
 {

2034 
public
:

2035 
Ty≥_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
)

2036 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
)

2038 
vútuÆ
 
•ecificôy
()

2041 i‡(
«me
(Ë="*"Ë 
C⁄°™ts
::
S≥cificôy_Univîßl
;

2042  
	gC⁄°™ts
::
S≥cificôy_Ty≥
;

2044 
vútuÆ
 
Sim∂e_Sñe˘‹
* 
unify_wôh
(Sim∂e_Sñe˘‹*, 
C⁄ãxt
&);

2045 
vútuÆ
 
Compound_Sñe˘‹
* 
unify_wôh
(Compound_Sñe˘‹*, 
C⁄ãxt
&);

2046 
ATTACH_OPERATIONS
()

2052 ˛as†
	cSñe˘‹_QuÆifõr
 : 
public
 
Sim∂e_Sñe˘‹
 {

2053 
public
:

2054 
Sñe˘‹_QuÆifõr
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
)

2055 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
)

2057 
vútuÆ
 
•ecificôy
()

2059 i‡(
«me
()[0] ='#'Ë 
C⁄°™ts
::
S≥cificôy_ID
;

2060 i‡(
«me
()[0] ='.'Ë 
C⁄°™ts
::
S≥cificôy_Cœss
;

2061  
	gC⁄°™ts
::
S≥cificôy_Ty≥
;

2063 
vútuÆ
 
Compound_Sñe˘‹
* 
unify_wôh
(Compound_Sñe˘‹*, 
C⁄ãxt
&);

2064 
ATTACH_OPERATIONS
()

2070 ˛as†
	cAâribuã_Sñe˘‹
 : 
public
 
Sim∂e_Sñe˘‹
 {

2071 
ADD_PROPERTY
(
°d
::
°rög
, 
m©chî
)

2072 
ADD_PROPERTY
(
Såög
*, 
vÆue
)

2073 
	gpublic
:

2074 
Aâribuã_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, std::°rög 
m
, 
Såög
* 
v
)

2075 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
), 
m©chî_
(
m
), 
vÆue_
(
v
)

2077 
vútuÆ
 
size_t
 
hash
()

2079 i‡(
	ghash_
 == 0) {

2080 
hash_comböe
(
hash_
, 
Sim∂e_Sñe˘‹
::
hash
());

2081 
hash_comböe
(
hash_
, 
°d
::
hash
<°d::
°rög
>()(
m©chî
()));

2082 i‡(
	gvÆue_
Ë
hash_comböe
(
hash_
, 
vÆue_
->
hash
());

2084  
	ghash_
;

2086 
vútuÆ
 
•ecificôy
()

2088  
	gC⁄°™ts
::
S≥cificôy_Aâr
;

2090 
boﬁ
 
	g›î©‹
==(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const;

2091 
boﬁ
 
	g›î©‹
==(c⁄° 
Aâribuã_Sñe˘‹
& 
rhs
) const;

2092 
boﬁ
 
	g›î©‹
<(c⁄° 
	gSim∂e_Sñe˘‹
& 
	grhs
) const;

2093 
boﬁ
 
	g›î©‹
<(c⁄° 
	gAâribuã_Sñe˘‹
& 
	grhs
) const;

2094 
ATTACH_OPERATIONS
()

2104 
ölöe
 
boﬁ
 
	$is_p£udo_˛ass_ñemít
(c⁄° 
°d
::
°rög
& 
«me
)

2106  
«me
 == ":before" ||

2107 
«me
 == ":after" ||

2108 
«me
 == ":first-line" ||

2109 
«me
 == ":first-letter";

2110 
	}
}

2113 ˛as†
	cP£udo_Sñe˘‹
 : 
public
 
Sim∂e_Sñe˘‹
 {

2114 
ADD_PROPERTY
(
Såög
*, 
ex¥essi⁄
)

2115 
	gpublic
:

2116 
P£udo_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, 
Såög
* 
ex¥
 = 0)

2117 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
), 
ex¥essi⁄_
(
ex¥
)

2122 
vútuÆ
 
boﬁ
 
is_p£udo_˛ass
()

2124  (
	g«me_
[0] =':' && 
«me_
[1] != ':')

2125 && ! 
is_p£udo_˛ass_ñemít
(
«me_
);

2136 
vútuÆ
 
boﬁ
 
is_p£udo_ñemít
()

2138  (
	g«me_
[0] =':' && 
«me_
[1] == ':')

2139 || 
is_p£udo_˛ass_ñemít
(
«me_
);

2141 
vútuÆ
 
size_t
 
hash
()

2143 i‡(
	ghash_
 == 0) {

2144 
hash_comböe
(
hash_
, 
Sim∂e_Sñe˘‹
::
hash
());

2145 i‡(
	gex¥essi⁄_
Ë
hash_comböe
(
hash_
, 
ex¥essi⁄_
->
hash
());

2147  
	ghash_
;

2149 
vútuÆ
 
•ecificôy
()

2151 i‡(
is_p£udo_ñemít
())

2152  
	gC⁄°™ts
::
S≥cificôy_Ty≥
;

2153  
	gC⁄°™ts
::
S≥cificôy_P£udo
;

2155 
boﬁ
 
	g›î©‹
==(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const;

2156 
boﬁ
 
	g›î©‹
==(c⁄° 
P£udo_Sñe˘‹
& 
rhs
) const;

2157 
boﬁ
 
	g›î©‹
<(c⁄° 
	gSim∂e_Sñe˘‹
& 
	grhs
) const;

2158 
boﬁ
 
	g›î©‹
<(c⁄° 
	gP£udo_Sñe˘‹
& 
	grhs
) const;

2159 
vútuÆ
 
Compound_Sñe˘‹
* 
unify_wôh
(Compound_Sñe˘‹*, 
C⁄ãxt
&);

2160 
ATTACH_OPERATIONS
()

2166 ˛as†
	cWøµed_Sñe˘‹
 : 
public
 
Sim∂e_Sñe˘‹
 {

2167 
ADD_PROPERTY
(
Sñe˘‹
*, 
£À˘‹
)

2168 
	gpublic
:

2169 
Wøµed_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
n
, 
Sñe˘‹
* 
£l
)

2170 : 
Sim∂e_Sñe˘‹
(
p°©e
, 
n
), 
£À˘‹_
(
£l
)

2172 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
() {

2174 i‡(!
£À˘‹
()Ë 
	gÁl£
;

2175  
£À˘‹
()->
has_∑ª¡_ªf
();

2177 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Wøµed_Sñe˘‹
* 
sub
);

2180 
vútuÆ
 
size_t
 
hash
()

2182 i‡(
	ghash_
 == 0) {

2183 
hash_comböe
(
hash_
, 
Sim∂e_Sñe˘‹
::
hash
());

2184 i‡(
	g£À˘‹_
Ë
hash_comböe
(
hash_
, 
£À˘‹_
->
hash
());

2186  
	ghash_
;

2188 
vútuÆ
 
•ecificôy
()

2190  
	g£À˘‹_
 ? sñe˘‹_->
•ecificôy
() : 0;

2192 
boﬁ
 
	g›î©‹
==(c⁄° 
Sim∂e_Sñe˘‹
& 
rhs
) const;

2193 
boﬁ
 
	g›î©‹
==(c⁄° 
Wøµed_Sñe˘‹
& 
rhs
) const;

2194 
boﬁ
 
	g›î©‹
<(c⁄° 
	gSim∂e_Sñe˘‹
& 
	grhs
) const;

2195 
boﬁ
 
	g›î©‹
<(c⁄° 
	gWøµed_Sñe˘‹
& 
	grhs
) const;

2196 
ATTACH_OPERATIONS
()

2199 
	sCom∂ex_Sñe˘‹_Poöãr_Com∑ª
 {

2200 
boﬁ
 
›î©‹
(Ë(c⁄° 
Com∂ex_Sñe˘‹
* c⁄° 
	gpLe·
, c⁄° Com∂ex_Sñe˘‹* c⁄° 
	gpRight
) const;

2207 
	g°d
::
	t£t
<
	tCom∂ex_Sñe˘‹
*, 
	tCom∂ex_Sñe˘‹_Poöãr_Com∑ª
> 
	tSour˚sSë
;

2208 
˛ass
 
	gCompound_Sñe˘‹
 : 
public
 
Sñe˘‹
,Öubli¯
	gVe˘‹ized
<
	gSim∂e_Sñe˘‹
*> {

2209 
	g¥iv©e
:

2210 
Sour˚sSë
 
sour˚s_
;

2211 
ADD_PROPERTY
(
boﬁ
, 
exãnded
);

2212 
ADD_PROPERTY
(
boﬁ
, 
has_∑ª¡_ª„ªn˚
);

2213 
	g¥Ÿe˘ed
:

2214 
adju°_a·î_pushög
(
Sim∂e_Sñe˘‹
* 
s
)

2217 i‡(
s
->
has_∂a˚hﬁdî
()Ëhas_∂a˚hﬁdî(
åue
);

2219 
	gpublic
:

2220 
Compound_Sñe˘‹
(
P¨£rSèã
 
p°©e
, 
size_t
 
s
 = 0)

2221 : 
Sñe˘‹
(
p°©e
),

2222 
	gVe˘‹ized
<
	gSim∂e_Sñe˘‹
*>(
	gs
),

2223 
exãnded_
(
Ál£
),

2224 
has_∑ª¡_ª„ªn˚_
(
Ál£
)

2226 
boﬁ
 
c⁄èös_∂a˚hﬁdî
() {

2227 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i) {

2228 i‡((*
	gthis
)[
i
]->
has_∂a˚hﬁdî
()Ë 
	gåue
;

2230  
	gÁl£
;

2233 
boﬁ
 
is_univîßl
() const

2235  
Àngth
(Ë=1 && (*
this
)[0]->
is_univîßl
();

2238 
Com∂ex_Sñe˘‹
* 
to_com∂ex
(
Mem‹y_M™agî
& 
mem
);

2239 
Compound_Sñe˘‹
* 
unify_wôh
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
);

2241 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
();

2242 
Sim∂e_Sñe˘‹
* 
ba£
()

2245  
	gc⁄°_ˇ°
<
	gSim∂e_Sñe˘‹
*>(
	g°©ic_ˇ°
<c⁄° 
	gCompound_Sñe˘‹
*>(
	gthis
)->
ba£
());

2247 c⁄° 
Sim∂e_Sñe˘‹
* 
ba£
() const {

2248 i‡(
Àngth
() == 0)  0;

2250 i‡(
	gdy«mic_ˇ°
<
	gTy≥_Sñe˘‹
*>((*
	gthis
)[0]))

2251  (*
	gthis
)[0];

2254 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµed
 = "");

2255 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµed
 = "");

2256 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
* 
sub
, 
°d
::
°rög
 
wøµed
 = "");

2257 
vútuÆ
 
size_t
 
hash
()

2259 i‡(
	gSñe˘‹
::
hash_
 == 0) {

2260 
hash_comböe
(
Sñe˘‹
::
hash_
, 
°d
::
hash
<>()(
SELECTOR
));

2261 i‡(
Àngth
()Ë
hash_comböe
(
Sñe˘‹
::
hash_
, 
Ve˘‹ized
::
hash
());

2263  
	gSñe˘‹
::
hash_
;

2265 
vútuÆ
 
•ecificôy
()

2267 
	gsum
 = 0;

2268 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

2269 { 
	gsum
 +(*
this
)[
i
]->
•ecificôy
(); }

2270  
	gsum
;

2273 
boﬁ
 
is_em±y_ª„ªn˚
()

2275  
Àngth
() == 1 &&

2276 
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>((*
this
)[0]);

2278 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
to_°r_vec
();

2280 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCompound_Sñe˘‹
& 
	grhs
) const;

2282 
boﬁ
 
	g›î©‹
==(c⁄° 
Compound_Sñe˘‹
& 
rhs
) const;

2283 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Compound_Sñe˘‹
& 
rhs
Ëc⁄° {  !(*
this
 ==Ñhs); }

2285 
	gSour˚sSë
& 
sour˚s
(Ë{  
	gsour˚s_
; }

2286 
˛órSour˚s
(Ë{ 
	gsour˚s_
.
˛ór
(); }

2287 
mîgeSour˚s
(
Sour˚sSë
& 
sour˚s
, 
C⁄ãxt
& 
˘x
);

2289 
Compound_Sñe˘‹
* 
˛⁄e
(
C⁄ãxt
&) const;

2291 
Compound_Sñe˘‹
* 
möus
(Compound_Sñe˘‹* 
rhs
, 
C⁄ãxt
& 
˘x
);

2292 
ATTACH_OPERATIONS
()

2300 ˛as†
	cCom∂ex_Sñe˘‹
 : 
public
 
Sñe˘‹
 {

2301 
public
:

2302 
	eCombö©‹
 { 
ANCESTOR_OF
, 
	gPARENT_OF
, 
	gPRECEDES
, 
	gADJACENT_TO
, 
	gREFERENCE
 };

2303 
	g¥iv©e
:

2304 
ADD_PROPERTY
(
Combö©‹
, 
combö©‹
)

2305 
ADD_PROPERTY
(
Compound_Sñe˘‹
*, 
hód
)

2306 
ADD_PROPERTY
(
Com∂ex_Sñe˘‹
*, 
èû
)

2307 
ADD_PROPERTY
(
Såög
*, 
ª„ªn˚
);

2308 
	gpublic
:

2309 
boﬁ
 
c⁄èös_∂a˚hﬁdî
() {

2310 i‡(
hód
(Ë&& hód()->
c⁄èös_∂a˚hﬁdî
()Ë 
åue
;

2311 i‡(
èû
(Ë&&Åaû()->
c⁄èös_∂a˚hﬁdî
()Ë 
	gåue
;

2312  
	gÁl£
;

2314 
Com∂ex_Sñe˘‹
(
P¨£rSèã
 
p°©e
,

2315 
Combö©‹
 
c
 = 
ANCESTOR_OF
,

2316 
Compound_Sñe˘‹
* 
h
 = 0,

2317 
Com∂ex_Sñe˘‹
* 
t
 = 0,

2318 
Såög
* 
r
 = 0)

2319 : 
Sñe˘‹
(
p°©e
),

2320 
combö©‹_
(
c
),

2321 
hód_
(
h
), 
èû_
(
t
),

2322 
ª„ªn˚_
(
r
)

2325 i‡((
	gh
 && h->
has_∂a˚hﬁdî
()Ë|| (
	gt
 &&Å->has_∂a˚hﬁdî())Ëhas_∂a˚hﬁdî(
åue
);

2327 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
();

2329 
Com∂ex_Sñe˘‹
* 
skù_em±y_ª„ªn˚
()

2331 i‡((!
	ghód_
 || !hód_->
Àngth
(Ë|| hód_->
is_em±y_ª„ªn˚
()) &&

2332 
combö©‹
(Ë=
Combö©‹
::
ANCESTOR_OF
)

2334 i‡(!
èû_
)  0;

2335 
	gèû_
->
	ghas_löe_„ed_
 = 
this
->
has_löe_„ed_
;

2337  
	gèû_
->
skù_em±y_ª„ªn˚
();

2339  
	gthis
;

2343 
boﬁ
 
is_em±y_™˚°‹
() const

2345  (!
hód
(Ë|| hód()->
Àngth
() == 0) &&

2346 
combö©‹
(Ë=
Combö©‹
::
ANCESTOR_OF
;

2349 
Com∂ex_Sñe˘‹
* 
c⁄ãxt
(
C⁄ãxt
&);

2354 c⁄° 
Com∂ex_Sñe˘‹
* 
fú°
() const;

2357 c⁄° 
Com∂ex_Sñe˘‹
* 
œ°
() const;

2359 
Sñe˘‹_Li°
* 
èûs
(
C⁄ãxt
& 
˘x
, Selector_List*Åails);

2362 
Com∂ex_Sñe˘‹
* 
fú°
();

2363 
Com∂ex_Sñe˘‹
* 
œ°
();

2366 c⁄° 
Com∂ex_Sñe˘‹
* 
ö√rmo°
(Ëc⁄° {  
œ°
(); };

2367 
Com∂ex_Sñe˘‹
* 
ö√rmo°
(Ë{  
œ°
(); };

2369 
size_t
 
Àngth
() const;

2370 
Sñe˘‹_Li°
* 
∑ª¡ize
(Sñe˘‹_Li°* 
∑ª¡s
, 
C⁄ãxt
& 
˘x
);

2371 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2372 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2373 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2375 
Sñe˘‹_Li°
* 
unify_wôh
(
Com∂ex_Sñe˘‹
* 
rhs
, 
C⁄ãxt
& 
˘x
);

2376 
Combö©‹
 
˛ór_ö√rmo°
();

2377 
≠≥nd
(
C⁄ãxt
&, 
Com∂ex_Sñe˘‹
*);

2378 
£t_ö√rmo°
(
Com∂ex_Sñe˘‹
*, 
Combö©‹
);

2379 
vútuÆ
 
size_t
 
hash
()

2381 i‡(
	ghash_
 == 0) {

2382 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
SELECTOR
));

2383 
hash_comböe
(
hash_
, 
°d
::
hash
<>()(
combö©‹_
));

2384 i‡(
	ghód_
Ë
hash_comböe
(
hash_
, 
hód_
->
hash
());

2385 i‡(
	gèû_
Ë
hash_comböe
(
hash_
, 
èû_
->
hash
());

2387  
	ghash_
;

2389 
vútuÆ
 
•ecificôy
() const

2391 
	gsum
 = 0;

2392 i‡(
hód
()Ë
	gsum
 +hód()->
•ecificôy
();

2393 i‡(
èû
()Ë
	gsum
 +èû()->
•ecificôy
();

2394  
	gsum
;

2396 
vútuÆ
 
£t_medü_block
(
Medü_Block
* 
mb
) {

2397 
medü_block
(
mb
);

2398 i‡(
	gèû_
Ëèû_->
£t_medü_block
(
mb
);

2399 i‡(
	ghód_
Ëhód_->
£t_medü_block
(
mb
);

2401 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCom∂ex_Sñe˘‹
& 
	grhs
) const;

2402 
boﬁ
 
	g›î©‹
==(c⁄° 
Com∂ex_Sñe˘‹
& 
rhs
) const;

2403 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Com∂ex_Sñe˘‹
& 
rhs
Ëc⁄° {  !(*
this
 ==Ñhs); }

2404 
Sour˚sSë
 
sour˚s
()

2410 
Sour˚sSë
 
	g§cs
;

2412 
Compound_Sñe˘‹
* 
	gpHód
 = 
hód
();

2413 
Com∂ex_Sñe˘‹
* 
	gpTaû
 = 
èû
();

2415 i‡(
	gpHód
) {

2416 
	gSour˚sSë
& 
	ghódSour˚s
 = 
pHód
->
sour˚s
();

2417 
	g§cs
.
ö£π
(
hódSour˚s
.
begö
(), hódSour˚s.
íd
());

2420 i‡(
	gpTaû
) {

2421 
Sour˚sSë
 
	gèûSour˚s
 = 
pTaû
->
sour˚s
();

2422 
	g§cs
.
ö£π
(
èûSour˚s
.
begö
(),ÅaûSour˚s.
íd
());

2425  
	g§cs
;

2427 
addSour˚s
(
Sour˚sSë
& 
sour˚s
, 
C⁄ãxt
& 
˘x
) {

2429 
Com∂ex_Sñe˘‹
* 
	gpIãr
 = 
this
;

2430 
	gpIãr
) {

2431 
Compound_Sñe˘‹
* 
	gpHód
 = 
pIãr
->
hód
();

2433 i‡(
	gpHód
) {

2434 
	gpHód
->
mîgeSour˚s
(
sour˚s
, 
˘x
);

2437 
	gpIãr
 = 
pIãr
->
èû
();

2440 
˛órSour˚s
() {

2441 
Com∂ex_Sñe˘‹
* 
	gpIãr
 = 
this
;

2442 
	gpIãr
) {

2443 
Compound_Sñe˘‹
* 
	gpHód
 = 
pIãr
->
hód
();

2445 i‡(
	gpHód
) {

2446 
	gpHód
->
˛órSour˚s
();

2449 
	gpIãr
 = 
pIãr
->
èû
();

2452 
Com∂ex_Sñe˘‹
* 
˛⁄e
(
C⁄ãxt
&) const;

2453 
Com∂ex_Sñe˘‹
* 
˛⁄eFuŒy
(
C⁄ãxt
&) const;

2455 
ATTACH_OPERATIONS
()

2458 
	g°d
::
	tdeque
<
	tCom∂ex_Sñe˘‹
*> 
	tCom∂exSñe˘‹Deque
;

2459 
	gSub£t_M≠
<
	t°d
::
	t°rög
, std::
	t∑ú
<
	tCom∂ex_Sñe˘‹
*, 
	tCompound_Sñe˘‹
*> > 
	tExãnsi⁄Sub£tM≠
;

2464 
˛ass
 
	gSñe˘‹_Li°
 : 
public
 
Sñe˘‹
,Öubli¯
	gVe˘‹ized
<
	gCom∂ex_Sñe˘‹
*> {

2465 
ADD_PROPERTY
(
°d
::
ve˘‹
<°d::
°rög
>, 
w•a˚
)

2466 
	g¥Ÿe˘ed
:

2467 
adju°_a·î_pushög
(
Com∂ex_Sñe˘‹
* 
c
);

2468 
	gpublic
:

2469 
Sñe˘‹_Li°
(
P¨£rSèã
 
p°©e
, 
size_t
 
s
 = 0)

2470 : 
Sñe˘‹
(
p°©e
), 
	gVe˘‹ized
<
	gCom∂ex_Sñe˘‹
*>(
	gs
), 
w•a˚_
(0)

2472 
	g°d
::
°rög
 
ty≥
() {  "list"; }

2475 
vútuÆ
 
boﬁ
 
has_∑ª¡_ªf
();

2476 
ªmove_∑ª¡_£À˘‹s
();

2478 
Sñe˘‹_Li°
* 
∑ª¡ize
(Sñe˘‹_Li°* 
∑ª¡s
, 
C⁄ãxt
& 
˘x
);

2479 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Compound_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2480 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Com∂ex_Sñe˘‹
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2481 
vútuÆ
 
boﬁ
 
is_su≥r£À˘‹_of
(
Sñe˘‹_Li°
* 
sub
, 
°d
::
°rög
 
wøµög
 = "");

2482 
Sñe˘‹_Li°
* 
unify_wôh
(Sñe˘‹_Li°*, 
C⁄ãxt
&);

2483 
p›uœã_exãnds
(
Sñe˘‹_Li°
*, 
C⁄ãxt
&, 
Exãnsi⁄Sub£tM≠
&);

2484 
vútuÆ
 
size_t
 
hash
()

2486 i‡(
	gSñe˘‹
::
hash_
 == 0) {

2487 
hash_comböe
(
Sñe˘‹
::
hash_
, 
°d
::
hash
<>()(
SELECTOR
));

2488 
hash_comböe
(
Sñe˘‹
::
hash_
, 
Ve˘‹ized
::
hash
());

2490  
	gSñe˘‹
::
hash_
;

2492 
vútuÆ
 
•ecificôy
()

2494 
	gsum
 = 0;

2495 
	g•ecificôy
 = 0;

2496 
size_t
 
	gi
 = 0, 
	gL
 = 
Àngth
(); i < L; ++i)

2498 
	g•ecificôy
 = (*
this
)[
i
]->
•ecificôy
();

2499 i‡(
	gsum
 < 
	g•ecificôy
Ësum = 
•ecificôy
;

2501  
	gsum
;

2503 
vútuÆ
 
£t_medü_block
(
Medü_Block
* 
mb
) {

2504 
medü_block
(
mb
);

2505 
Com∂ex_Sñe˘‹
* 
	gcs
 : 
ñemíts
()) {

2506 
cs
->
£t_medü_block
(
mb
);

2509 
Sñe˘‹_Li°
* 
˛⁄e
(
C⁄ãxt
&) const;

2510 
Sñe˘‹_Li°
* 
˛⁄eFuŒy
(
C⁄ãxt
&) const;

2511 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Sñe˘‹
& 
rhs
) const;

2512 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Sñe˘‹_Li°
& 
rhs
) const;

2514 
vútuÆ
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ex¥essi⁄
& 
rhs
) const;

2515 
ATTACH_OPERATIONS
()

2518 
	gãm∂©e
<
ty≥«me
 
	gSñe˘‹Ty≥
>

2519 
boﬁ
 
	$£À˘‹s_equÆ
(c⁄° 
Sñe˘‹Ty≥
& 
⁄e
, c⁄° Sñe˘‹Ty≥& 
two
, 
boﬁ
 
sim∂eSñe˘‹OrdîDïídít
) {

2529 i‡(
sim∂eSñe˘‹OrdîDïídít
) {

2530  !(
⁄e
 < 
two
) && !(two < one);

2532  
⁄e
 =
two
;

2534 
	}
}

2537 
	scmp_com∂ex_£À˘‹
 { 
ölöe
 
boﬁ
 
›î©‹
(Ë(c⁄° 
Com∂ex_Sñe˘‹
* 
	gl
, c⁄° Com∂ex_Sñe˘‹* 
	gr
) {  (*l < *r); } };

2538 
	scmp_compound_£À˘‹
 { 
ölöe
 
boﬁ
 
›î©‹
(Ë(c⁄° 
Compound_Sñe˘‹
* 
	gl
, c⁄° Compound_Sñe˘‹* 
	gr
) {  (*l < *r); } };

2539 
	scmp_sim∂e_£À˘‹
 { 
ölöe
 
boﬁ
 
›î©‹
(Ë(c⁄° 
Sim∂e_Sñe˘‹
* 
	gl
, c⁄° Sim∂e_Sñe˘‹* 
	gr
) {  (*l < *r); } };

2543 #ifde‡
__˛™g__


2545 #¥agm®
˛™g
 
dügno°ic
 
p›


	@node_modules/node-sass/src/libsass/src/ast_def_macros.hpp

1 #i‚de‡
SASS_AST_DEF_MACROS_H


2 
	#SASS_AST_DEF_MACROS_H


	)

5 
	gãm∂©e
 <
˛ass
 
	gT
>

6 ˛as†
	cLoˇlO±i⁄
 {

7 
	m¥iv©e
:

8 
T
* 
v¨
;

9 
T
 
	m‹ig
;

10 
	mpublic
:

11 
	$LoˇlO±i⁄
(
T
& 
v¨
)

13 
this
->
v¨
 = &var;

14 
this
->
‹ig
 = 
v¨
;

16 
	$LoˇlO±i⁄
(
T
& 
v¨
, T 
‹ig
)

18 
this
->
v¨
 = &var;

19 
this
->
‹ig
 = 
v¨
;

20 *(
this
->
v¨
Ë
‹ig
;

21 
	}
}

22 ~
	$LoˇlO±i⁄
() {

23 *(
this
->
v¨
Ëthis->
‹ig
;

24 
	}
}

27 
	#LOCAL_FLAG
(
«me
,
›t
Ë
LoˇlO±i⁄
<
boﬁ
> 
Êag_
##
	`«me
“ame, o±)

	)

29 
	#ATTACH_OPERATIONS
()\

30 
vútuÆ
 
	`≥rf‹m
(
O≥øti⁄
<>* 
›
Ë{ (*›)(
this
); }\

31 
vútuÆ
 
AST_Node
* 
	`≥rf‹m
(
O≥øti⁄
<AST_Node*>* 
›
Ë{  (*›)(
this
); }\

32 
vútuÆ
 
Sèãmít
* 
	`≥rf‹m
(
O≥øti⁄
<Sèãmít*>* 
›
Ë{  (*›)(
this
); }\

33 
vútuÆ
 
Ex¥essi⁄
* 
	`≥rf‹m
(
O≥øti⁄
<Ex¥essi⁄*>* 
›
Ë{  (*›)(
this
); }\

34 
vútuÆ
 
Sñe˘‹
* 
	`≥rf‹m
(
O≥øti⁄
<Sñe˘‹*>* 
›
Ë{  (*›)(
this
); }\

35 
vútuÆ
 
°d
::
°rög
 
	`≥rf‹m
(
O≥øti⁄
<°d::°rög>* 
›
Ë{  (*›)(
this
); }\

36 
vútuÆ
 
Sass_VÆue
* 
	`≥rf‹m
(
O≥øti⁄
<Sass_VÆue*>* 
›
Ë{  (*›)(
this
); }\

37 
vútuÆ
 
VÆue
* 
	`≥rf‹m
(
O≥øti⁄
<VÆue*>* 
›
Ë{  (*›)(
this
); }

	)

39 
	#ADD_PROPERTY
(
ty≥
, 
«me
)\

40 
¥Ÿe˘ed
:\

41 
ty≥
 
«me
##
_
;\

42 
public
:\

43 
ty≥
 
	`«me
(Ëc⁄° {  
«me
##
_
; }\

44 
ty≥
 
	`«me
—y≥ 
«me
##
__
Ë{ Çame##
_
 =Çame##__; }\

45 
¥iv©e
:

	)

47 
	#ADD_HASHED
(
ty≥
, 
«me
)\

48 
¥Ÿe˘ed
:\

49 
ty≥
 
«me
##
_
;\

50 
public
:\

51 
ty≥
 
	`«me
(Ëc⁄° {  
«me
##
_
; }\

52 
ty≥
 
	`«me
—y≥ 
«me
##
__
Ë{ 
hash_
 = 0; Çame##
_
 =Çame##__; }\

53 
¥iv©e
:

	)

	@node_modules/node-sass/src/libsass/src/ast_factory.hpp

1 #i‚de‡
SASS_AST_FACTORY_H


2 
	#SASS_AST_FACTORY_H


	)

4 
	~<ve˘‹
>

6 
	~"a°.hµ
"

8 
«me•a˚
 
	gSass
 {

10 ˛as†
	cAST_Fa˘‹y
 {

11 
	g°d
::
ve˘‹
<
AST_Node
*> 
nodes
;

12 
	gpublic
:

14 
Block
* 
√w_Block
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
s
 = 0, 
boﬁ
 
r
 = 
Ál£
);

15 
RuÀ£t
* 
√w_RuÀ£t
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Sñe˘‹
* 
s
, 
Block
* 
b
);

16 
Pr›£t
* 
√w_Pr›£t
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
pf
, 
Block
* 
b
);

17 
Suµ‹ts_Quîy
* 
√w_Suµ‹ts_Quîy
(
°d
::
°rög
 
p
, 
size_t
 
l
, Suµ‹ts_Quîy* 
f
, 
Block
* 
b
);

18 
Medü_Quîy
* 
√w_Medü_Quîy
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Li°
* 
q
, 
Block
* 
b
);

19 
At_RoŸ_Block
* 
√w_At_RoŸ_Block
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Sñe˘‹
* 
£l
, 
Block
* 
b
);

20 
Dúe˘ive
* 
√w_At_RuÀ
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
kwd
, 
Sñe˘‹
* 
£l
, 
Block
* 
b
);

21 
Key‰ame_RuÀ
* 
√w_Key‰ame_RuÀ
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Block
* 
b
);

22 
De˛¨©i⁄
* 
√w_De˛¨©i⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
¥›
, 
Li°
* 
vÆs
);

23 
Assignmít
* 
√w_Assignmít
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
v¨
, 
Ex¥essi⁄
* 
vÆ
, 
boﬁ
 
gu¨ded
 = 
Ál£
);

24 
	gImp‹t
<
	gFun˘i⁄_CÆl
*>* 
√w_CSS_Imp‹t
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Fun˘i⁄_CÆl
* 
loc
);

25 
	gImp‹t
<
	gSåög
*>* 
√w_SASS_Imp‹t
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
loc
);

26 
Cu°om_W¨nög
* 
√w_Cu°om_W¨nög
(
°d
::
°rög
 
msg
, 
size_t
 
l
, std::string msg);

27 
Cu°om_Eº‹
* 
√w_Cu°om_Eº‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
msg
);

28 
W¨nög
* 
√w_W¨nög
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
msg
);

29 
Eº‹
* 
√w_Eº‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
msg
);

30 
Debug
* 
√w_Debug
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
vÆ
);

31 
Commít
* 
√w_Commít
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
txt
);

32 
If
* 
√w_If
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
¥ed
, 
Block
* 
c⁄
, Block* 
Æt
 = 0);

33 
F‹
* 
√w_F‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
v¨
, 
Ex¥essi⁄
* 
lo
, Ex¥essi⁄* 
hi
, 
Block
* 
b
, 
boﬁ
 
öc
);

34 
Each
* 
√w_Each
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::
ve˘‹
<°d::°rög> 
v¨s
, 
Ex¥essi⁄
* 
l°
, 
Block
* 
b
);

35 
Whûe
* 
√w_Whûe
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
¥ed
, 
Block
* 
b
);

36 
Exãnsi⁄
* 
√w_Exãnsi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Sñe˘‹
* 
s
);

37 
	gDeföôi⁄
<
	gMIXIN
>* 
√w_Mixö_Deföôi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
P¨amëîs
* 
∑øms
, 
Block
* 
b
);

38 
	gDeföôi⁄
<
	gFUNCTION
>* 
√w_Fun˘i⁄_Deföôi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
P¨amëîs
* 
∑øms
, 
Block
* 
b
);

39 
Mixö_CÆl
* 
√w_Mixö_CÆl
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
Argumíts
* 
¨gs
, 
Block
* 
b
 = 0);

41 
Li°
* 
√w_Li°
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
size
 = 0, 
Sass_Sï¨©‹
 
£p
 = Li°::
•a˚
, 
boﬁ
 
¨gl
 = 
Ál£
);

42 
M≠
* 
√w_M≠
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
size
 = 0);

43 
	gBö¨y_Ex¥essi⁄
<
	gAND
>* 
√w_And
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

44 
	gBö¨y_Ex¥essi⁄
<
	gOR
>* 
√w_Or
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

45 
	gBö¨y_Ex¥essi⁄
<
	gEQ
>* 
√w_Eq
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

46 
	gBö¨y_Ex¥essi⁄
<
	gNEQ
>* 
√w_Neq
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

47 
	gBö¨y_Ex¥essi⁄
<
	gGT
>* 
√w_Gt
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

48 
	gBö¨y_Ex¥essi⁄
<
	gGTE
>* 
√w_Gã
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

49 
	gBö¨y_Ex¥essi⁄
<
	gLT
>* 
√w_Lt
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

50 
	gBö¨y_Ex¥essi⁄
<
	gLTE
>* 
√w_Lã
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

51 
	gBö¨y_Ex¥essi⁄
<
	gADD
>* 
√w_Add
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

52 
	gBö¨y_Ex¥essi⁄
<
	gSUB
>* 
√w_Sub
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

53 
	gBö¨y_Ex¥essi⁄
<
	gMUL
>* 
√w_Mul
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

54 
	gBö¨y_Ex¥essi⁄
<
	gDIV
>* 
√w_Div
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
);

55 
Neg©i⁄
* 
√w_Neg©i⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
o
);

56 
Fun˘i⁄_CÆl
* 
√w_Fun˘i⁄_CÆl
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
n
, 
Argumíts
* 
¨gs
);

57 
V¨übÀ
* 
√w_V¨übÀ
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
);

58 
	gTextuÆ
<
	gNUMBER
>* 
√w_TextuÆ_Numbî
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
vÆ
);

59 
	gTextuÆ
<
	gPERCENTAGE
>* 
√w_TextuÆ_Pî˚¡age
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
vÆ
);

60 
	gTextuÆ
<
	gDIMENSION
>* 
√w_TextuÆ_Dimísi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
vÆ
);

61 
	gTextuÆ
<
	gHEX
>* 
√w_TextuÆ_Hex
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
vÆ
);

62 
Numbî
* 
√w_Numbî
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
vÆ
);

63 
Pî˚¡age
* 
√w_Pî˚¡age
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
vÆ
);

64 
Dimísi⁄
* 
√w_Dimísi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
vÆ
, std::°rög 
unô
);

65 
Cﬁ‹
* 
√w_Cﬁ‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
r
, 
g
, 
b
, 
a
 = 1, std::°rög 
di•
 = "");

66 
Boﬁón
* 
√w_Boﬁón
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
boﬁ
 
vÆ
);

67 
Såög_Schema
* 
√w_Såög_Schema
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
size
 = 0);

68 
Såög_C⁄°™t
* 
√w_Såög_C⁄°™t
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
vÆ
);

69 
Såög_C⁄°™t
* 
√w_Såög_C⁄°™t
(
°d
::
°rög
 
p
, 
size_t
 
l
, c⁄° * 
beg
);

70 
Såög_C⁄°™t
* 
√w_Såög_C⁄°™t
(
°d
::
°rög
 
p
, 
size_t
 
l
, c⁄° * 
beg
, c⁄° * 
íd
);

71 
Suµ‹ts_C⁄dôi⁄
* 
√w_Suµ‹ts_C⁄dôi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
f
, 
Ex¥essi⁄
* 
v
);

72 
Medü_Ex¥essi⁄
* 
√w_Medü_Ex¥essi⁄
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
f
, 
Ex¥essi⁄
* 
v
);

73 
P¨ít_Sñe˘‹
* 
√w_P¨ít_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Sñe˘‹
* 
s
);

75 
P¨amëî
* 
√w_P¨amëî
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
Ex¥essi⁄
* 
def
 = 0, 
boﬁ
 
ª°
 = 
Ál£
);

76 
P¨amëîs
* 
√w_P¨amëîs
(
°d
::
°rög
 
p
, 
size_t
 
l
);

77 
Argumít
* 
√w_Argumít
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Ex¥essi⁄
* 
vÆ
, std::°rög 
n
 = "", 
boﬁ
 
ª°
 = 
Ál£
);

78 
Argumíts
* 
√w_Argumíts
(
°d
::
°rög
 
p
, 
size_t
 
l
);

80 
Sñe˘‹_Schema
* 
√w_Sñe˘‹_Schema
(
°d
::
°rög
 
p
, 
size_t
 
l
, 
Såög
* 
c
);

81 
Aâribuã_Sñe˘‹
* 
√w_Aâribuã_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, std::°rög 
m
, 
Såög
* 
v
);

82 
Sim∂e_Sñe˘‹
* 
√w_Sim∂e_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
c
);

83 
Re„ªn˚_Sñe˘‹
* 
√w_Re„ªn˚_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
);

84 
Pœ˚hﬁdî_Sñe˘‹
* 
√w_Pœ˚hﬁdî_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
);

85 
P£udo_Sñe˘‹
* 
√w_P£udo_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
Ex¥essi⁄
* 
ex¥
 = 0);

86 
Wøµed_Sñe˘‹
* 
√w_Wøµed_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, std::°rög 
n
, 
Sim∂e_Ba£
* 
£l
);

87 
Compound_Sñe˘‹
* 
√w_Compound_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
s
 = 0);

88 
Com∂ex_Sñe˘‹
* 
√w_Com∂ex_Sñe˘‹
(
°d
::
°rög
 
p
, 
size_t
 
l
, Com∂ex_Sñe˘‹::
Combö©‹
 
c
, Com∂ex_Sñe˘‹* 
˘x
, 
Compound_Sñe˘‹
* 
£l
);

89 
Sñe˘‹_Li°
* 
√w_Sñe˘‹_Li°
(
°d
::
°rög
 
p
, 
size_t
 
l
, size_à
s
 = 0);

	@node_modules/node-sass/src/libsass/src/ast_fwd_decl.hpp

1 #i‚de‡
SASS_AST_FWD_DECL_H


2 
	#SASS_AST_FWD_DECL_H


	)

7 
«me•a˚
 
	gSass
 {

9 
˛ass
 
	gAST_Node
;

11 
˛ass
 
	gSèãmít
;

12 
˛ass
 
	gBlock
;

13 
˛ass
 
	gRuÀ£t
;

14 
˛ass
 
	gPr›£t
;

15 
˛ass
 
	gBubbÀ
;

16 
˛ass
 
	gMedü_Block
;

17 
˛ass
 
	gSuµ‹ts_Block
;

18 
˛ass
 
	gDúe˘ive
;

19 
˛ass
 
	gKey‰ame_RuÀ
;

20 
˛ass
 
	gAt_RoŸ_Block
;

21 
˛ass
 
	gDe˛¨©i⁄
;

22 
˛ass
 
	gAssignmít
;

23 
˛ass
 
	gImp‹t
;

24 
˛ass
 
	gImp‹t_Stub
;

25 
˛ass
 
	gW¨nög
;

26 
˛ass
 
	gEº‹
;

27 
˛ass
 
	gDebug
;

28 
˛ass
 
	gCommít
;

29 
˛ass
 
	gIf
;

30 
˛ass
 
	gF‹
;

31 
˛ass
 
	gEach
;

32 
˛ass
 
	gWhûe
;

33 
˛ass
 
	gRëu∫
;

34 
˛ass
 
	gC⁄ã¡
;

35 
˛ass
 
	gExãnsi⁄
;

36 
˛ass
 
	gDeföôi⁄
;

37 
˛ass
 
	gMixö_CÆl
;

39 
˛ass
 
	gVÆue
;

40 
˛ass
 
	gEx¥essi⁄
;

41 
˛ass
 
	gLi°
;

42 
˛ass
 
	gM≠
;

43 
˛ass
 
	gBö¨y_Ex¥essi⁄
;

44 
˛ass
 
	gU«ry_Ex¥essi⁄
;

45 
˛ass
 
	gFun˘i⁄_CÆl
;

46 
˛ass
 
	gFun˘i⁄_CÆl_Schema
;

47 
˛ass
 
	gCu°om_W¨nög
;

48 
˛ass
 
	gCu°om_Eº‹
;

49 
˛ass
 
	gV¨übÀ
;

50 
˛ass
 
	gTextuÆ
;

51 
˛ass
 
	gNumbî
;

52 
˛ass
 
	gCﬁ‹
;

53 
˛ass
 
	gBoﬁón
;

54 
˛ass
 
	gSåög_Schema
;

55 
˛ass
 
	gSåög
;

56 
˛ass
 
	gSåög_C⁄°™t
;

57 
˛ass
 
	gSåög_QuŸed
;

58 
˛ass
 
	gMedü_Quîy
;

59 
˛ass
 
	gMedü_Quîy_Ex¥essi⁄
;

60 
˛ass
 
	gSuµ‹ts_C⁄dôi⁄
;

61 
˛ass
 
	gSuµ‹ts_O≥øt‹
;

62 
˛ass
 
	gSuµ‹ts_Neg©i⁄
;

63 
˛ass
 
	gSuµ‹ts_De˛¨©i⁄
;

64 
˛ass
 
	gSuµ‹ts_I¡îpﬁ©i⁄
;

65 
˛ass
 
	gAt_RoŸ_Quîy
;

66 
˛ass
 
	gNuŒ
;

67 
˛ass
 
	gP¨ít_Sñe˘‹
;

69 
˛ass
 
	gP¨amëî
;

70 
˛ass
 
	gP¨amëîs
;

71 
˛ass
 
	gArgumít
;

72 
˛ass
 
	gArgumíts
;

74 
˛ass
 
	gSñe˘‹
;

75 
˛ass
 
	gSñe˘‹_Schema
;

76 
˛ass
 
	gSñe˘‹_Pœ˚hﬁdî
;

77 
˛ass
 
	gTy≥_Sñe˘‹
;

78 
˛ass
 
	gSñe˘‹_QuÆifõr
;

79 
˛ass
 
	gAâribuã_Sñe˘‹
;

80 
˛ass
 
	gP£udo_Sñe˘‹
;

81 
˛ass
 
	gWøµed_Sñe˘‹
;

82 
˛ass
 
	gCompound_Sñe˘‹
;

83 
˛ass
 
	gCom∂ex_Sñe˘‹
;

84 
˛ass
 
	gSñe˘‹_Li°
;

87 
˛ass
 
	gC⁄ãxt
;

	@node_modules/node-sass/src/libsass/src/b64/cencode.h

8 #i‚de‡
BASE64_CENCODE_H


9 
	#BASE64_CENCODE_H


	)

13 
	m°ï_A
, 
	m°ï_B
, 
	m°ï_C


14 } 
	tba£64_ícode°ï
;

18 
ba£64_ícode°ï
 
	m°ï
;

19 
	mªsu…
;

20 
	m°ïcou¡
;

21 } 
	tba£64_ícode°©e
;

23 
ba£64_öô_ícode°©e
(
ba£64_ícode°©e
* 
°©e_ö
);

25 
ba£64_ícode_vÆue
(
vÆue_ö
);

27 
ba£64_ícode_block
(c⁄° * 
∂aöãxt_ö
, 
Àngth_ö
, * 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
);

29 
ba£64_ícode_blockíd
(* 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
);

	@node_modules/node-sass/src/libsass/src/b64/encode.h

8 #i‚de‡
BASE64_ENCODE_H


9 
	#BASE64_ENCODE_H


	)

11 
	~<io°ªam
>

13 
«me•a˚
 
	gba£64


17 
	~"˚ncode.h
"

20 
	sícodî


22 
ba£64_ícode°©e
 
_°©e
;

23 
_buf„rsize
;

25 
ícodî
(
buf„rsize_ö
 = 
BUFFERSIZE
)

26 : 
_buf„rsize
(
buf„rsize_ö
)

29 
ícode
(
vÆue_ö
)

31  
ba£64_ícode_vÆue
(
vÆue_ö
);

34 
ícode
(c⁄° * 
code_ö
, c⁄° 
Àngth_ö
, * 
∂aöãxt_out
)

36  
ba£64_ícode_block
(
code_ö
, 
Àngth_ö
, 
∂aöãxt_out
, &
_°©e
);

39 
ícode_íd
(* 
∂aöãxt_out
)

41  
ba£64_ícode_blockíd
(
∂aöãxt_out
, &
_°©e
);

44 
ícode
(
°d
::
i°ªam
& 
i°ªam_ö
, std::
o°ªam
& 
o°ªam_ö
)

46 
ba£64_öô_ícode°©e
(&
_°©e
);

48 c⁄° 
N
 = 
_buf„rsize
;

49 * 
∂aöãxt
 = 
√w
 [
N
];

50 * 
code
 = 
√w
 [2*
N
];

51 
∂aöÀngth
;

52 
codñígth
;

56 
i°ªam_ö
.
ªad
(
∂aöãxt
, 
N
);

57 
∂aöÀngth
 = 
°©ic_ˇ°
<>(
i°ªam_ö
.
gcou¡
());

59 
codñígth
 = 
ícode
(
∂aöãxt
, 
∂aöÀngth
, 
code
);

60 
o°ªam_ö
.
wrôe
(
code
, 
codñígth
);

62 
i°ªam_ö
.
good
(Ë&& 
∂aöÀngth
 > 0);

64 
codñígth
 = 
ícode_íd
(
code
);

65 
o°ªam_ö
.
wrôe
(
code
, 
codñígth
);

67 
ba£64_öô_ícode°©e
(&
_°©e
);

69 
dñëe
 [] 
code
;

70 
dñëe
 [] 
∂aöãxt
;

	@node_modules/node-sass/src/libsass/src/backtrace.hpp

1 #i‚de‡
SASS_BACKTRACE_H


2 
	#SASS_BACKTRACE_H


	)

4 
	~<s°ªam
>

6 
	~"fûe.hµ
"

7 
	~"posôi⁄.hµ
"

9 
«me•a˚
 
	gSass
 {

12 
	sBackåa˚
 {

14 
Backåa˚
* 
	g∑ª¡
;

15 
P¨£rSèã
 
	gp°©e
;

16 
	g°d
::
°rög
 
ˇŒî
;

18 
Backåa˚
(Backåa˚* 
¥n
, 
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
c
)

19 : 
∑ª¡
(
¥n
),

20 
p°©e
(pstate),

21 
ˇŒî
(
c
)

24 
	g°d
::
°rög
 
to_°rög
(
boﬁ
 
w¨nög
 = 
Ál£
)

26 
size_t
 
i
 = -1;

27 
	g°d
::
°rög°ªam
 
ss
;

28 
	g°d
::
°rög
 
cwd
(
Sass
::
Fûe
::
gë_cwd
());

29 
Backåa˚
* 
	gthis_poöt
 = 
this
;

31 i‡(!
	gw¨nög
Ë
	gss
 << 
	g°d
::
ídl
 << "Backtrace:";

33 
	gthis_poöt
->
	g∑ª¡
) {

36 
	g°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
this_poöt
->
p°©e
.
∑th
, 
cwd
, cwd));

38 i‡(
	gw¨nög
) {

39 
	gss
 << 
	g°d
::
ídl


41 << (++
i
 == 0 ? "on" : "from")

43 << 
this_poöt
->
p°©e
.
löe
 + 1

45 << 
ªl_∑th
;

47 
	gss
 << 
	g°d
::
ídl


49 << 
ªl_∑th


51 << 
this_poöt
->
p°©e
.
löe
 + 1

52 << 
this_poöt
->
∑ª¡
->
ˇŒî
;

55 
	gthis_poöt
 = 
this_poöt
->
∑ª¡
;

58  
	gss
.
°r
();

61 
size_t
 
dïth
()

63 
size_t
 
	gd
 = 0;

64 
Backåa˚
* 
	gp
 = 
∑ª¡
;

65 
	gp
) {

66 ++
	gd
;

67 
	gp
 = 
p
->
∑ª¡
;

69  
	gd
-1;

	@node_modules/node-sass/src/libsass/src/base64vlq.cpp

1 
	~"ßss.hµ
"

2 
	~"ba£64vlq.hµ
"

4 
«me•a˚
 
	gSass
 {

6 
	g°d
::
°rög
 
Ba£64VLQ
::
ícode
(c⁄° 
numbî
) const

8 
°d
::
°rög
 
ícoded
 = "";

10 
	gvlq
 = 
to_vlq_sig√d
(
numbî
);

13 
	gdigô
 = 
vlq
 & 
VLQ_BASE_MASK
;

14 
	gvlq
 >>
VLQ_BASE_SHIFT
;

15 i‡(
	gvlq
 > 0) {

16 
	gdigô
 |
VLQ_CONTINUATION_BIT
;

18 
	gícoded
 +
ba£64_ícode
(
digô
);

19 } 
	gvlq
 > 0);

21  
	gícoded
;

24 
	gBa£64VLQ
::
ba£64_ícode
(c⁄° 
numbî
) const

26 
ödex
 = 
numbî
;

27 i‡(
	gödex
 < 0) index = 0;

28 i‡(
	gödex
 > 63) index = 63;

29  
	gCHARACTERS
[
ödex
];

32 
	gBa£64VLQ
::
to_vlq_sig√d
(c⁄° 
numbî
) const

34  (
numbî
 < 0) ? ((-number) << 1) + 1 : (number << 1) + 0;

37 c⁄° * 
	gBa£64VLQ
::
CHARACTERS
 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

39 c⁄° 
	gBa£64VLQ
::
VLQ_BASE_SHIFT
 = 5;

40 c⁄° 
	gBa£64VLQ
::
VLQ_BASE
 = 1 << 
VLQ_BASE_SHIFT
;

41 c⁄° 
	gBa£64VLQ
::
VLQ_BASE_MASK
 = 
VLQ_BASE
 - 1;

42 c⁄° 
	gBa£64VLQ
::
VLQ_CONTINUATION_BIT
 = 
VLQ_BASE
;

	@node_modules/node-sass/src/libsass/src/base64vlq.hpp

1 #i‚de‡
SASS_BASE64VLQ_H


2 
	#SASS_BASE64VLQ_H


	)

4 
	~<°rög
>

6 
«me•a˚
 
	gSass
 {

8 ˛as†
	cBa£64VLQ
 {

10 
	gpublic
:

12 
°d
::
°rög
 
ícode
(c⁄° 
numbî
) const;

14 
	g¥iv©e
:

16 
ba£64_ícode
(c⁄° 
numbî
) const;

18 
to_vlq_sig√d
(c⁄° 
numbî
) const;

20 c⁄° * 
	gCHARACTERS
;

22 c⁄° 
	gVLQ_BASE_SHIFT
;

23 c⁄° 
	gVLQ_BASE
;

24 c⁄° 
	gVLQ_BASE_MASK
;

25 c⁄° 
	gVLQ_CONTINUATION_BIT
;

	@node_modules/node-sass/src/libsass/src/bind.cpp

1 
	~"ßss.hµ
"

2 
	~"böd.hµ
"

3 
	~"a°.hµ
"

4 
	~"c⁄ãxt.hµ
"

5 
	~"evÆ.hµ
"

6 
	~<m≠
>

7 
	~<io°ªam
>

8 
	~<s°ªam
>

10 
«me•a˚
 
	gSass
 {

12 
böd
(
°d
::
°rög
 
ty≥
, std::°rög 
«me
, 
P¨amëîs
* 
ps
, 
Argumíts
* 
as
, 
C⁄ãxt
* 
˘x
, 
Env
* 
ív
, 
EvÆ
* 
evÆ
)

14 
	g°d
::
°rög
 
ˇŒì
(
ty≥
 + " " + 
«me
);

16 
Li°ize
 
li°ize
(
˘x
->
mem
);

17 
	g°d
::
m≠
<
°d
::
°rög
, 
	gP¨amëî
*> 
	g∑øm_m≠
;

19 
size_t
 
	gi
 = 0, 
	gL
 = 
as
->
Àngth
(); i < L; ++i) {

20 i‡◊utÿ
	g°r
 = 
dy«mic_ˇ°
<
Såög_QuŸed
*>((*
as
)[
i
]->
vÆue
())) {

22 i‡(
°r
->
quŸe_m¨k
()) {

23 
°r
->
quŸe_m¨k
('*');

24 
	g°r
->
is_dñayed
(
åue
);

31 
size_t
 
	gi
 = 0, 
	gL
 = 
ps
->
Àngth
(); i < L; ++i) {

32 
P¨amëî
* 
	gp
 = (*
ps
)[
i
];

33 
	g∑øm_m≠
[
p
->
«me
()] =Ö;

40 
size_t
 
	gù
 = 0, 
	gLP
 = 
ps
->
Àngth
();

41 
size_t
 
	gü
 = 0, 
	gLA
 = 
as
->
Àngth
();

42 
	gü
 < 
	gLA
) {

43 
Argumít
* 
	ga
 = (*
as
)[
ü
];

44 i‡(
	gù
 >
LP
) {

46 i‡(
a
->
is_ª°_¨gumít
()) {

47 i‡(
Li°
* 
l
 = 
dy«mic_ˇ°
<Li°*>(
a
->
vÆue
())) {

48 i‡(
l
->
Àngth
() == 0) {

49 ++ 
ü
; ;

53 
	g°d
::
°rög°ªam
 
msg
;

54 
	gmsg
 << "wr⁄gÇumbî o‡¨gumít†(" << 
	gLA
 << " f‹ " << 
	gLP
 << ")";

55 
	gmsg
 << " f‹ `" << 
	g«me
 << "'";

56  
îr‹
(
msg
.
°r
(), 
as
->
p°©e
());

58 
P¨amëî
* 
	gp
 = (*
ps
)[
ù
];

61 i‡(
	gp
->
is_ª°_∑ømëî
()) {

63 i‡(
	ga
->
is_ª°_¨gumít
()) {

66 i‡(
Li°
* 
	gª°
 = 
dy«mic_ˇ°
<Li°*>(
a
->
vÆue
())) {

68 
Li°
* 
¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
->
mem
, List,

69 
p
->
p°©e
(),

71 
ª°
->
£∑øt‹
(),

72 
åue
);

74 
Ex¥essi⁄
* 
	gôem
 : 
ª°
->
ñemíts
()) {

75 i‡(
Argumít
* 
¨g
 = 
dy«mic_ˇ°
<Argumít*>(
ôem
)) {

76 (*
¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
, *
¨g
);

78 (*
	g¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
,

79 
ôem
->
p°©e
(),

80 
ôem
,

82 
Ál£
,

83 
Ál£
);

87 
	gív
->
loˇl_‰ame
()[
p
->
«me
()] = 
¨gli°
;

91 
throw
 
	g°d
::
ru¡ime_îr‹
("invalid state");

93 } i‡(
	ga
->
is_keyw‹d_¨gumít
()) {

96 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
->
mem
, Li°, 
p
->
p°©e
(), 0, 
SASS_COMMA
, 
åue
);

97 
	gív
->
loˇl_‰ame
()[
p
->
«me
()] = 
¨gli°
;

98 
M≠
* 
	g¨gm≠
 = 
°©ic_ˇ°
<M≠*>(
a
->
vÆue
());

99 autÿ
	gkey
 : 
¨gm≠
->
keys
()) {

100 
°d
::
°rög
 
«me
 = 
unquŸe
(
°©ic_ˇ°
<
Såög_C⁄°™t
*>(
key
)->
vÆue
());

101 (*
	g¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
,

102 
key
->
p°©e
(),

103 
¨gm≠
->
©
(
key
),

104 "$" + 
«me
,

105 
Ál£
,

106 
Ál£
);

112 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
->
mem
, List,

113 
p
->
p°©e
(),

115 
SASS_COMMA
,

116 
åue
);

118 
	gü
 < 
	gLA
) {

120 
	ga
 = (*
as
)[
ü
++];

122 
Li°
* 
	gls
 = 
dy«mic_ˇ°
<Li°*>(
a
->
vÆue
());

124 i‡(
	gls
 &&Üs->
em±y
(Ë&& 
	ga
->
is_ª°_¨gumít
()) ;

126 i‡(
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>(
a
->
vÆue
())) {

127 (*
¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
, *
¨g
);

130 i‡(
	ga
->
is_ª°_¨gumít
()) {

132 i‡(
Li°
* 
	gª°
 = 
dy«mic_ˇ°
<Li°*>(
a
->
vÆue
())) {

133 
¨gli°
->
£∑øt‹
(
ª°
->separator());

135 
size_t
 
	gi
 = 0, 
	gL
 = 
ª°
->
size
(); i < L; ++i) {

136 (*
	g¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
,

137 (*
ª°
)[
i
]->
p°©e
(),

138 (*
ª°
)[
i
],

140 
Ál£
,

141 
Ál£
);

149 (*
	g¨gli°
Ë<< 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
,

150 
a
->
p°©e
(),

151 
a
->
vÆue
(),

152 
a
->
«me
(),

153 
Ál£
,

154 
Ál£
);

158 
	gív
->
loˇl_‰ame
()[
p
->
«me
()] = 
¨gli°
;

161 ++
	gù
;

167 i‡(
	ga
->
is_ª°_¨gumít
()) {

169 
Li°
* 
	g¨gli°
 = 
°©ic_ˇ°
<Li°*>(
a
->
vÆue
());

171 i‡(!
	g¨gli°
->
Àngth
()) {

174 i‡(
	g¨gli°
->
Àngth
(Ë> 
	gLP
 - 
	gù
 && !
	gps
->
has_ª°_∑ømëî
()) {

175 
	g¨g_cou¡
 = (
¨gli°
->
Àngth
(Ë+ 
LA
 - 1);

176 
	g°d
::
°rög°ªam
 
msg
;

177 
	gmsg
 << 
	gˇŒì
 << "Åake†" << 
	gLP
;

178 
	gmsg
 << (
	gLP
 == 1 ? "árgument" : "árguments");

179 
	gmsg
 << " buà" << 
	g¨g_cou¡
;

180 
	gmsg
 << (
	g¨g_cou¡
 == 1 ? " wasÖassed" : " wereÖassed.");

181 
dïªˇãd_böd
(
msg
.
°r
(), 
as
->
p°©e
());

183 
	g¨gli°
->
Àngth
(Ë> 
	gLP
 - 
	gù
) {

184 
	g¨gli°
->
ñemíts
().
îa£
(
¨gli°
->ñemíts().
íd
() - 1);

189 i‡(!(
	ga
 = 
dy«mic_ˇ°
<
Argumít
*>((*
¨gli°
)[0]))) {

190 
Ex¥essi⁄
* 
a_to_c⁄vît
 = (*
¨gli°
)[0];

191 
	ga
 = 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Argumít
,

192 
a_to_c⁄vît
->
p°©e
(),

193 
a_to_c⁄vît
,

195 
Ál£
,

196 
Ál£
);

198 
	g¨gli°
->
ñemíts
().
îa£
(
¨gli°
->ñemíts().
begö
());

199 i‡(!
	g¨gli°
->
Àngth
(Ë|| (!¨gli°->
is_¨gli°
(Ë&& 
	gù
 + 1 =
LP
)) {

200 ++
ü
;

203 } i‡(
	ga
->
is_keyw‹d_¨gumít
()) {

204 
M≠
* 
	g¨gm≠
 = 
°©ic_ˇ°
<M≠*>(
a
->
vÆue
());

206 autÿ
	gkey
 : 
¨gm≠
->
keys
()) {

207 
°d
::
°rög
 
«me
 = "$" + 
unquŸe
(
°©ic_ˇ°
<
Såög_C⁄°™t
*>(
key
)->
vÆue
());

209 i‡(!
	g∑øm_m≠
.
cou¡
(
«me
)) {

210 
	g°d
::
°rög°ªam
 
msg
;

211 
	gmsg
 << 
	gˇŒì
 << " ha†nÿ∑ømëîÇamed " << 
	g«me
;

212 
îr‹
(
msg
.
°r
(), 
a
->
p°©e
());

214 
	gív
->
loˇl_‰ame
()[
«me
] = 
¨gm≠
->
©
(
key
);

216 ++
	gü
;

219 ++
	gü
;

222 i‡(
	ga
->
«me
().
em±y
()) {

223 i‡(
	gív
->
has_loˇl
(
p
->
«me
())) {

224 
	g°d
::
°rög°ªam
 
msg
;

225 
	gmsg
 << "∑ømëî " << 
	gp
->
«me
()

226 << "Örovided m‹êth™ on˚ i¿ˇŒÅÿ" << 
	gˇŒì
;

227 
îr‹
(
msg
.
°r
(), 
a
->
p°©e
());

230 
	gív
->
loˇl_‰ame
()[
p
->
«me
()] = 
a
->
vÆue
();

231 ++
	gù
;

235 i‡(!
	g∑øm_m≠
.
cou¡
(
a
->
«me
())) {

236 
	g°d
::
°rög°ªam
 
msg
;

237 
	gmsg
 << 
	gˇŒì
 << " ha†nÿ∑ømëîÇamed " << 
	ga
->
«me
();

238 
îr‹
(
msg
.
°r
(), 
a
->
p°©e
());

240 i‡(
	g∑øm_m≠
[
a
->
«me
()]->
is_ª°_∑ømëî
()) {

241 
	g°d
::
°rög°ªam
 
msg
;

242 
	gmsg
 << "¨gumíà" << 
	ga
->
«me
(Ë<< " o‡" << 
	gˇŒì


244 
îr‹
(
msg
.
°r
(), 
a
->
p°©e
());

246 i‡(
	gív
->
has_loˇl
(
a
->
«me
())) {

247 
	g°d
::
°rög°ªam
 
msg
;

248 
	gmsg
 << "∑ømëî " << 
	gp
->
«me
()

249 << "¥ovided m‹êth™ on˚ i¿ˇŒÅÿ" << 
	gˇŒì
;

250 
îr‹
(
msg
.
°r
(), 
a
->
p°©e
());

252 
	gív
->
loˇl_‰ame
()[
a
->
«me
()] =á->
vÆue
();

260 
size_t
 
	gi
 = 
ù
; i < 
	gLP
; ++i) {

261 
P¨amëî
* 
	gÀ·ovî
 = (*
ps
)[
i
];

265 i‡(!
	gív
->
has_loˇl
(
À·ovî
->
«me
())) {

266 i‡(
	gÀ·ovî
->
is_ª°_∑ømëî
()) {

267 
	gív
->
loˇl_‰ame
()[
À·ovî
->
«me
()] = 
SASS_MEMORY_NEW
(
˘x
->
mem
, 
Li°
,

268 
À·ovî
->
p°©e
(),

270 
SASS_COMMA
,

271 
åue
);

273 i‡(
	gÀ·ovî
->
deÁu…_vÆue
()) {

274 
Ex¥essi⁄
* 
	gdv
 = 
À·ovî
->
deÁu…_vÆue
()->
≥rf‹m
(
evÆ
);

275 
	gív
->
loˇl_‰ame
()[
À·ovî
->
«me
()] = 
dv
;

279 
	g°d
::
°rög°ªam
 
msg
;

280 
	gmsg
 << "ªquúedÖ¨amëî " << 
	gÀ·ovî
->
«me
()

281 << " i†missög i¿ˇŒÅÿ" << 
	gˇŒì
;

282 
îr‹
(
msg
.
°r
(), 
as
->
p°©e
());

	@node_modules/node-sass/src/libsass/src/bind.hpp

1 #i‚de‡
SASS_BIND_H


2 
	#SASS_BIND_H


	)

4 
	~<°rög
>

5 
	~"li°ize.hµ
"

6 
	~"ívú⁄mít.hµ
"

8 
«me•a˚
 
	gSass
 {

9 
˛ass
 
	gAST_Node
;

10 
˛ass
 
	gP¨amëîs
;

11 
˛ass
 
	gArgumíts
;

12 
˛ass
 
	gC⁄ãxt
;

13 
˛ass
 
	gEvÆ
;

14 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

16 
böd
(
°d
::
°rög
 
ty≥
, std::°rög 
«me
, 
P¨amëîs
*, 
Argumíts
*, 
C⁄ãxt
*, 
Env
*, 
EvÆ
*);

	@node_modules/node-sass/src/libsass/src/c99func.c

24 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1900

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°d¨g.h
>

30 
	$c99_v¢¥ötf
(* 
°r
, 
size_t
 
size
, c⁄° * 
f‹m©
, 
va_li°
 
≠
)

32 
cou¡
 = -1;

34 i‡(
size
 != 0)

35 
cou¡
 = 
	`_v¢¥ötf_s
(
°r
, 
size
, 
_TRUNCATE
, 
f‹m©
, 
≠
);

36 i‡(
cou¡
 == -1)

37 
cou¡
 = 
	`_vs˝rötf
(
f‹m©
, 
≠
);

39  
cou¡
;

40 
	}
}

42 
	$¢¥ötf
(* 
°r
, 
size_t
 
size
, c⁄° * 
f‹m©
, ...)

44 
cou¡
;

45 
va_li°
 
≠
;

47 
	`va_°¨t
(
≠
, 
f‹m©
);

48 
cou¡
 = 
	`c99_v¢¥ötf
(
°r
, 
size
, 
f‹m©
, 
≠
);

49 
	`va_íd
(
≠
);

51  
cou¡
;

52 
	}
}

	@node_modules/node-sass/src/libsass/src/cencode.c

8 
	~"b64/˚ncode.h
"

10 
	$ba£64_öô_ícode°©e
(
ba£64_ícode°©e
* 
°©e_ö
)

12 
°©e_ö
->
°ï
 = 
°ï_A
;

13 
°©e_ö
->
ªsu…
 = 0;

14 
°©e_ö
->
°ïcou¡
 = 0;

15 
	}
}

17 
	$ba£64_ícode_vÆue
(
vÆue_ö
)

19 c⁄° * 
ícodög
 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

20 i‡(
vÆue_ö
 > 63)  '=';

21  
ícodög
[()
vÆue_ö
];

22 
	}
}

24 
	$ba£64_ícode_block
(c⁄° * 
∂aöãxt_ö
, 
Àngth_ö
, * 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
)

26 c⁄° * 
∂aöch¨
 = 
∂aöãxt_ö
;

27 c⁄° * c⁄° 
∂aöãxãnd
 = 
∂aöãxt_ö
 + 
Àngth_ö
;

28 * 
codech¨
 = 
code_out
;

29 
ªsu…
;

30 
‰agmít
;

32 
ªsu…
 = 
°©e_ö
->result;

34 
°©e_ö
->
°ï
)

38 
°ï_A
:

39 i‡(
∂aöch¨
 =
∂aöãxãnd
)

41 
°©e_ö
->
ªsu…
 =Ñesult;

42 
°©e_ö
->
°ï
 = 
°ï_A
;

43  ()(
codech¨
 - 
code_out
);

45 
‰agmít
 = *
∂aöch¨
++;

46 
ªsu…
 = (
‰agmít
 & 0x0fc) >> 2;

47 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

48 
ªsu…
 = (
‰agmít
 & 0x003) << 4;

49 
°ï_B
:

50 i‡(
∂aöch¨
 =
∂aöãxãnd
)

52 
°©e_ö
->
ªsu…
 =Ñesult;

53 
°©e_ö
->
°ï
 = 
°ï_B
;

54  ()(
codech¨
 - 
code_out
);

56 
‰agmít
 = *
∂aöch¨
++;

57 
ªsu…
 |(
‰agmít
 & 0x0f0) >> 4;

58 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

59 
ªsu…
 = (
‰agmít
 & 0x00f) << 2;

60 
°ï_C
:

61 i‡(
∂aöch¨
 =
∂aöãxãnd
)

63 
°©e_ö
->
ªsu…
 =Ñesult;

64 
°©e_ö
->
°ï
 = 
°ï_C
;

65  ()(
codech¨
 - 
code_out
);

67 
‰agmít
 = *
∂aöch¨
++;

68 
ªsu…
 |(
‰agmít
 & 0x0c0) >> 6;

69 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

70 
ªsu…
 = (
‰agmít
 & 0x03f) >> 0;

71 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

73 ++(
°©e_ö
->
°ïcou¡
);

77  ()(
codech¨
 - 
code_out
);

78 
	}
}

80 
	$ba£64_ícode_blockíd
(* 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
)

82 * 
codech¨
 = 
code_out
;

84 
°©e_ö
->
°ï
)

86 
°ï_B
:

87 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
°©e_ö
->
ªsu…
);

88 *
codech¨
++ = '=';

89 *
codech¨
++ = '=';

91 
°ï_C
:

92 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
°©e_ö
->
ªsu…
);

93 *
codech¨
++ = '=';

95 
°ï_A
:

98 *
codech¨
++ = '\n';

100  ()(
codech¨
 - 
code_out
);

101 
	}
}

	@node_modules/node-sass/src/libsass/src/color_maps.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"cﬁ‹_m≠s.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
«me•a˚
 
	gCﬁ‹Names


9 c⁄° 
	gÆi˚blue
 [] = "aliceblue";

10 c⁄° 
	g™tiquewhôe
 [] = "antiquewhite";

11 c⁄° 
	gcy™
 [] = "cyan";

12 c⁄° 
	gaqua
 [] = "aqua";

13 c⁄° 
	gaquam¨öe
 [] = "aquamarine";

14 c⁄° 
	gazuª
 [] = "azure";

15 c⁄° 
	gbeige
 [] = "beige";

16 c⁄° 
	gbisque
 [] = "bisque";

17 c⁄° 
	gbœck
 [] = "black";

18 c⁄° 
	gbœnchedÆm⁄d
 [] = "blanchedalmond";

19 c⁄° 
	gblue
 [] = "blue";

20 c⁄° 
	gblueviﬁë
 [] = "blueviolet";

21 c⁄° 
	gbrown
 [] = "brown";

22 c⁄° 
	gbuæywood
 [] = "burlywood";

23 c⁄° 
	gˇdëblue
 [] = "cadetblue";

24 c⁄° 
	gch¨åeu£
 [] = "chartreuse";

25 c⁄° 
	gchocﬁ©e
 [] = "chocolate";

26 c⁄° 
	gc‹Æ
 [] = "coral";

27 c⁄° 
	gc‹nÊowîblue
 [] = "cornflowerblue";

28 c⁄° 
	gc‹nsûk
 [] = "cornsilk";

29 c⁄° 
	g¸ims⁄
 [] = "crimson";

30 c⁄° 
	gd¨kblue
 [] = "darkblue";

31 c⁄° 
	gd¨kcy™
 [] = "darkcyan";

32 c⁄° 
	gd¨kgﬁdírod
 [] = "darkgoldenrod";

33 c⁄° 
	gd¨kgøy
 [] = "darkgray";

34 c⁄° 
	gd¨kgªy
 [] = "darkgrey";

35 c⁄° 
	gd¨kgªí
 [] = "darkgreen";

36 c⁄° 
	gd¨kkhaki
 [] = "darkkhaki";

37 c⁄° 
	gd¨kmagíè
 [] = "darkmagenta";

38 c⁄° 
	gd¨kﬁivegªí
 [] = "darkolivegreen";

39 c⁄° 
	gd¨k‹™ge
 [] = "darkorange";

40 c⁄° 
	gd¨k‹chid
 [] = "darkorchid";

41 c⁄° 
	gd¨kªd
 [] = "darkred";

42 c⁄° 
	gd¨kßlm⁄
 [] = "darksalmon";

43 c⁄° 
	gd¨k£agªí
 [] = "darkseagreen";

44 c⁄° 
	gd¨k¶©eblue
 [] = "darkslateblue";

45 c⁄° 
	gd¨k¶©egøy
 [] = "darkslategray";

46 c⁄° 
	gd¨k¶©egªy
 [] = "darkslategrey";

47 c⁄° 
	gd¨kturquoi£
 [] = "darkturquoise";

48 c⁄° 
	gd¨kviﬁë
 [] = "darkviolet";

49 c⁄° 
	gdìµök
 [] = "deeppink";

50 c⁄° 
	gdìpskyblue
 [] = "deepskyblue";

51 c⁄° 
	gdimgøy
 [] = "dimgray";

52 c⁄° 
	gdimgªy
 [] = "dimgrey";

53 c⁄° 
	gdodgîblue
 [] = "dodgerblue";

54 c⁄° 
	gfúebrick
 [] = "firebrick";

55 c⁄° 
	gÊ‹Æwhôe
 [] = "floralwhite";

56 c⁄° 
	gf‹e°gªí
 [] = "forestgreen";

57 c⁄° 
	gmagíè
 [] = "magenta";

58 c⁄° 
	gfuchsü
 [] = "fuchsia";

59 c⁄° 
	ggaösb‹o
 [] = "gainsboro";

60 c⁄° 
	ggho°whôe
 [] = "ghostwhite";

61 c⁄° 
	ggﬁd
 [] = "gold";

62 c⁄° 
	ggﬁdírod
 [] = "goldenrod";

63 c⁄° 
	ggøy
 [] = "gray";

64 c⁄° 
	ggªy
 [] = "grey";

65 c⁄° 
	ggªí
 [] = "green";

66 c⁄° 
	ggªíyñlow
 [] = "greenyellow";

67 c⁄° 
	gh⁄eydew
 [] = "honeydew";

68 c⁄° 
	ghŸpök
 [] = "hotpink";

69 c⁄° 
	gödüƒed
 [] = "indianred";

70 c⁄° 
	gödigo
 [] = "indigo";

71 c⁄° 
	giv‹y
 [] = "ivory";

72 c⁄° 
	gkhaki
 [] = "khaki";

73 c⁄° 
	gœvídî
 [] = "lavender";

74 c⁄° 
	gœvídîblush
 [] = "lavenderblush";

75 c⁄° 
	gœwngªí
 [] = "lawngreen";

76 c⁄° 
	gÀm⁄chiff⁄
 [] = "lemonchiffon";

77 c⁄° 
	glightblue
 [] = "lightblue";

78 c⁄° 
	glightc‹Æ
 [] = "lightcoral";

79 c⁄° 
	glightcy™
 [] = "lightcyan";

80 c⁄° 
	glightgﬁdírodyñlow
 [] = "lightgoldenrodyellow";

81 c⁄° 
	glightgøy
 [] = "lightgray";

82 c⁄° 
	glightgªy
 [] = "lightgrey";

83 c⁄° 
	glightgªí
 [] = "lightgreen";

84 c⁄° 
	glighçök
 [] = "lightpink";

85 c⁄° 
	glightßlm⁄
 [] = "lightsalmon";

86 c⁄° 
	glight£agªí
 [] = "lightseagreen";

87 c⁄° 
	glightskyblue
 [] = "lightskyblue";

88 c⁄° 
	glight¶©egøy
 [] = "lightslategray";

89 c⁄° 
	glight¶©egªy
 [] = "lightslategrey";

90 c⁄° 
	glight°ìlblue
 [] = "lightsteelblue";

91 c⁄° 
	glightyñlow
 [] = "lightyellow";

92 c⁄° 
	glime
 [] = "lime";

93 c⁄° 
	glimegªí
 [] = "limegreen";

94 c⁄° 
	glöí
 [] = "linen";

95 c⁄° 
	gm¨o⁄
 [] = "maroon";

96 c⁄° 
	gmediumaquam¨öe
 [] = "mediumaquamarine";

97 c⁄° 
	gmediumblue
 [] = "mediumblue";

98 c⁄° 
	gmedium‹chid
 [] = "mediumorchid";

99 c⁄° 
	gmediumpuΩÀ
 [] = "mediumpurple";

100 c⁄° 
	gmedium£agªí
 [] = "mediumseagreen";

101 c⁄° 
	gmedium¶©eblue
 [] = "mediumslateblue";

102 c⁄° 
	gmedium•röggªí
 [] = "mediumspringgreen";

103 c⁄° 
	gmediumturquoi£
 [] = "mediumturquoise";

104 c⁄° 
	gmediumviﬁëªd
 [] = "mediumvioletred";

105 c⁄° 
	gmidnightblue
 [] = "midnightblue";

106 c⁄° 
	gmöt¸óm
 [] = "mintcream";

107 c⁄° 
	gmi°yro£
 [] = "mistyrose";

108 c⁄° 
	gmocˇsö
 [] = "moccasin";

109 c⁄° 
	g«vajowhôe
 [] = "navajowhite";

110 c⁄° 
	g«vy
 [] = "navy";

111 c⁄° 
	gﬁdœ˚
 [] = "oldlace";

112 c⁄° 
	gﬁive
 [] = "olive";

113 c⁄° 
	gﬁivedøb
 [] = "olivedrab";

114 c⁄° 
	g‹™ge
 [] = "orange";

115 c⁄° 
	g‹™gîed
 [] = "orangered";

116 c⁄° 
	g‹chid
 [] = "orchid";

117 c⁄° 
	g∑Àgﬁdírod
 [] = "palegoldenrod";

118 c⁄° 
	g∑Àgªí
 [] = "palegreen";

119 c⁄° 
	g∑Àturquoi£
 [] = "paleturquoise";

120 c⁄° 
	g∑Àviﬁëªd
 [] = "palevioletred";

121 c⁄° 
	g∑∑yawhù
 [] = "papayawhip";

122 c⁄° 
	g≥achpuff
 [] = "peachpuff";

123 c⁄° 
	g≥ru
 [] = "peru";

124 c⁄° 
	gpök
 [] = "pink";

125 c⁄° 
	g∂um
 [] = "plum";

126 c⁄° 
	gpowdîblue
 [] = "powderblue";

127 c⁄° 
	gpuΩÀ
 [] = "purple";

128 c⁄° 
	gªd
 [] = "red";

129 c⁄° 
	grosybrown
 [] = "rosybrown";

130 c⁄° 
	groyÆblue
 [] = "royalblue";

131 c⁄° 
	gßddÀbrown
 [] = "saddlebrown";

132 c⁄° 
	gßlm⁄
 [] = "salmon";

133 c⁄° 
	gßndybrown
 [] = "sandybrown";

134 c⁄° 
	g£agªí
 [] = "seagreen";

135 c⁄° 
	g£ashñl
 [] = "seashell";

136 c⁄° 
	gsõ¬a
 [] = "sienna";

137 c⁄° 
	gsûvî
 [] = "silver";

138 c⁄° 
	gskyblue
 [] = "skyblue";

139 c⁄° 
	g¶©eblue
 [] = "slateblue";

140 c⁄° 
	g¶©egøy
 [] = "slategray";

141 c⁄° 
	g¶©egªy
 [] = "slategrey";

142 c⁄° 
	g¢ow
 [] = "snow";

143 c⁄° 
	g•röggªí
 [] = "springgreen";

144 c⁄° 
	g°ìlblue
 [] = "steelblue";

145 c⁄° 
	gèn
 [] = "tan";

146 c⁄° 
	gãÆ
 [] = "teal";

147 c⁄° 
	gthi°À
 [] = "thistle";

148 c⁄° 
	gtom©o
 [] = "tomato";

149 c⁄° 
	gturquoi£
 [] = "turquoise";

150 c⁄° 
	gviﬁë
 [] = "violet";

151 c⁄° 
	gwhót
 [] = "wheat";

152 c⁄° 
	gwhôe
 [] = "white";

153 c⁄° 
	gwhôesmoke
 [] = "whitesmoke";

154 c⁄° 
	gyñlow
 [] = "yellow";

155 c⁄° 
	gyñlowgªí
 [] = "yellowgreen";

156 c⁄° 
	gªbecˇpuΩÀ
 [] = "rebeccapurple";

157 c⁄° 
	gå™•¨ít
 [] = "transparent";

160 
«me•a˚
 
	gCﬁ‹s
 {

161 c⁄° 
P¨£rSèã
 
cﬁ‹_èbÀ
("[COLOR TABLE]");

162 c⁄° 
Cﬁ‹
 
Æi˚blue
(
cﬁ‹_èbÀ
, 240, 248, 255, 1);

163 c⁄° 
Cﬁ‹
 
™tiquewhôe
(
cﬁ‹_èbÀ
, 250, 235, 215, 1);

164 c⁄° 
Cﬁ‹
 
cy™
(
cﬁ‹_èbÀ
, 0, 255, 255, 1);

165 c⁄° 
Cﬁ‹
 
aqua
(
cﬁ‹_èbÀ
, 0, 255, 255, 1);

166 c⁄° 
Cﬁ‹
 
aquam¨öe
(
cﬁ‹_èbÀ
, 127, 255, 212, 1);

167 c⁄° 
Cﬁ‹
 
azuª
(
cﬁ‹_èbÀ
, 240, 255, 255, 1);

168 c⁄° 
Cﬁ‹
 
beige
(
cﬁ‹_èbÀ
, 245, 245, 220, 1);

169 c⁄° 
Cﬁ‹
 
bisque
(
cﬁ‹_èbÀ
, 255, 228, 196, 1);

170 c⁄° 
Cﬁ‹
 
bœck
(
cﬁ‹_èbÀ
, 0, 0, 0, 1);

171 c⁄° 
Cﬁ‹
 
bœnchedÆm⁄d
(
cﬁ‹_èbÀ
, 255, 235, 205, 1);

172 c⁄° 
Cﬁ‹
 
blue
(
cﬁ‹_èbÀ
, 0, 0, 255, 1);

173 c⁄° 
Cﬁ‹
 
blueviﬁë
(
cﬁ‹_èbÀ
, 138, 43, 226, 1);

174 c⁄° 
Cﬁ‹
 
brown
(
cﬁ‹_èbÀ
, 165, 42, 42, 1);

175 c⁄° 
Cﬁ‹
 
buæywood
(
cﬁ‹_èbÀ
, 222, 184, 135, 1);

176 c⁄° 
Cﬁ‹
 
ˇdëblue
(
cﬁ‹_èbÀ
, 95, 158, 160, 1);

177 c⁄° 
Cﬁ‹
 
ch¨åeu£
(
cﬁ‹_èbÀ
, 127, 255, 0, 1);

178 c⁄° 
Cﬁ‹
 
chocﬁ©e
(
cﬁ‹_èbÀ
, 210, 105, 30, 1);

179 c⁄° 
Cﬁ‹
 
c‹Æ
(
cﬁ‹_èbÀ
, 255, 127, 80, 1);

180 c⁄° 
Cﬁ‹
 
c‹nÊowîblue
(
cﬁ‹_èbÀ
, 100, 149, 237, 1);

181 c⁄° 
Cﬁ‹
 
c‹nsûk
(
cﬁ‹_èbÀ
, 255, 248, 220, 1);

182 c⁄° 
Cﬁ‹
 
¸ims⁄
(
cﬁ‹_èbÀ
, 220, 20, 60, 1);

183 c⁄° 
Cﬁ‹
 
d¨kblue
(
cﬁ‹_èbÀ
, 0, 0, 139, 1);

184 c⁄° 
Cﬁ‹
 
d¨kcy™
(
cﬁ‹_èbÀ
, 0, 139, 139, 1);

185 c⁄° 
Cﬁ‹
 
d¨kgﬁdírod
(
cﬁ‹_èbÀ
, 184, 134, 11, 1);

186 c⁄° 
Cﬁ‹
 
d¨kgøy
(
cﬁ‹_èbÀ
, 169, 169, 169, 1);

187 c⁄° 
Cﬁ‹
 
d¨kgªy
(
cﬁ‹_èbÀ
, 169, 169, 169, 1);

188 c⁄° 
Cﬁ‹
 
d¨kgªí
(
cﬁ‹_èbÀ
, 0, 100, 0, 1);

189 c⁄° 
Cﬁ‹
 
d¨kkhaki
(
cﬁ‹_èbÀ
, 189, 183, 107, 1);

190 c⁄° 
Cﬁ‹
 
d¨kmagíè
(
cﬁ‹_èbÀ
, 139, 0, 139, 1);

191 c⁄° 
Cﬁ‹
 
d¨kﬁivegªí
(
cﬁ‹_èbÀ
, 85, 107, 47, 1);

192 c⁄° 
Cﬁ‹
 
d¨k‹™ge
(
cﬁ‹_èbÀ
, 255, 140, 0, 1);

193 c⁄° 
Cﬁ‹
 
d¨k‹chid
(
cﬁ‹_èbÀ
, 153, 50, 204, 1);

194 c⁄° 
Cﬁ‹
 
d¨kªd
(
cﬁ‹_èbÀ
, 139, 0, 0, 1);

195 c⁄° 
Cﬁ‹
 
d¨kßlm⁄
(
cﬁ‹_èbÀ
, 233, 150, 122, 1);

196 c⁄° 
Cﬁ‹
 
d¨k£agªí
(
cﬁ‹_èbÀ
, 143, 188, 143, 1);

197 c⁄° 
Cﬁ‹
 
d¨k¶©eblue
(
cﬁ‹_èbÀ
, 72, 61, 139, 1);

198 c⁄° 
Cﬁ‹
 
d¨k¶©egøy
(
cﬁ‹_èbÀ
, 47, 79, 79, 1);

199 c⁄° 
Cﬁ‹
 
d¨k¶©egªy
(
cﬁ‹_èbÀ
, 47, 79, 79, 1);

200 c⁄° 
Cﬁ‹
 
d¨kturquoi£
(
cﬁ‹_èbÀ
, 0, 206, 209, 1);

201 c⁄° 
Cﬁ‹
 
d¨kviﬁë
(
cﬁ‹_èbÀ
, 148, 0, 211, 1);

202 c⁄° 
Cﬁ‹
 
dìµök
(
cﬁ‹_èbÀ
, 255, 20, 147, 1);

203 c⁄° 
Cﬁ‹
 
dìpskyblue
(
cﬁ‹_èbÀ
, 0, 191, 255, 1);

204 c⁄° 
Cﬁ‹
 
dimgøy
(
cﬁ‹_èbÀ
, 105, 105, 105, 1);

205 c⁄° 
Cﬁ‹
 
dimgªy
(
cﬁ‹_èbÀ
, 105, 105, 105, 1);

206 c⁄° 
Cﬁ‹
 
dodgîblue
(
cﬁ‹_èbÀ
, 30, 144, 255, 1);

207 c⁄° 
Cﬁ‹
 
fúebrick
(
cﬁ‹_èbÀ
, 178, 34, 34, 1);

208 c⁄° 
Cﬁ‹
 
Ê‹Æwhôe
(
cﬁ‹_èbÀ
, 255, 250, 240, 1);

209 c⁄° 
Cﬁ‹
 
f‹e°gªí
(
cﬁ‹_èbÀ
, 34, 139, 34, 1);

210 c⁄° 
Cﬁ‹
 
magíè
(
cﬁ‹_èbÀ
, 255, 0, 255, 1);

211 c⁄° 
Cﬁ‹
 
fuchsü
(
cﬁ‹_èbÀ
, 255, 0, 255, 1);

212 c⁄° 
Cﬁ‹
 
gaösb‹o
(
cﬁ‹_èbÀ
, 220, 220, 220, 1);

213 c⁄° 
Cﬁ‹
 
gho°whôe
(
cﬁ‹_èbÀ
, 248, 248, 255, 1);

214 c⁄° 
Cﬁ‹
 
gﬁd
(
cﬁ‹_èbÀ
, 255, 215, 0, 1);

215 c⁄° 
Cﬁ‹
 
gﬁdírod
(
cﬁ‹_èbÀ
, 218, 165, 32, 1);

216 c⁄° 
Cﬁ‹
 
gøy
(
cﬁ‹_èbÀ
, 128, 128, 128, 1);

217 c⁄° 
Cﬁ‹
 
gªy
(
cﬁ‹_èbÀ
, 128, 128, 128, 1);

218 c⁄° 
Cﬁ‹
 
gªí
(
cﬁ‹_èbÀ
, 0, 128, 0, 1);

219 c⁄° 
Cﬁ‹
 
gªíyñlow
(
cﬁ‹_èbÀ
, 173, 255, 47, 1);

220 c⁄° 
Cﬁ‹
 
h⁄eydew
(
cﬁ‹_èbÀ
, 240, 255, 240, 1);

221 c⁄° 
Cﬁ‹
 
hŸpök
(
cﬁ‹_èbÀ
, 255, 105, 180, 1);

222 c⁄° 
Cﬁ‹
 
ödüƒed
(
cﬁ‹_èbÀ
, 205, 92, 92, 1);

223 c⁄° 
Cﬁ‹
 
ödigo
(
cﬁ‹_èbÀ
, 75, 0, 130, 1);

224 c⁄° 
Cﬁ‹
 
iv‹y
(
cﬁ‹_èbÀ
, 255, 255, 240, 1);

225 c⁄° 
Cﬁ‹
 
khaki
(
cﬁ‹_èbÀ
, 240, 230, 140, 1);

226 c⁄° 
Cﬁ‹
 
œvídî
(
cﬁ‹_èbÀ
, 230, 230, 250, 1);

227 c⁄° 
Cﬁ‹
 
œvídîblush
(
cﬁ‹_èbÀ
, 255, 240, 245, 1);

228 c⁄° 
Cﬁ‹
 
œwngªí
(
cﬁ‹_èbÀ
, 124, 252, 0, 1);

229 c⁄° 
Cﬁ‹
 
Àm⁄chiff⁄
(
cﬁ‹_èbÀ
, 255, 250, 205, 1);

230 c⁄° 
Cﬁ‹
 
lightblue
(
cﬁ‹_èbÀ
, 173, 216, 230, 1);

231 c⁄° 
Cﬁ‹
 
lightc‹Æ
(
cﬁ‹_èbÀ
, 240, 128, 128, 1);

232 c⁄° 
Cﬁ‹
 
lightcy™
(
cﬁ‹_èbÀ
, 224, 255, 255, 1);

233 c⁄° 
Cﬁ‹
 
lightgﬁdírodyñlow
(
cﬁ‹_èbÀ
, 250, 250, 210, 1);

234 c⁄° 
Cﬁ‹
 
lightgøy
(
cﬁ‹_èbÀ
, 211, 211, 211, 1);

235 c⁄° 
Cﬁ‹
 
lightgªy
(
cﬁ‹_èbÀ
, 211, 211, 211, 1);

236 c⁄° 
Cﬁ‹
 
lightgªí
(
cﬁ‹_èbÀ
, 144, 238, 144, 1);

237 c⁄° 
Cﬁ‹
 
lighçök
(
cﬁ‹_èbÀ
, 255, 182, 193, 1);

238 c⁄° 
Cﬁ‹
 
lightßlm⁄
(
cﬁ‹_èbÀ
, 255, 160, 122, 1);

239 c⁄° 
Cﬁ‹
 
light£agªí
(
cﬁ‹_èbÀ
, 32, 178, 170, 1);

240 c⁄° 
Cﬁ‹
 
lightskyblue
(
cﬁ‹_èbÀ
, 135, 206, 250, 1);

241 c⁄° 
Cﬁ‹
 
light¶©egøy
(
cﬁ‹_èbÀ
, 119, 136, 153, 1);

242 c⁄° 
Cﬁ‹
 
light¶©egªy
(
cﬁ‹_èbÀ
, 119, 136, 153, 1);

243 c⁄° 
Cﬁ‹
 
light°ìlblue
(
cﬁ‹_èbÀ
, 176, 196, 222, 1);

244 c⁄° 
Cﬁ‹
 
lightyñlow
(
cﬁ‹_èbÀ
, 255, 255, 224, 1);

245 c⁄° 
Cﬁ‹
 
lime
(
cﬁ‹_èbÀ
, 0, 255, 0, 1);

246 c⁄° 
Cﬁ‹
 
limegªí
(
cﬁ‹_èbÀ
, 50, 205, 50, 1);

247 c⁄° 
Cﬁ‹
 
löí
(
cﬁ‹_èbÀ
, 250, 240, 230, 1);

248 c⁄° 
Cﬁ‹
 
m¨o⁄
(
cﬁ‹_èbÀ
, 128, 0, 0, 1);

249 c⁄° 
Cﬁ‹
 
mediumaquam¨öe
(
cﬁ‹_èbÀ
, 102, 205, 170, 1);

250 c⁄° 
Cﬁ‹
 
mediumblue
(
cﬁ‹_èbÀ
, 0, 0, 205, 1);

251 c⁄° 
Cﬁ‹
 
medium‹chid
(
cﬁ‹_èbÀ
, 186, 85, 211, 1);

252 c⁄° 
Cﬁ‹
 
mediumpuΩÀ
(
cﬁ‹_èbÀ
, 147, 112, 219, 1);

253 c⁄° 
Cﬁ‹
 
medium£agªí
(
cﬁ‹_èbÀ
, 60, 179, 113, 1);

254 c⁄° 
Cﬁ‹
 
medium¶©eblue
(
cﬁ‹_èbÀ
, 123, 104, 238, 1);

255 c⁄° 
Cﬁ‹
 
medium•röggªí
(
cﬁ‹_èbÀ
, 0, 250, 154, 1);

256 c⁄° 
Cﬁ‹
 
mediumturquoi£
(
cﬁ‹_èbÀ
, 72, 209, 204, 1);

257 c⁄° 
Cﬁ‹
 
mediumviﬁëªd
(
cﬁ‹_èbÀ
, 199, 21, 133, 1);

258 c⁄° 
Cﬁ‹
 
midnightblue
(
cﬁ‹_èbÀ
, 25, 25, 112, 1);

259 c⁄° 
Cﬁ‹
 
möt¸óm
(
cﬁ‹_èbÀ
, 245, 255, 250, 1);

260 c⁄° 
Cﬁ‹
 
mi°yro£
(
cﬁ‹_èbÀ
, 255, 228, 225, 1);

261 c⁄° 
Cﬁ‹
 
mocˇsö
(
cﬁ‹_èbÀ
, 255, 228, 181, 1);

262 c⁄° 
Cﬁ‹
 
«vajowhôe
(
cﬁ‹_èbÀ
, 255, 222, 173, 1);

263 c⁄° 
Cﬁ‹
 
«vy
(
cﬁ‹_èbÀ
, 0, 0, 128, 1);

264 c⁄° 
Cﬁ‹
 
ﬁdœ˚
(
cﬁ‹_èbÀ
, 253, 245, 230, 1);

265 c⁄° 
Cﬁ‹
 
ﬁive
(
cﬁ‹_èbÀ
, 128, 128, 0, 1);

266 c⁄° 
Cﬁ‹
 
ﬁivedøb
(
cﬁ‹_èbÀ
, 107, 142, 35, 1);

267 c⁄° 
Cﬁ‹
 
‹™ge
(
cﬁ‹_èbÀ
, 255, 165, 0, 1);

268 c⁄° 
Cﬁ‹
 
‹™gîed
(
cﬁ‹_èbÀ
, 255, 69, 0, 1);

269 c⁄° 
Cﬁ‹
 
‹chid
(
cﬁ‹_èbÀ
, 218, 112, 214, 1);

270 c⁄° 
Cﬁ‹
 
∑Àgﬁdírod
(
cﬁ‹_èbÀ
, 238, 232, 170, 1);

271 c⁄° 
Cﬁ‹
 
∑Àgªí
(
cﬁ‹_èbÀ
, 152, 251, 152, 1);

272 c⁄° 
Cﬁ‹
 
∑Àturquoi£
(
cﬁ‹_èbÀ
, 175, 238, 238, 1);

273 c⁄° 
Cﬁ‹
 
∑Àviﬁëªd
(
cﬁ‹_èbÀ
, 219, 112, 147, 1);

274 c⁄° 
Cﬁ‹
 
∑∑yawhù
(
cﬁ‹_èbÀ
, 255, 239, 213, 1);

275 c⁄° 
Cﬁ‹
 
≥achpuff
(
cﬁ‹_èbÀ
, 255, 218, 185, 1);

276 c⁄° 
Cﬁ‹
 
≥ru
(
cﬁ‹_èbÀ
, 205, 133, 63, 1);

277 c⁄° 
Cﬁ‹
 
pök
(
cﬁ‹_èbÀ
, 255, 192, 203, 1);

278 c⁄° 
Cﬁ‹
 
∂um
(
cﬁ‹_èbÀ
, 221, 160, 221, 1);

279 c⁄° 
Cﬁ‹
 
powdîblue
(
cﬁ‹_èbÀ
, 176, 224, 230, 1);

280 c⁄° 
Cﬁ‹
 
puΩÀ
(
cﬁ‹_èbÀ
, 128, 0, 128, 1);

281 c⁄° 
Cﬁ‹
 
ªd
(
cﬁ‹_èbÀ
, 255, 0, 0, 1);

282 c⁄° 
Cﬁ‹
 
rosybrown
(
cﬁ‹_èbÀ
, 188, 143, 143, 1);

283 c⁄° 
Cﬁ‹
 
royÆblue
(
cﬁ‹_èbÀ
, 65, 105, 225, 1);

284 c⁄° 
Cﬁ‹
 
ßddÀbrown
(
cﬁ‹_èbÀ
, 139, 69, 19, 1);

285 c⁄° 
Cﬁ‹
 
ßlm⁄
(
cﬁ‹_èbÀ
, 250, 128, 114, 1);

286 c⁄° 
Cﬁ‹
 
ßndybrown
(
cﬁ‹_èbÀ
, 244, 164, 96, 1);

287 c⁄° 
Cﬁ‹
 
£agªí
(
cﬁ‹_èbÀ
, 46, 139, 87, 1);

288 c⁄° 
Cﬁ‹
 
£ashñl
(
cﬁ‹_èbÀ
, 255, 245, 238, 1);

289 c⁄° 
Cﬁ‹
 
sõ¬a
(
cﬁ‹_èbÀ
, 160, 82, 45, 1);

290 c⁄° 
Cﬁ‹
 
sûvî
(
cﬁ‹_èbÀ
, 192, 192, 192, 1);

291 c⁄° 
Cﬁ‹
 
skyblue
(
cﬁ‹_èbÀ
, 135, 206, 235, 1);

292 c⁄° 
Cﬁ‹
 
¶©eblue
(
cﬁ‹_èbÀ
, 106, 90, 205, 1);

293 c⁄° 
Cﬁ‹
 
¶©egøy
(
cﬁ‹_èbÀ
, 112, 128, 144, 1);

294 c⁄° 
Cﬁ‹
 
¶©egªy
(
cﬁ‹_èbÀ
, 112, 128, 144, 1);

295 c⁄° 
Cﬁ‹
 
¢ow
(
cﬁ‹_èbÀ
, 255, 250, 250, 1);

296 c⁄° 
Cﬁ‹
 
•röggªí
(
cﬁ‹_èbÀ
, 0, 255, 127, 1);

297 c⁄° 
Cﬁ‹
 
°ìlblue
(
cﬁ‹_èbÀ
, 70, 130, 180, 1);

298 c⁄° 
Cﬁ‹
 
èn
(
cﬁ‹_èbÀ
, 210, 180, 140, 1);

299 c⁄° 
Cﬁ‹
 
ãÆ
(
cﬁ‹_èbÀ
, 0, 128, 128, 1);

300 c⁄° 
Cﬁ‹
 
thi°À
(
cﬁ‹_èbÀ
, 216, 191, 216, 1);

301 c⁄° 
Cﬁ‹
 
tom©o
(
cﬁ‹_èbÀ
, 255, 99, 71, 1);

302 c⁄° 
Cﬁ‹
 
turquoi£
(
cﬁ‹_èbÀ
, 64, 224, 208, 1);

303 c⁄° 
Cﬁ‹
 
viﬁë
(
cﬁ‹_èbÀ
, 238, 130, 238, 1);

304 c⁄° 
Cﬁ‹
 
whót
(
cﬁ‹_èbÀ
, 245, 222, 179, 1);

305 c⁄° 
Cﬁ‹
 
whôe
(
cﬁ‹_èbÀ
, 255, 255, 255, 1);

306 c⁄° 
Cﬁ‹
 
whôesmoke
(
cﬁ‹_èbÀ
, 245, 245, 245, 1);

307 c⁄° 
Cﬁ‹
 
yñlow
(
cﬁ‹_èbÀ
, 255, 255, 0, 1);

308 c⁄° 
Cﬁ‹
 
yñlowgªí
(
cﬁ‹_èbÀ
, 154, 205, 50, 1);

309 c⁄° 
Cﬁ‹
 
ªbecˇpuΩÀ
(
cﬁ‹_èbÀ
, 102, 51, 153, 1);

310 c⁄° 
Cﬁ‹
 
å™•¨ít
(
cﬁ‹_èbÀ
, 0, 0, 0, 0);

313 c⁄° 
	g°d
::
m≠
<c⁄° , c⁄° *> 
	gcﬁ‹s_to_«mes
 {

314 { 240 * 0x10000 + 248 * 0x100 + 255, 
	gCﬁ‹Names
::
Æi˚blue
 },

315 { 250 * 0x10000 + 235 * 0x100 + 215, 
	gCﬁ‹Names
::
™tiquewhôe
 },

316 { 0 * 0x10000 + 255 * 0x100 + 255, 
	gCﬁ‹Names
::
cy™
 },

317 { 127 * 0x10000 + 255 * 0x100 + 212, 
	gCﬁ‹Names
::
aquam¨öe
 },

318 { 240 * 0x10000 + 255 * 0x100 + 255, 
	gCﬁ‹Names
::
azuª
 },

319 { 245 * 0x10000 + 245 * 0x100 + 220, 
	gCﬁ‹Names
::
beige
 },

320 { 255 * 0x10000 + 228 * 0x100 + 196, 
	gCﬁ‹Names
::
bisque
 },

321 { 0 * 0x10000 + 0 * 0x100 + 0, 
	gCﬁ‹Names
::
bœck
 },

322 { 255 * 0x10000 + 235 * 0x100 + 205, 
	gCﬁ‹Names
::
bœnchedÆm⁄d
 },

323 { 0 * 0x10000 + 0 * 0x100 + 255, 
	gCﬁ‹Names
::
blue
 },

324 { 138 * 0x10000 + 43 * 0x100 + 226, 
	gCﬁ‹Names
::
blueviﬁë
 },

325 { 165 * 0x10000 + 42 * 0x100 + 42, 
	gCﬁ‹Names
::
brown
 },

326 { 222 * 0x10000 + 184 * 0x100 + 135, 
	gCﬁ‹Names
::
buæywood
 },

327 { 95 * 0x10000 + 158 * 0x100 + 160, 
	gCﬁ‹Names
::
ˇdëblue
 },

328 { 127 * 0x10000 + 255 * 0x100 + 0, 
	gCﬁ‹Names
::
ch¨åeu£
 },

329 { 210 * 0x10000 + 105 * 0x100 + 30, 
	gCﬁ‹Names
::
chocﬁ©e
 },

330 { 255 * 0x10000 + 127 * 0x100 + 80, 
	gCﬁ‹Names
::
c‹Æ
 },

331 { 100 * 0x10000 + 149 * 0x100 + 237, 
	gCﬁ‹Names
::
c‹nÊowîblue
 },

332 { 255 * 0x10000 + 248 * 0x100 + 220, 
	gCﬁ‹Names
::
c‹nsûk
 },

333 { 220 * 0x10000 + 20 * 0x100 + 60, 
	gCﬁ‹Names
::
¸ims⁄
 },

334 { 0 * 0x10000 + 0 * 0x100 + 139, 
	gCﬁ‹Names
::
d¨kblue
 },

335 { 0 * 0x10000 + 139 * 0x100 + 139, 
	gCﬁ‹Names
::
d¨kcy™
 },

336 { 184 * 0x10000 + 134 * 0x100 + 11, 
	gCﬁ‹Names
::
d¨kgﬁdírod
 },

337 { 169 * 0x10000 + 169 * 0x100 + 169, 
	gCﬁ‹Names
::
d¨kgøy
 },

338 { 0 * 0x10000 + 100 * 0x100 + 0, 
	gCﬁ‹Names
::
d¨kgªí
 },

339 { 189 * 0x10000 + 183 * 0x100 + 107, 
	gCﬁ‹Names
::
d¨kkhaki
 },

340 { 139 * 0x10000 + 0 * 0x100 + 139, 
	gCﬁ‹Names
::
d¨kmagíè
 },

341 { 85 * 0x10000 + 107 * 0x100 + 47, 
	gCﬁ‹Names
::
d¨kﬁivegªí
 },

342 { 255 * 0x10000 + 140 * 0x100 + 0, 
	gCﬁ‹Names
::
d¨k‹™ge
 },

343 { 153 * 0x10000 + 50 * 0x100 + 204, 
	gCﬁ‹Names
::
d¨k‹chid
 },

344 { 139 * 0x10000 + 0 * 0x100 + 0, 
	gCﬁ‹Names
::
d¨kªd
 },

345 { 233 * 0x10000 + 150 * 0x100 + 122, 
	gCﬁ‹Names
::
d¨kßlm⁄
 },

346 { 143 * 0x10000 + 188 * 0x100 + 143, 
	gCﬁ‹Names
::
d¨k£agªí
 },

347 { 72 * 0x10000 + 61 * 0x100 + 139, 
	gCﬁ‹Names
::
d¨k¶©eblue
 },

348 { 47 * 0x10000 + 79 * 0x100 + 79, 
	gCﬁ‹Names
::
d¨k¶©egøy
 },

349 { 0 * 0x10000 + 206 * 0x100 + 209, 
	gCﬁ‹Names
::
d¨kturquoi£
 },

350 { 148 * 0x10000 + 0 * 0x100 + 211, 
	gCﬁ‹Names
::
d¨kviﬁë
 },

351 { 255 * 0x10000 + 20 * 0x100 + 147, 
	gCﬁ‹Names
::
dìµök
 },

352 { 0 * 0x10000 + 191 * 0x100 + 255, 
	gCﬁ‹Names
::
dìpskyblue
 },

353 { 105 * 0x10000 + 105 * 0x100 + 105, 
	gCﬁ‹Names
::
dimgøy
 },

354 { 30 * 0x10000 + 144 * 0x100 + 255, 
	gCﬁ‹Names
::
dodgîblue
 },

355 { 178 * 0x10000 + 34 * 0x100 + 34, 
	gCﬁ‹Names
::
fúebrick
 },

356 { 255 * 0x10000 + 250 * 0x100 + 240, 
	gCﬁ‹Names
::
Ê‹Æwhôe
 },

357 { 34 * 0x10000 + 139 * 0x100 + 34, 
	gCﬁ‹Names
::
f‹e°gªí
 },

358 { 255 * 0x10000 + 0 * 0x100 + 255, 
	gCﬁ‹Names
::
magíè
 },

359 { 220 * 0x10000 + 220 * 0x100 + 220, 
	gCﬁ‹Names
::
gaösb‹o
 },

360 { 248 * 0x10000 + 248 * 0x100 + 255, 
	gCﬁ‹Names
::
gho°whôe
 },

361 { 255 * 0x10000 + 215 * 0x100 + 0, 
	gCﬁ‹Names
::
gﬁd
 },

362 { 218 * 0x10000 + 165 * 0x100 + 32, 
	gCﬁ‹Names
::
gﬁdírod
 },

363 { 128 * 0x10000 + 128 * 0x100 + 128, 
	gCﬁ‹Names
::
gøy
 },

364 { 0 * 0x10000 + 128 * 0x100 + 0, 
	gCﬁ‹Names
::
gªí
 },

365 { 173 * 0x10000 + 255 * 0x100 + 47, 
	gCﬁ‹Names
::
gªíyñlow
 },

366 { 240 * 0x10000 + 255 * 0x100 + 240, 
	gCﬁ‹Names
::
h⁄eydew
 },

367 { 255 * 0x10000 + 105 * 0x100 + 180, 
	gCﬁ‹Names
::
hŸpök
 },

368 { 205 * 0x10000 + 92 * 0x100 + 92, 
	gCﬁ‹Names
::
ödüƒed
 },

369 { 75 * 0x10000 + 0 * 0x100 + 130, 
	gCﬁ‹Names
::
ödigo
 },

370 { 255 * 0x10000 + 255 * 0x100 + 240, 
	gCﬁ‹Names
::
iv‹y
 },

371 { 240 * 0x10000 + 230 * 0x100 + 140, 
	gCﬁ‹Names
::
khaki
 },

372 { 230 * 0x10000 + 230 * 0x100 + 250, 
	gCﬁ‹Names
::
œvídî
 },

373 { 255 * 0x10000 + 240 * 0x100 + 245, 
	gCﬁ‹Names
::
œvídîblush
 },

374 { 124 * 0x10000 + 252 * 0x100 + 0, 
	gCﬁ‹Names
::
œwngªí
 },

375 { 255 * 0x10000 + 250 * 0x100 + 205, 
	gCﬁ‹Names
::
Àm⁄chiff⁄
 },

376 { 173 * 0x10000 + 216 * 0x100 + 230, 
	gCﬁ‹Names
::
lightblue
 },

377 { 240 * 0x10000 + 128 * 0x100 + 128, 
	gCﬁ‹Names
::
lightc‹Æ
 },

378 { 224 * 0x10000 + 255 * 0x100 + 255, 
	gCﬁ‹Names
::
lightcy™
 },

379 { 250 * 0x10000 + 250 * 0x100 + 210, 
	gCﬁ‹Names
::
lightgﬁdírodyñlow
 },

380 { 211 * 0x10000 + 211 * 0x100 + 211, 
	gCﬁ‹Names
::
lightgøy
 },

381 { 144 * 0x10000 + 238 * 0x100 + 144, 
	gCﬁ‹Names
::
lightgªí
 },

382 { 255 * 0x10000 + 182 * 0x100 + 193, 
	gCﬁ‹Names
::
lighçök
 },

383 { 255 * 0x10000 + 160 * 0x100 + 122, 
	gCﬁ‹Names
::
lightßlm⁄
 },

384 { 32 * 0x10000 + 178 * 0x100 + 170, 
	gCﬁ‹Names
::
light£agªí
 },

385 { 135 * 0x10000 + 206 * 0x100 + 250, 
	gCﬁ‹Names
::
lightskyblue
 },

386 { 119 * 0x10000 + 136 * 0x100 + 153, 
	gCﬁ‹Names
::
light¶©egøy
 },

387 { 176 * 0x10000 + 196 * 0x100 + 222, 
	gCﬁ‹Names
::
light°ìlblue
 },

388 { 255 * 0x10000 + 255 * 0x100 + 224, 
	gCﬁ‹Names
::
lightyñlow
 },

389 { 0 * 0x10000 + 255 * 0x100 + 0, 
	gCﬁ‹Names
::
lime
 },

390 { 50 * 0x10000 + 205 * 0x100 + 50, 
	gCﬁ‹Names
::
limegªí
 },

391 { 250 * 0x10000 + 240 * 0x100 + 230, 
	gCﬁ‹Names
::
löí
 },

392 { 128 * 0x10000 + 0 * 0x100 + 0, 
	gCﬁ‹Names
::
m¨o⁄
 },

393 { 102 * 0x10000 + 205 * 0x100 + 170, 
	gCﬁ‹Names
::
mediumaquam¨öe
 },

394 { 0 * 0x10000 + 0 * 0x100 + 205, 
	gCﬁ‹Names
::
mediumblue
 },

395 { 186 * 0x10000 + 85 * 0x100 + 211, 
	gCﬁ‹Names
::
medium‹chid
 },

396 { 147 * 0x10000 + 112 * 0x100 + 219, 
	gCﬁ‹Names
::
mediumpuΩÀ
 },

397 { 60 * 0x10000 + 179 * 0x100 + 113, 
	gCﬁ‹Names
::
medium£agªí
 },

398 { 123 * 0x10000 + 104 * 0x100 + 238, 
	gCﬁ‹Names
::
medium¶©eblue
 },

399 { 0 * 0x10000 + 250 * 0x100 + 154, 
	gCﬁ‹Names
::
medium•röggªí
 },

400 { 72 * 0x10000 + 209 * 0x100 + 204, 
	gCﬁ‹Names
::
mediumturquoi£
 },

401 { 199 * 0x10000 + 21 * 0x100 + 133, 
	gCﬁ‹Names
::
mediumviﬁëªd
 },

402 { 25 * 0x10000 + 25 * 0x100 + 112, 
	gCﬁ‹Names
::
midnightblue
 },

403 { 245 * 0x10000 + 255 * 0x100 + 250, 
	gCﬁ‹Names
::
möt¸óm
 },

404 { 255 * 0x10000 + 228 * 0x100 + 225, 
	gCﬁ‹Names
::
mi°yro£
 },

405 { 255 * 0x10000 + 228 * 0x100 + 181, 
	gCﬁ‹Names
::
mocˇsö
 },

406 { 255 * 0x10000 + 222 * 0x100 + 173, 
	gCﬁ‹Names
::
«vajowhôe
 },

407 { 0 * 0x10000 + 0 * 0x100 + 128, 
	gCﬁ‹Names
::
«vy
 },

408 { 253 * 0x10000 + 245 * 0x100 + 230, 
	gCﬁ‹Names
::
ﬁdœ˚
 },

409 { 128 * 0x10000 + 128 * 0x100 + 0, 
	gCﬁ‹Names
::
ﬁive
 },

410 { 107 * 0x10000 + 142 * 0x100 + 35, 
	gCﬁ‹Names
::
ﬁivedøb
 },

411 { 255 * 0x10000 + 165 * 0x100 + 0, 
	gCﬁ‹Names
::
‹™ge
 },

412 { 255 * 0x10000 + 69 * 0x100 + 0, 
	gCﬁ‹Names
::
‹™gîed
 },

413 { 218 * 0x10000 + 112 * 0x100 + 214, 
	gCﬁ‹Names
::
‹chid
 },

414 { 238 * 0x10000 + 232 * 0x100 + 170, 
	gCﬁ‹Names
::
∑Àgﬁdírod
 },

415 { 152 * 0x10000 + 251 * 0x100 + 152, 
	gCﬁ‹Names
::
∑Àgªí
 },

416 { 175 * 0x10000 + 238 * 0x100 + 238, 
	gCﬁ‹Names
::
∑Àturquoi£
 },

417 { 219 * 0x10000 + 112 * 0x100 + 147, 
	gCﬁ‹Names
::
∑Àviﬁëªd
 },

418 { 255 * 0x10000 + 239 * 0x100 + 213, 
	gCﬁ‹Names
::
∑∑yawhù
 },

419 { 255 * 0x10000 + 218 * 0x100 + 185, 
	gCﬁ‹Names
::
≥achpuff
 },

420 { 205 * 0x10000 + 133 * 0x100 + 63, 
	gCﬁ‹Names
::
≥ru
 },

421 { 255 * 0x10000 + 192 * 0x100 + 203, 
	gCﬁ‹Names
::
pök
 },

422 { 221 * 0x10000 + 160 * 0x100 + 221, 
	gCﬁ‹Names
::
∂um
 },

423 { 176 * 0x10000 + 224 * 0x100 + 230, 
	gCﬁ‹Names
::
powdîblue
 },

424 { 128 * 0x10000 + 0 * 0x100 + 128, 
	gCﬁ‹Names
::
puΩÀ
 },

425 { 255 * 0x10000 + 0 * 0x100 + 0, 
	gCﬁ‹Names
::
ªd
 },

426 { 188 * 0x10000 + 143 * 0x100 + 143, 
	gCﬁ‹Names
::
rosybrown
 },

427 { 65 * 0x10000 + 105 * 0x100 + 225, 
	gCﬁ‹Names
::
royÆblue
 },

428 { 139 * 0x10000 + 69 * 0x100 + 19, 
	gCﬁ‹Names
::
ßddÀbrown
 },

429 { 250 * 0x10000 + 128 * 0x100 + 114, 
	gCﬁ‹Names
::
ßlm⁄
 },

430 { 244 * 0x10000 + 164 * 0x100 + 96, 
	gCﬁ‹Names
::
ßndybrown
 },

431 { 46 * 0x10000 + 139 * 0x100 + 87, 
	gCﬁ‹Names
::
£agªí
 },

432 { 255 * 0x10000 + 245 * 0x100 + 238, 
	gCﬁ‹Names
::
£ashñl
 },

433 { 160 * 0x10000 + 82 * 0x100 + 45, 
	gCﬁ‹Names
::
sõ¬a
 },

434 { 192 * 0x10000 + 192 * 0x100 + 192, 
	gCﬁ‹Names
::
sûvî
 },

435 { 135 * 0x10000 + 206 * 0x100 + 235, 
	gCﬁ‹Names
::
skyblue
 },

436 { 106 * 0x10000 + 90 * 0x100 + 205, 
	gCﬁ‹Names
::
¶©eblue
 },

437 { 112 * 0x10000 + 128 * 0x100 + 144, 
	gCﬁ‹Names
::
¶©egøy
 },

438 { 255 * 0x10000 + 250 * 0x100 + 250, 
	gCﬁ‹Names
::
¢ow
 },

439 { 0 * 0x10000 + 255 * 0x100 + 127, 
	gCﬁ‹Names
::
•röggªí
 },

440 { 70 * 0x10000 + 130 * 0x100 + 180, 
	gCﬁ‹Names
::
°ìlblue
 },

441 { 210 * 0x10000 + 180 * 0x100 + 140, 
	gCﬁ‹Names
::
èn
 },

442 { 0 * 0x10000 + 128 * 0x100 + 128, 
	gCﬁ‹Names
::
ãÆ
 },

443 { 216 * 0x10000 + 191 * 0x100 + 216, 
	gCﬁ‹Names
::
thi°À
 },

444 { 255 * 0x10000 + 99 * 0x100 + 71, 
	gCﬁ‹Names
::
tom©o
 },

445 { 64 * 0x10000 + 224 * 0x100 + 208, 
	gCﬁ‹Names
::
turquoi£
 },

446 { 238 * 0x10000 + 130 * 0x100 + 238, 
	gCﬁ‹Names
::
viﬁë
 },

447 { 245 * 0x10000 + 222 * 0x100 + 179, 
	gCﬁ‹Names
::
whót
 },

448 { 255 * 0x10000 + 255 * 0x100 + 255, 
	gCﬁ‹Names
::
whôe
 },

449 { 245 * 0x10000 + 245 * 0x100 + 245, 
	gCﬁ‹Names
::
whôesmoke
 },

450 { 255 * 0x10000 + 255 * 0x100 + 0, 
	gCﬁ‹Names
::
yñlow
 },

451 { 154 * 0x10000 + 205 * 0x100 + 50, 
	gCﬁ‹Names
::
yñlowgªí
 },

452 { 102 * 0x10000 + 51 * 0x100 + 153, 
	gCﬁ‹Names
::
ªbecˇpuΩÀ
 }

455 c⁄° 
	g°d
::
m≠
<c⁄° *, c⁄° 
	gCﬁ‹
*, 
	gm≠_cmp_°r
> 
	g«mes_to_cﬁ‹s


457 { 
	gCﬁ‹Names
::
Æi˚blue
, &
	gCﬁ‹s
::aliceblue },

458 { 
	gCﬁ‹Names
::
™tiquewhôe
, &
	gCﬁ‹s
::antiquewhite },

459 { 
	gCﬁ‹Names
::
cy™
, &
	gCﬁ‹s
::cyan },

460 { 
	gCﬁ‹Names
::
aqua
, &
	gCﬁ‹s
::aqua },

461 { 
	gCﬁ‹Names
::
aquam¨öe
, &
	gCﬁ‹s
::aquamarine },

462 { 
	gCﬁ‹Names
::
azuª
, &
	gCﬁ‹s
::azure },

463 { 
	gCﬁ‹Names
::
beige
, &
	gCﬁ‹s
::beige },

464 { 
	gCﬁ‹Names
::
bisque
, &
	gCﬁ‹s
::bisque },

465 { 
	gCﬁ‹Names
::
bœck
, &
	gCﬁ‹s
::black },

466 { 
	gCﬁ‹Names
::
bœnchedÆm⁄d
, &
	gCﬁ‹s
::blanchedalmond },

467 { 
	gCﬁ‹Names
::
blue
, &
	gCﬁ‹s
::blue },

468 { 
	gCﬁ‹Names
::
blueviﬁë
, &
	gCﬁ‹s
::blueviolet },

469 { 
	gCﬁ‹Names
::
brown
, &
	gCﬁ‹s
::brown },

470 { 
	gCﬁ‹Names
::
buæywood
, &
	gCﬁ‹s
::burlywood },

471 { 
	gCﬁ‹Names
::
ˇdëblue
, &
	gCﬁ‹s
::cadetblue },

472 { 
	gCﬁ‹Names
::
ch¨åeu£
, &
	gCﬁ‹s
::chartreuse },

473 { 
	gCﬁ‹Names
::
chocﬁ©e
, &
	gCﬁ‹s
::chocolate },

474 { 
	gCﬁ‹Names
::
c‹Æ
, &
	gCﬁ‹s
::coral },

475 { 
	gCﬁ‹Names
::
c‹nÊowîblue
, &
	gCﬁ‹s
::cornflowerblue },

476 { 
	gCﬁ‹Names
::
c‹nsûk
, &
	gCﬁ‹s
::cornsilk },

477 { 
	gCﬁ‹Names
::
¸ims⁄
, &
	gCﬁ‹s
::crimson },

478 { 
	gCﬁ‹Names
::
d¨kblue
, &
	gCﬁ‹s
::darkblue },

479 { 
	gCﬁ‹Names
::
d¨kcy™
, &
	gCﬁ‹s
::darkcyan },

480 { 
	gCﬁ‹Names
::
d¨kgﬁdírod
, &
	gCﬁ‹s
::darkgoldenrod },

481 { 
	gCﬁ‹Names
::
d¨kgøy
, &
	gCﬁ‹s
::darkgray },

482 { 
	gCﬁ‹Names
::
d¨kgªy
, &
	gCﬁ‹s
::darkgrey },

483 { 
	gCﬁ‹Names
::
d¨kgªí
, &
	gCﬁ‹s
::darkgreen },

484 { 
	gCﬁ‹Names
::
d¨kkhaki
, &
	gCﬁ‹s
::darkkhaki },

485 { 
	gCﬁ‹Names
::
d¨kmagíè
, &
	gCﬁ‹s
::darkmagenta },

486 { 
	gCﬁ‹Names
::
d¨kﬁivegªí
, &
	gCﬁ‹s
::darkolivegreen },

487 { 
	gCﬁ‹Names
::
d¨k‹™ge
, &
	gCﬁ‹s
::darkorange },

488 { 
	gCﬁ‹Names
::
d¨k‹chid
, &
	gCﬁ‹s
::darkorchid },

489 { 
	gCﬁ‹Names
::
d¨kªd
, &
	gCﬁ‹s
::darkred },

490 { 
	gCﬁ‹Names
::
d¨kßlm⁄
, &
	gCﬁ‹s
::darksalmon },

491 { 
	gCﬁ‹Names
::
d¨k£agªí
, &
	gCﬁ‹s
::darkseagreen },

492 { 
	gCﬁ‹Names
::
d¨k¶©eblue
, &
	gCﬁ‹s
::darkslateblue },

493 { 
	gCﬁ‹Names
::
d¨k¶©egøy
, &
	gCﬁ‹s
::darkslategray },

494 { 
	gCﬁ‹Names
::
d¨k¶©egªy
, &
	gCﬁ‹s
::darkslategrey },

495 { 
	gCﬁ‹Names
::
d¨kturquoi£
, &
	gCﬁ‹s
::darkturquoise },

496 { 
	gCﬁ‹Names
::
d¨kviﬁë
, &
	gCﬁ‹s
::darkviolet },

497 { 
	gCﬁ‹Names
::
dìµök
, &
	gCﬁ‹s
::deeppink },

498 { 
	gCﬁ‹Names
::
dìpskyblue
, &
	gCﬁ‹s
::deepskyblue },

499 { 
	gCﬁ‹Names
::
dimgøy
, &
	gCﬁ‹s
::dimgray },

500 { 
	gCﬁ‹Names
::
dimgªy
, &
	gCﬁ‹s
::dimgrey },

501 { 
	gCﬁ‹Names
::
dodgîblue
, &
	gCﬁ‹s
::dodgerblue },

502 { 
	gCﬁ‹Names
::
fúebrick
, &
	gCﬁ‹s
::firebrick },

503 { 
	gCﬁ‹Names
::
Ê‹Æwhôe
, &
	gCﬁ‹s
::floralwhite },

504 { 
	gCﬁ‹Names
::
f‹e°gªí
, &
	gCﬁ‹s
::forestgreen },

505 { 
	gCﬁ‹Names
::
magíè
, &
	gCﬁ‹s
::magenta },

506 { 
	gCﬁ‹Names
::
fuchsü
, &
	gCﬁ‹s
::fuchsia },

507 { 
	gCﬁ‹Names
::
gaösb‹o
, &
	gCﬁ‹s
::gainsboro },

508 { 
	gCﬁ‹Names
::
gho°whôe
, &
	gCﬁ‹s
::ghostwhite },

509 { 
	gCﬁ‹Names
::
gﬁd
, &
	gCﬁ‹s
::gold },

510 { 
	gCﬁ‹Names
::
gﬁdírod
, &
	gCﬁ‹s
::goldenrod },

511 { 
	gCﬁ‹Names
::
gøy
, &
	gCﬁ‹s
::gray },

512 { 
	gCﬁ‹Names
::
gªy
, &
	gCﬁ‹s
::grey },

513 { 
	gCﬁ‹Names
::
gªí
, &
	gCﬁ‹s
::green },

514 { 
	gCﬁ‹Names
::
gªíyñlow
, &
	gCﬁ‹s
::greenyellow },

515 { 
	gCﬁ‹Names
::
h⁄eydew
, &
	gCﬁ‹s
::honeydew },

516 { 
	gCﬁ‹Names
::
hŸpök
, &
	gCﬁ‹s
::hotpink },

517 { 
	gCﬁ‹Names
::
ödüƒed
, &
	gCﬁ‹s
::indianred },

518 { 
	gCﬁ‹Names
::
ödigo
, &
	gCﬁ‹s
::indigo },

519 { 
	gCﬁ‹Names
::
iv‹y
, &
	gCﬁ‹s
::ivory },

520 { 
	gCﬁ‹Names
::
khaki
, &
	gCﬁ‹s
::khaki },

521 { 
	gCﬁ‹Names
::
œvídî
, &
	gCﬁ‹s
::lavender },

522 { 
	gCﬁ‹Names
::
œvídîblush
, &
	gCﬁ‹s
::lavenderblush },

523 { 
	gCﬁ‹Names
::
œwngªí
, &
	gCﬁ‹s
::lawngreen },

524 { 
	gCﬁ‹Names
::
Àm⁄chiff⁄
, &
	gCﬁ‹s
::lemonchiffon },

525 { 
	gCﬁ‹Names
::
lightblue
, &
	gCﬁ‹s
::lightblue },

526 { 
	gCﬁ‹Names
::
lightc‹Æ
, &
	gCﬁ‹s
::lightcoral },

527 { 
	gCﬁ‹Names
::
lightcy™
, &
	gCﬁ‹s
::lightcyan },

528 { 
	gCﬁ‹Names
::
lightgﬁdírodyñlow
, &
	gCﬁ‹s
::lightgoldenrodyellow },

529 { 
	gCﬁ‹Names
::
lightgøy
, &
	gCﬁ‹s
::lightgray },

530 { 
	gCﬁ‹Names
::
lightgªy
, &
	gCﬁ‹s
::lightgrey },

531 { 
	gCﬁ‹Names
::
lightgªí
, &
	gCﬁ‹s
::lightgreen },

532 { 
	gCﬁ‹Names
::
lighçök
, &
	gCﬁ‹s
::lightpink },

533 { 
	gCﬁ‹Names
::
lightßlm⁄
, &
	gCﬁ‹s
::lightsalmon },

534 { 
	gCﬁ‹Names
::
light£agªí
, &
	gCﬁ‹s
::lightseagreen },

535 { 
	gCﬁ‹Names
::
lightskyblue
, &
	gCﬁ‹s
::lightskyblue },

536 { 
	gCﬁ‹Names
::
light¶©egøy
, &
	gCﬁ‹s
::lightslategray },

537 { 
	gCﬁ‹Names
::
light¶©egªy
, &
	gCﬁ‹s
::lightslategrey },

538 { 
	gCﬁ‹Names
::
light°ìlblue
, &
	gCﬁ‹s
::lightsteelblue },

539 { 
	gCﬁ‹Names
::
lightyñlow
, &
	gCﬁ‹s
::lightyellow },

540 { 
	gCﬁ‹Names
::
lime
, &
	gCﬁ‹s
::lime },

541 { 
	gCﬁ‹Names
::
limegªí
, &
	gCﬁ‹s
::limegreen },

542 { 
	gCﬁ‹Names
::
löí
, &
	gCﬁ‹s
::linen },

543 { 
	gCﬁ‹Names
::
m¨o⁄
, &
	gCﬁ‹s
::maroon },

544 { 
	gCﬁ‹Names
::
mediumaquam¨öe
, &
	gCﬁ‹s
::mediumaquamarine },

545 { 
	gCﬁ‹Names
::
mediumblue
, &
	gCﬁ‹s
::mediumblue },

546 { 
	gCﬁ‹Names
::
medium‹chid
, &
	gCﬁ‹s
::mediumorchid },

547 { 
	gCﬁ‹Names
::
mediumpuΩÀ
, &
	gCﬁ‹s
::mediumpurple },

548 { 
	gCﬁ‹Names
::
medium£agªí
, &
	gCﬁ‹s
::mediumseagreen },

549 { 
	gCﬁ‹Names
::
medium¶©eblue
, &
	gCﬁ‹s
::mediumslateblue },

550 { 
	gCﬁ‹Names
::
medium•röggªí
, &
	gCﬁ‹s
::mediumspringgreen },

551 { 
	gCﬁ‹Names
::
mediumturquoi£
, &
	gCﬁ‹s
::mediumturquoise },

552 { 
	gCﬁ‹Names
::
mediumviﬁëªd
, &
	gCﬁ‹s
::mediumvioletred },

553 { 
	gCﬁ‹Names
::
midnightblue
, &
	gCﬁ‹s
::midnightblue },

554 { 
	gCﬁ‹Names
::
möt¸óm
, &
	gCﬁ‹s
::mintcream },

555 { 
	gCﬁ‹Names
::
mi°yro£
, &
	gCﬁ‹s
::mistyrose },

556 { 
	gCﬁ‹Names
::
mocˇsö
, &
	gCﬁ‹s
::moccasin },

557 { 
	gCﬁ‹Names
::
«vajowhôe
, &
	gCﬁ‹s
::navajowhite },

558 { 
	gCﬁ‹Names
::
«vy
, &
	gCﬁ‹s
::navy },

559 { 
	gCﬁ‹Names
::
ﬁdœ˚
, &
	gCﬁ‹s
::oldlace },

560 { 
	gCﬁ‹Names
::
ﬁive
, &
	gCﬁ‹s
::olive },

561 { 
	gCﬁ‹Names
::
ﬁivedøb
, &
	gCﬁ‹s
::olivedrab },

562 { 
	gCﬁ‹Names
::
‹™ge
, &
	gCﬁ‹s
::orange },

563 { 
	gCﬁ‹Names
::
‹™gîed
, &
	gCﬁ‹s
::orangered },

564 { 
	gCﬁ‹Names
::
‹chid
, &
	gCﬁ‹s
::orchid },

565 { 
	gCﬁ‹Names
::
∑Àgﬁdírod
, &
	gCﬁ‹s
::palegoldenrod },

566 { 
	gCﬁ‹Names
::
∑Àgªí
, &
	gCﬁ‹s
::palegreen },

567 { 
	gCﬁ‹Names
::
∑Àturquoi£
, &
	gCﬁ‹s
::paleturquoise },

568 { 
	gCﬁ‹Names
::
∑Àviﬁëªd
, &
	gCﬁ‹s
::palevioletred },

569 { 
	gCﬁ‹Names
::
∑∑yawhù
, &
	gCﬁ‹s
::papayawhip },

570 { 
	gCﬁ‹Names
::
≥achpuff
, &
	gCﬁ‹s
::peachpuff },

571 { 
	gCﬁ‹Names
::
≥ru
, &
	gCﬁ‹s
::peru },

572 { 
	gCﬁ‹Names
::
pök
, &
	gCﬁ‹s
::pink },

573 { 
	gCﬁ‹Names
::
∂um
, &
	gCﬁ‹s
::plum },

574 { 
	gCﬁ‹Names
::
powdîblue
, &
	gCﬁ‹s
::powderblue },

575 { 
	gCﬁ‹Names
::
puΩÀ
, &
	gCﬁ‹s
::purple },

576 { 
	gCﬁ‹Names
::
ªd
, &
	gCﬁ‹s
::red },

577 { 
	gCﬁ‹Names
::
rosybrown
, &
	gCﬁ‹s
::rosybrown },

578 { 
	gCﬁ‹Names
::
royÆblue
, &
	gCﬁ‹s
::royalblue },

579 { 
	gCﬁ‹Names
::
ßddÀbrown
, &
	gCﬁ‹s
::saddlebrown },

580 { 
	gCﬁ‹Names
::
ßlm⁄
, &
	gCﬁ‹s
::salmon },

581 { 
	gCﬁ‹Names
::
ßndybrown
, &
	gCﬁ‹s
::sandybrown },

582 { 
	gCﬁ‹Names
::
£agªí
, &
	gCﬁ‹s
::seagreen },

583 { 
	gCﬁ‹Names
::
£ashñl
, &
	gCﬁ‹s
::seashell },

584 { 
	gCﬁ‹Names
::
sõ¬a
, &
	gCﬁ‹s
::sienna },

585 { 
	gCﬁ‹Names
::
sûvî
, &
	gCﬁ‹s
::silver },

586 { 
	gCﬁ‹Names
::
skyblue
, &
	gCﬁ‹s
::skyblue },

587 { 
	gCﬁ‹Names
::
¶©eblue
, &
	gCﬁ‹s
::slateblue },

588 { 
	gCﬁ‹Names
::
¶©egøy
, &
	gCﬁ‹s
::slategray },

589 { 
	gCﬁ‹Names
::
¶©egªy
, &
	gCﬁ‹s
::slategrey },

590 { 
	gCﬁ‹Names
::
¢ow
, &
	gCﬁ‹s
::snow },

591 { 
	gCﬁ‹Names
::
•röggªí
, &
	gCﬁ‹s
::springgreen },

592 { 
	gCﬁ‹Names
::
°ìlblue
, &
	gCﬁ‹s
::steelblue },

593 { 
	gCﬁ‹Names
::
èn
, &
	gCﬁ‹s
::tan },

594 { 
	gCﬁ‹Names
::
ãÆ
, &
	gCﬁ‹s
::teal },

595 { 
	gCﬁ‹Names
::
thi°À
, &
	gCﬁ‹s
::thistle },

596 { 
	gCﬁ‹Names
::
tom©o
, &
	gCﬁ‹s
::tomato },

597 { 
	gCﬁ‹Names
::
turquoi£
, &
	gCﬁ‹s
::turquoise },

598 { 
	gCﬁ‹Names
::
viﬁë
, &
	gCﬁ‹s
::violet },

599 { 
	gCﬁ‹Names
::
whót
, &
	gCﬁ‹s
::wheat },

600 { 
	gCﬁ‹Names
::
whôe
, &
	gCﬁ‹s
::white },

601 { 
	gCﬁ‹Names
::
whôesmoke
, &
	gCﬁ‹s
::whitesmoke },

602 { 
	gCﬁ‹Names
::
yñlow
, &
	gCﬁ‹s
::yellow },

603 { 
	gCﬁ‹Names
::
yñlowgªí
, &
	gCﬁ‹s
::yellowgreen },

604 { 
	gCﬁ‹Names
::
ªbecˇpuΩÀ
, &
	gCﬁ‹s
::rebeccapurple },

605 { 
	gCﬁ‹Names
::
å™•¨ít
, &
	gCﬁ‹s
::transparent }

608 c⁄° 
Cﬁ‹
* 
«me_to_cﬁ‹
(c⁄° * 
key
)

610 autÿ
	gp
 = 
«mes_to_cﬁ‹s
.
föd
(
key
);

611 i‡(
	gp
 !
«mes_to_cﬁ‹s
.
íd
()) {

612  
p
->
£c⁄d
;

617 c⁄° 
Cﬁ‹
* 
«me_to_cﬁ‹
(c⁄° 
°d
::
°rög
& 
key
)

619  
«me_to_cﬁ‹
(
key
.
c_°r
());

622 c⁄° * 
cﬁ‹_to_«me
(c⁄° 
key
)

624 autÿ
	gp
 = 
cﬁ‹s_to_«mes
.
föd
(
key
);

625 i‡(
	gp
 !
cﬁ‹s_to_«mes
.
íd
()) {

626  
p
->
£c⁄d
;

631 c⁄° * 
cﬁ‹_to_«me
(c⁄° 
key
)

633  
cﬁ‹_to_«me
(()
key
);

636 c⁄° * 
cﬁ‹_to_«me
(c⁄° 
Cﬁ‹
& 
c
)

638 
	gkey
 = 
c
.
r
() * 0x10000

639 + 
c
.
g
() * 0x100

640 + 
c
.
b
();

641  
cﬁ‹_to_«me
(
key
);

	@node_modules/node-sass/src/libsass/src/color_maps.hpp

1 #i‚de‡
SASS_COLOR_MAPS_H


2 
	#SASS_COLOR_MAPS_H


	)

4 
	~<m≠
>

5 
	~"a°.hµ
"

7 
«me•a˚
 
	gSass
 {

9 
	sm≠_cmp_°r


11 
boﬁ
 
›î©‹
()(c⁄° *
	ga
, c⁄° *
	gb
) const

13  
	g°d
::
°rcmp
(
a
, 
b
) < 0;

17 
«me•a˚
 
	gCﬁ‹Names


19 c⁄° 
Æi˚blue
[];

20 c⁄° 
™tiquewhôe
[];

21 c⁄° 
cy™
[];

22 c⁄° 
aqua
[];

23 c⁄° 
aquam¨öe
[];

24 c⁄° 
azuª
[];

25 c⁄° 
beige
[];

26 c⁄° 
bisque
[];

27 c⁄° 
bœck
[];

28 c⁄° 
bœnchedÆm⁄d
[];

29 c⁄° 
blue
[];

30 c⁄° 
blueviﬁë
[];

31 c⁄° 
brown
[];

32 c⁄° 
buæywood
[];

33 c⁄° 
ˇdëblue
[];

34 c⁄° 
ch¨åeu£
[];

35 c⁄° 
chocﬁ©e
[];

36 c⁄° 
c‹Æ
[];

37 c⁄° 
c‹nÊowîblue
[];

38 c⁄° 
c‹nsûk
[];

39 c⁄° 
¸ims⁄
[];

40 c⁄° 
d¨kblue
[];

41 c⁄° 
d¨kcy™
[];

42 c⁄° 
d¨kgﬁdírod
[];

43 c⁄° 
d¨kgøy
[];

44 c⁄° 
d¨kgªy
[];

45 c⁄° 
d¨kgªí
[];

46 c⁄° 
d¨kkhaki
[];

47 c⁄° 
d¨kmagíè
[];

48 c⁄° 
d¨kﬁivegªí
[];

49 c⁄° 
d¨k‹™ge
[];

50 c⁄° 
d¨k‹chid
[];

51 c⁄° 
d¨kªd
[];

52 c⁄° 
d¨kßlm⁄
[];

53 c⁄° 
d¨k£agªí
[];

54 c⁄° 
d¨k¶©eblue
[];

55 c⁄° 
d¨k¶©egøy
[];

56 c⁄° 
d¨k¶©egªy
[];

57 c⁄° 
d¨kturquoi£
[];

58 c⁄° 
d¨kviﬁë
[];

59 c⁄° 
dìµök
[];

60 c⁄° 
dìpskyblue
[];

61 c⁄° 
dimgøy
[];

62 c⁄° 
dimgªy
[];

63 c⁄° 
dodgîblue
[];

64 c⁄° 
fúebrick
[];

65 c⁄° 
Ê‹Æwhôe
[];

66 c⁄° 
f‹e°gªí
[];

67 c⁄° 
magíè
[];

68 c⁄° 
fuchsü
[];

69 c⁄° 
gaösb‹o
[];

70 c⁄° 
gho°whôe
[];

71 c⁄° 
gﬁd
[];

72 c⁄° 
gﬁdírod
[];

73 c⁄° 
gøy
[];

74 c⁄° 
gªy
[];

75 c⁄° 
gªí
[];

76 c⁄° 
gªíyñlow
[];

77 c⁄° 
h⁄eydew
[];

78 c⁄° 
hŸpök
[];

79 c⁄° 
ödüƒed
[];

80 c⁄° 
ödigo
[];

81 c⁄° 
iv‹y
[];

82 c⁄° 
khaki
[];

83 c⁄° 
œvídî
[];

84 c⁄° 
œvídîblush
[];

85 c⁄° 
œwngªí
[];

86 c⁄° 
Àm⁄chiff⁄
[];

87 c⁄° 
lightblue
[];

88 c⁄° 
lightc‹Æ
[];

89 c⁄° 
lightcy™
[];

90 c⁄° 
lightgﬁdírodyñlow
[];

91 c⁄° 
lightgøy
[];

92 c⁄° 
lightgªy
[];

93 c⁄° 
lightgªí
[];

94 c⁄° 
lighçök
[];

95 c⁄° 
lightßlm⁄
[];

96 c⁄° 
light£agªí
[];

97 c⁄° 
lightskyblue
[];

98 c⁄° 
light¶©egøy
[];

99 c⁄° 
light¶©egªy
[];

100 c⁄° 
light°ìlblue
[];

101 c⁄° 
lightyñlow
[];

102 c⁄° 
lime
[];

103 c⁄° 
limegªí
[];

104 c⁄° 
löí
[];

105 c⁄° 
m¨o⁄
[];

106 c⁄° 
mediumaquam¨öe
[];

107 c⁄° 
mediumblue
[];

108 c⁄° 
medium‹chid
[];

109 c⁄° 
mediumpuΩÀ
[];

110 c⁄° 
medium£agªí
[];

111 c⁄° 
medium¶©eblue
[];

112 c⁄° 
medium•röggªí
[];

113 c⁄° 
mediumturquoi£
[];

114 c⁄° 
mediumviﬁëªd
[];

115 c⁄° 
midnightblue
[];

116 c⁄° 
möt¸óm
[];

117 c⁄° 
mi°yro£
[];

118 c⁄° 
mocˇsö
[];

119 c⁄° 
«vajowhôe
[];

120 c⁄° 
«vy
[];

121 c⁄° 
ﬁdœ˚
[];

122 c⁄° 
ﬁive
[];

123 c⁄° 
ﬁivedøb
[];

124 c⁄° 
‹™ge
[];

125 c⁄° 
‹™gîed
[];

126 c⁄° 
‹chid
[];

127 c⁄° 
∑Àgﬁdírod
[];

128 c⁄° 
∑Àgªí
[];

129 c⁄° 
∑Àturquoi£
[];

130 c⁄° 
∑Àviﬁëªd
[];

131 c⁄° 
∑∑yawhù
[];

132 c⁄° 
≥achpuff
[];

133 c⁄° 
≥ru
[];

134 c⁄° 
pök
[];

135 c⁄° 
∂um
[];

136 c⁄° 
powdîblue
[];

137 c⁄° 
puΩÀ
[];

138 c⁄° 
ªd
[];

139 c⁄° 
rosybrown
[];

140 c⁄° 
royÆblue
[];

141 c⁄° 
ßddÀbrown
[];

142 c⁄° 
ßlm⁄
[];

143 c⁄° 
ßndybrown
[];

144 c⁄° 
£agªí
[];

145 c⁄° 
£ashñl
[];

146 c⁄° 
sõ¬a
[];

147 c⁄° 
sûvî
[];

148 c⁄° 
skyblue
[];

149 c⁄° 
¶©eblue
[];

150 c⁄° 
¶©egøy
[];

151 c⁄° 
¶©egªy
[];

152 c⁄° 
¢ow
[];

153 c⁄° 
•röggªí
[];

154 c⁄° 
°ìlblue
[];

155 c⁄° 
èn
[];

156 c⁄° 
ãÆ
[];

157 c⁄° 
thi°À
[];

158 c⁄° 
tom©o
[];

159 c⁄° 
turquoi£
[];

160 c⁄° 
viﬁë
[];

161 c⁄° 
whót
[];

162 c⁄° 
whôe
[];

163 c⁄° 
whôesmoke
[];

164 c⁄° 
yñlow
[];

165 c⁄° 
yñlowgªí
[];

166 c⁄° 
ªbecˇpuΩÀ
[];

167 c⁄° 
å™•¨ít
[];

170 
«me•a˚
 
	gCﬁ‹s
 {

171 c⁄° 
Cﬁ‹
 
Æi˚blue
;

172 c⁄° 
Cﬁ‹
 
™tiquewhôe
;

173 c⁄° 
Cﬁ‹
 
cy™
;

174 c⁄° 
Cﬁ‹
 
aqua
;

175 c⁄° 
Cﬁ‹
 
aquam¨öe
;

176 c⁄° 
Cﬁ‹
 
azuª
;

177 c⁄° 
Cﬁ‹
 
beige
;

178 c⁄° 
Cﬁ‹
 
bisque
;

179 c⁄° 
Cﬁ‹
 
bœck
;

180 c⁄° 
Cﬁ‹
 
bœnchedÆm⁄d
;

181 c⁄° 
Cﬁ‹
 
blue
;

182 c⁄° 
Cﬁ‹
 
blueviﬁë
;

183 c⁄° 
Cﬁ‹
 
brown
;

184 c⁄° 
Cﬁ‹
 
buæywood
;

185 c⁄° 
Cﬁ‹
 
ˇdëblue
;

186 c⁄° 
Cﬁ‹
 
ch¨åeu£
;

187 c⁄° 
Cﬁ‹
 
chocﬁ©e
;

188 c⁄° 
Cﬁ‹
 
c‹Æ
;

189 c⁄° 
Cﬁ‹
 
c‹nÊowîblue
;

190 c⁄° 
Cﬁ‹
 
c‹nsûk
;

191 c⁄° 
Cﬁ‹
 
¸ims⁄
;

192 c⁄° 
Cﬁ‹
 
d¨kblue
;

193 c⁄° 
Cﬁ‹
 
d¨kcy™
;

194 c⁄° 
Cﬁ‹
 
d¨kgﬁdírod
;

195 c⁄° 
Cﬁ‹
 
d¨kgøy
;

196 c⁄° 
Cﬁ‹
 
d¨kgªy
;

197 c⁄° 
Cﬁ‹
 
d¨kgªí
;

198 c⁄° 
Cﬁ‹
 
d¨kkhaki
;

199 c⁄° 
Cﬁ‹
 
d¨kmagíè
;

200 c⁄° 
Cﬁ‹
 
d¨kﬁivegªí
;

201 c⁄° 
Cﬁ‹
 
d¨k‹™ge
;

202 c⁄° 
Cﬁ‹
 
d¨k‹chid
;

203 c⁄° 
Cﬁ‹
 
d¨kªd
;

204 c⁄° 
Cﬁ‹
 
d¨kßlm⁄
;

205 c⁄° 
Cﬁ‹
 
d¨k£agªí
;

206 c⁄° 
Cﬁ‹
 
d¨k¶©eblue
;

207 c⁄° 
Cﬁ‹
 
d¨k¶©egøy
;

208 c⁄° 
Cﬁ‹
 
d¨k¶©egªy
;

209 c⁄° 
Cﬁ‹
 
d¨kturquoi£
;

210 c⁄° 
Cﬁ‹
 
d¨kviﬁë
;

211 c⁄° 
Cﬁ‹
 
dìµök
;

212 c⁄° 
Cﬁ‹
 
dìpskyblue
;

213 c⁄° 
Cﬁ‹
 
dimgøy
;

214 c⁄° 
Cﬁ‹
 
dimgªy
;

215 c⁄° 
Cﬁ‹
 
dodgîblue
;

216 c⁄° 
Cﬁ‹
 
fúebrick
;

217 c⁄° 
Cﬁ‹
 
Ê‹Æwhôe
;

218 c⁄° 
Cﬁ‹
 
f‹e°gªí
;

219 c⁄° 
Cﬁ‹
 
magíè
;

220 c⁄° 
Cﬁ‹
 
fuchsü
;

221 c⁄° 
Cﬁ‹
 
gaösb‹o
;

222 c⁄° 
Cﬁ‹
 
gho°whôe
;

223 c⁄° 
Cﬁ‹
 
gﬁd
;

224 c⁄° 
Cﬁ‹
 
gﬁdírod
;

225 c⁄° 
Cﬁ‹
 
gøy
;

226 c⁄° 
Cﬁ‹
 
gªy
;

227 c⁄° 
Cﬁ‹
 
gªí
;

228 c⁄° 
Cﬁ‹
 
gªíyñlow
;

229 c⁄° 
Cﬁ‹
 
h⁄eydew
;

230 c⁄° 
Cﬁ‹
 
hŸpök
;

231 c⁄° 
Cﬁ‹
 
ödüƒed
;

232 c⁄° 
Cﬁ‹
 
ödigo
;

233 c⁄° 
Cﬁ‹
 
iv‹y
;

234 c⁄° 
Cﬁ‹
 
khaki
;

235 c⁄° 
Cﬁ‹
 
œvídî
;

236 c⁄° 
Cﬁ‹
 
œvídîblush
;

237 c⁄° 
Cﬁ‹
 
œwngªí
;

238 c⁄° 
Cﬁ‹
 
Àm⁄chiff⁄
;

239 c⁄° 
Cﬁ‹
 
lightblue
;

240 c⁄° 
Cﬁ‹
 
lightc‹Æ
;

241 c⁄° 
Cﬁ‹
 
lightcy™
;

242 c⁄° 
Cﬁ‹
 
lightgﬁdírodyñlow
;

243 c⁄° 
Cﬁ‹
 
lightgøy
;

244 c⁄° 
Cﬁ‹
 
lightgªy
;

245 c⁄° 
Cﬁ‹
 
lightgªí
;

246 c⁄° 
Cﬁ‹
 
lighçök
;

247 c⁄° 
Cﬁ‹
 
lightßlm⁄
;

248 c⁄° 
Cﬁ‹
 
light£agªí
;

249 c⁄° 
Cﬁ‹
 
lightskyblue
;

250 c⁄° 
Cﬁ‹
 
light¶©egøy
;

251 c⁄° 
Cﬁ‹
 
light¶©egªy
;

252 c⁄° 
Cﬁ‹
 
light°ìlblue
;

253 c⁄° 
Cﬁ‹
 
lightyñlow
;

254 c⁄° 
Cﬁ‹
 
lime
;

255 c⁄° 
Cﬁ‹
 
limegªí
;

256 c⁄° 
Cﬁ‹
 
löí
;

257 c⁄° 
Cﬁ‹
 
m¨o⁄
;

258 c⁄° 
Cﬁ‹
 
mediumaquam¨öe
;

259 c⁄° 
Cﬁ‹
 
mediumblue
;

260 c⁄° 
Cﬁ‹
 
medium‹chid
;

261 c⁄° 
Cﬁ‹
 
mediumpuΩÀ
;

262 c⁄° 
Cﬁ‹
 
medium£agªí
;

263 c⁄° 
Cﬁ‹
 
medium¶©eblue
;

264 c⁄° 
Cﬁ‹
 
medium•röggªí
;

265 c⁄° 
Cﬁ‹
 
mediumturquoi£
;

266 c⁄° 
Cﬁ‹
 
mediumviﬁëªd
;

267 c⁄° 
Cﬁ‹
 
midnightblue
;

268 c⁄° 
Cﬁ‹
 
möt¸óm
;

269 c⁄° 
Cﬁ‹
 
mi°yro£
;

270 c⁄° 
Cﬁ‹
 
mocˇsö
;

271 c⁄° 
Cﬁ‹
 
«vajowhôe
;

272 c⁄° 
Cﬁ‹
 
«vy
;

273 c⁄° 
Cﬁ‹
 
ﬁdœ˚
;

274 c⁄° 
Cﬁ‹
 
ﬁive
;

275 c⁄° 
Cﬁ‹
 
ﬁivedøb
;

276 c⁄° 
Cﬁ‹
 
‹™ge
;

277 c⁄° 
Cﬁ‹
 
‹™gîed
;

278 c⁄° 
Cﬁ‹
 
‹chid
;

279 c⁄° 
Cﬁ‹
 
∑Àgﬁdírod
;

280 c⁄° 
Cﬁ‹
 
∑Àgªí
;

281 c⁄° 
Cﬁ‹
 
∑Àturquoi£
;

282 c⁄° 
Cﬁ‹
 
∑Àviﬁëªd
;

283 c⁄° 
Cﬁ‹
 
∑∑yawhù
;

284 c⁄° 
Cﬁ‹
 
≥achpuff
;

285 c⁄° 
Cﬁ‹
 
≥ru
;

286 c⁄° 
Cﬁ‹
 
pök
;

287 c⁄° 
Cﬁ‹
 
∂um
;

288 c⁄° 
Cﬁ‹
 
powdîblue
;

289 c⁄° 
Cﬁ‹
 
puΩÀ
;

290 c⁄° 
Cﬁ‹
 
ªd
;

291 c⁄° 
Cﬁ‹
 
rosybrown
;

292 c⁄° 
Cﬁ‹
 
royÆblue
;

293 c⁄° 
Cﬁ‹
 
ßddÀbrown
;

294 c⁄° 
Cﬁ‹
 
ßlm⁄
;

295 c⁄° 
Cﬁ‹
 
ßndybrown
;

296 c⁄° 
Cﬁ‹
 
£agªí
;

297 c⁄° 
Cﬁ‹
 
£ashñl
;

298 c⁄° 
Cﬁ‹
 
sõ¬a
;

299 c⁄° 
Cﬁ‹
 
sûvî
;

300 c⁄° 
Cﬁ‹
 
skyblue
;

301 c⁄° 
Cﬁ‹
 
¶©eblue
;

302 c⁄° 
Cﬁ‹
 
¶©egøy
;

303 c⁄° 
Cﬁ‹
 
¶©egªy
;

304 c⁄° 
Cﬁ‹
 
¢ow
;

305 c⁄° 
Cﬁ‹
 
•röggªí
;

306 c⁄° 
Cﬁ‹
 
°ìlblue
;

307 c⁄° 
Cﬁ‹
 
èn
;

308 c⁄° 
Cﬁ‹
 
ãÆ
;

309 c⁄° 
Cﬁ‹
 
thi°À
;

310 c⁄° 
Cﬁ‹
 
tom©o
;

311 c⁄° 
Cﬁ‹
 
turquoi£
;

312 c⁄° 
Cﬁ‹
 
viﬁë
;

313 c⁄° 
Cﬁ‹
 
whót
;

314 c⁄° 
Cﬁ‹
 
whôe
;

315 c⁄° 
Cﬁ‹
 
whôesmoke
;

316 c⁄° 
Cﬁ‹
 
yñlow
;

317 c⁄° 
Cﬁ‹
 
yñlowgªí
;

318 c⁄° 
Cﬁ‹
 
ªbecˇpuΩÀ
;

319 c⁄° 
Cﬁ‹
 
å™•¨ít
;

322 c⁄° 
°d
::
m≠
<c⁄° , c⁄° *> 
cﬁ‹s_to_«mes
;

323 c⁄° 
°d
::
m≠
<c⁄° *, c⁄° 
Cﬁ‹
*, 
m≠_cmp_°r
> 
«mes_to_cﬁ‹s
;

325 c⁄° 
Cﬁ‹
* 
«me_to_cﬁ‹
(const *);

326 c⁄° 
Cﬁ‹
* 
«me_to_cﬁ‹
(c⁄° 
°d
::
°rög
&);

327 c⁄° * 
cﬁ‹_to_«me
(const );

328 c⁄° * 
cﬁ‹_to_«me
(c⁄° 
Cﬁ‹
&);

329 c⁄° * 
cﬁ‹_to_«me
(const );

	@node_modules/node-sass/src/libsass/src/constants.cpp

1 
	~"ßss.hµ
"

2 
	~"c⁄°™ts.hµ
"

4 
«me•a˚
 
	gSass
 {

5 
«me•a˚
 
	gC⁄°™ts
 {

7 c⁄° 
MaxCÆlSèck
 = 1024;

12 c⁄° 
S≥cificôy_Sèr
 = 0;

13 c⁄° 
S≥cificôy_Univîßl
 = 1 << 0;

14 c⁄° 
S≥cificôy_Ty≥
 = 1 << 8;

15 c⁄° 
S≥cificôy_Cœss
 = 1 << 16;

16 c⁄° 
S≥cificôy_Aâr
 = 1 << 16;

17 c⁄° 
S≥cificôy_P£udo
 = 1 << 16;

18 c⁄° 
S≥cificôy_ID
 = 1 << 24;

21 c⁄° 
©_roŸ_kwd
[] = "@at-root";

22 c⁄° 
imp‹t_kwd
[] = "@import";

23 c⁄° 
mixö_kwd
[] = "@mixin";

24 c⁄° 
fun˘i⁄_kwd
[] = "@function";

25 c⁄° 
ªtu∫_kwd
[] = "@return";

26 c⁄° 
ö˛ude_kwd
[] = "@include";

27 c⁄° 
c⁄ã¡_kwd
[] = "@content";

28 c⁄° 
exãnd_kwd
[] = "@extend";

29 c⁄° 
if_kwd
[] = "@if";

30 c⁄° 
ñ£_kwd
[] = "@else";

31 c⁄° 
if_a·î_ñ£_kwd
[] = "if";

32 c⁄° 
f‹_kwd
[] = "@for";

33 c⁄° 
‰om_kwd
[] = "from";

34 c⁄° 
to_kwd
[] = "to";

35 c⁄° 
through_kwd
[] = "through";

36 c⁄° 
óch_kwd
[] = "@each";

37 c⁄° 
ö_kwd
[] = "in";

38 c⁄° 
whûe_kwd
[] = "@while";

39 c⁄° 
w¨n_kwd
[] = "@warn";

40 c⁄° 
îr‹_kwd
[] = "@error";

41 c⁄° 
debug_kwd
[] = "@debug";

42 c⁄° 
deÁu…_kwd
[] = "default";

43 c⁄° 
globÆ_kwd
[] = "global";

44 c⁄° 
nuŒ_kwd
[] = "null";

45 c⁄° 
›ti⁄Æ_kwd
[] = "optional";

46 c⁄° 
wôh_kwd
[] = "with";

47 c⁄° 
wôhout_kwd
[] = "without";

48 c⁄° 
Æl_kwd
[] = "all";

49 c⁄° 
ruÀ_kwd
[] = "rule";

52 c⁄° 
em_kwd
[] = "em";

53 c⁄° 
ex_kwd
[] = "ex";

54 c⁄° 
px_kwd
[] = "px";

55 c⁄° 
cm_kwd
[] = "cm";

56 c⁄° 
mm_kwd
[] = "mm";

57 c⁄° 
±_kwd
[] = "pt";

58 c⁄° 
pc_kwd
[] = "pc";

59 c⁄° 
deg_kwd
[] = "deg";

60 c⁄° 
ød_kwd
[] = "rad";

61 c⁄° 
gød_kwd
[] = "grad";

62 c⁄° 
tu∫_kwd
[] = "turn";

63 c⁄° 
ms_kwd
[] = "ms";

64 c⁄° 
s_kwd
[] = "s";

65 c⁄° 
Hz_kwd
[] = "Hz";

66 c⁄° 
kHz_kwd
[] = "kHz";

69 c⁄° 
víd‹_›îa_kwd
[] = "-o-";

70 c⁄° 
víd‹_webkô_kwd
[] = "-webkit-";

71 c⁄° 
víd‹_mozûœ_kwd
[] = "-moz-";

72 c⁄° 
víd‹_ms_kwd
[] = "-ms-";

73 c⁄° 
víd‹_khtml_kwd
[] = "-khtml-";

76 c⁄° 
ch¨£t_kwd
[] = "@charset";

77 c⁄° 
medü_kwd
[] = "@media";

78 c⁄° 
suµ‹ts_kwd
[] = "@supports";

79 c⁄° 
key‰ames_kwd
[] = "keyframes";

80 c⁄° 
⁄ly_kwd
[] = "only";

81 c⁄° 
rgb_kwd
[] = "rgb(";

82 c⁄° 
uæ_kwd
[] = "url";

84 c⁄° 
imp‹è¡_kwd
[] = "important";

85 c⁄° 
p£udo_nŸ_kwd
[] = ":not(";

86 c⁄° 
eví_kwd
[] = "even";

87 c⁄° 
odd_kwd
[] = "odd";

88 c⁄° 
¥ogid_kwd
[] = "progid";

89 c⁄° 
ex¥essi⁄_kwd
[] = "expression";

90 c⁄° 
ˇlc_‚_kwd
[] = "calc";

92 c⁄° 
Æmo°_™y_vÆue_˛ass
[] = "\"'#!;{}";

95 c⁄° 
£l_dìp_kwd
[] = "/deep/";

98 c⁄° 
tûde_equÆ
[] = "~=";

99 c⁄° 
pùe_equÆ
[] = "|=";

100 c⁄° 
ˇªt_equÆ
[] = "^=";

101 c⁄° 
dﬁœr_equÆ
[] = "$=";

102 c⁄° 
°¨_equÆ
[] = "*=";

105 c⁄° 
™d_kwd
[] = "and";

106 c⁄° 
‹_kwd
[] = "or";

107 c⁄° 
nŸ_kwd
[] = "not";

108 c⁄° 
gt
[] = ">";

109 c⁄° 
gã
[] = ">=";

110 c⁄° 
…
[] = "<";

111 c⁄° 
…e
[] = "<=";

112 c⁄° 
eq
[] = "==";

113 c⁄° 
√q
[] = "!=";

114 c⁄° 
åue_kwd
[] = "true";

115 c⁄° 
Ál£_kwd
[] = "false";

118 c⁄° 
≥r˚¡_°r
[] = "%";

119 c⁄° 
em±y_°r
[] = "";

120 c⁄° 
¶ash_¶ash
[] = "//";

121 c⁄° 
¶ash_°¨
[] = "/*";

122 c⁄° 
°¨_¶ash
[] = "*/";

123 c⁄° 
hash_lbø˚
[] = "#{";

124 c⁄° 
rbø˚
[] = "}";

125 c⁄° 
Ω¨í
[] = ")";

126 c⁄° 
sign_ch¨s
[] = "-+";

127 c⁄° 
›_ch¨s
[] = "-+";

128 c⁄° 
hyphí
[] = "-";

129 c⁄° 
ñlùsis
[] = "...";

132 c⁄° 
numîic_«me
[] = "numeric value";

133 c⁄° 
numbî_«me
[] = "number";

134 c⁄° 
≥r˚¡age_«me
[] = "percentage";

135 c⁄° 
dimísi⁄_«me
[] = "numeric dimension";

136 c⁄° 
°rög_«me
[] = "string";

137 c⁄° 
boﬁ_«me
[] = "bool";

138 c⁄° 
cﬁ‹_«me
[] = "color";

139 c⁄° 
li°_«me
[] = "list";

140 c⁄° 
m≠_«me
[] = "map";

141 c⁄° 
¨gli°_«me
[] = "arglist";

144 c⁄° 
uri_ch¨s
[] = ":;/?!%&#@|[]{}'`^\"*+-.,_=~";

145 c⁄° 
ªÆ_uri_ch¨s
[] = "#%&";

149 c⁄° 
°©ic_›s
[] = "*/%";

151 c⁄° 
£À˘‹_li°_dñims
[] = "){};!";

152 c⁄° 
com∂ex_£À˘‹_dñims
[] = ",){};!";

153 c⁄° 
£À˘‹_combö©‹_›s
[] = "+~>";

155 c⁄° 
©åibuã_com∑ª_modifõrs
[] = "~|^$*";

156 c⁄° 
£À˘‹_lookahód_›s
[] = "*&%,()[]";

160 c⁄° 
utf_8_bom
[] = { 0xEF, 0xBB, 0xBF };

161 c⁄° 
utf_16_bom_be
[] = { 0xFE, 0xFF };

162 c⁄° 
utf_16_bom_À
[] = { 0xFF, 0xFE };

163 c⁄° 
utf_32_bom_be
[] = { 0x00, 0x00, 0xFE, 0xFF };

164 c⁄° 
utf_32_bom_À
[] = { 0xFF, 0xFE, 0x00, 0x00 };

165 c⁄° 
utf_7_bom_1
[] = { 0x2B, 0x2F, 0x76, 0x38 };

166 c⁄° 
utf_7_bom_2
[] = { 0x2B, 0x2F, 0x76, 0x39 };

167 c⁄° 
utf_7_bom_3
[] = { 0x2B, 0x2F, 0x76, 0x2B };

168 c⁄° 
utf_7_bom_4
[] = { 0x2B, 0x2F, 0x76, 0x2F };

169 c⁄° 
utf_7_bom_5
[] = { 0x2B, 0x2F, 0x76, 0x38, 0x2D };

170 c⁄° 
utf_1_bom
[] = { 0xF7, 0x64, 0x4C };

171 c⁄° 
utf_ebcdic_bom
[] = { 0xDD, 0x73, 0x66, 0x73 };

172 c⁄° 
scsu_bom
[] = { 0x0E, 0xFE, 0xFF };

173 c⁄° 
bocu_1_bom
[] = { 0xFB, 0xEE, 0x28 };

174 c⁄° 
gb_18030_bom
[] = { 0x84, 0x31, 0x95, 0x33 };

	@node_modules/node-sass/src/libsass/src/constants.hpp

1 #i‚de‡
SASS_CONSTANTS_H


2 
	#SASS_CONSTANTS_H


	)

4 
«me•a˚
 
	gSass
 {

5 
«me•a˚
 
	gC⁄°™ts
 {

8 c⁄° 
MaxCÆlSèck
;

12 c⁄° 
S≥cificôy_Sèr
;

13 c⁄° 
S≥cificôy_Univîßl
;

14 c⁄° 
S≥cificôy_Ty≥
;

15 c⁄° 
S≥cificôy_Cœss
;

16 c⁄° 
S≥cificôy_Aâr
;

17 c⁄° 
S≥cificôy_P£udo
;

18 c⁄° 
S≥cificôy_ID
;

21 c⁄° 
©_roŸ_kwd
[];

22 c⁄° 
imp‹t_kwd
[];

23 c⁄° 
mixö_kwd
[];

24 c⁄° 
fun˘i⁄_kwd
[];

25 c⁄° 
ªtu∫_kwd
[];

26 c⁄° 
ö˛ude_kwd
[];

27 c⁄° 
c⁄ã¡_kwd
[];

28 c⁄° 
exãnd_kwd
[];

29 c⁄° 
if_kwd
[];

30 c⁄° 
ñ£_kwd
[];

31 c⁄° 
if_a·î_ñ£_kwd
[];

32 c⁄° 
f‹_kwd
[];

33 c⁄° 
‰om_kwd
[];

34 c⁄° 
to_kwd
[];

35 c⁄° 
through_kwd
[];

36 c⁄° 
óch_kwd
[];

37 c⁄° 
ö_kwd
[];

38 c⁄° 
whûe_kwd
[];

39 c⁄° 
w¨n_kwd
[];

40 c⁄° 
îr‹_kwd
[];

41 c⁄° 
debug_kwd
[];

42 c⁄° 
deÁu…_kwd
[];

43 c⁄° 
globÆ_kwd
[];

44 c⁄° 
nuŒ_kwd
[];

45 c⁄° 
›ti⁄Æ_kwd
[];

46 c⁄° 
wôh_kwd
[];

47 c⁄° 
wôhout_kwd
[];

48 c⁄° 
Æl_kwd
[];

49 c⁄° 
ruÀ_kwd
[];

52 c⁄° 
em_kwd
[];

53 c⁄° 
ex_kwd
[];

54 c⁄° 
px_kwd
[];

55 c⁄° 
cm_kwd
[];

56 c⁄° 
mm_kwd
[];

57 c⁄° 
±_kwd
[];

58 c⁄° 
pc_kwd
[];

59 c⁄° 
deg_kwd
[];

60 c⁄° 
ød_kwd
[];

61 c⁄° 
gød_kwd
[];

62 c⁄° 
tu∫_kwd
[];

63 c⁄° 
ms_kwd
[];

64 c⁄° 
s_kwd
[];

65 c⁄° 
Hz_kwd
[];

66 c⁄° 
kHz_kwd
[];

69 c⁄° 
víd‹_›îa_kwd
[];

70 c⁄° 
víd‹_webkô_kwd
[];

71 c⁄° 
víd‹_mozûœ_kwd
[];

72 c⁄° 
víd‹_ms_kwd
[];

73 c⁄° 
víd‹_khtml_kwd
[];

76 c⁄° 
ch¨£t_kwd
[];

77 c⁄° 
medü_kwd
[];

78 c⁄° 
suµ‹ts_kwd
[];

79 c⁄° 
key‰ames_kwd
[];

80 c⁄° 
⁄ly_kwd
[];

81 c⁄° 
rgb_kwd
[];

82 c⁄° 
uæ_kwd
[];

84 c⁄° 
imp‹è¡_kwd
[];

85 c⁄° 
p£udo_nŸ_kwd
[];

86 c⁄° 
eví_kwd
[];

87 c⁄° 
odd_kwd
[];

88 c⁄° 
¥ogid_kwd
[];

89 c⁄° 
ex¥essi⁄_kwd
[];

90 c⁄° 
ˇlc_‚_kwd
[];

93 c⁄° 
Æmo°_™y_vÆue_˛ass
[];

96 c⁄° 
£l_dìp_kwd
[];

99 c⁄° 
tûde_equÆ
[];

100 c⁄° 
pùe_equÆ
[];

101 c⁄° 
ˇªt_equÆ
[];

102 c⁄° 
dﬁœr_equÆ
[];

103 c⁄° 
°¨_equÆ
[];

106 c⁄° 
™d_kwd
[];

107 c⁄° 
‹_kwd
[];

108 c⁄° 
nŸ_kwd
[];

109 c⁄° 
gt
[];

110 c⁄° 
gã
[];

111 c⁄° 
…
[];

112 c⁄° 
…e
[];

113 c⁄° 
eq
[];

114 c⁄° 
√q
[];

115 c⁄° 
åue_kwd
[];

116 c⁄° 
Ál£_kwd
[];

119 c⁄° 
≥r˚¡_°r
[];

120 c⁄° 
em±y_°r
[];

121 c⁄° 
¶ash_¶ash
[];

122 c⁄° 
¶ash_°¨
[];

123 c⁄° 
°¨_¶ash
[];

124 c⁄° 
hash_lbø˚
[];

125 c⁄° 
rbø˚
[];

126 c⁄° 
Ω¨í
[];

127 c⁄° 
sign_ch¨s
[];

128 c⁄° 
›_ch¨s
[];

129 c⁄° 
hyphí
[];

130 c⁄° 
ñlùsis
[];

134 c⁄° 
numîic_«me
[];

135 c⁄° 
numbî_«me
[];

136 c⁄° 
≥r˚¡age_«me
[];

137 c⁄° 
dimísi⁄_«me
[];

138 c⁄° 
°rög_«me
[];

139 c⁄° 
boﬁ_«me
[];

140 c⁄° 
cﬁ‹_«me
[];

141 c⁄° 
li°_«me
[];

142 c⁄° 
m≠_«me
[];

143 c⁄° 
¨gli°_«me
[];

146 c⁄° 
uri_ch¨s
[];

147 c⁄° 
ªÆ_uri_ch¨s
[];

151 c⁄° 
°©ic_›s
[];

152 c⁄° 
£À˘‹_li°_dñims
[];

153 c⁄° 
com∂ex_£À˘‹_dñims
[];

154 c⁄° 
£À˘‹_combö©‹_›s
[];

155 c⁄° 
©åibuã_com∑ª_modifõrs
[];

156 c⁄° 
£À˘‹_lookahód_›s
[];

160 c⁄° 
utf_8_bom
[];

161 c⁄° 
utf_16_bom_be
[];

162 c⁄° 
utf_16_bom_À
[];

163 c⁄° 
utf_32_bom_be
[];

164 c⁄° 
utf_32_bom_À
[];

165 c⁄° 
utf_7_bom_1
[];

166 c⁄° 
utf_7_bom_2
[];

167 c⁄° 
utf_7_bom_3
[];

168 c⁄° 
utf_7_bom_4
[];

169 c⁄° 
utf_7_bom_5
[];

170 c⁄° 
utf_1_bom
[];

171 c⁄° 
utf_ebcdic_bom
[];

172 c⁄° 
scsu_bom
[];

173 c⁄° 
bocu_1_bom
[];

174 c⁄° 
gb_18030_bom
[];

	@node_modules/node-sass/src/libsass/src/context.cpp

1 
	~"ßss.hµ
"

2 
	~<°rög
>

3 
	~<c°dlib
>

4 
	~<c°rög
>

5 
	~<iom™ù
>

6 
	~<s°ªam
>

7 
	~<io°ªam
>

9 
	~"a°.hµ
"

10 
	~"utû.hµ
"

11 
	~"ßss.h
"

12 
	~"c⁄ãxt.hµ
"

13 
	~"∂ugös.hµ
"

14 
	~"c⁄°™ts.hµ
"

15 
	~"∑r£r.hµ
"

16 
	~"fûe.hµ
"

17 
	~"ö•e˘.hµ
"

18 
	~"ouçut.hµ
"

19 
	~"ex∑nd.hµ
"

20 
	~"evÆ.hµ
"

21 
	~"cssize.hµ
"

22 
	~"li°ize.hµ
"

23 
	~"exãnd.hµ
"

24 
	~"ªmove_∂a˚hﬁdîs.hµ
"

25 
	~"fun˘i⁄s.hµ
"

26 
	~"ßss_fun˘i⁄s.hµ
"

27 
	~"backåa˚.hµ
"

28 
	~"ßss2scss.h
"

29 
	~"¥ñexî.hµ
"

30 
	~"emôãr.hµ
"

32 
«me•a˚
 
	gSass
 {

33 
usög
 
«me•a˚
 
	gC⁄°™ts
;

34 
usög
 
«me•a˚
 
	gFûe
;

35 
usög
 
«me•a˚
 
	gSass
;

37 
ölöe
 
boﬁ
 
s‹t_imp‹ãrs
 (c⁄° 
Sass_Imp‹ãr_E¡ry
& 
i
, c⁄° Sass_Imp‹ãr_E¡ry& 
j
)

38 {  
ßss_imp‹ãr_gë_¥i‹ôy
(
i
Ë> sass_imp‹ãr_gë_¥i‹ôy(
j
); }

40 
	g°d
::
°rög
 
ß„_öput
(c⁄° * 
ö_∑th
)

44 
°d
::
°rög
 
ß„_∑th
(
ö_∑th
 ? in_path : "");

45  
	gß„_∑th
 ="" ? "°dö" : 
ß„_∑th
;

48 
	g°d
::
°rög
 
ß„_ouçut
(c⁄° * 
out_∑th
, c⁄° 
°d
::°rög& 
öput_∑th
 = "")

50 
°d
::
°rög
 
ß„_∑th
(
out_∑th
 ? out_path : "");

52 i‡(
	gß„_∑th
 ="" && 
öput_∑th
 != "") {

53 
œ°ödex
 = 
°©ic_ˇ°
<>(
öput_∑th
.
föd_œ°_of
("."));

54  (
	gœ°ödex
 > -1 ? 
	göput_∑th
.
sub°r
(0, 
œ°ödex
Ë: 
öput_∑th
) + ".css";

58  
	gß„_∑th
 ="" ? "°dout" : 
ß„_∑th
;

61 
	gC⁄ãxt
::
C⁄ãxt
(
Sass_C⁄ãxt
& 
c_˘x
)

62 : 
CWD
(
Fûe
::
gë_cwd
()),

63 
c_›ti⁄s
(
c_˘x
),

64 
íåy_∑th
(""),

65 
hód_imp‹ts
(0),

66 
mem
(
Mem‹y_M™agî
()),

67 
∂ugös
(),

68 
emôãr
(
c_›ti⁄s
),

70 
°rögs
(),

71 
ªsour˚s
(),

72 
shìts
(),

73 
sub£t_m≠
(),

74 
imp‹t_°ack
(),

76 
c_hódîs
 (
°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
>()),

77 
c_imp‹ãrs
 (
°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
>()),

78 
c_fun˘i⁄s
 (
°d
::
ve˘‹
<
Sass_Fun˘i⁄_E¡ry
>()),

80 
ödít
 (
ß„_°r
(
c_›ti⁄s
.indent, " ")),

81 
löe„ed
 (
ß„_°r
(
c_›ti⁄s
.linefeed, "\n")),

83 
öput_∑th
 (
make_ˇn⁄iˇl_∑th
(
ß„_öput
(
c_›ti⁄s
.input_path))),

84 
ouçut_∑th
 (
make_ˇn⁄iˇl_∑th
(
ß„_ouçut
(
c_›ti⁄s
.ouçut_∑th, 
öput_∑th
))),

85 
sour˚_m≠_fûe
 (
make_ˇn⁄iˇl_∑th
(
ß„_°r
(
c_›ti⁄s
.source_map_file, ""))),

86 
sour˚_m≠_roŸ
 (
make_ˇn⁄iˇl_∑th
(
ß„_°r
(
c_›ti⁄s
.source_map_root, "")))

91 
	gö˛ude_∑ths
.
push_back
(
CWD
);

94 
cﬁÀ˘_ö˛ude_∑ths
(
c_›ti⁄s
.
ö˛ude_∑th
);

95 
cﬁÀ˘_ö˛ude_∑ths
(
c_›ti⁄s
.
ö˛ude_∑ths
);

96 
cﬁÀ˘_∂ugö_∑ths
(
c_›ti⁄s
.
∂ugö_∑th
);

97 
cﬁÀ˘_∂ugö_∑ths
(
c_›ti⁄s
.
∂ugö_∑ths
);

100 autÿ
	g∂ug
 : 
∂ugö_∑ths
Ë
∂ugös
.
lﬂd_∂ugös
(
∂ug
);

101 autÿ
	g‚
 : 
∂ugös
.
gë_hódîs
()Ë
c_hódîs
.
push_back
(
‚
);

102 autÿ
	g‚
 : 
∂ugös
.
gë_imp‹ãrs
()Ë
c_imp‹ãrs
.
push_back
(
‚
);

103 autÿ
	g‚
 : 
∂ugös
.
gë_fun˘i⁄s
()Ë
c_fun˘i⁄s
.
push_back
(
‚
);

106 
s‹t
 (
c_hódîs
.
begö
(), c_hódîs.
íd
(), 
s‹t_imp‹ãrs
);

107 
s‹t
 (
c_imp‹ãrs
.
begö
(), c_imp‹ãrs.
íd
(), 
s‹t_imp‹ãrs
);

109 
	gemôãr
.
£t_fûíame
(
abs2ªl
(
ouçut_∑th
, 
sour˚_m≠_fûe
, 
CWD
));

113 
	gC⁄ãxt
::
add_c_fun˘i⁄
(
Sass_Fun˘i⁄_E¡ry
 
fun˘i⁄
)

115 
c_fun˘i⁄s
.
push_back
(
fun˘i⁄
);

117 
	gC⁄ãxt
::
add_c_hódî
(
Sass_Imp‹ãr_E¡ry
 
hódî
)

119 
c_hódîs
.
push_back
(
hódî
);

121 
s‹t
 (
c_hódîs
.
begö
(), c_hódîs.
íd
(), 
s‹t_imp‹ãrs
);

123 
	gC⁄ãxt
::
add_c_imp‹ãr
(
Sass_Imp‹ãr_E¡ry
 
imp‹ãr
)

125 
c_imp‹ãrs
.
push_back
(
imp‹ãr
);

127 
s‹t
 (
c_imp‹ãrs
.
begö
(), c_imp‹ãrs.
íd
(), 
s‹t_imp‹ãrs
);

130 
	gC⁄ãxt
::~
C⁄ãxt
()

133 
size_t
 
i
 = 0; 
	gi
 < 
	gªsour˚s
.
size
(); ++i) {

134 
‰ì
(
ªsour˚s
[
i
].
c⁄ã¡s
);

135 
‰ì
(
ªsour˚s
[
i
].
§cm≠
);

138 
size_t
 
	gn
 = 0;Ç < 
	g°rögs
.
size
(); ++nË
‰ì
(
°rögs
[
n
]);

141 
size_t
 
	gm
 = 0; m < 
	gimp‹t_°ack
.
size
(); ++m) {

142 
ßss_imp‹t_èke_sour˚
(
imp‹t_°ack
[
m
]);

143 
ßss_imp‹t_èke_§cm≠
(
imp‹t_°ack
[
m
]);

144 
ßss_dñëe_imp‹t
(
imp‹t_°ack
[
m
]);

147 
	gªsour˚s
.
˛ór
(); 
	gimp‹t_°ack
.clear();

150 
	gD©a_C⁄ãxt
::~
D©a_C⁄ãxt
()

159 
Fûe_C⁄ãxt
::~File_Context()

163 
C⁄ãxt
::
cﬁÀ˘_ö˛ude_∑ths
(c⁄° * 
∑ths_°r
)

165 i‡(
∑ths_°r
) {

166 c⁄° * 
beg
 = 
∑ths_°r
;

167 c⁄° * 
	gíd
 = 
PªÀxî
::
föd_fú°
<
PATH_SEP
>(
beg
);

169 
	gíd
) {

170 
	g°d
::
°rög
 
∑th
(
beg
, 
íd
 - beg);

171 i‡(!
	g∑th
.
em±y
()) {

172 i‡(*
	g∑th
.
rbegö
(Ë!'/'Ë
∑th
 += '/';

173 
	gö˛ude_∑ths
.
push_back
(
∑th
);

175 
	gbeg
 = 
íd
 + 1;

176 
	gíd
 = 
PªÀxî
::
föd_fú°
<
PATH_SEP
>(
beg
);

179 
	g°d
::
°rög
 
∑th
(
beg
);

180 i‡(!
	g∑th
.
em±y
()) {

181 i‡(*
	g∑th
.
rbegö
(Ë!'/'Ë
∑th
 += '/';

182 
	gö˛ude_∑ths
.
push_back
(
∑th
);

187 
	gC⁄ãxt
::
cﬁÀ˘_ö˛ude_∑ths
(
°rög_li°
* 
∑ths_¨øy
)

189 
∑ths_¨øy
)

191 
cﬁÀ˘_ö˛ude_∑ths
(
∑ths_¨øy
->
°rög
);

192 
	g∑ths_¨øy
 = 
∑ths_¨øy
->
√xt
;

196 
	gC⁄ãxt
::
cﬁÀ˘_∂ugö_∑ths
(c⁄° * 
∑ths_°r
)

198 i‡(
∑ths_°r
) {

199 c⁄° * 
beg
 = 
∑ths_°r
;

200 c⁄° * 
	gíd
 = 
PªÀxî
::
föd_fú°
<
PATH_SEP
>(
beg
);

202 
	gíd
) {

203 
	g°d
::
°rög
 
∑th
(
beg
, 
íd
 - beg);

204 i‡(!
	g∑th
.
em±y
()) {

205 i‡(*
	g∑th
.
rbegö
(Ë!'/'Ë
∑th
 += '/';

206 
	g∂ugö_∑ths
.
push_back
(
∑th
);

208 
	gbeg
 = 
íd
 + 1;

209 
	gíd
 = 
PªÀxî
::
föd_fú°
<
PATH_SEP
>(
beg
);

212 
	g°d
::
°rög
 
∑th
(
beg
);

213 i‡(!
	g∑th
.
em±y
()) {

214 i‡(*
	g∑th
.
rbegö
(Ë!'/'Ë
∑th
 += '/';

215 
	g∂ugö_∑ths
.
push_back
(
∑th
);

220 
	gC⁄ãxt
::
cﬁÀ˘_∂ugö_∑ths
(
°rög_li°
* 
∑ths_¨øy
)

222 
∑ths_¨øy
)

224 
cﬁÀ˘_∂ugö_∑ths
(
∑ths_¨øy
->
°rög
);

225 
	g∑ths_¨øy
 = 
∑ths_¨øy
->
√xt
;

231 
	g°d
::
ve˘‹
<
In˛ude
> 
C⁄ãxt
::
föd_ö˛udes
(c⁄° 
Imp‹ãr
& 
imp‹t
)

234 
°d
::
°rög
 
ba£_∑th
(
ªl2abs
(
imp‹t
.base_path));

236 
	g°d
::
ve˘‹
<
In˛ude
> 
vec
(
ªsﬁve_ö˛udes
(
ba£_∑th
, 
imp‹t
.
imp_∑th
));

238 
size_t
 
	gi
 = 0, 
	gS
 = 
ö˛ude_∑ths
.
size
(); 
	gvec
.size(Ë=0 && 
i
 < 
S
; ++i)

241 
	g°d
::
ve˘‹
<
In˛ude
> 
ªsﬁved
(
ªsﬁve_ö˛udes
(
ö˛ude_∑ths
[
i
], 
imp‹t
.
imp_∑th
));

242 i‡(
	gªsﬁved
.
size
()Ë
	gvec
.
ö£π
(
vec
.
íd
(), 
ªsﬁved
.
begö
(),Ñesolved.end());

245  
	gvec
;

251 
	gC⁄ãxt
::
ªgi°î_ªsour˚
(c⁄° 
In˛ude
& 
öc
, c⁄° 
Resour˚
& 
ªs
, 
P¨£rSèã
* 
¥°©e
)

263 
size_t
 
	gidx
 = 
ªsour˚s
.
size
();

266 
	gemôãr
.
add_sour˚_ödex
(
idx
);

270 
	gªsour˚s
.
push_back
(
ªs
);

273 
	gö˛uded_fûes
.
push_back
(
öc
.
abs_∑th
);

275 
	g§cm≠_löks
.
push_back
(
abs2ªl
(
öc
.
abs_∑th
, 
sour˚_m≠_fûe
, 
CWD
));

278 
Sass_Imp‹t_E¡ry
 
	gimp‹t
 = 
ßss_make_imp‹t
(

279 
öc
.
imp_∑th
.
c_°r
(),

280 
öc
.
abs_∑th
.
c_°r
(),

281 
ªs
.
c⁄ã¡s
,

282 
ªs
.
§cm≠


285 
	gimp‹t_°ack
.
push_back
(
imp‹t
);

288 c⁄° * 
	gc⁄ã¡s
 = 
ªsour˚s
[
idx
].
c⁄ã¡s
;

291 
	g°rögs
.
push_back
(
ßss_c›y_c_°rög
(
öc
.
abs_∑th
.
c_°r
()));

293 
P¨£rSèã
 
p°©e
(
°rögs
.
back
(), 
c⁄ã¡s
, 
idx
);

296 
size_t
 
	gi
 = 0; i < 
	gimp‹t_°ack
.
size
() - 2; ++i) {

297 autÿ
	g∑ª¡
 = 
imp‹t_°ack
[
i
];

298 i‡(
	g°d
::
°rcmp
(
∑ª¡
->
abs_∑th
, 
imp‹t
->abs_path) == 0) {

299 
°d
::
°rög
 
°ack
("An @importÜoop has been found:");

300 
size_t
 
	gn
 = 1;Ç < 
	gi
 + 2; ++n) {

301 
	g°ack
 +"\¿ " + 
°d
::
°rög
(
imp‹t_°ack
[
n
]->
imp_∑th
) +

302 " imp‹t†" + 
°d
::
°rög
(
imp‹t_°ack
[
n
+1]->
imp_∑th
);

306 
P¨£rSèã
 
	g°©e
 = 
¥°©e
 ? *¥°©ê: 
p°©e
;

307 
throw
 
	gEx˚±i⁄
::
InvÆidSy¡ax
(
°©e
, 
°ack
, &
imp‹t_°ack
);

313 
P¨£r
 
p
(P¨£r::
‰om_c_°r
(
c⁄ã¡s
, *
this
, 
p°©e
));

315 
ßss_imp‹t_èke_sour˚
(
imp‹t
);

316 
ßss_imp‹t_èke_§cm≠
(
imp‹t
);

318 
Block
* 
	groŸ
 = 
p
.
∑r£
();

320 
ßss_dñëe_imp‹t
(
imp‹t_°ack
.
back
());

322 
	gimp‹t_°ack
.
p›_back
();

324 
	g°d
::
∑ú
<c⁄° 
°d
::
°rög
, c⁄° 
	gStyÀShìt
>

325 
a°_∑ú
(
öc
.
abs_∑th
, { 
ªs
, 
roŸ
 });

327 
	gshìts
.
ö£π
(
a°_∑ú
);

332 
In˛ude
 
	gC⁄ãxt
::
lﬂd_imp‹t
(c⁄° 
Imp‹ãr
& 
imp
, 
P¨£rSèã
 
p°©e
)

337 c⁄° 
	g°d
::
ve˘‹
<
In˛ude
> 
ªsﬁved
(
föd_ö˛udes
(
imp
));

340 i‡(
	gªsﬁved
.
size
() > 1) {

341 
	g°d
::
°rög°ªam
 
msg_°ªam
;

342 
	gmsg_°ªam
 << "It'sÇot clear which fileÅo import for ";

343 
	gmsg_°ªam
 << "'@imp‹à\"" << 
	gimp
.
	gimp_∑th
 << "\"'." << "\n";

344 
	gmsg_°ªam
 << "Candidates:" << "\n";

345 
size_t
 
	gi
 = 0, 
	gL
 = 
ªsﬁved
.
size
(); i < L; ++i)

346 { 
	gmsg_°ªam
 << " " << 
	gªsﬁved
[
i
].
	gimp_∑th
 << "\n"; }

347 
	gmsg_°ªam
 << "Please delete orÑenameáll but one ofÅhese files." << "\n";

348 
îr‹
(
msg_°ªam
.
°r
(), 
p°©e
);

352 i‡(
	gªsﬁved
.
size
() == 1) {

353 
boﬁ
 
u£_ˇche
 = 
c_imp‹ãrs
.
size
() == 0;

355 i‡(
	gu£_ˇche
 && 
	gshìts
.
cou¡
(
ªsﬁved
[0].
abs_∑th
)Ë 
	gªsﬁved
[0];

358 i‡(* 
	gc⁄ã¡s
 = 
ªad_fûe
(
ªsﬁved
[0].
abs_∑th
)) {

360 
ªgi°î_ªsour˚
(
ªsﬁved
[0], { 
c⁄ã¡s
, 0 }, &
p°©e
);

362  
	gªsﬁved
[0];

367  { 
	gimp
, "" };

371 
	gC⁄ãxt
::
imp‹t_uæ
 (
Imp‹t
* 
imp
, 
°d
::
°rög
 
lﬂd_∑th
, c⁄° std::°rög& 
˘x_∑th
) {

373 
P¨£rSèã
 
p°©e
(
imp
->pstate());

374 
	g°d
::
°rög
 
imp_∑th
(
unquŸe
(
lﬂd_∑th
));

375 
	g°d
::
°rög
 
¥Ÿocﬁ
("file");

377 
usög
 
«me•a˚
 
	gPªÀxî
;

378 i‡(c⁄° * 
	g¥Ÿo
 = 
£quí˚
< 
idítifõr
, 
	gexa˘ly
<':'>,Éxa˘ly<'/'>,Éxa˘ly<'/'> >(
	gimp_∑th
.
c_°r
())) {

380 
	g¥Ÿocﬁ
 = 
°d
::
°rög
(
imp_∑th
.
c_°r
(), 
¥Ÿo
 - 3);

386 i‡(
	gimp
->
medü_quîõs
(Ë|| 
	g¥Ÿocﬁ
 !"fûe" || 
imp_∑th
.
sub°r
(0, 2) == "//") {

387 
imp
->
uæs
().
push_back
(
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, imp->
p°©e
(), 
lﬂd_∑th
));

389 i‡(
	gimp_∑th
.
Àngth
(Ë> 4 && imp_∑th.
sub°r
(
imp_∑th
.length() - 4, 4) == ".css") {

390 
Såög_C⁄°™t
* 
loc
 = 
SASS_MEMORY_NEW
(
mem
, Såög_C⁄°™t, 
p°©e
, 
unquŸe
(
lﬂd_∑th
));

391 
Argumít
* 
	gloc_¨g
 = 
SASS_MEMORY_NEW
(
mem
, Argumít, 
p°©e
, 
loc
);

392 
Argumíts
* 
	gloc_¨gs
 = 
SASS_MEMORY_NEW
(
mem
, Argumíts, 
p°©e
);

393 (*
	gloc_¨gs
Ë<< 
	gloc_¨g
;

394 
Fun˘i⁄_CÆl
* 
	g√w_uæ
 = 
SASS_MEMORY_NEW
(
mem
, Fun˘i⁄_CÆl, 
p°©e
, "uæ", 
loc_¨gs
);

395 
	gimp
->
uæs
().
push_back
(
√w_uæ
);

398 c⁄° 
Imp‹ãr
 
imp‹ãr
(
imp_∑th
, 
˘x_∑th
);

399 
In˛ude
 
ö˛ude
(
lﬂd_imp‹t
(
imp‹ãr
, 
p°©e
));

400 i‡(
	gö˛ude
.
	gabs_∑th
.
em±y
()) {

401 
îr‹
("Fûêtÿimp‹ànŸ found o∏uƒódabÀ: " + 
imp_∑th
 + "\nP¨íà°yÀ shìt: " + 
˘x_∑th
, 
p°©e
);

403 
	gimp
->
öcs
().
push_back
(
ö˛ude
);

410 
boﬁ
 
	gC⁄ãxt
::
ˇŒ_lﬂdî
(c⁄° 
°d
::
°rög
& 
lﬂd_∑th
, c⁄° * 
˘x_∑th
, 
P¨£rSèã
& 
p°©e
, 
Imp‹t
* 
imp
, std::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
imp‹ãrs
, boﬁ 
⁄ly_⁄e
)

413 
size_t
 
	gcou¡
 = 0;

415 
boﬁ
 
	ghas_imp‹t
 = 
Ál£
;

417 
	gSass_Imp‹ãr_E¡ry
& 
	gimp‹ãr
 : 
imp‹ãrs
) {

419 
Sass_Imp‹ãr_Fn
 
‚
 = 
ßss_imp‹ãr_gë_fun˘i⁄
(
imp‹ãr
);

421 i‡(
Sass_Imp‹t_Li°
 
	gö˛udes
 =

422 
‚
(
lﬂd_∑th
.
c_°r
(), 
imp‹ãr
, 
c_compûî
)

425 
Sass_Imp‹t_Li°
 
	gô_ö˛udes
 = 
ö˛udes
;

426 *
	gô_ö˛udes
Ë{ ++
	gcou¡
;

428 
	g°d
::
°rög
 
uniq_∑th
 = 
lﬂd_∑th
;

429 i‡(!
	g⁄ly_⁄e
 && 
	gcou¡
) {

430 
	g°d
::
°rög°ªam
 
∑th_°rm
;

431 
	g∑th_°rm
 << 
	guniq_∑th
 << ":" << 
	gcou¡
;

432 
	guniq_∑th
 = 
∑th_°rm
.
°r
();

435 
Imp‹ãr
 
imp‹ãr
(
uniq_∑th
, 
˘x_∑th
);

437 
Sass_Imp‹t_E¡ry
 
	gö˛ude
 = *
ô_ö˛udes
;

438 * 
	gsour˚
 = 
ßss_imp‹t_èke_sour˚
(
ö˛ude
);

439 * 
	g§cm≠
 = 
ßss_imp‹t_èke_§cm≠
(
ö˛ude
);

440 
size_t
 
	glöe
 = 
ßss_imp‹t_gë_îr‹_löe
(
ö˛ude
);

441 
size_t
 
	gcﬁumn
 = 
ßss_imp‹t_gë_îr‹_cﬁumn
(
ö˛ude
);

442 c⁄° *
	gabs_∑th
 = 
ßss_imp‹t_gë_abs_∑th
(
ö˛ude
);

445 i‡(c⁄° * 
	gîr_mesßge
 = 
ßss_imp‹t_gë_îr‹_mesßge
(
ö˛ude
)) {

446 i‡(
sour˚
 || 
§cm≠
Ë
ªgi°î_ªsour˚
({ 
imp‹ãr
, 
uniq_∑th
 }, { sour˚, srcm≠ }, &
p°©e
);

447 i‡(
	glöe
 =
°d
::
°rög
::
≈os
 && 
cﬁumn
 =°d::°rög::≈osË
îr‹
(
îr_mesßge
, 
p°©e
);

448 
îr‹
(
îr_mesßge
, 
P¨£rSèã
(
˘x_∑th
, 
sour˚
, 
Posôi⁄
(
löe
, 
cﬁumn
)));

451 i‡(
	gsour˚
) {

454 
	g°d
::
°rög
 
∑th_key
(
abs_∑th
 ?ábs_∑th : 
uniq_∑th
);

456 
In˛ude
 
ö˛ude
(
imp‹ãr
, 
∑th_key
);

458 
	gimp
->
öcs
().
push_back
(
ö˛ude
);

460 
ªgi°î_ªsour˚
(
ö˛ude
, { 
sour˚
, 
§cm≠
 }, &
p°©e
);

464 if(
	gabs_∑th
) {

472 
imp‹t_uæ
(
imp
, 
abs_∑th
, 
˘x_∑th
);

475 ++
	gô_ö˛udes
;

478 
ßss_dñëe_imp‹t_li°
(
ö˛udes
);

480 
	ghas_imp‹t
 = 
åue
;

482 i‡(
	g⁄ly_⁄e
) ;

486  
	ghas_imp‹t
;

489 
ªgi°î_fun˘i⁄
(
C⁄ãxt
&, 
Sig«tuª
 
sig
, 
N©ive_Fun˘i⁄
 
f
, 
Env
* 
ív
);

490 
ªgi°î_fun˘i⁄
(
C⁄ãxt
&, 
Sig«tuª
 
sig
, 
N©ive_Fun˘i⁄
 
f
, 
size_t
 
¨ôy
, 
Env
* 
ív
);

491 
ªgi°î_ovîlﬂd_°ub
(
C⁄ãxt
&, 
°d
::
°rög
 
«me
, 
Env
* 
ív
);

492 
ªgi°î_buût_ö_fun˘i⁄s
(
C⁄ãxt
&, 
Env
* 
ív
);

493 
ªgi°î_c_fun˘i⁄s
(
C⁄ãxt
&, 
Env
* 
ív
, 
Sass_Fun˘i⁄_Li°
);

494 
ªgi°î_c_fun˘i⁄
(
C⁄ãxt
&, 
Env
* 
ív
, 
Sass_Fun˘i⁄_E¡ry
);

496 * 
	gC⁄ãxt
::
ªndî
(
Block
* 
roŸ
)

499 i‡(!
roŸ
)  0;

501 
	groŸ
->
≥rf‹m
(&
emôãr
);

503 
	gemôãr
.
föÆize
();

505 
OuçutBuf„r
 
	gemôãd
 = 
emôãr
.
gë_buf„r
();

507 i‡(!
	gc_›ti⁄s
.
	gomô_sour˚_m≠_uæ
) {

509 i‡(
	gc_›ti⁄s
.
	gsour˚_m≠_embed
) {

510 
	gemôãd
.
	gbuf„r
 +
löe„ed
;

511 
	gemôãd
.
	gbuf„r
 +
f‹m©_embedded_sour˚_m≠
();

514 i‡(
	gsour˚_m≠_fûe
 != "") {

515 
emôãd
.
buf„r
 +
löe„ed
;

516 
	gemôãd
.
	gbuf„r
 +
f‹m©_sour˚_m≠pög_uæ
(
sour˚_m≠_fûe
);

521  
ßss_c›y_c_°rög
(
emôãd
.
buf„r
.
c_°r
());

524 
	gC⁄ãxt
::
≠∂y_cu°om_hódîs
(
Block
* 
roŸ
, c⁄° * 
˘x_∑th
, 
P¨£rSèã
 
p°©e
)

527 
Imp‹t
* 
	gimp
 = 
SASS_MEMORY_NEW
(
mem
, Imp‹t, 
p°©e
);

530 
ˇŒ_hódîs
(
íåy_∑th
, 
˘x_∑th
, 
p°©e
, 
imp
);

532 
	ghód_imp‹ts
 +
ªsour˚s
.
size
() - 1;

534 i‡(!
	gimp
->
uæs
().
em±y
()Ë(*
	groŸ
) << imp;

536 
size_t
 
	gi
 = 0, 
	gS
 = 
imp
->
öcs
().
size
(); i < S; ++i) {

537 (*
	groŸ
Ë<< 
SASS_MEMORY_NEW
(
mem
, 
Imp‹t_Stub
, 
p°©e
, 
imp
->
öcs
()[
i
]);

541 
Block
* 
	gFûe_C⁄ãxt
::
∑r£
()

545 i‡(
öput_∑th
.
em±y
())  0;

549 
	g°d
::
°rög
 
abs_∑th
(
ªl2abs
(
öput_∑th
, 
CWD
));

552 * 
	gc⁄ã¡s
 = 
ªad_fûe
(
abs_∑th
);

556 
size_t
 
	gi
 = 0, 
	gS
 = 
ö˛ude_∑ths
.
size
(); 
	gc⁄ã¡s
 =0 && 
i
 < 
S
; ++i) {

558 
	gabs_∑th
 = 
ªl2abs
(
öput_∑th
, 
ö˛ude_∑ths
[
i
]);

560 
	gc⁄ã¡s
 = 
ªad_fûe
(
abs_∑th
);

564 i‡(!
	gc⁄ã¡s
Ë
	gthrow
 "FûêtÿªadÇŸ found o∏uƒódabÀ: " + 
	göput_∑th
;

567 
	gíåy_∑th
 = 
abs_∑th
;

570 
Sass_Imp‹t_E¡ry
 
	gimp‹t
 = 
ßss_make_imp‹t
(

571 
öput_∑th
.
c_°r
(),

572 
íåy_∑th
.
c_°r
(),

573 
c⁄ã¡s
,

577 
	gimp‹t_°ack
.
push_back
(
imp‹t
);

580 
ªgi°î_ªsour˚
({{ 
öput_∑th
, "." }, 
abs_∑th
 }, { 
c⁄ã¡s
, 0 });

583  
compûe
();

587 
Block
* 
	gD©a_C⁄ãxt
::
∑r£
()

591 i‡(!
sour˚_c_°r
)  0;

594 if(
	gc_›ti⁄s
.
	gis_ödíãd_sy¡ax_§c
) {

596 * 
	gc⁄vîãd
 = 
ßss2scss
(
sour˚_c_°r
,

598 
SASS2SCSS_PRETTIFY_1
 | 
SASS2SCSS_KEEP_COMMENT
);

600 
‰ì
(
sour˚_c_°r
); 
	gsour˚_c_°r
 = 
c⁄vîãd
;

604 
	gíåy_∑th
 = 
öput_∑th
.
em±y
() ? "stdin" : input_path;

607 
	g°d
::
°rög
 
abs_∑th
(
ªl2abs
(
íåy_∑th
));

608 * 
	gabs_∑th_c_°r
 = 
ßss_c›y_c_°rög
(
abs_∑th
.
c_°r
());

609 
	g°rögs
.
push_back
(
abs_∑th_c_°r
);

612 
Sass_Imp‹t_E¡ry
 
	gimp‹t
 = 
ßss_make_imp‹t
(

613 
íåy_∑th
.
c_°r
(),

614 
abs_∑th_c_°r
,

615 
sour˚_c_°r
,

616 
§cm≠_c_°r


619 
	gimp‹t_°ack
.
push_back
(
imp‹t
);

622 
ªgi°î_ªsour˚
({{ 
öput_∑th
, "." }, i≈ut_∑th }, { 
sour˚_c_°r
, 
§cm≠_c_°r
 });

625  
compûe
();

631 
Block
* 
	gC⁄ãxt
::
compûe
()

634 i‡(
ªsour˚s
.
size
() == 0)  0;

636 
Block
* 
	groŸ
 = 
shìts
.
©
(
íåy_∑th
).
roŸ
;

638 i‡(
	groŸ
 == 0)  0;

640 
Env
 
	gglobÆ
;

642 
ªgi°î_buût_ö_fun˘i⁄s
(*
this
, &
globÆ
);

644 
size_t
 
	gi
 = 0, 
	gS
 = 
c_fun˘i⁄s
.
size
(); i < S; ++i)

645 { 
ªgi°î_c_fun˘i⁄
(*
this
, &
globÆ
, 
c_fun˘i⁄s
[
i
]); }

647 
Backåa˚
 
backåa˚
(0, 
P¨£rSèã
("", 0), "");

649 
Ex∑nd
 
ex∑nd
(*
this
, &
globÆ
, &
backåa˚
);

650 
Cssize
 
cssize
(*
this
, &
backåa˚
);

652 
	groŸ
 = 
roŸ
->
≥rf‹m
(&
ex∑nd
)->
block
();

654 
	groŸ
 = 
roŸ
->
≥rf‹m
(&
cssize
)->
block
();

656 i‡(!
	gsub£t_m≠
.
em±y
()) {

658 
Exãnd
 
exãnd
(*
this
, 
sub£t_m≠
);

660 
	groŸ
->
≥rf‹m
(&
exãnd
);

665 
Remove_Pœ˚hﬁdîs
 
ªmove_∂a˚hﬁdîs
(*
this
);

666 
	groŸ
->
≥rf‹m
(&
ªmove_∂a˚hﬁdîs
);

668  
	groŸ
;

672 
	g°d
::
°rög
 
C⁄ãxt
::
f‹m©_embedded_sour˚_m≠
()

674 
°d
::
°rög
 
m≠
 = 
emôãr
.
ªndî_§cm≠
(*
this
);

675 
	g°d
::
i°rög°ªam
 
is
–
m≠
 );

676 
	g°d
::
o°rög°ªam
 
buf„r
;

677 
	gba£64
::
ícodî
 
E
;

678 
	gE
.
ícode
(
is
, 
buf„r
);

679 
	g°d
::
°rög
 
uæ
 = "d©a:≠∂iˇti⁄/js⁄;ba£64," + 
buf„r
.
°r
();

680 
	guæ
.
îa£
(
uæ
.
size
() - 1);

681  "/*# sour˚M≠pögURL=" + 
	guæ
 + " */";

684 
	g°d
::
°rög
 
C⁄ãxt
::
f‹m©_sour˚_m≠pög_uæ
(c⁄° 
°d
::°rög& 
fûe
)

686 
°d
::
°rög
 
uæ
 = 
abs2ªl
(
fûe
, 
ouçut_∑th
, 
CWD
);

687  "/*# sour˚M≠pögURL=" + 
	guæ
 + " */";

690 * 
	gC⁄ãxt
::
ªndî_§cm≠
()

692 i‡(
sour˚_m≠_fûe
 == "")  0;

693 * 
	gªsu…
 = 0;

694 
	g°d
::
°rög
 
m≠
 = 
emôãr
.
ªndî_§cm≠
(*
this
);

695 
	gªsu…
 = 
ßss_c›y_c_°rög
(
m≠
.
c_°r
());

696  
	gªsu…
;

702 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
C⁄ãxt
::
gë_ö˛uded_fûes
(
boﬁ
 
skù
, 
size_t
 
hódîs
)

705 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ö˛udes
 = 
ö˛uded_fûes
;

706 i‡(
	gö˛udes
.
size
(Ë=0Ë 
ö˛udes
;

707 i‡(
	gskù
Ë{ 
	gö˛udes
.
îa£
–
ö˛udes
.
begö
(), in˛udes.begö(Ë+ 1 + 
hódîs
); }

708 { 
	gö˛udes
.
îa£
–
ö˛udes
.
begö
(Ë+ 1, in˛udes.begö(Ë+ 1 + 
hódîs
); }

709 
	gö˛udes
.
îa£
–
°d
::
unique
–
ö˛udes
.
begö
(), in˛udes.
íd
() ), includes.end() );

710 
	g°d
::
s‹t
–
ö˛udes
.
begö
(Ë+ (
skù
 ? 0 : 1), in˛udes.
íd
() );

711  
	gö˛udes
;

714 
ªgi°î_fun˘i⁄
(
C⁄ãxt
& 
˘x
, 
Sig«tuª
 
sig
, 
N©ive_Fun˘i⁄
 
f
, 
Env
* 
ív
)

716 
Deföôi⁄
* 
	gdef
 = 
make_«tive_fun˘i⁄
(
sig
, 
f
, 
˘x
);

717 
	gdef
->
ívú⁄mít
(
ív
);

718 (*
	gív
)[
def
->
«me
() + "[f]"] = def;

721 
ªgi°î_fun˘i⁄
(
C⁄ãxt
& 
˘x
, 
Sig«tuª
 
sig
, 
N©ive_Fun˘i⁄
 
f
, 
size_t
 
¨ôy
, 
Env
* 
ív
)

723 
Deföôi⁄
* 
	gdef
 = 
make_«tive_fun˘i⁄
(
sig
, 
f
, 
˘x
);

724 
	g°d
::
°rög°ªam
 
ss
;

725 
	gss
 << 
	gdef
->
«me
(Ë<< "[f]" << 
	g¨ôy
;

726 
	gdef
->
ívú⁄mít
(
ív
);

727 (*
	gív
)[
ss
.
°r
()] = 
def
;

730 
ªgi°î_ovîlﬂd_°ub
(
C⁄ãxt
& 
˘x
, 
°d
::
°rög
 
«me
, 
Env
* 
ív
)

732 
Deföôi⁄
* 
	g°ub
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Definition,

733 
P¨£rSèã
("[built-in function]"),

735 
«me
,

738 
åue
);

739 (*
	gív
)[
«me
 + "[f]"] = 
°ub
;

743 
ªgi°î_buût_ö_fun˘i⁄s
(
C⁄ãxt
& 
˘x
, 
Env
* 
ív
)

745 
usög
 
«me•a˚
 
	gFun˘i⁄s
;

747 
ªgi°î_fun˘i⁄
(
˘x
, 
rgb_sig
, 
rgb
, 
ív
);

748 
ªgi°î_ovîlﬂd_°ub
(
˘x
, "rgba", 
ív
);

749 
ªgi°î_fun˘i⁄
(
˘x
, 
rgba_4_sig
, 
rgba_4
, 4, 
ív
);

750 
ªgi°î_fun˘i⁄
(
˘x
, 
rgba_2_sig
, 
rgba_2
, 2, 
ív
);

751 
ªgi°î_fun˘i⁄
(
˘x
, 
ªd_sig
, 
ªd
, 
ív
);

752 
ªgi°î_fun˘i⁄
(
˘x
, 
gªí_sig
, 
gªí
, 
ív
);

753 
ªgi°î_fun˘i⁄
(
˘x
, 
blue_sig
, 
blue
, 
ív
);

754 
ªgi°î_fun˘i⁄
(
˘x
, 
mix_sig
, 
mix
, 
ív
);

756 
ªgi°î_fun˘i⁄
(
˘x
, 
h¶_sig
, 
h¶
, 
ív
);

757 
ªgi°î_fun˘i⁄
(
˘x
, 
h¶a_sig
, 
h¶a
, 
ív
);

758 
ªgi°î_fun˘i⁄
(
˘x
, 
hue_sig
, 
hue
, 
ív
);

759 
ªgi°î_fun˘i⁄
(
˘x
, 
ßtuøti⁄_sig
, 
ßtuøti⁄
, 
ív
);

760 
ªgi°î_fun˘i⁄
(
˘x
, 
lighäess_sig
, 
lighäess
, 
ív
);

761 
ªgi°î_fun˘i⁄
(
˘x
, 
adju°_hue_sig
, 
adju°_hue
, 
ív
);

762 
ªgi°î_fun˘i⁄
(
˘x
, 
lighãn_sig
, 
lighãn
, 
ív
);

763 
ªgi°î_fun˘i⁄
(
˘x
, 
d¨kí_sig
, 
d¨kí
, 
ív
);

764 
ªgi°î_fun˘i⁄
(
˘x
, 
ßtuøã_sig
, 
ßtuøã
, 
ív
);

765 
ªgi°î_fun˘i⁄
(
˘x
, 
deßtuøã_sig
, 
deßtuøã
, 
ív
);

766 
ªgi°î_fun˘i⁄
(
˘x
, 
gøysˇÀ_sig
, 
gøysˇÀ
, 
ív
);

767 
ªgi°î_fun˘i⁄
(
˘x
, 
com∂emít_sig
, 
com∂emít
, 
ív
);

768 
ªgi°î_fun˘i⁄
(
˘x
, 
övît_sig
, 
övît
, 
ív
);

770 
ªgi°î_fun˘i⁄
(
˘x
, 
Æpha_sig
, 
Æpha
, 
ív
);

771 
ªgi°î_fun˘i⁄
(
˘x
, 
›acôy_sig
, 
Æpha
, 
ív
);

772 
ªgi°î_fun˘i⁄
(
˘x
, 
›acify_sig
, 
›acify
, 
ív
);

773 
ªgi°î_fun˘i⁄
(
˘x
, 
Áde_ö_sig
, 
›acify
, 
ív
);

774 
ªgi°î_fun˘i⁄
(
˘x
, 
å™•¨ítize_sig
, 
å™•¨ítize
, 
ív
);

775 
ªgi°î_fun˘i⁄
(
˘x
, 
Áde_out_sig
, 
å™•¨ítize
, 
ív
);

777 
ªgi°î_fun˘i⁄
(
˘x
, 
adju°_cﬁ‹_sig
, 
adju°_cﬁ‹
, 
ív
);

778 
ªgi°î_fun˘i⁄
(
˘x
, 
sˇÀ_cﬁ‹_sig
, 
sˇÀ_cﬁ‹
, 
ív
);

779 
ªgi°î_fun˘i⁄
(
˘x
, 
ch™ge_cﬁ‹_sig
, 
ch™ge_cﬁ‹
, 
ív
);

780 
ªgi°î_fun˘i⁄
(
˘x
, 
õ_hex_°r_sig
, 
õ_hex_°r
, 
ív
);

782 
ªgi°î_fun˘i⁄
(
˘x
, 
unquŸe_sig
, 
ßss_unquŸe
, 
ív
);

783 
ªgi°î_fun˘i⁄
(
˘x
, 
quŸe_sig
, 
ßss_quŸe
, 
ív
);

784 
ªgi°î_fun˘i⁄
(
˘x
, 
°r_Àngth_sig
, 
°r_Àngth
, 
ív
);

785 
ªgi°î_fun˘i⁄
(
˘x
, 
°r_ö£π_sig
, 
°r_ö£π
, 
ív
);

786 
ªgi°î_fun˘i⁄
(
˘x
, 
°r_ödex_sig
, 
°r_ödex
, 
ív
);

787 
ªgi°î_fun˘i⁄
(
˘x
, 
°r_¶i˚_sig
, 
°r_¶i˚
, 
ív
);

788 
ªgi°î_fun˘i⁄
(
˘x
, 
to_uµî_ˇ£_sig
, 
to_uµî_ˇ£
, 
ív
);

789 
ªgi°î_fun˘i⁄
(
˘x
, 
to_lowî_ˇ£_sig
, 
to_lowî_ˇ£
, 
ív
);

791 
ªgi°î_fun˘i⁄
(
˘x
, 
≥r˚¡age_sig
, 
≥r˚¡age
, 
ív
);

792 
ªgi°î_fun˘i⁄
(
˘x
, 
round_sig
, 
round
, 
ív
);

793 
ªgi°î_fun˘i⁄
(
˘x
, 
˚û_sig
, 
˚û
, 
ív
);

794 
ªgi°î_fun˘i⁄
(
˘x
, 
Êo‹_sig
, 
Êo‹
, 
ív
);

795 
ªgi°î_fun˘i⁄
(
˘x
, 
abs_sig
, 
abs
, 
ív
);

796 
ªgi°î_fun˘i⁄
(
˘x
, 
mö_sig
, 
mö
, 
ív
);

797 
ªgi°î_fun˘i⁄
(
˘x
, 
max_sig
, 
max
, 
ív
);

798 
ªgi°î_fun˘i⁄
(
˘x
, 
øndom_sig
, 
øndom
, 
ív
);

800 
ªgi°î_fun˘i⁄
(
˘x
, 
Àngth_sig
, 
Àngth
, 
ív
);

801 
ªgi°î_fun˘i⁄
(
˘x
, 
¡h_sig
, 
¡h
, 
ív
);

802 
ªgi°î_fun˘i⁄
(
˘x
, 
£t_¡h_sig
, 
£t_¡h
, 
ív
);

803 
ªgi°î_fun˘i⁄
(
˘x
, 
ödex_sig
, 
ödex
, 
ív
);

804 
ªgi°î_fun˘i⁄
(
˘x
, 
joö_sig
, 
joö
, 
ív
);

805 
ªgi°î_fun˘i⁄
(
˘x
, 
≠≥nd_sig
, 
≠≥nd
, 
ív
);

806 
ªgi°î_fun˘i⁄
(
˘x
, 
zù_sig
, 
zù
, 
ív
);

807 
ªgi°î_fun˘i⁄
(
˘x
, 
li°_£∑øt‹_sig
, 
li°_£∑øt‹
, 
ív
);

809 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_gë_sig
, 
m≠_gë
, 
ív
);

810 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_mîge_sig
, 
m≠_mîge
, 
ív
);

811 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_ªmove_sig
, 
m≠_ªmove
, 
ív
);

812 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_keys_sig
, 
m≠_keys
, 
ív
);

813 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_vÆues_sig
, 
m≠_vÆues
, 
ív
);

814 
ªgi°î_fun˘i⁄
(
˘x
, 
m≠_has_key_sig
, 
m≠_has_key
, 
ív
);

815 
ªgi°î_fun˘i⁄
(
˘x
, 
keyw‹ds_sig
, 
keyw‹ds
, 
ív
);

817 
ªgi°î_fun˘i⁄
(
˘x
, 
ty≥_of_sig
, 
ty≥_of
, 
ív
);

818 
ªgi°î_fun˘i⁄
(
˘x
, 
unô_sig
, 
unô
, 
ív
);

819 
ªgi°î_fun˘i⁄
(
˘x
, 
unôÀss_sig
, 
unôÀss
, 
ív
);

820 
ªgi°î_fun˘i⁄
(
˘x
, 
com∑øbÀ_sig
, 
com∑øbÀ
, 
ív
);

821 
ªgi°î_fun˘i⁄
(
˘x
, 
v¨übÀ_exi°s_sig
, 
v¨übÀ_exi°s
, 
ív
);

822 
ªgi°î_fun˘i⁄
(
˘x
, 
globÆ_v¨übÀ_exi°s_sig
, 
globÆ_v¨übÀ_exi°s
, 
ív
);

823 
ªgi°î_fun˘i⁄
(
˘x
, 
fun˘i⁄_exi°s_sig
, 
fun˘i⁄_exi°s
, 
ív
);

824 
ªgi°î_fun˘i⁄
(
˘x
, 
mixö_exi°s_sig
, 
mixö_exi°s
, 
ív
);

825 
ªgi°î_fun˘i⁄
(
˘x
, 
„©uª_exi°s_sig
, 
„©uª_exi°s
, 
ív
);

826 
ªgi°î_fun˘i⁄
(
˘x
, 
ˇŒ_sig
, 
ˇŒ
, 
ív
);

828 
ªgi°î_fun˘i⁄
(
˘x
, 
nŸ_sig
, 
ßss_nŸ
, 
ív
);

829 
ªgi°î_fun˘i⁄
(
˘x
, 
if_sig
, 
ßss_if
, 
ív
);

831 
ªgi°î_fun˘i⁄
(
˘x
, 
ö•e˘_sig
, 
ö•e˘
, 
ív
);

832 
ªgi°î_fun˘i⁄
(
˘x
, 
unique_id_sig
, 
unique_id
, 
ív
);

834 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_√°_sig
, 
£À˘‹_√°
, 
ív
);

835 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_≠≥nd_sig
, 
£À˘‹_≠≥nd
, 
ív
);

836 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_exãnd_sig
, 
£À˘‹_exãnd
, 
ív
);

837 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_ª∂a˚_sig
, 
£À˘‹_ª∂a˚
, 
ív
);

838 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_unify_sig
, 
£À˘‹_unify
, 
ív
);

839 
ªgi°î_fun˘i⁄
(
˘x
, 
is_su≥r£À˘‹_sig
, 
is_su≥r£À˘‹
, 
ív
);

840 
ªgi°î_fun˘i⁄
(
˘x
, 
sim∂e_£À˘‹s_sig
, 
sim∂e_£À˘‹s
, 
ív
);

841 
ªgi°î_fun˘i⁄
(
˘x
, 
£À˘‹_∑r£_sig
, 
£À˘‹_∑r£
, 
ív
);

844 
ªgi°î_c_fun˘i⁄s
(
C⁄ãxt
& 
˘x
, 
Env
* 
ív
, 
Sass_Fun˘i⁄_Li°
 
des¸s
)

846 
	gdes¸s
 && *descrs) {

847 
ªgi°î_c_fun˘i⁄
(
˘x
, 
ív
, *
des¸s
);

848 ++
	gdes¸s
;

851 
ªgi°î_c_fun˘i⁄
(
C⁄ãxt
& 
˘x
, 
Env
* 
ív
, 
Sass_Fun˘i⁄_E¡ry
 
des¸
)

853 
Deföôi⁄
* 
	gdef
 = 
make_c_fun˘i⁄
(
des¸
, 
˘x
);

854 
	gdef
->
ívú⁄mít
(
ív
);

855 (*
	gív
)[
def
->
«me
() + "[f]"] = def;

	@node_modules/node-sass/src/libsass/src/context.hpp

1 #i‚de‡
SASS_CONTEXT_H


2 
	#SASS_CONTEXT_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

6 
	~<m≠
>

8 
	#BUFFERSIZE
 255

	)

9 
	~"b64/ícode.h
"

11 
	~"a°_fwd_de˛.hµ
"

12 
	~"kwd_¨g_ma¸os.hµ
"

13 
	~"mem‹y_m™agî.hµ
"

14 
	~"a°_fwd_de˛.hµ
"

15 
	~"ßss_c⁄ãxt.hµ
"

16 
	~"ívú⁄mít.hµ
"

17 
	~"sour˚_m≠.hµ
"

18 
	~"sub£t_m≠.hµ
"

19 
	~"ouçut.hµ
"

20 
	~"∂ugös.hµ
"

21 
	~"fûe.hµ
"

24 
	gSass_Fun˘i⁄
;

26 
«me•a˚
 
	gSass
 {

28 ˛as†
	cC⁄ãxt
 {

29 
	gpublic
:

30 
imp‹t_uæ
 (
Imp‹t
* 
imp
, 
°d
::
°rög
 
lﬂd_∑th
, c⁄° std::°rög& 
˘x_∑th
);

31 
boﬁ
 
ˇŒ_hódîs
(c⁄° 
°d
::
°rög
& 
lﬂd_∑th
, c⁄° * 
˘x_∑th
, 
P¨£rSèã
& 
p°©e
, 
Imp‹t
* 
imp
)

32 {  
ˇŒ_lﬂdî
(
lﬂd_∑th
, 
˘x_∑th
, 
p°©e
, 
imp
, 
c_hódîs
, 
Ál£
); };

33 
boﬁ
 
ˇŒ_imp‹ãrs
(c⁄° 
°d
::
°rög
& 
lﬂd_∑th
, c⁄° * 
˘x_∑th
, 
P¨£rSèã
& 
p°©e
, 
Imp‹t
* 
imp
)

34 {  
ˇŒ_lﬂdî
(
lﬂd_∑th
, 
˘x_∑th
, 
p°©e
, 
imp
, 
c_imp‹ãrs
, 
åue
); };

36 
	g¥iv©e
:

37 
boﬁ
 
ˇŒ_lﬂdî
(c⁄° 
°d
::
°rög
& 
lﬂd_∑th
, c⁄° * 
˘x_∑th
, 
P¨£rSèã
& 
p°©e
, 
Imp‹t
* 
imp
, std::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
imp‹ãrs
, boﬁ 
⁄ly_⁄e
 = 
åue
);

39 
	gpublic
:

40 c⁄° 
°d
::
°rög
 
CWD
;

41 
	gSass_O±i⁄s
& 
	gc_›ti⁄s
;

42 
	g°d
::
°rög
 
íåy_∑th
;

43 
size_t
 
	ghód_imp‹ts
;

44 
Mem‹y_M™agî
 
	gmem
;

45 
Plugös
 
	g∂ugös
;

46 
Ouçut
 
	gemôãr
;

50 
	g°d
::
ve˘‹
<*> 
°rögs
;

51 
	g°d
::
ve˘‹
<
Resour˚
> 
ªsour˚s
;

52 
	g°d
::
m≠
<c⁄° 
°d
::
°rög
, c⁄° 
	gStyÀShìt
> 
	gshìts
;

53 
	gSub£t_M≠
<
	g°d
::
°rög
, std::
∑ú
<
Com∂ex_Sñe˘‹
*, 
	gCompound_Sñe˘‹
*> > 
	gsub£t_m≠
;

54 
	g°d
::
ve˘‹
<
Sass_Imp‹t_E¡ry
> 
imp‹t_°ack
;

56 
Sass_Compûî
* 
	gc_compûî
;

59 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ö˛uded_fûes
;

61 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
§cm≠_löks
;

64 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∂ugö_∑ths
;

65 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ö˛ude_∑ths
;

71 
≠∂y_cu°om_hódîs
(
Block
* 
roŸ
, c⁄° * 
∑th
, 
P¨£rSèã
 
p°©e
);

73 
	g°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
c_hódîs
;

74 
	g°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
c_imp‹ãrs
;

75 
	g°d
::
ve˘‹
<
Sass_Fun˘i⁄_E¡ry
> 
c_fun˘i⁄s
;

77 
add_c_hódî
(
Sass_Imp‹ãr_E¡ry
 
hódî
);

78 
add_c_imp‹ãr
(
Sass_Imp‹ãr_E¡ry
 
imp‹ãr
);

79 
add_c_fun˘i⁄
(
Sass_Fun˘i⁄_E¡ry
 
fun˘i⁄
);

81 c⁄° 
	g°d
::
°rög
 
ödít
;

82 c⁄° 
	g°d
::
°rög
 
löe„ed
;

83 c⁄° 
	g°d
::
°rög
 
öput_∑th
;

84 c⁄° 
	g°d
::
°rög
 
ouçut_∑th
;

85 c⁄° 
	g°d
::
°rög
 
sour˚_m≠_fûe
;

86 c⁄° 
	g°d
::
°rög
 
sour˚_m≠_roŸ
;

88 
	gvútuÆ
 ~
C⁄ãxt
();

89 
C⁄ãxt
(
Sass_C⁄ãxt
&);

90 
vútuÆ
 
Block
* 
∑r£
() = 0;

91 
vútuÆ
 
Block
* 
compûe
();

92 
vútuÆ
 * 
ªndî
(
Block
* 
roŸ
);

93 
vútuÆ
 * 
ªndî_§cm≠
();

95 
ªgi°î_ªsour˚
(c⁄° 
In˛ude
&, c⁄° 
Resour˚
&, 
P¨£rSèã
* = 0);

96 
	g°d
::
ve˘‹
<
In˛ude
> 
föd_ö˛udes
(c⁄° 
Imp‹ãr
& 
imp‹t
);

97 
In˛ude
 
lﬂd_imp‹t
(c⁄° 
Imp‹ãr
&, 
P¨£rSèã
 
p°©e
);

99 
Sass_Ouçut_StyÀ
 
ouçut_°yÀ
(Ë{  
	gc_›ti⁄s
.
	gouçut_°yÀ
; };

100 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
gë_ö˛uded_fûes
(
boﬁ
 
skù
 = 
Ál£
, 
size_t
 
hódîs
 = 0);

102 
	g¥iv©e
:

103 
cﬁÀ˘_∂ugö_∑ths
(c⁄° * 
∑ths_°r
);

104 
cﬁÀ˘_∂ugö_∑ths
(
°rög_li°
* 
∑ths_¨øy
);

105 
cﬁÀ˘_ö˛ude_∑ths
(c⁄° * 
∑ths_°r
);

106 
cﬁÀ˘_ö˛ude_∑ths
(
°rög_li°
* 
∑ths_¨øy
);

107 
	g°d
::
°rög
 
f‹m©_embedded_sour˚_m≠
();

108 
	g°d
::
°rög
 
f‹m©_sour˚_m≠pög_uæ
(c⁄° 
°d
::°rög& 
out_∑th
);

116 
	gpublic
:

117 c⁄° 
°d
::
°rög
& 
cwd
(Ë{  
CWD
; };

120 ˛as†
	cFûe_C⁄ãxt
 : 
public
 
C⁄ãxt
 {

121 
public
:

122 
Fûe_C⁄ãxt
(
Sass_Fûe_C⁄ãxt
& 
˘x
)

123 : 
C⁄ãxt
(
˘x
)

125 
vútuÆ
 ~
Fûe_C⁄ãxt
();

126 
vútuÆ
 
Block
* 
∑r£
();

129 ˛as†
	cD©a_C⁄ãxt
 : 
public
 
C⁄ãxt
 {

130 
public
:

131 * 
sour˚_c_°r
;

132 * 
	g§cm≠_c_°r
;

133 
D©a_C⁄ãxt
(
Sass_D©a_C⁄ãxt
& 
˘x
)

134 : 
C⁄ãxt
(
˘x
)

136 
sour˚_c_°r
 = 
˘x
.
sour˚_°rög
;

137 
	g§cm≠_c_°r
 = 
˘x
.
§cm≠_°rög
;

138 
	g˘x
.
	gsour˚_°rög
 = 0;

139 
	g˘x
.
	g§cm≠_°rög
 = 0;

141 
	gvútuÆ
 ~
D©a_C⁄ãxt
();

142 
vútuÆ
 
Block
* 
∑r£
();

	@node_modules/node-sass/src/libsass/src/cssize.cpp

1 
	~"ßss.hµ
"

2 
	~<io°ªam
>

3 
	~<ty≥öfo
>

4 
	~<ve˘‹
>

6 
	~"cssize.hµ
"

7 
	~"c⁄ãxt.hµ
"

8 
	~"backåa˚.hµ
"

10 
«me•a˚
 
	gSass
 {

12 
	gCssize
::
Cssize
(
C⁄ãxt
& 
˘x
, 
Backåa˚
* 
bt
)

13 : 
˘x
(ctx),

14 
block_°ack
(
°d
::
ve˘‹
<
Block
*>()),

15 
p_°ack
(
°d
::
ve˘‹
<
Sèãmít
*>()),

16 
s_°ack
(
°d
::
ve˘‹
<
Sñe˘‹_Li°
*>()),

17 
backåa˚
(
bt
)

19 
	gs_°ack
.
push_back
(
NULL
);

22 
Sèãmít
* 
	gCssize
::
∑ª¡
()

24  
p_°ack
.
size
(Ë?Ö_°ack.
back
(Ë: 
block_°ack
.
‰⁄t
();

27 
Sñe˘‹_Li°
* 
	gCssize
::
£À˘‹
()

29  
s_°ack
.
size
(Ë? s_°ack.
back
(Ë: 
NULL
;

32 
Sèãmít
* 
	gCssize
::
›î©‹
()(
Block
* 
b
)

34 
Block
* 
bb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
b
->
p°©e
(), b->
Àngth
(), b->
is_roŸ
());

36 
	gblock_°ack
.
push_back
(
bb
);

37 
≠≥nd_block
(
b
);

38 
	gblock_°ack
.
p›_back
();

39  
	gbb
;

42 
Sèãmít
* 
	gCssize
::
›î©‹
()(
Dúe˘ive
* 
r
)

44 i‡(!
r
->
block
(Ë|| !r->block()->
Àngth
()) Ñ;

46 i‡(
∑ª¡
()->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
)

48  (
r
->
is_key‰ames
()Ë? 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
BubbÀ
,Ñ->
p°©e
(),ÑË: 
bubbÀ
(r);

51 
	gp_°ack
.
push_back
(
r
);

52 
Dúe˘ive
* 
	gº
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Directive,

53 
r
->
p°©e
(),

54 
r
->
keyw‹d
(),

55 
r
->
£À˘‹
(),

56 
r
->
block
(Ë?Ñ->block()->
≥rf‹m
(
this
)->block() : 0);

57 i‡(
	gr
->
vÆue
()Ë
	gº
->vÆue(
r
->value());

58 
	gp_°ack
.
p›_back
();

60 
boﬁ
 
	gdúe˘ive_exi°s
 = 
Ál£
;

61 
size_t
 
	gL
 = 
º
->
block
(Ë?Ñr->block()->
Àngth
() : 0;

62 
size_t
 
	gi
 = 0; i < 
	gL
 && !
	gdúe˘ive_exi°s
; ++i) {

63 
Sèãmít
* 
	gs
 = (*
r
->
block
())[
i
];

64 i‡(
	gs
->
°©emít_ty≥
(Ë!
Sèãmít
::
BUBBLE
Ë
dúe˘ive_exi°s
 = 
åue
;

66 
	gs
 = 
°©ic_ˇ°
<
BubbÀ
*>(
s
)->
node
();

67 i‡(
	gs
->
°©emít_ty≥
(Ë!
Sèãmít
::
DIRECTIVE
Ë
dúe˘ive_exi°s
 = 
Ál£
;

68 
	gdúe˘ive_exi°s
 = (
°©ic_ˇ°
<
Dúe˘ive
*>(
s
)->
keyw‹d
(Ë=
º
->keyword());

73 
Block
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
º
->
p°©e
());

74 i‡(!(
	gdúe˘ive_exi°s
 || 
	gº
->
is_key‰ames
()))

76 
Dúe˘ive
* 
	gem±y_node
 = 
°©ic_ˇ°
<Dúe˘ive*>(
º
);

77 
	gem±y_node
->
block
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Block
, 
º
->block(Ë?Ñr->block()->
p°©e
() :Ñr->pstate()));

78 *
	gªsu…
 << 
	gem±y_node
;

81 
Sèãmít
* 
	gss
 = 
debubbÀ
(
º
->
block
(Ë?Ñr->block(Ë: 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Block
,Ñr->
p°©e
()),Ñr);

82 
size_t
 
	gi
 = 0, 
	gL
 = 
ss
->
block
()->
Àngth
(); i < L; ++i) {

83 *
	gªsu…
 << (*
	gss
->
block
())[
i
];

86  
	gªsu…
;

89 
Sèãmít
* 
	gCssize
::
›î©‹
()(
Key‰ame_RuÀ
* 
r
)

91 i‡(!
r
->
block
(Ë|| !r->block()->
Àngth
()) Ñ;

93 
Key‰ame_RuÀ
* 
	gº
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Keyframe_Rule,

94 
r
->
p°©e
(),

95 
r
->
block
()->
≥rf‹m
(
this
)->block());

96 i‡(
	gr
->
£À˘‹
()Ë
	gº
->£À˘‹(
r
->selector());

98  
debubbÀ
(
º
->
block
(),Ñr)->block();

101 
Sèãmít
* 
	gCssize
::
›î©‹
()(
RuÀ£t
* 
r
)

103 
p_°ack
.
push_back
(
r
);

104 
	gs_°ack
.
push_back
(
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>(
r
->
£À˘‹
()));

105 
RuÀ£t
* 
	gº
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ruleset,

106 
r
->
p°©e
(),

107 
r
->
£À˘‹
(),

108 
r
->
block
()->
≥rf‹m
(
this
)->block());

109 
	gº
->
is_roŸ
(
r
->is_root());

111 
	gs_°ack
.
p›_back
();

112 
	gp_°ack
.
p›_back
();

114 i‡(!
	gº
->
block
()) {

115 
îr‹
("IŒegÆÇe°ög: O∆yÖr›îtõ†may bê√°ed bíóthÖr›îtõs.", 
r
->
block
()->
p°©e
());

118 
Block
* 
	g¥›s
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
º
->
block
()->
p°©e
());

119 
Block
* 
	gruÀs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
º
->
block
()->
p°©e
());

120 
size_t
 
	gi
 = 0, 
	gL
 = 
º
->
block
()->
Àngth
(); i < L; i++)

122 
Sèãmít
* 
	gs
 = (*
º
->
block
())[
i
];

123 i‡(
bubbœbÀ
(
s
)Ë*
	gruÀs
 << 
	gs
;

124 i‡(!
bubbœbÀ
(
s
)Ë*
	g¥›s
 << 
	gs
;

127 i‡(
	g¥›s
->
Àngth
())

129 
Block
* 
	gbb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
º
->
block
()->
p°©e
());

130 *
	gbb
 +
¥›s
;

131 
	gº
->
block
(
bb
);

133 
size_t
 
	gi
 = 0, 
	gL
 = 
ruÀs
->
Àngth
(); i < L; i++)

135 (*
	gruÀs
)[
i
]->
èbs
((*
ruÀs
)[i]->tabs() + 1);

138 
	gruÀs
->
unshi·
(
º
);

141 
	gruÀs
 = 
debubbÀ
(
ruÀs
)->
block
();

143 i‡(!(!
	gruÀs
->
Àngth
() ||

144 !
bubbœbÀ
(
ruÀs
->
œ°
()) ||

145 
∑ª¡
()->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
))

147 
ruÀs
->
œ°
()->
group_íd
(
åue
);

150  
	gruÀs
;

153 
Sèãmít
* 
	gCssize
::
›î©‹
()(
NuŒ
* 
m
)

158 
Sèãmít
* 
	gCssize
::
›î©‹
()(
Medü_Block
* 
m
)

160 i‡(
∑ª¡
()->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
)

161 {  
bubbÀ
(
m
); }

163 i‡(
∑ª¡
()->
°©emít_ty≥
(Ë=
Sèãmít
::
MEDIA
)

164 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
BubbÀ
, 
m
->
p°©e
(), m); }

166 
	gp_°ack
.
push_back
(
m
);

168 
Medü_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Media_Block,

169 
m
->
p°©e
(),

170 
m
->
medü_quîõs
(),

171 
m
->
block
()->
≥rf‹m
(
this
)->block());

172 
	gmm
->
èbs
(
m
->tabs());

174 
	gp_°ack
.
p›_back
();

176  
debubbÀ
(
mm
->
block
(), mm)->block();

179 
Sèãmít
* 
	gCssize
::
›î©‹
()(
Suµ‹ts_Block
* 
m
)

181 i‡(!
m
->
block
()->
Àngth
())

182 {  
m
; }

184 i‡(
∑ª¡
()->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
)

185 {  
bubbÀ
(
m
); }

187 
	gp_°ack
.
push_back
(
m
);

189 
Suµ‹ts_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Block,

190 
m
->
p°©e
(),

191 
m
->
c⁄dôi⁄
(),

192 
m
->
block
()->
≥rf‹m
(
this
)->block());

193 
	gmm
->
èbs
(
m
->tabs());

195 
	gp_°ack
.
p›_back
();

197  
debubbÀ
(
mm
->
block
(), mm)->block();

200 
Sèãmít
* 
	gCssize
::
›î©‹
()(
At_RoŸ_Block
* 
m
)

202 
boﬁ
 
tmp
 = 
Ál£
;

203 
size_t
 
	gi
 = 0, 
	gL
 = 
p_°ack
.
size
(); i < L; ++i) {

204 
Sèãmít
* 
	gs
 = 
p_°ack
[
i
];

205 
	gtmp
 |
m
->
ex˛ude_node
(
s
);

208 i‡(!
	gtmp
)

210 
Block
* 
	gbb
 = 
m
->
block
()->
≥rf‹m
(
this
)->block();

211 
size_t
 
	gi
 = 0, 
	gL
 = 
bb
->
Àngth
(); i < L; ++i) {

213 i‡(
bubbœbÀ
((*
bb
)[
i
])Ë(*
	gbb
)[i]->
èbs
((*bb)[i]->èbs(Ë+ 
m
->tabs());

215 i‡(
	gbb
->
Àngth
(Ë&& 
bubbœbÀ
(
bb
->
œ°
())Ëbb->œ°()->
group_íd
(
m
->group_end());

216  
	gbb
;

219 i‡(
	gm
->
ex˛ude_node
(
∑ª¡
()))

221  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
BubbÀ
, 
m
->
p°©e
(), m);

224  
bubbÀ
(
m
);

227 
Sèãmít
* 
	gCssize
::
bubbÀ
(
Dúe˘ive
* 
m
)

229 
Block
* 
bb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
this
->
∑ª¡
()->
p°©e
());

230 
Has_Block
* 
	g√w_ruÀ
 = 
°©ic_ˇ°
<Has_Block*>(
shÆlow_c›y
(
this
->
∑ª¡
()));

231 
	g√w_ruÀ
->
block
(
bb
);

232 
	g√w_ruÀ
->
èbs
(
this
->
∑ª¡
()->tabs());

234 
size_t
 
	gL
 = 
m
->
block
(Ë? m->block()->
Àngth
() : 0;

235 
size_t
 
	gi
 = 0; i < 
	gL
; ++i) {

236 *
	g√w_ruÀ
->
block
(Ë<< (*
	gm
->block())[
i
];

239 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
m
->
block
(Ë? m->block()->
p°©e
() : m->pstate());

240 *
	gwøµî_block
 << 
	g√w_ruÀ
;

241 
Dúe˘ive
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Directive,

242 
m
->
p°©e
(),

243 
m
->
keyw‹d
(),

244 
m
->
£À˘‹
(),

245 
wøµî_block
);

246 i‡(
	gm
->
vÆue
()Ë
	gmm
->vÆue(
m
->value());

248 
BubbÀ
* 
	gbubbÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, BubbÀ, 
mm
->
p°©e
(), mm);

249  
	gbubbÀ
;

252 
Sèãmít
* 
	gCssize
::
bubbÀ
(
At_RoŸ_Block
* 
m
)

254 
Block
* 
bb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
this
->
∑ª¡
()->
p°©e
());

255 
Has_Block
* 
	g√w_ruÀ
 = 
°©ic_ˇ°
<Has_Block*>(
shÆlow_c›y
(
this
->
∑ª¡
()));

256 
	g√w_ruÀ
->
block
(
bb
);

257 
	g√w_ruÀ
->
èbs
(
this
->
∑ª¡
()->tabs());

259 
size_t
 
	gi
 = 0, 
	gL
 = 
m
->
block
()->
Àngth
(); i < L; ++i) {

260 *
	g√w_ruÀ
->
block
(Ë<< (*
	gm
->block())[
i
];

263 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
m
->
block
()->
p°©e
());

264 *
	gwøµî_block
 << 
	g√w_ruÀ
;

265 
At_RoŸ_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, At_Root_Block,

266 
m
->
p°©e
(),

267 
wøµî_block
,

268 
m
->
ex¥essi⁄
());

269 
BubbÀ
* 
	gbubbÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, BubbÀ, 
mm
->
p°©e
(), mm);

270  
	gbubbÀ
;

273 
Sèãmít
* 
	gCssize
::
bubbÀ
(
Suµ‹ts_Block
* 
m
)

275 
RuÀ£t
* 
∑ª¡
 = 
°©ic_ˇ°
<RuÀ£t*>(
shÆlow_c›y
(
this
->parent()));

277 
Block
* 
	gbb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
∑ª¡
->
block
()->
p°©e
());

278 
RuÀ£t
* 
	g√w_ruÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ruleset,

279 
∑ª¡
->
p°©e
(),

280 
∑ª¡
->
£À˘‹
(),

281 
bb
);

282 
	g√w_ruÀ
->
èbs
(
∑ª¡
->tabs());

284 
size_t
 
	gi
 = 0, 
	gL
 = 
m
->
block
()->
Àngth
(); i < L; ++i) {

285 *
	g√w_ruÀ
->
block
(Ë<< (*
	gm
->block())[
i
];

288 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
m
->
block
()->
p°©e
());

289 *
	gwøµî_block
 << 
	g√w_ruÀ
;

290 
Suµ‹ts_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Block,

291 
m
->
p°©e
(),

292 
m
->
c⁄dôi⁄
(),

293 
wøµî_block
);

295 
	gmm
->
èbs
(
m
->tabs());

297 
BubbÀ
* 
	gbubbÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, BubbÀ, 
mm
->
p°©e
(), mm);

298  
	gbubbÀ
;

301 
Sèãmít
* 
	gCssize
::
bubbÀ
(
Medü_Block
* 
m
)

303 
RuÀ£t
* 
∑ª¡
 = 
°©ic_ˇ°
<RuÀ£t*>(
shÆlow_c›y
(
this
->parent()));

305 
Block
* 
	gbb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
∑ª¡
->
block
()->
p°©e
());

306 
RuÀ£t
* 
	g√w_ruÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ruleset,

307 
∑ª¡
->
p°©e
(),

308 
∑ª¡
->
£À˘‹
(),

309 
bb
);

310 
	g√w_ruÀ
->
èbs
(
∑ª¡
->tabs());

312 
size_t
 
	gi
 = 0, 
	gL
 = 
m
->
block
()->
Àngth
(); i < L; ++i) {

313 *
	g√w_ruÀ
->
block
(Ë<< (*
	gm
->block())[
i
];

316 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
m
->
block
()->
p°©e
());

317 *
	gwøµî_block
 << 
	g√w_ruÀ
;

318 
Medü_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Media_Block,

319 
m
->
p°©e
(),

320 
m
->
medü_quîõs
(),

321 
wøµî_block
,

324 
	gmm
->
èbs
(
m
->tabs());

326 
BubbÀ
* 
	gbubbÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, BubbÀ, 
mm
->
p°©e
(), mm);

328  
	gbubbÀ
;

331 
boﬁ
 
	gCssize
::
bubbœbÀ
(
Sèãmít
* 
s
)

333  
s
->
°©emít_ty≥
(Ë=
Sèãmít
::
RULESET
 || s->
bubbÀs
();

336 
Sèãmít
* 
	gCssize
::
Ê©ãn
(Sèãmít* 
s
)

338 
Block
* 
bb
 = 
s
->
block
();

339 
Block
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
bb
->
p°©e
(), 0, bb->
is_roŸ
());

340 
size_t
 
	gi
 = 0, 
	gL
 = 
bb
->
Àngth
(); i < L; ++i) {

341 
Sèãmít
* 
	gss
 = (*
bb
)[
i
];

342 i‡(
	gss
->
block
()) {

343 
	gss
 = 
Ê©ãn
(
ss
);

344 
size_t
 
	gj
 = 0, 
	gK
 = 
ss
->
block
()->
Àngth
(); j < K; ++j) {

345 *
	gªsu…
 << (*
	gss
->
block
())[
j
];

349 *
	gªsu…
 << 
	gss
;

352  
	gªsu…
;

355 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
boﬁ
, 
	gBlock
*>> 
	gCssize
::
¶i˚_by_bubbÀ
(
Sèãmít
* 
b
)

357 
°d
::
ve˘‹
<°d::
∑ú
<
boﬁ
, 
	gBlock
*>> 
	gªsu…s
;

358 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
block
()->
Àngth
(); i < L; ++i) {

359 
Sèãmít
* 
	gvÆue
 = (*
b
->
block
())[
i
];

360 
boﬁ
 
	gkey
 = 
vÆue
->
°©emít_ty≥
(Ë=
Sèãmít
::
BUBBLE
;

362 i‡(!
	gªsu…s
.
em±y
(Ë&&Ñesu…s.
back
().
	gfú°
 =
key
)

364 
Block
* 
wøµî_block
 = 
ªsu…s
.
back
().
£c⁄d
;

365 *
	gwøµî_block
 << 
	gvÆue
;

369 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
vÆue
->
p°©e
());

370 *
	gwøµî_block
 << 
	gvÆue
;

371 
	gªsu…s
.
push_back
(
°d
::
make_∑ú
(
key
, 
wøµî_block
));

374  
	gªsu…s
;

377 
Sèãmít
* 
	gCssize
::
shÆlow_c›y
(Sèãmít* 
s
)

379 
s
->
°©emít_ty≥
())

381 
Sèãmít
::
RULESET
:

382  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
RuÀ£t
, *
°©ic_ˇ°
<RuÀ£t*>(
s
));

383 
	gSèãmít
::
MEDIA
:

384  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Medü_Block
, *
°©ic_ˇ°
<Medü_Block*>(
s
));

385 
	gSèãmít
::
BUBBLE
:

386  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
BubbÀ
, *
°©ic_ˇ°
<BubbÀ*>(
s
));

387 
	gSèãmít
::
DIRECTIVE
:

388  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Dúe˘ive
, *
°©ic_ˇ°
<Dúe˘ive*>(
s
));

389 
	gSèãmít
::
SUPPORTS
:

390  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Suµ‹ts_Block
, *
°©ic_ˇ°
<Suµ‹ts_Block*>(
s
));

391 
	gSèãmít
::
ATROOT
:

392  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
At_RoŸ_Block
, *
°©ic_ˇ°
<At_RoŸ_Block*>(
s
));

393 
	gSèãmít
::
KEYFRAMERULE
:

394  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Key‰ame_RuÀ
, *
°©ic_ˇ°
<Key‰ame_RuÀ*>(
s
));

395 
	gSèãmít
::
NONE
:

397 
îr‹
("unknow¿öã∫ÆÉº‹;ÖÀa£ c⁄è˘ÅhêLibSas†maöèöîs", 
s
->
p°©e
(), 
backåa˚
);

398 
Såög_QuŸed
* 
	gmsg
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
P¨£rSèã
("[WARN]"), 
°d
::
°rög
("`CSSize` c™'à˛⁄ê"Ë+ 
ty≥id
(*
s
).
«me
());

399  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
W¨nög
, 
P¨£rSèã
("[WARN]"), 
msg
);

403 
Sèãmít
* 
	gCssize
::
debubbÀ
(
Block
* 
chûdªn
, Sèãmít* 
∑ª¡
)

405 
Has_Block
* 
	g¥evious_∑ª¡
 = 0;

406 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
boﬁ
, 
	gBlock
*>> 
	gbaz
 = 
¶i˚_by_bubbÀ
(
chûdªn
);

407 
Block
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
chûdªn
->
p°©e
());

409 
size_t
 
	gi
 = 0, 
	gL
 = 
baz
.
size
(); i < L; ++i) {

410 
boﬁ
 
	gis_bubbÀ
 = 
baz
[
i
].
fú°
;

411 
Block
* 
	g¶i˚
 = 
baz
[
i
].
£c⁄d
;

413 i‡(!
	gis_bubbÀ
) {

414 i‡(!
	g∑ª¡
) {

415 *
	gªsu…
 << 
	g¶i˚
;

417 i‡(
	g¥evious_∑ª¡
) {

418 *
	g¥evious_∑ª¡
->
block
(Ë+
¶i˚
;

421 
	g¥evious_∑ª¡
 = 
°©ic_ˇ°
<
Has_Block
*>(
shÆlow_c›y
(
∑ª¡
));

422 
	g¥evious_∑ª¡
->
èbs
(
∑ª¡
->tabs());

424 
Has_Block
* 
	g√w_∑ª¡
 = 
°©ic_ˇ°
<Has_Block*>(
shÆlow_c›y
(
∑ª¡
));

425 
	g√w_∑ª¡
->
block
(
¶i˚
);

426 
	g√w_∑ª¡
->
èbs
(
∑ª¡
->tabs());

428 *
	gªsu…
 << 
	g√w_∑ª¡
;

433 
Block
* 
	gwøµî_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block,

434 
chûdªn
->
block
()->
p°©e
(),

435 
chûdªn
->
block
()->
Àngth
(),

436 
chûdªn
->
block
()->
is_roŸ
());

438 
size_t
 
	gj
 = 0, 
	gK
 = 
¶i˚
->
Àngth
(); j < K; ++j)

440 
Sèãmít
* 
	gss
 = 0;

441 
BubbÀ
* 
	gb
 = 
°©ic_ˇ°
<BubbÀ*>((*
¶i˚
)[
j
]);

443 i‡(!
	g∑ª¡
 ||

444 
	g∑ª¡
->
°©emít_ty≥
(Ë!
Sèãmít
::
MEDIA
 ||

445 
b
->
node
()->
°©emít_ty≥
(Ë!
Sèãmít
::
MEDIA
 ||

446 
°©ic_ˇ°
<
Medü_Block
*>(
b
->
node
())->
medü_quîõs
(Ë=°©ic_ˇ°<Medü_Block*>(
∑ª¡
)->media_queries())

448 
ss
 = 
b
->
node
();

452 
Li°
* 
	gmq
 = 
mîge_medü_quîõs
(
°©ic_ˇ°
<
Medü_Block
*>(
b
->
node
()), sètic_ˇ°<Medü_Block*>(
∑ª¡
));

453 i‡(!
	gmq
->
Àngth
()) ;

454 
	g°©ic_ˇ°
<
	gMedü_Block
*>(
	gb
->
node
())->
medü_quîõs
(
mq
);

455 
	gss
 = 
b
->
node
();

458 i‡(!
	gss
) ;

460 
	gss
->
èbs
(
ss
->èbs(Ë+ 
b
->tabs());

461 
	gss
->
group_íd
(
b
->group_end());

463 i‡(!
	gss
) ;

465 
Block
* 
	gbb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block,

466 
chûdªn
->
block
()->
p°©e
(),

467 
chûdªn
->
block
()->
Àngth
(),

468 
chûdªn
->
block
()->
is_roŸ
());

469 *
	gbb
 << 
	gss
->
≥rf‹m
(
this
);

470 
Sèãmít
* 
	gwøµî
 = 
Ê©ãn
(
bb
);

471 *
	gwøµî_block
 << 
	gwøµî
;

473 i‡(
	gwøµî
->
block
()->
Àngth
()) {

474 
	g¥evious_∑ª¡
 = 0;

478 i‡(
	gwøµî_block
) {

479 *
	gªsu…
 << 
Ê©ãn
(
wøµî_block
);

483  
Ê©ãn
(
ªsu…
);

486 
Sèãmít
* 
	gCssize
::
ÁŒback_im∂
(
AST_Node
* 
n
)

488  
°©ic_ˇ°
<
Sèãmít
*>(
n
);

491 
	gCssize
::
≠≥nd_block
(
Block
* 
b
)

493 
Block
* 
cuºít_block
 = 
block_°ack
.
back
();

495 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

496 
Sèãmít
* 
	gôh
 = (*
b
)[
i
]->
≥rf‹m
(
this
);

497 i‡(
	gôh
 && ith->
block
()) {

498 
size_t
 
	gj
 = 0, 
	gK
 = 
ôh
->
block
()->
Àngth
(); j < K; ++j) {

499 *
	gcuºít_block
 << (*
	gôh
->
block
())[
j
];

502 i‡(
	gôh
) {

503 *
	gcuºít_block
 << 
	gôh
;

508 
Li°
* 
	gCssize
::
mîge_medü_quîõs
(
Medü_Block
* 
m1
, Medü_Block* 
m2
)

510 
Li°
* 
	gqq
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, List,

511 
m1
->
medü_quîõs
()->
p°©e
(),

512 
m1
->
medü_quîõs
()->
Àngth
(),

513 
SASS_COMMA
);

515 
size_t
 
	gi
 = 0, 
	gL
 = 
m1
->
medü_quîõs
()->
Àngth
(); i < L; i++) {

516 
size_t
 
	gj
 = 0, 
	gK
 = 
m2
->
medü_quîõs
()->
Àngth
(); j < K; j++) {

517 
Medü_Quîy
* 
	gmq1
 = 
°©ic_ˇ°
<Medü_Quîy*>((*
m1
->
medü_quîõs
())[
i
]);

518 
Medü_Quîy
* 
	gmq2
 = 
°©ic_ˇ°
<Medü_Quîy*>((*
m2
->
medü_quîõs
())[
j
]);

519 
Medü_Quîy
* 
	gmq
 = 
mîge_medü_quîy
(
mq1
, 
mq2
);

521 i‡(
	gmq
Ë*
	gqq
 << mq;

525  
	gqq
;

529 
Medü_Quîy
* 
	gCssize
::
mîge_medü_quîy
(Medü_Quîy* 
mq1
, Medü_Quîy* 
mq2
)

532 
	g°d
::
°rög
 
ty≥
;

533 
	g°d
::
°rög
 
mod
;

535 
	g°d
::
°rög
 
m1
 = 
°d
::°rög(
mq1
->
is_ª°ri˘ed
(Ë? "⁄ly" : mq1->
is_√g©ed
() ? "not" : "");

536 
	g°d
::
°rög
 
t1
 = 
mq1
->
medü_ty≥
(Ë? mq1->medü_ty≥()->
to_°rög
(
˘x
.
c_›ti⁄s
) : "";

537 
	g°d
::
°rög
 
m2
 = 
°d
::°rög(
mq2
->
is_ª°ri˘ed
(Ë? "⁄ly" : 
mq1
->
is_√g©ed
() ? "not" : "");

538 
	g°d
::
°rög
 
t2
 = 
mq2
->
medü_ty≥
(Ë? mq2->medü_ty≥()->
to_°rög
(
˘x
.
c_›ti⁄s
) : "";

541 i‡(
	gt1
.
em±y
()Ët1 = 
t2
;

542 i‡(
	gt2
.
em±y
()Ët2 = 
t1
;

544 i‡((
	gm1
 ="nŸ"Ë^ (
m2
 == "not")) {

545 i‡(
t1
 =
t2
) {

548 
	gty≥
 = 
m1
 ="nŸ" ? 
t2
 : 
t1
;

549 
	gmod
 = 
m1
 ="nŸ" ? 
m2
 : m1;

551 i‡(
	gm1
 ="nŸ" && 
m2
 == "not") {

552 i‡(
t1
 !
t2
) {

555 
	gty≥
 = 
t1
;

556 
	gmod
 = "not";

558 i‡(
	gt1
 !
t2
) {

561 
	gty≥
 = 
t1
;

562 
	gmod
 = 
m1
.
em±y
(Ë? 
m2
 : m1;

565 
Medü_Quîy
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Media_Query,

567 
mq1
->
p°©e
(), 0,

568 
mq1
->
Àngth
(Ë+ 
mq2
->Àngth(), 
mod
 == "not", mod == "only"

571 i‡(!
	gty≥
.
em±y
()) {

572 
	gmm
->
medü_ty≥
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
mq1
->
p°©e
(), 
ty≥
));

575 *
	gmm
 +
mq2
;

576 *
	gmm
 +
mq1
;

577  
	gmm
;

	@node_modules/node-sass/src/libsass/src/cssize.hpp

1 #i‚de‡
SASS_CSSIZE_H


2 
	#SASS_CSSIZE_H


	)

4 
	~"a°.hµ
"

5 
	~"c⁄ãxt.hµ
"

6 
	~"›î©i⁄.hµ
"

7 
	~"ívú⁄mít.hµ
"

9 
«me•a˚
 
	gSass
 {

11 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

12 
	gBackåa˚
;

14 
˛ass
 
	gCssize
 : 
public
 
O≥øti⁄_CRTP
<
Sèãmít
*, Cssize> {

16 
	gC⁄ãxt
& 
	g˘x
;

17 
	g°d
::
ve˘‹
<
Block
*> 
block_°ack
;

18 
	g°d
::
ve˘‹
<
Sèãmít
*> 
p_°ack
;

19 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*> 
s_°ack
;

20 
Backåa˚
* 
	gbackåa˚
;

22 
Sèãmít
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

24 
	gpublic
:

25 
Cssize
(
C⁄ãxt
&, 
Backåa˚
*);

26 ~
Cssize
() { }

28 
Sñe˘‹_Li°
* 
£À˘‹
();

30 
Sèãmít
* 
›î©‹
()(
	gBlock
*);

31 
Sèãmít
* 
›î©‹
()(
	gRuÀ£t
*);

34 
Sèãmít
* 
›î©‹
()(
	gMedü_Block
*);

35 
Sèãmít
* 
›î©‹
()(
	gSuµ‹ts_Block
*);

36 
Sèãmít
* 
›î©‹
()(
	gAt_RoŸ_Block
*);

37 
Sèãmít
* 
›î©‹
()(
	gDúe˘ive
*);

38 
Sèãmít
* 
›î©‹
()(
	gKey‰ame_RuÀ
*);

55 
Sèãmít
* 
›î©‹
()(
	gNuŒ
*);

57 
Sèãmít
* 
∑ª¡
();

58 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
boﬁ
, 
	gBlock
*>> 
¶i˚_by_bubbÀ
(
Sèãmít
*);

59 
Sèãmít
* 
bubbÀ
(
Dúe˘ive
*);

60 
Sèãmít
* 
bubbÀ
(
At_RoŸ_Block
*);

61 
Sèãmít
* 
bubbÀ
(
Medü_Block
*);

62 
Sèãmít
* 
bubbÀ
(
Suµ‹ts_Block
*);

63 
Sèãmít
* 
shÆlow_c›y
(Statement*);

64 
Sèãmít
* 
debubbÀ
(
Block
* 
chûdªn
, Sèãmít* 
∑ª¡
 = 0);

65 
Sèãmít
* 
Ê©ãn
(Statement*);

66 
boﬁ
 
bubbœbÀ
(
Sèãmít
*);

68 
Li°
* 
mîge_medü_quîõs
(
Medü_Block
*, Media_Block*);

69 
Medü_Quîy
* 
mîge_medü_quîy
(Media_Query*, Media_Query*);

71 
	gãm∂©e
 <
ty≥«me
 
	gU
>

72 
Sèãmít
* 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

74 
≠≥nd_block
(
Block
*);

	@node_modules/node-sass/src/libsass/src/debug.hpp

1 #i‚de‡
SASS_DEBUG_H


2 
	#SASS_DEBUG_H


	)

4 
	~<°döt.h
>

6 #i‚de‡
UINT32_MAX


7 
	#UINT32_MAX
 0xffffffffU

	)

10 
	gdbg_lvl_t
 : 
uöt32_t
 {

11 
NONE
 = 0,

12 
	gTRIM
 = 1,

13 
	gCHUNKS
 = 2,

14 
	gSUBWEAVE
 = 4,

15 
	gWEAVE
 = 8,

16 
	gEXTEND_COMPOUND
 = 16,

17 
	gEXTEND_COMPLEX
 = 32,

18 
	gLCS
 = 64,

19 
	gEXTEND_OBJECT
 = 128,

20 
	gALL
 = 
UINT32_MAX


23 #ifde‡
DEBUG


25 #i‚de‡
DEBUG_LVL


26 c⁄° 
uöt32_t
 
	gdebug_lvl
 = 
UINT32_MAX
;

28 c⁄° 
uöt32_t
 
	gdebug_lvl
 = (
DEBUG_LVL
);

31 
	#DEBUG_PRINT
(
lvl
, 
x
Ëif(÷vlË& 
debug_lvl
Ë{ 
°d
::
˚º
 << x; }

	)

32 
	#DEBUG_PRINTLN
(
lvl
, 
x
Ëif(÷vlË& 
debug_lvl
Ë{ 
°d
::
˚º
 << x << std::
ídl
; }

	)

33 
	#DEBUG_EXEC
(
lvl
, 
x
Ëif(÷vlË& 
debug_lvl
Ë{ x; }

	)

37 
	#DEBUG_PRINT
(
lvl
, 
x
)

	)

38 
	#DEBUG_PRINTLN
(
lvl
, 
x
)

	)

39 
	#DEBUG_EXEC
(
lvl
, 
x
)

	)

	@node_modules/node-sass/src/libsass/src/debugger.hpp

1 #i‚de‡
SASS_DEBUGGER_H


2 
	#SASS_DEBUGGER_H


	)

4 
	~<°rög
>

5 
	~<s°ªam
>

6 
	~"node.hµ
"

7 
	~"a°_fwd_de˛.hµ
"

9 
usög
 
«me•a˚
 
	gSass
;

11 
ölöe
 
debug_a°
(
AST_Node
* 
node
, 
°d
::
°rög
 
öd
 = "", 
Env
* 
ív
 = 0);

13 
ölöe
 
debug_sour˚s_£t
(
Sour˚sSë
& 
£t
, 
°d
::
°rög
 
öd
 = "")

15 i‡(
öd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

16 autÿc⁄° &
	g∑ú
 : 
£t
) {

17 
debug_a°
(
∑ú
, 
öd
 + "");

20 i‡(
	göd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

23 
ölöe
 
	g°d
::
°rög
 
	$°r_ª∂a˚
(
°d
::
°rög
 
°r
, c⁄° std::°rög& 
ﬁdSå
, c⁄° std::°rög& 
√wSå
)

25 
size_t
 
pos
 = 0;

26 (
pos
 = 
°r
.
	`föd
(
ﬁdSå
,Öos)Ë!
°d
::
°rög
::
≈os
)

28 
°r
.
	`ª∂a˚
(
pos
, 
ﬁdSå
.
	`Àngth
(), 
√wSå
);

29 
pos
 +
√wSå
.
	`Àngth
();

31  
°r
;

32 
	}
}

34 
ölöe
 
	g°d
::
°rög
 
	$¥ëty¥öt
(c⁄° 
°d
::
°rög
& 
°r
) {

35 
°d
::
°rög
 
˛ón
 = 
	`°r_ª∂a˚
(
°r
, "\n", "\\n");

36 
˛ón
 = 
	`°r_ª∂a˚
(clean, " ", "\\t");

37 
˛ón
 = 
	`°r_ª∂a˚
(clean, "\r", "\\r");

38  
˛ón
;

39 
	}
}

41 
ölöe
 
	g°d
::
°rög
 
	$l⁄gToHex
(
t
) {

42 
°d
::
°rög°ªam
 
is
;

43 
is
 << 
°d
::
hex
 << 
t
;

44  
is
.
	`°r
();

45 
	}
}

47 
ölöe
 
	g°d
::
°rög
 
	$p°©e_sour˚_posôi⁄
(
AST_Node
* 
node
)

49 
°d
::
°rög°ªam
 
°r
;

50 
Posôi⁄
 
	`°¨t
(
node
->
	`p°©e
());

51 
Posôi⁄
 
	`íd
(
°¨t
 + 
node
->
	`p°©e
().
off£t
);

52 
°r
 << (
°¨t
.
fûe
 =
°d
::
°rög
::
≈os
 ? -1 : start.file)

53 << "@[" << 
°¨t
.
löe
 << ":" << sèπ.
cﬁumn
 << "]"

54 << "-[" << 
íd
.
löe
 << ":" <<Énd.
cﬁumn
 << "]";

55  
°r
.
	`°r
();

56 
	}
}

58 
ölöe
 
	$debug_a°
(
AST_Node
* 
node
, 
°d
::
°rög
 
öd
, 
Env
* 
ív
)

60 i‡(
node
 == 0) ;

61 i‡(
öd
 =""Ë
°d
::
˚º
 << "####################################################################\n";

62 i‡(
dy«mic_ˇ°
<
BubbÀ
*>(
node
)) {

63 
BubbÀ
* 
bubbÀ
 = 
dy«mic_ˇ°
<BubbÀ*>(
node
);

64 
°d
::
˚º
 << 
öd
 << "BubbÀ " << 
bubbÀ
;

65 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

66 
°d
::
˚º
 << " " << 
bubbÀ
->
	`èbs
();

67 
°d
::
˚º
 << std::
ídl
;

68 } i‡(
dy«mic_ˇ°
<
At_RoŸ_Block
*>(
node
)) {

69 
At_RoŸ_Block
* 
roŸ_block
 = 
dy«mic_ˇ°
<At_RoŸ_Block*>(
node
);

70 
°d
::
˚º
 << 
öd
 << "At_RoŸ_Block " << 
roŸ_block
;

71 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

72 
°d
::
˚º
 << " " << 
roŸ_block
->
	`èbs
();

73 
°d
::
˚º
 << std::
ídl
;

74 
	`debug_a°
(
roŸ_block
->
	`ex¥essi⁄
(), 
öd
 + ":", 
ív
);

75 
	`debug_a°
(
roŸ_block
->
	`block
(), 
öd
 + " ", 
ív
);

76 } i‡(
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>(
node
)) {

77 
Sñe˘‹_Li°
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
node
);

78 
°d
::
˚º
 << 
öd
 << "Sñe˘‹_Li° " << 
£À˘‹
;

79 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

80 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

81 
°d
::
˚º
 << " [@medü:" << 
£À˘‹
->
	`medü_block
() << "]";

82 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

83 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

84 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

85 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

86 
°d
::
˚º
 << std::
ídl
;

88 autÿ
i
 : 
£À˘‹
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

94 } i‡(
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>(
node
)) {

95 
P¨ít_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<P¨ít_Sñe˘‹*>(
node
);

96 
°d
::
˚º
 << 
öd
 << "P¨ít_Sñe˘‹ " << 
£À˘‹
;

98 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

99 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

100 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
£À˘‹
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

103 } i‡(
dy«mic_ˇ°
<
Com∂ex_Sñe˘‹
*>(
node
)) {

104 
Com∂ex_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Com∂ex_Sñe˘‹*>(
node
);

105 
°d
::
˚º
 << 
öd
 << "Com∂ex_Sñe˘‹ " << 
£À˘‹


106 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")"

107 << " <" << 
£À˘‹
->
	`hash
() << ">"

108 << " [weight:" << 
	`l⁄gToHex
(
£À˘‹
->
	`•ecificôy
()) << "]"

109 << " [@medü:" << 
£À˘‹
->
	`medü_block
() << "]"

110 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -")

111 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [hasÖarent]": " -")

112 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -")

113 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -")

115 
°d
::
°rög
 
dñ
;

116 
£À˘‹
->
	`combö©‹
()) {

117 
Com∂ex_Sñe˘‹
::
PARENT_OF
: 
dñ
 = ">"; ;

118 
Com∂ex_Sñe˘‹
::
PRECEDES
: 
dñ
 = "~"; ;

119 
Com∂ex_Sñe˘‹
::
ADJACENT_TO
: 
dñ
 = "+"; ;

120 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
: 
dñ
 = " "; ;

121 
Com∂ex_Sñe˘‹
::
REFERENCE
: 
dñ
 = "//"; ;

124 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
£À˘‹
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

125 
	`debug_a°
(
£À˘‹
->
	`hód
(), 
öd
 + " " , 
ív
);

126 i‡(
£À˘‹
->
	`èû
()) {

127 
	`debug_a°
(
£À˘‹
->
	`èû
(), 
öd
 + "{" + 
dñ
 + "}", 
ív
);

128 } if(
dñ
 != " ") {

129 
°d
::
˚º
 << 
öd
 << " |" << 
dñ
 << "| {åaûög op}" << std::
ídl
;

131 
Sour˚sSë
 
£t
 = 
£À˘‹
->
	`sour˚s
();

133 } i‡(
dy«mic_ˇ°
<
Compound_Sñe˘‹
*>(
node
)) {

134 
Compound_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Compound_Sñe˘‹*>(
node
);

135 
°d
::
˚º
 << 
öd
 << "Compound_Sñe˘‹ " << 
£À˘‹
;

136 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

137 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

138 
°d
::
˚º
 << " [weight:" << 
	`l⁄gToHex
(
£À˘‹
->
	`•ecificôy
()) << "]";

139 
°d
::
˚º
 << " [@medü:" << 
£À˘‹
->
	`medü_block
() << "]";

140 
°d
::
˚º
 << (
£À˘‹
->
	`exãnded
() ? " [extended]": " -");

141 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

142 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

143 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

144 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

145 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
£À˘‹
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

146 autÿ
i
 : 
£À˘‹
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

147 } i‡(
dy«mic_ˇ°
<
Pr›£t
*>(
node
)) {

148 
Pr›£t
* 
£À˘‹
 = 
dy«mic_ˇ°
<Pr›£t*>(
node
);

149 
°d
::
˚º
 << 
öd
 << "Pr›£à" << 
£À˘‹
;

150 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

151 
°d
::
˚º
 << " " << 
£À˘‹
->
	`èbs
(Ë<< std::
ídl
;

152 i‡(
£À˘‹
->
	`block
()Ëautÿ
i
 : sñe˘‹->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

153 } i‡(
dy«mic_ˇ°
<
Wøµed_Sñe˘‹
*>(
node
)) {

154 
Wøµed_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
node
);

155 
°d
::
˚º
 << 
öd
 << "Wøµed_Sñe˘‹ " << 
£À˘‹
;

156 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

157 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

158 
°d
::
˚º
 << " <<" << 
£À˘‹
->
	`ns_«me
() << ">>";

159 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

160 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

161 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

162 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

163 
°d
::
˚º
 << std::
ídl
;

164 
	`debug_a°
(
£À˘‹
->
	`£À˘‹
(), 
öd
 + " (Ë", 
ív
);

165 } i‡(
dy«mic_ˇ°
<
P£udo_Sñe˘‹
*>(
node
)) {

166 
P£udo_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<P£udo_Sñe˘‹*>(
node
);

167 
°d
::
˚º
 << 
öd
 << "P£udo_Sñe˘‹ " << 
£À˘‹
;

168 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

169 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

170 
°d
::
˚º
 << " <<" << 
£À˘‹
->
	`ns_«me
() << ">>";

171 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

172 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

173 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

174 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

175 
°d
::
˚º
 << std::
ídl
;

176 
	`debug_a°
(
£À˘‹
->
	`ex¥essi⁄
(), 
öd
 + " <", 
ív
);

177 } i‡(
dy«mic_ˇ°
<
Aâribuã_Sñe˘‹
*>(
node
)) {

178 
Aâribuã_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Aâribuã_Sñe˘‹*>(
node
);

179 
°d
::
˚º
 << 
öd
 << "Aâribuã_Sñe˘‹ " << 
£À˘‹
;

180 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

181 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

182 
°d
::
˚º
 << " <<" << 
£À˘‹
->
	`ns_«me
() << ">>";

183 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

184 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

185 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

186 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

187 
°d
::
˚º
 << std::
ídl
;

188 
	`debug_a°
(
£À˘‹
->
	`vÆue
(), 
öd
 + "[" + sñe˘‹->
	`m©chî
(Ë+ "] ", 
ív
);

189 } i‡(
dy«mic_ˇ°
<
Sñe˘‹_QuÆifõr
*>(
node
)) {

190 
Sñe˘‹_QuÆifõr
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sñe˘‹_QuÆifõr*>(
node
);

191 
°d
::
˚º
 << 
öd
 << "Sñe˘‹_QuÆifõ∏" << 
£À˘‹
;

192 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

193 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

194 
°d
::
˚º
 << " <<" << 
£À˘‹
->
	`ns_«me
() << ">>";

195 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

196 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

197 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

198 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

199 
°d
::
˚º
 << std::
ídl
;

200 } i‡(
dy«mic_ˇ°
<
Ty≥_Sñe˘‹
*>(
node
)) {

201 
Ty≥_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Ty≥_Sñe˘‹*>(
node
);

202 
°d
::
˚º
 << 
öd
 << "Ty≥_Sñe˘‹ " << 
£À˘‹
;

203 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

204 
°d
::
˚º
 << " <" << 
£À˘‹
->
	`hash
() << ">";

205 
°d
::
˚º
 << " <<" << 
£À˘‹
->
	`ns_«me
() << ">>";

206 
°d
::
˚º
 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -");

207 
°d
::
˚º
 << (
£À˘‹
->
	`has_∑ª¡_ªf
() ? " [has-parent]": " -");

208 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -");

209 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -");

210 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
£À˘‹
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()) << ">";

211 
°d
::
˚º
 << std::
ídl
;

212 } i‡(
dy«mic_ˇ°
<
Sñe˘‹_Pœ˚hﬁdî
*>(
node
)) {

214 
Sñe˘‹_Pœ˚hﬁdî
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sñe˘‹_Pœ˚hﬁdî*>(
node
);

215 
°d
::
˚º
 << 
öd
 << "Sñe˘‹_Pœ˚hﬁdî [" << 
£À˘‹
->
	`ns_«me
() << "] " << selector

216 << " <" << 
£À˘‹
->
	`hash
() << ">"

217 << " [@medü:" << 
£À˘‹
->
	`medü_block
() << "]"

218 << (
£À˘‹
->
	`is_›ti⁄Æ
() ? " [is_optional]": " -")

219 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -")

220 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -")

221 << 
°d
::
ídl
;

223 } i‡(
dy«mic_ˇ°
<
Sim∂e_Sñe˘‹
*>(
node
)) {

224 
Sim∂e_Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sim∂e_Sñe˘‹*>(
node
);

225 
°d
::
˚º
 << 
öd
 << "Sim∂e_Sñe˘‹ " << 
£À˘‹
;

226 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

227 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
(Ë? " [löe-bªak]": " -"Ë<< (£À˘‹->
	`has_löe_„ed
(Ë? " [löe-„ed]": " -"Ë<< std::
ídl
;

229 } i‡(
dy«mic_ˇ°
<
Sñe˘‹_Schema
*>(
node
)) {

230 
Sñe˘‹_Schema
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sñe˘‹_Schema*>(
node
);

231 
°d
::
˚º
 << 
öd
 << "Sñe˘‹_Schem®" << 
£À˘‹
;

232 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")"

233 << (
£À˘‹
->
	`©_roŸ
() && selector->at_root() ? " [@ROOT]" : "")

234 << " [@medü:" << 
£À˘‹
->
	`medü_block
() << "]"

235 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -")

236 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -")

237 << 
°d
::
ídl
;

239 
	`debug_a°
(
£À˘‹
->
	`c⁄ã¡s
(), 
öd
 + " ");

242 } i‡(
dy«mic_ˇ°
<
Sñe˘‹
*>(
node
)) {

243 
Sñe˘‹
* 
£À˘‹
 = 
dy«mic_ˇ°
<Sñe˘‹*>(
node
);

244 
°d
::
˚º
 << 
öd
 << "Sñe˘‹ " << 
£À˘‹
;

245 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

246 
°d
::
˚º
 << (
£À˘‹
->
	`has_löe_bªak
() ? " [line-break]": " -")

247 << (
£À˘‹
->
	`has_löe_„ed
() ? " [line-feed]": " -")

248 << 
°d
::
ídl
;

250 } i‡(
dy«mic_ˇ°
<
Medü_Quîy_Ex¥essi⁄
*>(
node
)) {

251 
Medü_Quîy_Ex¥essi⁄
* 
block
 = 
dy«mic_ˇ°
<Medü_Quîy_Ex¥essi⁄*>(
node
);

252 
°d
::
˚º
 << 
öd
 << "Medü_Quîy_Ex¥essi⁄ " << 
block
;

253 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

254 
°d
::
˚º
 << (
block
->
	`is_öãΩﬁ©ed
() ? " [is_interpolated]": " -")

255 << 
°d
::
ídl
;

256 
	`debug_a°
(
block
->
	`„©uª
(), 
öd
 + " feature) ");

257 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + " value) ");

259 } i‡(
dy«mic_ˇ°
<
Medü_Quîy
*>(
node
)) {

260 
Medü_Quîy
* 
block
 = 
dy«mic_ˇ°
<Medü_Quîy*>(
node
);

261 
°d
::
˚º
 << 
öd
 << "Medü_Quîy " << 
block
;

262 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

263 
°d
::
˚º
 << (
block
->
	`is_√g©ed
() ? " [is_negated]": " -")

264 << (
block
->
	`is_ª°ri˘ed
() ? " [is_restricted]": " -")

265 << 
°d
::
ídl
;

266 
	`debug_a°
(
block
->
	`medü_ty≥
(), 
öd
 + " ");

267 autÿ
i
 : 
block
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

269 } i‡(
dy«mic_ˇ°
<
Medü_Block
*>(
node
)) {

270 
Medü_Block
* 
block
 = 
dy«mic_ˇ°
<Medü_Block*>(
node
);

271 
°d
::
˚º
 << 
öd
 << "Medü_Block " << 
block
;

272 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

273 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

274 
	`debug_a°
(
block
->
	`medü_quîõs
(), 
öd
 + " =@ ");

275 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

276 } i‡(
dy«mic_ˇ°
<
Suµ‹ts_Block
*>(
node
)) {

277 
Suµ‹ts_Block
* 
block
 = 
dy«mic_ˇ°
<Suµ‹ts_Block*>(
node
);

278 
°d
::
˚º
 << 
öd
 << "Suµ‹ts_Block " << 
block
;

279 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

280 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

281 
	`debug_a°
(
block
->
	`c⁄dôi⁄
(), 
öd
 + " =@ ");

282 } i‡(
dy«mic_ˇ°
<
Suµ‹ts_O≥øt‹
*>(
node
)) {

283 
Suµ‹ts_O≥øt‹
* 
block
 = 
dy«mic_ˇ°
<Suµ‹ts_O≥øt‹*>(
node
);

284 
°d
::
˚º
 << 
öd
 << "Suµ‹ts_O≥øt‹ " << 
block
;

285 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")"

286 << 
°d
::
ídl
;

287 
	`debug_a°
(
block
->
	`À·
(), 
öd
 + "Üeft) ");

288 
	`debug_a°
(
block
->
	`right
(), 
öd
 + "Ñight) ");

289 } i‡(
dy«mic_ˇ°
<
Suµ‹ts_Neg©i⁄
*>(
node
)) {

290 
Suµ‹ts_Neg©i⁄
* 
block
 = 
dy«mic_ˇ°
<Suµ‹ts_Neg©i⁄*>(
node
);

291 
°d
::
˚º
 << 
öd
 << "Suµ‹ts_Neg©i⁄ " << 
block
;

292 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")"

293 << 
°d
::
ídl
;

294 
	`debug_a°
(
block
->
	`c⁄dôi⁄
(), 
öd
 + " condition) ");

295 } i‡(
dy«mic_ˇ°
<
Suµ‹ts_De˛¨©i⁄
*>(
node
)) {

296 
Suµ‹ts_De˛¨©i⁄
* 
block
 = 
dy«mic_ˇ°
<Suµ‹ts_De˛¨©i⁄*>(
node
);

297 
°d
::
˚º
 << 
öd
 << "Suµ‹ts_De˛¨©i⁄ " << 
block
;

298 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")"

299 << 
°d
::
ídl
;

300 
	`debug_a°
(
block
->
	`„©uª
(), 
öd
 + " feature) ");

301 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + " value) ");

302 } i‡(
dy«mic_ˇ°
<
Block
*>(
node
)) {

303 
Block
* 
roŸ_block
 = 
dy«mic_ˇ°
<Block*>(
node
);

304 
°d
::
˚º
 << 
öd
 << "Block " << 
roŸ_block
;

305 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

306 i‡(
roŸ_block
->
	`is_roŸ
()Ë
°d
::
˚º
 << " [root]";

307 
°d
::
˚º
 << " " << 
roŸ_block
->
	`èbs
(Ë<< std::
ídl
;

308 i‡(
roŸ_block
->
	`block
()Ëautÿ
i
 :ÑoŸ_block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

309 } i‡(
dy«mic_ˇ°
<
W¨nög
*>(
node
)) {

310 
W¨nög
* 
block
 = 
dy«mic_ˇ°
<W¨nög*>(
node
);

311 
°d
::
˚º
 << 
öd
 << "W¨nög " << 
block
;

312 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

313 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

314 } i‡(
dy«mic_ˇ°
<
Eº‹
*>(
node
)) {

315 
Eº‹
* 
block
 = 
dy«mic_ˇ°
<Eº‹*>(
node
);

316 
°d
::
˚º
 << 
öd
 << "Eº‹ " << 
block
;

317 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

318 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

319 } i‡(
dy«mic_ˇ°
<
Debug
*>(
node
)) {

320 
Debug
* 
block
 = 
dy«mic_ˇ°
<Debug*>(
node
);

321 
°d
::
˚º
 << 
öd
 << "Debug " << 
block
;

322 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

323 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

324 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + " ");

325 } i‡(
dy«mic_ˇ°
<
Commít
*>(
node
)) {

326 
Commít
* 
block
 = 
dy«mic_ˇ°
<Commít*>(
node
);

327 
°d
::
˚º
 << 
öd
 << "Commíà" << 
block
;

328 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

329 
°d
::
˚º
 << " " << 
block
->
	`èbs
() <<

330 " <" << 
	`¥ëty¥öt
(
block
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << 
°d
::
ídl
;

331 
	`debug_a°
(
block
->
	`ãxt
(), 
öd
 + "// ", 
ív
);

332 } i‡(
dy«mic_ˇ°
<
If
*>(
node
)) {

333 
If
* 
block
 = 
dy«mic_ˇ°
<If*>(
node
);

334 
°d
::
˚º
 << 
öd
 << "I‡" << 
block
;

335 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

336 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

337 
	`debug_a°
(
block
->
	`¥ediˇã
(), 
öd
 + " = ");

338 
	`debug_a°
(
block
->
	`block
(), 
öd
 + " <>");

339 
	`debug_a°
(
block
->
	`Æã∫©ive
(), 
öd
 + " ><");

340 } i‡(
dy«mic_ˇ°
<
Rëu∫
*>(
node
)) {

341 
Rëu∫
* 
block
 = 
dy«mic_ˇ°
<Rëu∫*>(
node
);

342 
°d
::
˚º
 << 
öd
 << "Rëu∫ " << 
block
;

343 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

344 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

345 } i‡(
dy«mic_ˇ°
<
Exãnsi⁄
*>(
node
)) {

346 
Exãnsi⁄
* 
block
 = 
dy«mic_ˇ°
<Exãnsi⁄*>(
node
);

347 
°d
::
˚º
 << 
öd
 << "Exãnsi⁄ " << 
block
;

348 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

349 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

350 
	`debug_a°
(
block
->
	`£À˘‹
(), 
öd
 + "-> ", 
ív
);

351 } i‡(
dy«mic_ˇ°
<
C⁄ã¡
*>(
node
)) {

352 
C⁄ã¡
* 
block
 = 
dy«mic_ˇ°
<C⁄ã¡*>(
node
);

353 
°d
::
˚º
 << 
öd
 << "C⁄ã¡ " << 
block
;

354 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

355 
°d
::
˚º
 << " [@medü:" << 
block
->
	`medü_block
() << "]";

356 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

357 } i‡(
dy«mic_ˇ°
<
Imp‹t_Stub
*>(
node
)) {

358 
Imp‹t_Stub
* 
block
 = 
dy«mic_ˇ°
<Imp‹t_Stub*>(
node
);

359 
°d
::
˚º
 << 
öd
 << "Imp‹t_Stub " << 
block
;

360 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

361 
°d
::
˚º
 << " [" << 
block
->
	`imp_∑th
() << "] ";

362 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

363 } i‡(
dy«mic_ˇ°
<
Imp‹t
*>(
node
)) {

364 
Imp‹t
* 
block
 = 
dy«mic_ˇ°
<Imp‹t*>(
node
);

365 
°d
::
˚º
 << 
öd
 << "Imp‹à" << 
block
;

366 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

367 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

369 autÿ
imp
 : 
block
->
	`uæs
()Ë
	`debug_a°
(imp, 
öd
 + "@: ", 
ív
);

370 
	`debug_a°
(
block
->
	`medü_quîõs
(), 
öd
 + "@@ ");

371 } i‡(
dy«mic_ˇ°
<
Assignmít
*>(
node
)) {

372 
Assignmít
* 
block
 = 
dy«mic_ˇ°
<Assignmít*>(
node
);

373 
°d
::
˚º
 << 
öd
 << "Assignmíà" << 
block
;

374 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

375 
°d
::
˚º
 << " <<" << 
block
->
	`v¨übÀ
(Ë<< ">> " << block->
	`èbs
(Ë<< std::
ídl
;

376 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + "=", 
ív
);

377 } i‡(
dy«mic_ˇ°
<
De˛¨©i⁄
*>(
node
)) {

378 
De˛¨©i⁄
* 
block
 = 
dy«mic_ˇ°
<De˛¨©i⁄*>(
node
);

379 
°d
::
˚º
 << 
öd
 << "De˛¨©i⁄ " << 
block
;

380 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

381 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

382 
	`debug_a°
(
block
->
	`¥›îty
(), 
öd
 + "Ör›: ", 
ív
);

383 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + " vÆue: ", 
ív
);

384 } i‡(
dy«mic_ˇ°
<
Key‰ame_RuÀ
*>(
node
)) {

385 
Key‰ame_RuÀ
* 
has_block
 = 
dy«mic_ˇ°
<Key‰ame_RuÀ*>(
node
);

386 
°d
::
˚º
 << 
öd
 << "Key‰ame_RuÀ " << 
has_block
;

387 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

388 
°d
::
˚º
 << " " << 
has_block
->
	`èbs
(Ë<< std::
ídl
;

389 i‡(
has_block
->
	`£À˘‹
()Ë
	`debug_a°
(has_block->£À˘‹(), 
öd
 + "@");

390 i‡(
has_block
->
	`block
()Ëautÿ
i
 : has_block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

391 } i‡(
dy«mic_ˇ°
<
Dúe˘ive
*>(
node
)) {

392 
Dúe˘ive
* 
block
 = 
dy«mic_ˇ°
<Dúe˘ive*>(
node
);

393 
°d
::
˚º
 << 
öd
 << "Dúe˘ivê" << 
block
;

394 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

395 
°d
::
˚º
 << " [" << 
block
->
	`keyw‹d
(Ë<< "] " << block->
	`èbs
(Ë<< std::
ídl
;

396 
	`debug_a°
(
block
->
	`£À˘‹
(), 
öd
 + "~", 
ív
);

397 
	`debug_a°
(
block
->
	`vÆue
(), 
öd
 + "+", 
ív
);

398 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

399 } i‡(
dy«mic_ˇ°
<
Each
*>(
node
)) {

400 
Each
* 
block
 = 
dy«mic_ˇ°
<Each*>(
node
);

401 
°d
::
˚º
 << 
öd
 << "Each " << 
block
;

402 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

403 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

404 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

405 } i‡(
dy«mic_ˇ°
<
F‹
*>(
node
)) {

406 
F‹
* 
block
 = 
dy«mic_ˇ°
<F‹*>(
node
);

407 
°d
::
˚º
 << 
öd
 << "F‹ " << 
block
;

408 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

409 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

410 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

411 } i‡(
dy«mic_ˇ°
<
Whûe
*>(
node
)) {

412 
Whûe
* 
block
 = 
dy«mic_ˇ°
<Whûe*>(
node
);

413 
°d
::
˚º
 << 
öd
 << "Whûê" << 
block
;

414 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

415 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

416 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

417 } i‡(
dy«mic_ˇ°
<
Deföôi⁄
*>(
node
)) {

418 
Deföôi⁄
* 
block
 = 
dy«mic_ˇ°
<Deföôi⁄*>(
node
);

419 
°d
::
˚º
 << 
öd
 << "Deföôi⁄ " << 
block
;

420 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

421 
°d
::
˚º
 << " [«me: " << 
block
->
	`«me
() << "] ";

422 
°d
::
˚º
 << " [ty≥: " << (
block
->
	`ty≥
(Ë=
Sass
::
Deföôi⁄
::
Ty≥
::
MIXIN
 ? "Mixin " : "Function ") << "] ";

425 
°d
::
˚º
 << " [«tive: " << 
block
->
	`«tive_fun˘i⁄
() << "] ";

426 
°d
::
˚º
 << " " << 
block
->
	`èbs
(Ë<< std::
ídl
;

427 
	`debug_a°
(
block
->
	`∑ømëîs
(), 
öd
 + "Ö¨ams: ", 
ív
);

428 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

429 } i‡(
dy«mic_ˇ°
<
Mixö_CÆl
*>(
node
)) {

430 
Mixö_CÆl
* 
block
 = 
dy«mic_ˇ°
<Mixö_CÆl*>(
node
);

431 
°d
::
˚º
 << 
öd
 << "Mixö_CÆ»" << 
block
 << " " << block->
	`èbs
();

432 
°d
::
˚º
 << " [" << 
block
->
	`«me
() << "]";

433 
°d
::
˚º
 << " [has_c⁄ã¡: " << 
block
->
	`has_c⁄ã¡
(Ë<< "] " << std::
ídl
;

434 
	`debug_a°
(
block
->
	`¨gumíts
(), 
öd
 + "árgs: ");

435 i‡(
block
->
	`block
()Ëautÿ
i
 : block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

436 } i‡(
RuÀ£t
* 
ruÀ£t
 = 
dy«mic_ˇ°
<RuÀ£t*>(
node
)) {

437 
°d
::
˚º
 << 
öd
 << "RuÀ£à" << 
ruÀ£t
;

438 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

439 
°d
::
˚º
 << " [ödít: " << 
ruÀ£t
->
	`èbs
() << "]";

440 
°d
::
˚º
 << (
ruÀ£t
->
	`©_roŸ
() ? " [@ROOT]" : "");

441 
°d
::
˚º
 << (
ruÀ£t
->
	`is_roŸ
() ? " [root]" : "");

442 
°d
::
˚º
 << std::
ídl
;

443 
	`debug_a°
(
ruÀ£t
->
	`£À˘‹
(), 
öd
 + ">");

444 
	`debug_a°
(
ruÀ£t
->
	`block
(), 
öd
 + " ");

445 } i‡(
dy«mic_ˇ°
<
Block
*>(
node
)) {

446 
Block
* 
block
 = 
dy«mic_ˇ°
<Block*>(
node
);

447 
°d
::
˚º
 << 
öd
 << "Block " << 
block
;

448 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

449 
°d
::
˚º
 << " [ödít: " << 
block
->
	`èbs
(Ë<< "]" << std::
ídl
;

450 autÿ
i
 : 
block
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

451 } i‡(
dy«mic_ˇ°
<
TextuÆ
*>(
node
)) {

452 
TextuÆ
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<TextuÆ*>(
node
);

453 
°d
::
˚º
 << 
öd
 << "Textual ";

454 i‡(
ex¥essi⁄
->
	`ty≥
(Ë=
TextuÆ
::
NUMBER
Ë
°d
::
˚º
 << " [NUMBER]";

455 i‡(
ex¥essi⁄
->
	`ty≥
(Ë=
TextuÆ
::
PERCENTAGE
Ë
°d
::
˚º
 << " [PERCENTAGE]";

456 i‡(
ex¥essi⁄
->
	`ty≥
(Ë=
TextuÆ
::
DIMENSION
Ë
°d
::
˚º
 << " [DIMENSION]";

457 i‡(
ex¥essi⁄
->
	`ty≥
(Ë=
TextuÆ
::
HEX
Ë
°d
::
˚º
 << " [HEX]";

458 
°d
::
˚º
 << 
ex¥essi⁄
 << " [" <<Éx¥essi⁄->
	`vÆue
() << "]";

459 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

460 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

461 
°d
::
˚º
 << std::
ídl
;

462 } i‡(
dy«mic_ˇ°
<
V¨übÀ
*>(
node
)) {

463 
V¨übÀ
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<V¨übÀ*>(
node
);

464 
°d
::
˚º
 << 
öd
 << "V¨übÀ " << 
ex¥essi⁄
;

465 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

466 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

467 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`«me
(Ë<< "]" << std::
ídl
;

468 
°d
::
°rög
 
	`«me
(
ex¥essi⁄
->name());

469 i‡(
ív
 &&Énv->
	`has
(
«me
)Ë
	`debug_a°
(
°©ic_ˇ°
<
Ex¥essi⁄
*>((*ív)[«me]), 
öd
 + " -> ",Énv);

470 } i‡(
dy«mic_ˇ°
<
Fun˘i⁄_CÆl_Schema
*>(
node
)) {

471 
Fun˘i⁄_CÆl_Schema
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Fun˘i⁄_CÆl_Schema*>(
node
);

472 
°d
::
˚º
 << 
öd
 << "Fun˘i⁄_CÆl_Schem®" << 
ex¥essi⁄
;

473 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

474 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

475 
°d
::
˚º
 << "" << std::
ídl
;

476 
	`debug_a°
(
ex¥essi⁄
->
	`«me
(), 
öd
 + "«me: ", 
ív
);

477 
	`debug_a°
(
ex¥essi⁄
->
	`¨gumíts
(), 
öd
 + "árgs: ", 
ív
);

478 } i‡(
dy«mic_ˇ°
<
Fun˘i⁄_CÆl
*>(
node
)) {

479 
Fun˘i⁄_CÆl
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Fun˘i⁄_CÆl*>(
node
);

480 
°d
::
˚º
 << 
öd
 << "Fun˘i⁄_CÆ»" << 
ex¥essi⁄
;

481 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

482 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

483 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`«me
() << "]";

484 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

485 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [interpolant]";

486 
°d
::
˚º
 << std::
ídl
;

487 
	`debug_a°
(
ex¥essi⁄
->
	`¨gumíts
(), 
öd
 + "árgs: ", 
ív
);

488 } i‡(
dy«mic_ˇ°
<
Argumíts
*>(
node
)) {

489 
Argumíts
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Argumíts*>(
node
);

490 
°d
::
˚º
 << 
öd
 << "Argumít†" << 
ex¥essi⁄
;

491 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

492 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

493 i‡(
ex¥essi⁄
->
	`has_«med_¨gumíts
()Ë
°d
::
˚º
 << " [has_named_arguments]";

494 i‡(
ex¥essi⁄
->
	`has_ª°_¨gumít
()Ë
°d
::
˚º
 << " [has_rest_argument]";

495 i‡(
ex¥essi⁄
->
	`has_keyw‹d_¨gumít
()Ë
°d
::
˚º
 << " [has_keyword_argument]";

496 
°d
::
˚º
 << std::
ídl
;

497 autÿ
i
 : 
ex¥essi⁄
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

498 } i‡(
dy«mic_ˇ°
<
Argumít
*>(
node
)) {

499 
Argumít
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Argumít*>(
node
);

500 
°d
::
˚º
 << 
öd
 << "Argumíà" << 
ex¥essi⁄
;

501 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

502 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`vÆue
() << "]";

503 
°d
::
˚º
 << " [«me: " << 
ex¥essi⁄
->
	`«me
() << "] ";

504 
°d
::
˚º
 << " [ª°: " << 
ex¥essi⁄
->
	`is_ª°_¨gumít
() << "] ";

505 
°d
::
˚º
 << " [keyw‹d: " << 
ex¥essi⁄
->
	`is_keyw‹d_¨gumít
(Ë<< "] " << std::
ídl
;

506 
	`debug_a°
(
ex¥essi⁄
->
	`vÆue
(), 
öd
 + " vÆue: ", 
ív
);

507 } i‡(
dy«mic_ˇ°
<
P¨amëîs
*>(
node
)) {

508 
P¨amëîs
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<P¨amëîs*>(
node
);

509 
°d
::
˚º
 << 
öd
 << "P¨amëî†" << 
ex¥essi⁄
;

510 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

511 
°d
::
˚º
 << " [has_›ti⁄Æ: " << 
ex¥essi⁄
->
	`has_›ti⁄Æ_∑ømëîs
() << "] ";

512 
°d
::
˚º
 << " [has_ª°: " << 
ex¥essi⁄
->
	`has_ª°_∑ømëî
() << "] ";

513 
°d
::
˚º
 << std::
ídl
;

514 autÿ
i
 : 
ex¥essi⁄
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

515 } i‡(
dy«mic_ˇ°
<
P¨amëî
*>(
node
)) {

516 
P¨amëî
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<P¨amëî*>(
node
);

517 
°d
::
˚º
 << 
öd
 << "P¨amëî " << 
ex¥essi⁄
;

518 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

519 
°d
::
˚º
 << " [«me: " << 
ex¥essi⁄
->
	`«me
() << "] ";

520 
°d
::
˚º
 << " [deÁu…: " << 
ex¥essi⁄
->
	`deÁu…_vÆue
() << "] ";

521 
°d
::
˚º
 << " [ª°: " << 
ex¥essi⁄
->
	`is_ª°_∑ømëî
(Ë<< "] " << std::
ídl
;

522 } i‡(
dy«mic_ˇ°
<
U«ry_Ex¥essi⁄
*>(
node
)) {

523 
U«ry_Ex¥essi⁄
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<U«ry_Ex¥essi⁄*>(
node
);

524 
°d
::
˚º
 << 
öd
 << "U«ry_Ex¥essi⁄ " << 
ex¥essi⁄
;

525 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

526 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

527 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`ty≥
(Ë<< "]" << std::
ídl
;

528 
	`debug_a°
(
ex¥essi⁄
->
	`›î™d
(), 
öd
 + " o≥ønd: ", 
ív
);

529 } i‡(
dy«mic_ˇ°
<
Bö¨y_Ex¥essi⁄
*>(
node
)) {

530 
Bö¨y_Ex¥essi⁄
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
node
);

531 
°d
::
˚º
 << 
öd
 << "Bö¨y_Ex¥essi⁄ " << 
ex¥essi⁄
;

532 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [is interpolant] ";

533 i‡(
ex¥essi⁄
->
	`is_À·_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [left interpolant] ";

534 i‡(
ex¥essi⁄
->
	`is_right_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [right interpolant] ";

535 
°d
::
˚º
 << " [dñayed: " << 
ex¥essi⁄
->
	`is_dñayed
() << "] ";

536 
°d
::
˚º
 << " [ws_bef‹e: " << 
ex¥essi⁄
->
	`›
().
ws_bef‹e
 << "] ";

537 
°d
::
˚º
 << " [ws_a·î: " << 
ex¥essi⁄
->
	`›
().
ws_a·î
 << "] ";

538 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

539 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`ty≥_«me
(Ë<< "]" << std::
ídl
;

540 
	`debug_a°
(
ex¥essi⁄
->
	`À·
(), 
öd
 + "Üe·: ", 
ív
);

541 
	`debug_a°
(
ex¥essi⁄
->
	`right
(), 
öd
 + "Ñight: ", 
ív
);

542 } i‡(
dy«mic_ˇ°
<
M≠
*>(
node
)) {

543 
M≠
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<M≠*>(
node
);

544 
°d
::
˚º
 << 
öd
 << "M≠ " << 
ex¥essi⁄
;

545 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

546 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

547 
°d
::
˚º
 << " [Hashed]" << std::
ídl
;

548 autÿ
i
 : 
ex¥essi⁄
->
	`ñemíts
()) {

549 
	`debug_a°
(
i
.
fú°
, 
öd
 + " key: ");

550 
	`debug_a°
(
i
.
£c⁄d
, 
öd
 + " val: ");

552 } i‡(
dy«mic_ˇ°
<
Li°
*>(
node
)) {

553 
Li°
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Li°*>(
node
);

554 
°d
::
˚º
 << 
öd
 << "Li° " << 
ex¥essi⁄
;

555 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

556 
°d
::
˚º
 << " (" << 
ex¥essi⁄
->
	`Àngth
() << ") " <<

557 (
ex¥essi⁄
->
	`£∑øt‹
(Ë=
SASS_COMMA
 ? "Comm®" :Éx¥essi⁄->£∑øt‹(Ë=
SASS_HASH
 ? "Map" : "Space ") <<

558 " [dñayed: " << 
ex¥essi⁄
->
	`is_dñayed
() << "] " <<

559 " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] " <<

560 " [li°ized: " << 
ex¥essi⁄
->
	`‰om_£À˘‹
() << "] " <<

561 " [¨gli°: " << 
ex¥essi⁄
->
	`is_¨gli°
() << "] " <<

562 " [hash: " << 
ex¥essi⁄
->
	`hash
() << "] " <<

563 
°d
::
ídl
;

564 autÿ
i
 : 
ex¥essi⁄
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

565 } i‡(
dy«mic_ˇ°
<
C⁄ã¡
*>(
node
)) {

566 
C⁄ã¡
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<C⁄ã¡*>(
node
);

567 
°d
::
˚º
 << 
öd
 << "C⁄ã¡ " << 
ex¥essi⁄
;

568 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

569 
°d
::
˚º
 << " [@medü:" << 
ex¥essi⁄
->
	`medü_block
() << "]";

570 
°d
::
˚º
 << " [Sèãmít]" << std::
ídl
;

571 } i‡(
dy«mic_ˇ°
<
Boﬁón
*>(
node
)) {

572 
Boﬁón
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Boﬁón*>(
node
);

573 
°d
::
˚º
 << 
öd
 << "Boﬁó¿" << 
ex¥essi⁄
;

574 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

575 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

576 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`vÆue
(Ë<< "]" << std::
ídl
;

577 } i‡(
dy«mic_ˇ°
<
Cﬁ‹
*>(
node
)) {

578 
Cﬁ‹
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Cﬁ‹*>(
node
);

579 
°d
::
˚º
 << 
öd
 << "Cﬁ‹ " << 
ex¥essi⁄
;

580 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

581 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

582 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`r
(Ë<< ":" <<Éx¥essi⁄->
	`g
(Ë<< ":" <<Éx¥essi⁄->
	`b
(Ë<< "@" <<Éx¥essi⁄->
	`a
(Ë<< "]" << std::
ídl
;

583 } i‡(
dy«mic_ˇ°
<
Numbî
*>(
node
)) {

584 
Numbî
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Numbî*>(
node
);

585 
°d
::
˚º
 << 
öd
 << "Numbî " << 
ex¥essi⁄
;

586 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

587 
°d
::
˚º
 << " [öãΩﬁ™t: " << 
ex¥essi⁄
->
	`is_öãΩﬁ™t
() << "] ";

588 
°d
::
˚º
 << " [" << 
ex¥essi⁄
->
	`vÆue
(Ë<<Éx¥essi⁄->
	`unô
() << "]" <<

589 " [hash: " << 
ex¥essi⁄
->
	`hash
() << "] " <<

590 
°d
::
ídl
;

591 } i‡(
dy«mic_ˇ°
<
Såög_QuŸed
*>(
node
)) {

592 
Såög_QuŸed
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
node
);

593 
°d
::
˚º
 << 
öd
 << "Såög_QuŸed " << 
ex¥essi⁄
;

594 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

595 
°d
::
˚º
 << " [" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`vÆue
()) << "]";

596 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

597 i‡(
ex¥essi⁄
->
	`ßss_fix_1291
()Ë
°d
::
˚º
 << " [sass_fix_1291]";

598 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [interpolant]";

599 i‡(
ex¥essi⁄
->
	`quŸe_m¨k
()Ë
°d
::
˚º
 << " [quote_mark: " <<Éxpression->quote_mark() << "]";

600 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

601 } i‡(
dy«mic_ˇ°
<
Såög_C⁄°™t
*>(
node
)) {

602 
Såög_C⁄°™t
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
node
);

603 
°d
::
˚º
 << 
öd
 << "Såög_C⁄°™à" << 
ex¥essi⁄
;

604 i‡(
ex¥essi⁄
->
	`c⁄¸ëe_ty≥
()) {

605 
°d
::
˚º
 << " " << 
ex¥essi⁄
->
	`c⁄¸ëe_ty≥
();

607 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

608 
°d
::
˚º
 << " [" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`vÆue
()) << "]";

609 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

610 i‡(
ex¥essi⁄
->
	`ßss_fix_1291
()Ë
°d
::
˚º
 << " [sass_fix_1291]";

611 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [interpolant]";

612 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

613 } i‡(
dy«mic_ˇ°
<
Såög_Schema
*>(
node
)) {

614 
Såög_Schema
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Såög_Schema*>(
node
);

615 
°d
::
˚º
 << 
öd
 << "Såög_Schem®" << 
ex¥essi⁄
;

616 
°d
::
˚º
 << " " << 
ex¥essi⁄
->
	`c⁄¸ëe_ty≥
();

617 i‡(
ex¥essi⁄
->
	`is_dñayed
()Ë
°d
::
˚º
 << " [delayed]";

618 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [is interpolant]";

619 i‡(
ex¥essi⁄
->
	`has_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [has interpolant]";

620 i‡(
ex¥essi⁄
->
	`is_À·_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [left interpolant] ";

621 i‡(
ex¥essi⁄
->
	`is_right_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [right interpolant] ";

622 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

623 autÿ
i
 : 
ex¥essi⁄
->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

624 } i‡(
dy«mic_ˇ°
<
Såög
*>(
node
)) {

625 
Såög
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Såög*>(
node
);

626 
°d
::
˚º
 << 
öd
 << "Såög " << 
ex¥essi⁄
;

627 
°d
::
˚º
 << " " << 
ex¥essi⁄
->
	`c⁄¸ëe_ty≥
();

628 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

629 i‡(
ex¥essi⁄
->
	`ßss_fix_1291
()Ë
°d
::
˚º
 << " [sass_fix_1291]";

630 i‡(
ex¥essi⁄
->
	`is_öãΩﬁ™t
()Ë
°d
::
˚º
 << " [interpolant]";

631 
°d
::
˚º
 << " <" << 
	`¥ëty¥öt
(
ex¥essi⁄
->
	`p°©e
().
tokí
.
	`ws_bef‹e
()Ë<< ">" << std::
ídl
;

632 } i‡(
dy«mic_ˇ°
<
Ex¥essi⁄
*>(
node
)) {

633 
Ex¥essi⁄
* 
ex¥essi⁄
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
node
);

634 
°d
::
˚º
 << 
öd
 << "Ex¥essi⁄ " << 
ex¥essi⁄
;

635 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

636 
ex¥essi⁄
->
	`c⁄¸ëe_ty≥
()) {

637 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
NONE
: 
°d
::
˚º
 << " [NONE]"; ;

638 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
BOOLEAN
: 
°d
::
˚º
 << " [BOOLEAN]"; ;

639 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
NUMBER
: 
°d
::
˚º
 << " [NUMBER]"; ;

640 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
COLOR
: 
°d
::
˚º
 << " [COLOR]"; ;

641 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
STRING
: 
°d
::
˚º
 << " [STRING]"; ;

642 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
LIST
: 
°d
::
˚º
 << " [LIST]"; ;

643 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
MAP
: 
°d
::
˚º
 << " [MAP]"; ;

644 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
SELECTOR
: 
°d
::
˚º
 << " [SELECTOR]"; ;

645 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
NULL_VAL
: 
°d
::
˚º
 << " [NULL_VAL]"; ;

646 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
C_WARNING
: 
°d
::
˚º
 << " [C_WARNING]"; ;

647 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
C_ERROR
: 
°d
::
˚º
 << " [C_ERROR]"; ;

648 
Ex¥essi⁄
::
C⁄¸ëe_Ty≥
::
NUM_TYPES
: 
°d
::
˚º
 << " [NUM_TYPES]"; ;

650 
°d
::
˚º
 << std::
ídl
;

651 } i‡(
dy«mic_ˇ°
<
Has_Block
*>(
node
)) {

652 
Has_Block
* 
has_block
 = 
dy«mic_ˇ°
<Has_Block*>(
node
);

653 
°d
::
˚º
 << 
öd
 << "Has_Block " << 
has_block
;

654 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

655 
°d
::
˚º
 << " " << 
has_block
->
	`èbs
(Ë<< std::
ídl
;

656 i‡(
has_block
->
	`block
()Ëautÿ
i
 : has_block->block()->
	`ñemíts
()Ë{ 
	`debug_a°
(i, 
öd
 + " ", 
ív
); }

657 } i‡(
dy«mic_ˇ°
<
Sèãmít
*>(
node
)) {

658 
Sèãmít
* 
°©emít
 = 
dy«mic_ˇ°
<Sèãmít*>(
node
);

659 
°d
::
˚º
 << 
öd
 << "Sèãmíà" << 
°©emít
;

660 
°d
::
˚º
 << " (" << 
	`p°©e_sour˚_posôi⁄
(
node
) << ")";

661 
°d
::
˚º
 << " " << 
°©emít
->
	`èbs
(Ë<< std::
ídl
;

664 i‡(
öd
 =""Ë
°d
::
˚º
 << "####################################################################\n";

665 
	}
}

667 
ölöe
 
debug_node
(
Node
* 
node
, 
°d
::
°rög
 
öd
 = "")

669 i‡(
öd
 =""Ë
°d
::
˚º
 << "#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";

670 i‡(
	gnode
->
isCombö©‹
()) {

671 
	g°d
::
˚º
 << 
öd
;

672 
	g°d
::
˚º
 << "Combinator ";

673 
	g°d
::
˚º
 << 
node
 << " ";

674 i‡(
	gnode
->
	ggŸ_löe_„ed
Ë
	g°d
::
˚º
 << "[LF] ";

675 
	gnode
->
combö©‹
()) {

676 
	gCom∂ex_Sñe˘‹
::
ADJACENT_TO
: 
°d
::
˚º
 << "{+} "; ;

677 
	gCom∂ex_Sñe˘‹
::
PARENT_OF
: 
°d
::
˚º
 << "{>} "; ;

678 
	gCom∂ex_Sñe˘‹
::
PRECEDES
: 
°d
::
˚º
 << "{~} "; ;

679 
	gCom∂ex_Sñe˘‹
::
REFERENCE
: 
°d
::
˚º
 << "{@} "; ;

680 
	gCom∂ex_Sñe˘‹
::
ANCESTOR_OF
: 
°d
::
˚º
 << "{ } "; ;

682 
	g°d
::
˚º
 << 
°d
::
ídl
;

684 } i‡(
	gnode
->
isSñe˘‹
()) {

685 
	g°d
::
˚º
 << 
öd
;

686 
	g°d
::
˚º
 << "Selector ";

687 
	g°d
::
˚º
 << 
node
 << " ";

688 i‡(
	gnode
->
	ggŸ_löe_„ed
Ë
	g°d
::
˚º
 << "[LF] ";

689 
	g°d
::
˚º
 << 
°d
::
ídl
;

690 
debug_a°
(
node
->
£À˘‹
(), 
öd
 + " ");

691 } i‡(
	gnode
->
isCﬁÀ˘i⁄
()) {

692 
	g°d
::
˚º
 << 
öd
;

693 
	g°d
::
˚º
 << "Collection ";

694 
	g°d
::
˚º
 << 
node
 << " ";

695 i‡(
	gnode
->
	ggŸ_löe_„ed
Ë
	g°d
::
˚º
 << "[LF] ";

696 
	g°d
::
˚º
 << 
°d
::
ídl
;

697 autÿ
	gn
 : (*
node
->
cﬁÀ˘i⁄
())) {

698 
debug_node
(&
n
, 
öd
 + " ");

700 } i‡(
	gnode
->
isNû
()) {

701 
	g°d
::
˚º
 << 
öd
;

702 
	g°d
::
˚º
 << "Nil ";

703 
	g°d
::
˚º
 << 
node
 << " ";

704 i‡(
	gnode
->
	ggŸ_löe_„ed
Ë
	g°d
::
˚º
 << "[LF] ";

705 
	g°d
::
˚º
 << 
°d
::
ídl
;

707 
	g°d
::
˚º
 << 
öd
;

708 
	g°d
::
˚º
 << "OTHER ";

709 
	g°d
::
˚º
 << 
node
 << " ";

710 i‡(
	gnode
->
	ggŸ_löe_„ed
Ë
	g°d
::
˚º
 << "[LF] ";

711 
	g°d
::
˚º
 << 
°d
::
ídl
;

713 i‡(
	göd
 =""Ë
°d
::
˚º
 << "#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";

716 
ölöe
 
debug_a°
(c⁄° 
AST_Node
* 
node
, 
°d
::
°rög
 
öd
 = "", 
Env
* 
ív
 = 0)

718 
debug_a°
(
c⁄°_ˇ°
<
AST_Node
*>(
node
), 
öd
, 
ív
);

721 
ölöe
 
debug_node
(c⁄° 
Node
* 
node
, 
°d
::
°rög
 
öd
 = "")

723 
debug_node
(
c⁄°_ˇ°
<
Node
*>(
node
), 
öd
);

726 
ölöe
 
debug_sub£t_m≠
(
Sass
::
Exãnsi⁄Sub£tM≠
& 
m≠
, 
°d
::
°rög
 
öd
 = "")

728 i‡(
öd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

729 autÿc⁄° &
	gô
 : 
m≠
.
vÆues
()) {

730 
debug_a°
(
ô
.
fú°
, 
öd
 + "first: ");

731 
debug_a°
(
ô
.
£c⁄d
, 
öd
 + "second: ");

733 i‡(
	göd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

736 
	g°d
::
	t∑ú
<
	tCom∂ex_Sñe˘‹
*, 
	tCompound_Sñe˘‹
*> 
	tExãnsi⁄Paú
;

737 
	g°d
::
	tve˘‹
<
	tExãnsi⁄Paú
> 
	tSub£tM≠E¡rõs
;

739 
ölöe
 
debug_sub£t_íåõs
(
Sub£tM≠E¡rõs
* 
íåõs
, 
°d
::
°rög
 
öd
 = "")

741 i‡(
öd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

742 autÿc⁄° &
	g∑ú
 : *
íåõs
) {

743 
debug_a°
(
∑ú
.
fú°
, 
öd
 + "first: ");

744 
debug_a°
(
∑ú
.
£c⁄d
, 
öd
 + "second: ");

746 i‡(
	göd
 =""Ë
°d
::
˚º
 << "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n";

	@node_modules/node-sass/src/libsass/src/emitter.cpp

1 
	~"ßss.hµ
"

2 
	~"utû.hµ
"

3 
	~"c⁄ãxt.hµ
"

4 
	~"ouçut.hµ
"

5 
	~"emôãr.hµ
"

6 
	~"utf8_°rög.hµ
"

8 
«me•a˚
 
	gSass
 {

10 
	gEmôãr
::
Emôãr
(
Sass_Ouçut_O±i⁄s
& 
›t
)

11 : 
wbuf
(),

12 
›t
(opt),

13 
ödíèti⁄
(0),

14 
scheduÀd_•a˚
(0),

15 
scheduÀd_löe„ed
(0),

16 
scheduÀd_dñimôî
(
Ál£
),

17 
scheduÀd_m≠pög
(0),

18 
ö_commít
(
Ál£
),

19 
ö_wøµed
(
Ál£
),

20 
ö_medü_block
(
Ál£
),

21 
ö_de˛¨©i⁄
(
Ál£
),

22 
ö_•a˚_¨øy
(
Ál£
),

23 
ö_comma_¨øy
(
Ál£
)

27 
	g°d
::
°rög
 
Emôãr
::
gë_buf„r
()

29  
wbuf
.
buf„r
;

32 
Sass_Ouçut_StyÀ
 
	gEmôãr
::
ouçut_°yÀ
() const

34  
›t
.
ouçut_°yÀ
;

39 
	gEmôãr
::
add_sour˚_ödex
(
size_t
 
idx
)

40 { 
wbuf
.
sm≠
.
sour˚_ödex
.
push_back
(
idx
); }

42 
	g°d
::
°rög
 
Emôãr
::
ªndî_§cm≠
(
C⁄ãxt
 &
˘x
)

43 {  
wbuf
.
sm≠
.
ªndî_§cm≠
(
˘x
); }

45 
	gEmôãr
::
£t_fûíame
(c⁄° 
°d
::
°rög
& 
°r
)

46 { 
wbuf
.
sm≠
.
fûe
 = 
°r
; }

48 
	gEmôãr
::
scheduÀ_m≠pög
(c⁄° 
AST_Node
* 
node
)

49 { 
scheduÀd_m≠pög
 = 
node
; }

50 
	gEmôãr
::
add_›í_m≠pög
(c⁄° 
AST_Node
* 
node
)

51 { 
wbuf
.
sm≠
.
add_›í_m≠pög
(
node
); }

52 
	gEmôãr
::
add_˛o£_m≠pög
(c⁄° 
AST_Node
* 
node
)

53 { 
wbuf
.
sm≠
.
add_˛o£_m≠pög
(
node
); }

54 
P¨£rSèã
 
	gEmôãr
::
ªm≠
(c⁄° P¨£rSèã& 
p°©e
)

55 {  
wbuf
.
sm≠
.
ªm≠
(
p°©e
); }

60 
	gEmôãr
::
föÆize
(
boﬁ
 
föÆ
)

62 
scheduÀd_•a˚
 = 0;

63 i‡(
ouçut_°yÀ
(Ë=
SASS_STYLE_COMPRESSED
)

64 i‡(
föÆ
Ë
scheduÀd_dñimôî
 = 
Ál£
;

65 i‡(
	gscheduÀd_löe„ed
)

66 
	gscheduÀd_löe„ed
 = 1;

67 
Êush_scheduÀs
();

71 
	gEmôãr
::
Êush_scheduÀs
()

74 i‡(
scheduÀd_löe„ed
) {

75 
°d
::
°rög
 
löe„eds
 = "";

77 
size_t
 
	gi
 = 0; i < 
	gscheduÀd_löe„ed
; i++)

78 
	glöe„eds
 +
›t
.
löe„ed
;

79 
	gscheduÀd_•a˚
 = 0;

80 
	gscheduÀd_löe„ed
 = 0;

81 
≠≥nd_°rög
(
löe„eds
);

83 } i‡(
	gscheduÀd_•a˚
) {

84 
	g°d
::
°rög
 
•a˚s
(
scheduÀd_•a˚
, ' ');

85 
	gscheduÀd_•a˚
 = 0;

86 
≠≥nd_°rög
(
•a˚s
);

88 i‡(
	gscheduÀd_dñimôî
) {

89 
	gscheduÀd_dñimôî
 = 
Ál£
;

90 
≠≥nd_°rög
(";");

95 
	gEmôãr
::
¥ïíd_ouçut
(c⁄° 
OuçutBuf„r
& 
ouçut
)

97 
wbuf
.
sm≠
.
¥ïíd
(
ouçut
);

98 
	gwbuf
.
	gbuf„r
 = 
ouçut
.
buf„r
 + 
wbuf
.buffer;

102 
	gEmôãr
::
¥ïíd_°rög
(c⁄° 
°d
::
°rög
& 
ãxt
)

104 
wbuf
.
sm≠
.
¥ïíd
(
Off£t
(
ãxt
));

105 
	gwbuf
.
	gbuf„r
 = 
ãxt
 + 
wbuf
.
buf„r
;

109 
	gEmôãr
::
≠≥nd_°rög
(c⁄° 
°d
::
°rög
& 
ãxt
)

113 
Êush_scheduÀs
();

115 i‡(
	gö_commít
 && 
ouçut_°yÀ
(Ë=
COMPACT
) {

117 
°d
::
°rög
 
out
 = 
commít_to_°rög
(
ãxt
);

119 
	gwbuf
.
	gbuf„r
 +
out
;

121 
	gwbuf
.
	gsm≠
.
≠≥nd
(
Off£t
(
out
));

124 
	gwbuf
.
	gbuf„r
 +
ãxt
;

126 
	gwbuf
.
	gsm≠
.
≠≥nd
(
Off£t
(
ãxt
));

131 
	gEmôãr
::
≠≥nd_w•a˚
(c⁄° 
°d
::
°rög
& 
ãxt
)

133 i‡(
ãxt
.
em±y
()) ;

134 i‡(
≥ek_löe„ed
(
ãxt
.
c_°r
())) {

135 
	gscheduÀd_•a˚
 = 0;

136 
≠≥nd_m™d©‹y_löe„ed
();

142 
	gEmôãr
::
≠≥nd_tokí
(c⁄° 
°d
::
°rög
& 
ãxt
, c⁄° 
AST_Node
* 
node
)

144 
Êush_scheduÀs
();

145 
add_›í_m≠pög
(
node
);

148 i‡(
	gscheduÀd_m≠pög
) {

149 
add_›í_m≠pög
(
scheduÀd_m≠pög
);

150 
	gscheduÀd_m≠pög
 = 0;

152 
≠≥nd_°rög
(
ãxt
);

153 
add_˛o£_m≠pög
(
node
);

158 
	gEmôãr
::
≠≥nd_ödíèti⁄
()

160 i‡(
ouçut_°yÀ
(Ë=
COMPRESSED
) ;

161 i‡(
ouçut_°yÀ
(Ë=
COMPACT
) ;

162 i‡(
	gö_de˛¨©i⁄
 && 
	gö_comma_¨øy
) ;

163 i‡(
	gscheduÀd_löe„ed
 && 
	gödíèti⁄
)

164 
	gscheduÀd_löe„ed
 = 1;

165 
	g°d
::
°rög
 
ödít
 = "";

166 
size_t
 
	gi
 = 0; i < 
	gödíèti⁄
; i++)

167 
	gödít
 +
›t
.
ödít
;

168 
≠≥nd_°rög
(
ödít
);

171 
	gEmôãr
::
≠≥nd_dñimôî
()

173 
scheduÀd_dñimôî
 = 
åue
;

174 i‡(
ouçut_°yÀ
(Ë=
COMPACT
) {

175 i‡(
ödíèti⁄
 == 0) {

176 
≠≥nd_m™d©‹y_löe„ed
();

178 
≠≥nd_m™d©‹y_•a˚
();

180 } i‡(
ouçut_°yÀ
(Ë!
COMPRESSED
) {

181 
≠≥nd_›ti⁄Æ_löe„ed
();

185 
	gEmôãr
::
≠≥nd_comma_£∑øt‹
()

188 
≠≥nd_°rög
(",");

189 
≠≥nd_›ti⁄Æ_•a˚
();

192 
	gEmôãr
::
≠≥nd_cﬁ⁄_£∑øt‹
()

194 
scheduÀd_•a˚
 = 0;

195 
≠≥nd_°rög
(":");

196 
≠≥nd_›ti⁄Æ_•a˚
();

199 
	gEmôãr
::
≠≥nd_m™d©‹y_•a˚
()

201 
scheduÀd_•a˚
 = 1;

204 
	gEmôãr
::
≠≥nd_›ti⁄Æ_•a˚
()

206 i‡((
ouçut_°yÀ
(Ë!
COMPRESSED
Ë&& 
buf„r
().
size
()) {

207 
l°
 = 
buf„r
().
©
(buf„r().
Àngth
() - 1);

208 i‡(!
is•a˚
(
l°
Ë|| 
	gscheduÀd_dñimôî
) {

209 
≠≥nd_m™d©‹y_•a˚
();

214 
	gEmôãr
::
≠≥nd_•ecül_löe„ed
()

216 i‡(
ouçut_°yÀ
(Ë=
COMPACT
) {

217 
≠≥nd_m™d©‹y_löe„ed
();

218 
size_t
 
	gp
 = 0;Ö < 
	gödíèti⁄
;Ö++)

219 
≠≥nd_°rög
(
›t
.
ödít
);

223 
	gEmôãr
::
≠≥nd_›ti⁄Æ_löe„ed
()

225 i‡(
ö_de˛¨©i⁄
 && 
ö_comma_¨øy
) ;

226 i‡(
ouçut_°yÀ
(Ë=
COMPACT
) {

227 
≠≥nd_m™d©‹y_•a˚
();

229 
≠≥nd_m™d©‹y_löe„ed
();

233 
	gEmôãr
::
≠≥nd_m™d©‹y_löe„ed
()

235 i‡(
ouçut_°yÀ
(Ë!
COMPRESSED
) {

236 
scheduÀd_löe„ed
 = 1;

237 
	gscheduÀd_•a˚
 = 0;

242 
	gEmôãr
::
≠≥nd_sc›e_›íî
(
AST_Node
* 
node
)

244 
scheduÀd_löe„ed
 = 0;

245 
≠≥nd_›ti⁄Æ_•a˚
();

246 
Êush_scheduÀs
();

247 i‡(
	gnode
Ë
add_›í_m≠pög
(
node
);

248 
≠≥nd_°rög
("{");

249 
≠≥nd_›ti⁄Æ_löe„ed
();

251 ++ 
	gödíèti⁄
;

253 
	gEmôãr
::
≠≥nd_sc›e_˛o£r
(
AST_Node
* 
node
)

255 -- 
ödíèti⁄
;

256 
	gscheduÀd_löe„ed
 = 0;

257 i‡(
ouçut_°yÀ
(Ë=
COMPRESSED
)

258 
scheduÀd_dñimôî
 = 
Ál£
;

259 i‡(
ouçut_°yÀ
(Ë=
EXPANDED
) {

260 
≠≥nd_›ti⁄Æ_löe„ed
();

261 
≠≥nd_ödíèti⁄
();

263 
≠≥nd_›ti⁄Æ_•a˚
();

265 
≠≥nd_°rög
("}");

266 i‡(
	gnode
Ë
add_˛o£_m≠pög
(
node
);

267 
≠≥nd_›ti⁄Æ_löe„ed
();

268 i‡(
	gödíèti⁄
 != 0) ;

269 i‡(
ouçut_°yÀ
(Ë!
COMPRESSED
)

270 
scheduÀd_löe„ed
 = 2;

	@node_modules/node-sass/src/libsass/src/emitter.hpp

1 #i‚de‡
SASS_EMITTER_H


2 
	#SASS_EMITTER_H


	)

4 
	~<°rög
>

5 
	~"ßss.hµ
"

6 
	~"ßss/ba£.h
"

7 
	~"sour˚_m≠.hµ
"

8 
	~"a°_fwd_de˛.hµ
"

10 
«me•a˚
 
	gSass
 {

11 
˛ass
 
	gC⁄ãxt
;

13 ˛as†
	cEmôãr
 {

15 
	gpublic
:

16 
Emôãr
(
Sass_Ouçut_O±i⁄s
& 
›t
);

17 
	gvútuÆ
 ~
Emôãr
() { }

19 
	g¥Ÿe˘ed
:

20 
OuçutBuf„r
 
wbuf
;

21 
	gpublic
:

22 c⁄° 
°d
::
°rög
& 
buf„r
(Ë{  
wbuf
.buffer; }

23 c⁄° 
Sour˚M≠
 
sm≠
(Ë{  
	gwbuf
.
	gsm≠
; }

24 c⁄° 
OuçutBuf„r
 
ouçut
(Ë{  
	gwbuf
; }

26 
add_sour˚_ödex
(
size_t
 
idx
);

27 
£t_fûíame
(c⁄° 
°d
::
°rög
& 
°r
);

28 
add_›í_m≠pög
(c⁄° 
AST_Node
* 
node
);

29 
add_˛o£_m≠pög
(c⁄° 
AST_Node
* 
node
);

30 
scheduÀ_m≠pög
(c⁄° 
AST_Node
* 
node
);

31 
	g°d
::
°rög
 
ªndî_§cm≠
(
C⁄ãxt
 &
˘x
);

32 
P¨£rSèã
 
ªm≠
(c⁄° P¨£rSèã& 
p°©e
);

34 
	gpublic
:

35 
Sass_Ouçut_O±i⁄s
& 
›t
;

36 
size_t
 
	gödíèti⁄
;

37 
size_t
 
	gscheduÀd_•a˚
;

38 
size_t
 
	gscheduÀd_löe„ed
;

39 
boﬁ
 
	gscheduÀd_dñimôî
;

40 c⁄° 
AST_Node
* 
	gscheduÀd_m≠pög
;

42 
	gpublic
:

44 
boﬁ
 
ö_commít
;

46 
boﬁ
 
	gö_wøµed
;

48 
boﬁ
 
	gö_medü_block
;

50 
boﬁ
 
	gö_de˛¨©i⁄
;

52 
boﬁ
 
	gö_•a˚_¨øy
;

53 
boﬁ
 
	gö_comma_¨øy
;

55 
	gpublic
:

57 
°d
::
°rög
 
gë_buf„r
();

59 
Sass_Ouçut_StyÀ
 
ouçut_°yÀ
() const;

61 
föÆize
(
boﬁ
 
föÆ
 = 
åue
);

63 
Êush_scheduÀs
();

65 
¥ïíd_°rög
(c⁄° 
°d
::
°rög
& 
ãxt
);

66 
¥ïíd_ouçut
(c⁄° 
OuçutBuf„r
& 
out
);

68 
≠≥nd_°rög
(c⁄° 
°d
::
°rög
& 
ãxt
);

70 
≠≥nd_w•a˚
(c⁄° 
°d
::
°rög
& 
ãxt
);

73 
≠≥nd_tokí
(c⁄° 
°d
::
°rög
& 
ãxt
, c⁄° 
AST_Node
* 
node
);

75 
	gpublic
:

76 
≠≥nd_ödíèti⁄
();

77 
≠≥nd_›ti⁄Æ_•a˚
();

78 
≠≥nd_m™d©‹y_•a˚
();

79 
≠≥nd_•ecül_löe„ed
();

80 
≠≥nd_›ti⁄Æ_löe„ed
();

81 
≠≥nd_m™d©‹y_löe„ed
();

82 
≠≥nd_sc›e_›íî
(
AST_Node
* 
node
 = 0);

83 
≠≥nd_sc›e_˛o£r
(
AST_Node
* 
node
 = 0);

84 
≠≥nd_comma_£∑øt‹
();

85 
≠≥nd_cﬁ⁄_£∑øt‹
();

86 
≠≥nd_dñimôî
();

	@node_modules/node-sass/src/libsass/src/environment.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"ívú⁄mít.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
	gãm∂©e
 <
ty≥«me
 
	gT
>

8 
	gEnvú⁄mít
<
	gT
>::
Envú⁄mít
(
boﬁ
 
is_shadow
)

9 : 
loˇl_‰ame_
(
°d
::
m≠
<°d::
°rög
, 
T
>()),

10 
∑ª¡_
(0), 
is_shadow_
(
Ál£
)

12 
	gãm∂©e
 <
ty≥«me
 
	gT
>

13 
	gEnvú⁄mít
<
	gT
>::
Envú⁄mít
(Envú⁄mít<
T
>* 
ív
, 
boﬁ
 
is_shadow
)

14 : 
loˇl_‰ame_
(
°d
::
m≠
<°d::
°rög
, 
T
>()),

15 
∑ª¡_
(
ív
), 
is_shadow_
(
is_shadow
)

17 
	gãm∂©e
 <
ty≥«me
 
	gT
>

18 
	gEnvú⁄mít
<
	gT
>::
Envú⁄mít
(Envú⁄mít<
T
>& 
ív
, 
boﬁ
 
is_shadow
)

19 : 
loˇl_‰ame_
(
°d
::
m≠
<°d::
°rög
, 
T
>()),

20 
∑ª¡_
(&
ív
), 
is_shadow_
(
is_shadow
)

24 
	gãm∂©e
 <
ty≥«me
 
	gT
>

25 
	gEnvú⁄mít
<
	gT
>::
lök
(
Envú⁄mít
& 
ív
Ë{ 
∑ª¡_
 = &env; }

26 
	gãm∂©e
 <
ty≥«me
 
	gT
>

27 
	gEnvú⁄mít
<
	gT
>::
lök
(
Envú⁄mít
* 
ív
Ë{ 
∑ª¡_
 =Énv; }

31 
	gãm∂©e
 <
ty≥«me
 
	gT
>

32 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
is_Àxiˇl
() const

34  !! 
∑ª¡_
 &&Öarent_->parent_;

41 
	gãm∂©e
 <
ty≥«me
 
	gT
>

42 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
is_globÆ
() const

44  
∑ª¡_
 && !Öarent_->parent_;

47 
	gãm∂©e
 <
ty≥«me
 
	gT
>

48 
	g°d
::
m≠
<
°d
::
°rög
, 
	gT
>& 
	gEnvú⁄mít
<T>::
loˇl_‰ame
() {

49  
loˇl_‰ame_
;

52 
	gãm∂©e
 <
ty≥«me
 
	gT
>

53 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
has_loˇl
(c⁄° 
°d
::
°rög
& 
key
) const

54 {  
loˇl_‰ame_
.
föd
(
key
Ë!loˇl_‰ame_.
íd
(); }

56 
	gãm∂©e
 <
ty≥«me
 
	gT
>

57 
	gT
& 
	gEnvú⁄mít
<T>::
gë_loˇl
(c⁄° 
°d
::
°rög
& 
key
)

58 {  
loˇl_‰ame_
[
key
]; }

60 
	gãm∂©e
 <
ty≥«me
 
	gT
>

61 
	gEnvú⁄mít
<
	gT
>::
£t_loˇl
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
)

63 
	gloˇl_‰ame_
[
key
] = 
vÆ
;

66 
	gãm∂©e
 <
ty≥«me
 
	gT
>

67 
	gEnvú⁄mít
<
	gT
>::
dñ_loˇl
(c⁄° 
°d
::
°rög
& 
key
)

68 { 
loˇl_‰ame_
.
îa£
(
key
); }

70 
	gãm∂©e
 <
ty≥«me
 
	gT
>

71 
	gEnvú⁄mít
<
	gT
>* Envú⁄mít<T>::
globÆ_ív
()

73 
Envú⁄mít
* 
cur
 = 
this
;

74 
	gcur
->
is_Àxiˇl
()) {

75 
	gcur
 = 
cur
->
∑ª¡_
;

77  
	gcur
;

80 
	gãm∂©e
 <
ty≥«me
 
	gT
>

81 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
has_globÆ
(c⁄° 
°d
::
°rög
& 
key
)

82 {  
globÆ_ív
()->
has
(
key
); }

84 
	gãm∂©e
 <
ty≥«me
 
	gT
>

85 
	gT
& 
	gEnvú⁄mít
<T>::
gë_globÆ
(c⁄° 
°d
::
°rög
& 
key
)

86 {  (*
globÆ_ív
())[
key
]; }

88 
	gãm∂©e
 <
ty≥«me
 
	gT
>

89 
	gEnvú⁄mít
<
	gT
>::
£t_globÆ
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
)

91 
globÆ_ív
()->
	gloˇl_‰ame_
[
key
] = 
vÆ
;

94 
	gãm∂©e
 <
ty≥«me
 
	gT
>

95 
	gEnvú⁄mít
<
	gT
>::
dñ_globÆ
(c⁄° 
°d
::
°rög
& 
key
)

96 { 
globÆ_ív
()->
loˇl_‰ame_
.
îa£
(
key
); }

98 
	gãm∂©e
 <
ty≥«me
 
	gT
>

99 
	gEnvú⁄mít
<
	gT
>* Envú⁄mít<T>::
Àxiˇl_ív
(c⁄° 
°d
::
°rög
& 
key
)

101 
Envú⁄mít
* 
cur
 = 
this
;

102 
	gcur
) {

103 i‡(
	gcur
->
has_loˇl
(
key
)) {

104  
	gcur
;

106 
	gcur
 = 
cur
->
∑ª¡_
;

108  
	gthis
;

114 
	gãm∂©e
 <
ty≥«me
 
	gT
>

115 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
has_Àxiˇl
(c⁄° 
°d
::
°rög
& 
key
) const

117 autÿ
cur
 = 
this
;

118 
	gcur
->
is_Àxiˇl
()) {

119 i‡(
	gcur
->
has_loˇl
(
key
)Ë 
	gåue
;

120 
	gcur
 = 
cur
->
∑ª¡_
;

122  
	gÁl£
;

128 
	gãm∂©e
 <
ty≥«me
 
	gT
>

129 
	gEnvú⁄mít
<
	gT
>::
£t_Àxiˇl
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
)

131 autÿ
	gcur
 = 
this
; 
boﬁ
 
	gshadow
 = 
Ál£
;

132 
	gcur
->
is_Àxiˇl
(Ë|| 
	gshadow
) {

133 i‡(
	gcur
->
has_loˇl
(
key
)) {

134 
	gcur
->
£t_loˇl
(
key
, 
vÆ
);

137 
	gshadow
 = 
cur
->
is_shadow
();

138 
	gcur
 = 
cur
->
∑ª¡_
;

140 
£t_loˇl
(
key
, 
vÆ
);

145 
	gãm∂©e
 <
ty≥«me
 
	gT
>

146 
boﬁ
 
	gEnvú⁄mít
<
	gT
>::
has
(c⁄° 
°d
::
°rög
& 
key
) const

148 autÿ
cur
 = 
this
;

149 
	gcur
) {

150 i‡(
	gcur
->
has_loˇl
(
key
)) {

151  
	gåue
;

153 
	gcur
 = 
cur
->
∑ª¡_
;

155  
	gÁl£
;

159 
	gãm∂©e
 <
ty≥«me
 
	gT
>

160 
	gT
& 
	gEnvú⁄mít
<T>::
›î©‹
[](c⁄° 
°d
::
°rög
& 
key
)

162 autÿ
cur
 = 
this
;

163 
	gcur
) {

164 i‡(
	gcur
->
has_loˇl
(
key
)) {

165  
	gcur
->
gë_loˇl
(
key
);

167 
	gcur
 = 
cur
->
∑ª¡_
;

169  
gë_loˇl
(
key
);

172 #ifde‡
DEBUG


173 
	gãm∂©e
 <
ty≥«me
 
	gT
>

174 
size_t
 
	gEnvú⁄mít
<
	gT
>::
¥öt
(
°d
::
°rög
 
¥efix
)

176 
size_t
 
ödít
 = 0;

177 i‡(
	g∑ª¡_
Ë
	gödít
 = 
∑ª¡_
->
¥öt
(
¥efix
) + 1;

178 
	g°d
::
˚º
 << 
¥efix
 << 
°d
::
°rög
(
ödít
, ' 'Ë<< "=" << 
	gthis
 << std::
ídl
;

179 
ty≥«me
 
	g°d
::
m≠
<
°d
::
°rög
, 
	gT
>::
ôî©‹
 
i
 = 
loˇl_‰ame_
.
begö
(); 
	gi
 !loˇl_‰ame_.
íd
(); ++i) {

180 i‡(!
íds_wôh
(
i
->
fú°
, "[f]") && !ends_with(i->first, "[f]4") && !ends_with(i->first, "[f]2")) {

181 
	g°d
::
˚º
 << 
¥efix
 << 
°d
::
°rög
(
ödít
, ' 'Ë<< 
	gi
->
	gfú°
 << " " << i->
	g£c⁄d
;

182 i‡(
VÆue
* 
	gvÆ
 = 
dy«mic_ˇ°
<VÆue*>(
i
->
£c⁄d
))

183 { 
°d
::
˚º
 << " : " << 
vÆ
->
to_°rög
(); }

184 
	g°d
::
˚º
 << 
°d
::
ídl
;

187  
	gödít
 ;

192 
ãm∂©e
 
˛ass
 
	gEnvú⁄mít
<
	gAST_Node
*>;

	@node_modules/node-sass/src/libsass/src/environment.hpp

1 #i‚de‡
SASS_ENVIRONMENT_H


2 
	#SASS_ENVIRONMENT_H


	)

4 
	~<°rög
>

5 
	~<m≠
>

7 
	~"a°_fwd_de˛.hµ
"

8 
	~"a°_def_ma¸os.hµ
"

9 
	~"mem‹y_m™agî.hµ
"

11 
«me•a˚
 
	gSass
 {

13 
	gãm∂©e
 <
ty≥«me
 
	gT
>

14 ˛as†
	cEnvú⁄mít
 {

16 
	g°d
::
m≠
<
°d
::
°rög
, 
	gT
> 
	gloˇl_‰ame_
;

17 
ADD_PROPERTY
(
Envú⁄mít
*, 
∑ª¡
)

18 
ADD_PROPERTY
(
boﬁ
, 
is_shadow
)

20 
	gpublic
:

21 
Mem‹y_M™agî
 
mem
;

22 
Envú⁄mít
(
boﬁ
 
is_shadow
 = 
Ál£
);

23 
Envú⁄mít
(Envú⁄mít* 
ív
, 
boﬁ
 
is_shadow
 = 
Ál£
);

24 
Envú⁄mít
(Envú⁄mít& 
ív
, 
boﬁ
 
is_shadow
 = 
Ál£
);

27 
lök
(
Envú⁄mít
& 
ív
);

28 
lök
(
Envú⁄mít
* 
ív
);

32 
boﬁ
 
is_Àxiˇl
() const;

38 
boﬁ
 
is_globÆ
() const;

42 
	g°d
::
m≠
<
°d
::
°rög
, 
	gT
>& 
loˇl_‰ame
();

44 
boﬁ
 
has_loˇl
(c⁄° 
°d
::
°rög
& 
key
) const;

46 
	gT
& 
gë_loˇl
(c⁄° 
°d
::
°rög
& 
key
);

49 
£t_loˇl
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
);

51 
dñ_loˇl
(c⁄° 
°d
::
°rög
& 
key
);

55 
Envú⁄mít
* 
globÆ_ív
();

58 
Envú⁄mít
* 
Àxiˇl_ív
(c⁄° 
°d
::
°rög
& 
key
);

60 
boﬁ
 
has_globÆ
(c⁄° 
°d
::
°rög
& 
key
);

62 
	gT
& 
gë_globÆ
(c⁄° 
°d
::
°rög
& 
key
);

65 
£t_globÆ
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
);

67 
dñ_globÆ
(c⁄° 
°d
::
°rög
& 
key
);

72 
boﬁ
 
has_Àxiˇl
(c⁄° 
°d
::
°rög
& 
key
) const;

77 
£t_Àxiˇl
(c⁄° 
°d
::
°rög
& 
key
, 
T
 
vÆ
);

81 
boﬁ
 
has
(c⁄° 
°d
::
°rög
& 
key
) const;

84 
	gT
& 
	g›î©‹
[](c⁄° 
	g°d
::
°rög
& 
key
);

86 #ifde‡
DEBUG


87 
size_t
 
¥öt
(
°d
::
°rög
 
¥efix
 = "");

	@node_modules/node-sass/src/libsass/src/error_handling.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"¥ñexî.hµ
"

4 
	~"backåa˚.hµ
"

5 
	~"îr‹_h™dlög.hµ
"

7 
	~<io°ªam
>

9 
«me•a˚
 
	gSass
 {

11 
«me•a˚
 
	gEx˚±i⁄
 {

13 
	gBa£
::
Ba£
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
, std::
ve˘‹
<
Sass_Imp‹t_E¡ry
>* 
imp‹t_°ack
)

14 : 
°d
::
ru¡ime_îr‹
(
msg
), msg(msg),

15 
¥efix
("Eº‹"), 
p°©e
(pstate),

16 
imp‹t_°ack
(import_stack)

19 
	gInvÆidSass
::
InvÆidSass
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
)

20 : 
Ba£
(
p°©e
, 
msg
)

24 
	gInvÆidP¨ít
::
InvÆidP¨ít
(
Sñe˘‹
* 
∑ª¡
, Sñe˘‹* 
£À˘‹
)

25 : 
Ba£
(
£À˘‹
->
p°©e
()), 
∑ª¡
(parent), selector(selector)

27 
	gmsg
 = "InvalidÖarent selector for \"";

28 
	gmsg
 +
£À˘‹
->
to_°rög
(
Sass_In•e˘_O±i⁄s
());

29 
	gmsg
 += "\": \"";

30 
	gmsg
 +
∑ª¡
->
to_°rög
(
Sass_In•e˘_O±i⁄s
());

31 
	gmsg
 += "\"";

34 
	gInvÆidArgumítTy≥
::
InvÆidArgumítTy≥
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
‚
, std::°rög 
¨g
, std::°rög 
ty≥
, c⁄° 
VÆue
* 
vÆue
)

35 : 
Ba£
(
p°©e
), 
‚
(‚), 
¨g
◊rg), 
ty≥
—y≥), 
vÆue
(value)

37 
	gmsg
 = 
¨g
 + ": \"";

38 
	gmsg
 +
vÆue
->
to_°rög
(
Sass_In•e˘_O±i⁄s
());

39 
	gmsg
 +"\" i†nŸá " + 
ty≥
;

40 
	gmsg
 +" f‹ `" + 
‚
 + "'";

43 
	gInvÆidSy¡ax
::
InvÆidSy¡ax
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
, std::
ve˘‹
<
Sass_Imp‹t_E¡ry
>* 
imp‹t_°ack
)

44 : 
Ba£
(
p°©e
, 
msg
, 
imp‹t_°ack
)

47 
	gUndeföedO≥øti⁄
::
UndeföedO≥øti⁄
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
)

48 : 
lhs
÷hs), 
rhs
‘hs), 
›
(op)

50 
	gmsg
 = 
def_›_msg
 + ": \"";

51 
	gmsg
 +
lhs
->
to_°rög
({ 
NESTED
, 5 });

52 
	gmsg
 +" " + 
›
 + " ";

53 
	gmsg
 +
rhs
->
to_°rög
({ 
TO_SASS
, 5 });

54 
	gmsg
 += "\".";

57 
	gInvÆidNuŒO≥øti⁄
::
InvÆidNuŒO≥øti⁄
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
)

58 : 
UndeföedO≥øti⁄
(
lhs
, 
rhs
, 
›
)

60 
	gmsg
 = 
def_›_nuŒ_msg
 + ": \"";

61 
	gmsg
 +
lhs
->
ö•e˘
();

62 
	gmsg
 +" " + 
›
 + " ";

63 
	gmsg
 +
rhs
->
ö•e˘
();

64 
	gmsg
 += "\".";

67 
	gZîoDivisi⁄Eº‹
::
ZîoDivisi⁄Eº‹
(c⁄° 
Ex¥essi⁄
& 
lhs
, c⁄° Ex¥essi⁄& 
rhs
)

68 : 
lhs
÷hs), 
rhs
(rhs)

70 
	gmsg
 = "divided by 0";

73 
	gDu∂iˇãKeyEº‹
::
Du∂iˇãKeyEº‹
(c⁄° 
M≠
& 
dup
, c⁄° 
Ex¥essi⁄
& 
‹g
)

74 : 
Ba£
(
‹g
.
p°©e
()), 
dup
(dup), org(org)

76 
	gmsg
 = "Duplicate key ";

77 
	gdup
.
gë_du∂iˇã_key
()->
is_dñayed
(
Ál£
);

78 
	gmsg
 +
dup
.
gë_du∂iˇã_key
()->
ö•e˘
();

79 
	gmsg
 += " in map (";

80 
	gmsg
 +
‹g
.
ö•e˘
();

81 
	gmsg
 += ").";

84 
	gTy≥Mism©ch
::
Ty≥Mism©ch
(c⁄° 
Ex¥essi⁄
& 
v¨
, c⁄° 
°d
::
°rög
 
ty≥
)

85 : 
Ba£
(
v¨
.
p°©e
()), v¨(v¨), 
ty≥
(type)

87 
	gmsg
 = 
v¨
.
to_°rög
();

88 
	gmsg
 += " isÇotán ";

89 
	gmsg
 +
ty≥
;

90 
	gmsg
 += ".";

93 
	gInvÆidVÆue
::
InvÆidVÆue
(c⁄° 
Ex¥essi⁄
& 
vÆ
)

94 : 
Ba£
(
vÆ
.
p°©e
()), val(val)

96 
	gmsg
 = 
vÆ
.
to_°rög
();

97 
	gmsg
 += " isn'tá valid CSS value.";

100 
	gIncom∑tibÀUnôs
::
Incom∑tibÀUnôs
(c⁄° 
Numbî
& 
lhs
, c⁄° Numbî& 
rhs
)

101 : 
lhs
÷hs), 
rhs
(rhs)

103 
	gmsg
 = "Incompatible units: '";

104 
	gmsg
 +
rhs
.
unô
();

105 
	gmsg
 += "'ánd '";

106 
	gmsg
 +
lhs
.
unô
();

107 
	gmsg
 += "'.";

110 
	gAÕhaCh™√lsNŸEquÆ
::
AÕhaCh™√lsNŸEquÆ
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
)

111 : 
lhs
÷hs), 
rhs
‘hs), 
›
(op)

113 
	gmsg
 = "Alpha channels must beÉqual: ";

114 
	gmsg
 +
lhs
->
to_°rög
({ 
NESTED
, 5 });

115 
	gmsg
 +" " + 
›
 + " ";

116 
	gmsg
 +
rhs
->
to_°rög
({ 
NESTED
, 5 });

117 
	gmsg
 += ".";

121 
	gSassVÆueEº‹
::
SassVÆueEº‹
(
P¨£rSèã
 
p°©e
, 
O≥øti⁄Eº‹
& 
îr
)

122 : 
Ba£
(
p°©e
, 
îr
.
wh©
())

124 
	gmsg
 = 
îr
.
wh©
();

125 
	g¥efix
 = 
îr
.
îπy≥
();

131 
w¨n
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
)

133 
	g°d
::
˚º
 << "W¨nög: " << 
msg
<< 
°d
::
ídl
;

136 
w¨n
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
bt
)

138 
Backåa˚
 
t›
(
bt
, 
p°©e
, "");

139 
	gmsg
 +
t›
.
to_°rög
();

140 
w¨n
(
msg
, 
p°©e
);

143 
dïªˇãd_fun˘i⁄
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
)

145 
	g°d
::
°rög
 
cwd
(
Sass
::
Fûe
::
gë_cwd
());

146 
	g°d
::
°rög
 
abs_∑th
(
Sass
::
Fûe
::
ªl2abs
(
p°©e
.
∑th
, 
cwd
, cwd));

147 
	g°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
p°©e
.
∑th
, 
cwd
, cwd));

148 
	g°d
::
°rög
 
ouçut_∑th
(
Sass
::
Fûe
::
∑th_f‹_c⁄sﬁe
(
ªl_∑th
, 
abs_∑th
, 
p°©e
.
∑th
));

150 
	g°d
::
˚º
 << "DEPRECATION WARNING: " << 
msg
 << 
°d
::
ídl
;

151 
	g°d
::
˚º
 << "wû»bê™Éº‹ i¿futuª vîsi⁄†o‡Sass." << 
°d
::
ídl
;

152 
	g°d
::
˚º
 << " o¿löê" << 
p°©e
.
löe
+1 << " o‡" << 
ouçut_∑th
 << 
°d
::
ídl
;

155 
dïªˇãd
(
°d
::
°rög
 
msg
, std::°rög 
msg2
, 
P¨£rSèã
 
p°©e
)

157 
	g°d
::
°rög
 
cwd
(
Sass
::
Fûe
::
gë_cwd
());

158 
	g°d
::
°rög
 
abs_∑th
(
Sass
::
Fûe
::
ªl2abs
(
p°©e
.
∑th
, 
cwd
, cwd));

159 
	g°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
p°©e
.
∑th
, 
cwd
, cwd));

160 
	g°d
::
°rög
 
ouçut_∑th
(
Sass
::
Fûe
::
∑th_f‹_c⁄sﬁe
(
ªl_∑th
, 
p°©e
.
∑th
,Östate.path));

162 
	g°d
::
˚º
 << "DEPRECATION WARNING o¿löê" << 
p°©e
.
löe
 + 1;

163 i‡(
	gouçut_∑th
.
Àngth
()Ë
	g°d
::
˚º
 << " o‡" << 
ouçut_∑th
;

164 
	g°d
::
˚º
 << ":" << 
°d
::
ídl
;

165 
	g°d
::
˚º
 << 
msg
 << "ánd wû»bê™Éº‹ i¿futuª vîsi⁄†o‡Sass." << 
°d
::
ídl
;

166 i‡(
	gmsg2
.
Àngth
()Ë
	g°d
::
˚º
 << 
msg2
 << 
°d
::
ídl
;

167 
	g°d
::
˚º
 << 
°d
::
ídl
;

170 
dïªˇãd_böd
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
)

172 
	g°d
::
°rög
 
cwd
(
Sass
::
Fûe
::
gë_cwd
());

173 
	g°d
::
°rög
 
abs_∑th
(
Sass
::
Fûe
::
ªl2abs
(
p°©e
.
∑th
, 
cwd
, cwd));

174 
	g°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
p°©e
.
∑th
, 
cwd
, cwd));

175 
	g°d
::
°rög
 
ouçut_∑th
(
Sass
::
Fûe
::
∑th_f‹_c⁄sﬁe
(
ªl_∑th
, 
abs_∑th
, 
p°©e
.
∑th
));

177 
	g°d
::
˚º
 << "WARNING: " << 
msg
 << 
°d
::
ídl
;

178 
	g°d
::
˚º
 << " o¿löê" << 
p°©e
.
löe
+1 << " o‡" << 
ouçut_∑th
 << 
°d
::
ídl
;

179 
	g°d
::
˚º
 << "Thi†wû»bê™Éº‹ i¿futuª vîsi⁄†o‡Sass." << 
°d
::
ídl
;

182 
îr‹
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
)

184 
throw
 
	gEx˚±i⁄
::
InvÆidSy¡ax
(
p°©e
, 
msg
);

187 
îr‹
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
bt
)

189 
Backåa˚
 
t›
(
bt
, 
p°©e
, "");

190 
	gmsg
 +"\n" + 
t›
.
to_°rög
();

191 
îr‹
(
msg
, 
p°©e
);

	@node_modules/node-sass/src/libsass/src/error_handling.hpp

1 #i‚de‡
SASS_ERROR_HANDLING_H


2 
	#SASS_ERROR_HANDLING_H


	)

4 
	~<°rög
>

5 
	~<s°ªam
>

6 
	~<°dex˚±
>

7 
	~"posôi⁄.hµ
"

9 
«me•a˚
 
	gSass
 {

11 
	gBackåa˚
;

13 
«me•a˚
 
	gEx˚±i⁄
 {

15 c⁄° 
	g°d
::
°rög
 
def_msg
 = "Invalid sass detected";

16 c⁄° 
	g°d
::
°rög
 
def_›_msg
 = "Undefined operation";

17 c⁄° 
	g°d
::
°rög
 
def_›_nuŒ_msg
 = "InvalidÇull operation";

19 ˛as†
	cBa£
 : 
public
 
°d
::
ru¡ime_îr‹
 {

20 
¥Ÿe˘ed
:

21 
°d
::
°rög
 
msg
;

22 
	g°d
::
°rög
 
¥efix
;

23 
	gpublic
:

24 
P¨£rSèã
 
p°©e
;

25 
	g°d
::
ve˘‹
<
Sass_Imp‹t_E¡ry
>* 
imp‹t_°ack
;

26 
	gpublic
:

27 
Ba£
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
 = 
def_msg
, std::
ve˘‹
<
Sass_Imp‹t_E¡ry
>* 
imp‹t_°ack
 = 0);

28 
vútuÆ
 c⁄° * 
îπy≥
(Ëc⁄° {  
	g¥efix
.
c_°r
(); }

29 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
(Ë{  
	gmsg
.
c_°r
(); }

30 
	gvútuÆ
 ~
Ba£
(Ë
throw
() {};

33 ˛as†
	cInvÆidSass
 : 
public
 
Ba£
 {

34 
public
:

35 
InvÆidSass
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
);

36 
	gvútuÆ
 ~
InvÆidSass
(Ë
throw
() {};

39 ˛as†
	cInvÆidP¨ít
 : 
public
 
Ba£
 {

40 
¥Ÿe˘ed
:

41 
Sñe˘‹
* 
∑ª¡
;

42 
Sñe˘‹
* 
	g£À˘‹
;

43 
	gpublic
:

44 
InvÆidP¨ít
(
Sñe˘‹
* 
∑ª¡
, Sñe˘‹* 
£À˘‹
);

45 
	gvútuÆ
 ~
InvÆidP¨ít
(Ë
throw
() {};

48 ˛as†
	cInvÆidArgumítTy≥
 : 
public
 
Ba£
 {

49 
¥Ÿe˘ed
:

50 
°d
::
°rög
 
‚
;

51 
	g°d
::
°rög
 
¨g
;

52 
	g°d
::
°rög
 
ty≥
;

53 c⁄° 
VÆue
* 
	gvÆue
;

54 
	gpublic
:

55 
InvÆidArgumítTy≥
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
‚
, std::°rög 
¨g
, std::°rög 
ty≥
, c⁄° 
VÆue
* 
vÆue
 = 0);

56 
	gvútuÆ
 ~
InvÆidArgumítTy≥
(Ë
throw
() {};

59 ˛as†
	cInvÆidSy¡ax
 : 
public
 
Ba£
 {

60 
public
:

61 
InvÆidSy¡ax
(
P¨£rSèã
 
p°©e
, 
°d
::
°rög
 
msg
, std::
ve˘‹
<
Sass_Imp‹t_E¡ry
>* 
imp‹t_°ack
 = 0);

62 
	gvútuÆ
 ~
InvÆidSy¡ax
(Ë
throw
() {};

66 ˛as†
	cO≥øti⁄Eº‹
 : 
public
 
°d
::
ru¡ime_îr‹
 {

67 
¥Ÿe˘ed
:

68 
°d
::
°rög
 
msg
;

69 
	gpublic
:

70 
O≥øti⁄Eº‹
(
°d
::
°rög
 
msg
 = 
def_›_msg
)

71 : 
°d
::
ru¡ime_îr‹
(
msg
), msg(msg)

73 
	gpublic
:

74 
vútuÆ
 c⁄° * 
îπy≥
() const {  "Error"; }

75 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
(Ë{  
	gmsg
.
c_°r
(); }

76 
	gvútuÆ
 ~
O≥øti⁄Eº‹
(Ë
throw
() {};

79 ˛as†
	cZîoDivisi⁄Eº‹
 : 
public
 
O≥øti⁄Eº‹
 {

80 
¥Ÿe˘ed
:

81 c⁄° 
Ex¥essi⁄
& 
lhs
;

82 c⁄° 
	gEx¥essi⁄
& 
	grhs
;

83 
	gpublic
:

84 
ZîoDivisi⁄Eº‹
(c⁄° 
Ex¥essi⁄
& 
lhs
, c⁄° Ex¥essi⁄& 
rhs
);

85 
vútuÆ
 c⁄° * 
îπy≥
() const {  "ZeroDivisionError"; }

86 
	gvútuÆ
 ~
ZîoDivisi⁄Eº‹
(Ë
throw
() {};

89 ˛as†
	cDu∂iˇãKeyEº‹
 : 
public
 
Ba£
 {

90 
¥Ÿe˘ed
:

91 c⁄° 
M≠
& 
dup
;

92 c⁄° 
	gEx¥essi⁄
& 
	g‹g
;

93 
	gpublic
:

94 
Du∂iˇãKeyEº‹
(c⁄° 
M≠
& 
dup
, c⁄° 
Ex¥essi⁄
& 
‹g
);

95 
vútuÆ
 c⁄° * 
îπy≥
() const {  "Error"; }

96 
	gvútuÆ
 ~
Du∂iˇãKeyEº‹
(Ë
throw
() {};

99 ˛as†
	cTy≥Mism©ch
 : 
public
 
Ba£
 {

100 
¥Ÿe˘ed
:

101 c⁄° 
Ex¥essi⁄
& 
v¨
;

102 c⁄° 
	g°d
::
°rög
 
ty≥
;

103 
	gpublic
:

104 
Ty≥Mism©ch
(c⁄° 
Ex¥essi⁄
& 
v¨
, c⁄° 
°d
::
°rög
 
ty≥
);

105 
vútuÆ
 c⁄° * 
îπy≥
() const {  "Error"; }

106 
	gvútuÆ
 ~
Ty≥Mism©ch
(Ë
throw
() {};

109 ˛as†
	cInvÆidVÆue
 : 
public
 
Ba£
 {

110 
¥Ÿe˘ed
:

111 c⁄° 
Ex¥essi⁄
& 
vÆ
;

112 
	gpublic
:

113 
InvÆidVÆue
(c⁄° 
Ex¥essi⁄
& 
vÆ
);

114 
vútuÆ
 c⁄° * 
îπy≥
() const {  "Error"; }

115 
	gvútuÆ
 ~
InvÆidVÆue
(Ë
throw
() {};

118 ˛as†
	cIncom∑tibÀUnôs
 : 
public
 
O≥øti⁄Eº‹
 {

119 
¥Ÿe˘ed
:

120 c⁄° 
Numbî
& 
lhs
;

121 c⁄° 
	gNumbî
& 
	grhs
;

122 
	gpublic
:

123 
Incom∑tibÀUnôs
(c⁄° 
Numbî
& 
lhs
, c⁄° Numbî& 
rhs
);

124 
	gvútuÆ
 ~
Incom∑tibÀUnôs
(Ë
throw
() {};

127 ˛as†
	cUndeföedO≥øti⁄
 : 
public
 
O≥øti⁄Eº‹
 {

128 
¥Ÿe˘ed
:

129 c⁄° 
Ex¥essi⁄
* 
lhs
;

130 c⁄° 
Ex¥essi⁄
* 
	grhs
;

131 c⁄° 
	g°d
::
°rög
 
›
;

132 
	gpublic
:

133 
UndeföedO≥øti⁄
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
);

135 
	gvútuÆ
 ~
UndeföedO≥øti⁄
(Ë
throw
() {};

138 ˛as†
	cInvÆidNuŒO≥øti⁄
 : 
public
 
UndeföedO≥øti⁄
 {

139 
public
:

140 
InvÆidNuŒO≥øti⁄
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
);

141 
	gvútuÆ
 ~
InvÆidNuŒO≥øti⁄
(Ë
throw
() {};

144 ˛as†
	cAÕhaCh™√lsNŸEquÆ
 : 
public
 
O≥øti⁄Eº‹
 {

145 
¥Ÿe˘ed
:

146 c⁄° 
Ex¥essi⁄
* 
lhs
;

147 c⁄° 
Ex¥essi⁄
* 
	grhs
;

148 c⁄° 
	g°d
::
°rög
 
›
;

149 
	gpublic
:

150 
AÕhaCh™√lsNŸEquÆ
(c⁄° 
Ex¥essi⁄
* 
lhs
, c⁄° Ex¥essi⁄* 
rhs
, c⁄° 
°d
::
°rög
& 
›
);

152 
	gvútuÆ
 ~
AÕhaCh™√lsNŸEquÆ
(Ë
throw
() {};

155 ˛as†
	cSassVÆueEº‹
 : 
public
 
Ba£
 {

156 
public
:

157 
SassVÆueEº‹
(
P¨£rSèã
 
p°©e
, 
O≥øti⁄Eº‹
& 
îr
);

158 
	gvútuÆ
 ~
SassVÆueEº‹
(Ë
throw
() {};

163 
w¨n
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
);

164 
w¨n
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
bt
);

166 
dïªˇãd_fun˘i⁄
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
);

167 
dïªˇãd
(
°d
::
°rög
 
msg
, std::°rög 
msg2
, 
P¨£rSèã
 
p°©e
);

168 
dïªˇãd_böd
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
);

171 
îr‹
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
);

172 
îr‹
(
°d
::
°rög
 
msg
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
bt
);

	@node_modules/node-sass/src/libsass/src/eval.cpp

1 
	~"ßss.hµ
"

2 
	~<c°dlib
>

3 
	~<cm©h
>

4 
	~<io°ªam
>

5 
	~<s°ªam
>

6 
	~<iom™ù
>

7 
	~<ty≥öfo
>

9 
	~"fûe.hµ
"

10 
	~"evÆ.hµ
"

11 
	~"a°.hµ
"

12 
	~"böd.hµ
"

13 
	~"utû.hµ
"

14 
	~"ö•e˘.hµ
"

15 
	~"ívú⁄mít.hµ
"

16 
	~"posôi⁄.hµ
"

17 
	~"ßss/vÆues.h
"

18 
	~"to_vÆue.hµ
"

19 
	~"to_c.hµ
"

20 
	~"c⁄ãxt.hµ
"

21 
	~"backåa˚.hµ
"

22 
	~"Àxî.hµ
"

23 
	~"¥ñexî.hµ
"

24 
	~"∑r£r.hµ
"

25 
	~"ex∑nd.hµ
"

26 
	~"cﬁ‹_m≠s.hµ
"

28 
«me•a˚
 
	gSass
 {

30 
ölöe
 
add
(
x
, 
y
Ë{  
	gx
 + 
	gy
; }

31 
ölöe
 
sub
(
x
, 
y
Ë{  
	gx
 - 
	gy
; }

32 
ölöe
 
mul
(
x
, 
y
Ë{  x * 
	gy
; }

33 
ölöe
 
div
(
x
, 
y
Ë{  
	gx
 / 
	gy
; }

34 
ölöe
 
mod
(
x
, 
y
Ë{  
	g°d
::
abs
(
°d
::
fmod
(x, y)); }

35 (*
	gb›
)(, );

36 
b›
 
	g›s
[
Sass_OP
::
NUM_OPS
] = {

39 
add
, 
sub
, 
mul
, 
div
, 
mod


42 
	gEvÆ
::
EvÆ
(
Ex∑nd
& 
exp
)

43 : 
exp
(exp),

44 
˘x
(
exp
.ctx)

46 
	gEvÆ
::~
EvÆ
() { }

48 
C⁄ãxt
& 
EvÆ
::
c⁄ãxt
()

50  
˘x
;

53 
Env
* 
	gEvÆ
::
ívú⁄mít
()

55  
exp
.
ívú⁄mít
();

58 
Sñe˘‹_Li°
* 
	gEvÆ
::
£À˘‹
()

60  
exp
.
£À˘‹
();

63 
Backåa˚
* 
	gEvÆ
::
backåa˚
()

65  
exp
.
backåa˚
();

68 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Block
* 
b
)

70 
Ex¥essi⁄
* 
vÆ
 = 0;

71 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

72 
	gvÆ
 = (*
b
)[
i
]->
≥rf‹m
(
this
);

73 i‡(
	gvÆ
)  val;

75  
	gvÆ
;

78 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Assignmít
* 
a
)

80 
Env
* 
ív
 = 
exp
.
ívú⁄mít
();

81 
	g°d
::
°rög
 
v¨
(
a
->
v¨übÀ
());

82 i‡(
	ga
->
is_globÆ
()) {

83 i‡(
	ga
->
is_deÁu…
()) {

84 i‡(
	gív
->
has_globÆ
(
v¨
)) {

85 
Ex¥essi⁄
* 
	ge
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
ív
->
gë_globÆ
(
v¨
));

86 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

87 
ív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

91 
	gív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

95 
	gív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

98 i‡(
	ga
->
is_deÁu…
()) {

99 i‡(
	gív
->
has_Àxiˇl
(
v¨
)) {

100 autÿ
	gcur
 = 
ív
;

101 
	gcur
 && cur->
is_Àxiˇl
()) {

102 i‡(
	gcur
->
has_loˇl
(
v¨
)) {

103 i‡(
AST_Node
* 
	gnode
 = 
cur
->
gë_loˇl
(
v¨
)) {

104 
Ex¥essi⁄
* 
e
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
node
);

105 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

106 
cur
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

110 
throw
 
	g°d
::
ru¡ime_îr‹
("EnvÇot in sync");

114 
	gcur
 = 
cur
->
∑ª¡
();

116 
throw
 
	g°d
::
ru¡ime_îr‹
("EnvÇot in sync");

118 i‡(
	gív
->
has_globÆ
(
v¨
)) {

119 i‡(
AST_Node
* 
	gnode
 = 
ív
->
gë_globÆ
(
v¨
)) {

120 
Ex¥essi⁄
* 
e
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
node
);

121 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

122 
ív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

126 i‡(
	gív
->
is_Àxiˇl
()) {

127 
	gív
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

130 
	gív
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

134 
	gív
->
£t_Àxiˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(
this
));

139 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
If
* 
i
)

141 
Ex¥essi⁄
* 
rv
 = 0;

142 
Env
 
ív
(
exp
.
ívú⁄mít
());

143 
	gexp
.
	gív_°ack
.
push_back
(&
ív
);

144 i‡(*
	gi
->
¥ediˇã
()->
≥rf‹m
(
this
)) {

145 
	grv
 = 
i
->
block
()->
≥rf‹m
(
this
);

148 
Block
* 
	gÆt
 = 
i
->
Æã∫©ive
();

149 i‡(
	gÆt
Ë
	grv
 = 
Æt
->
≥rf‹m
(
this
);

151 
	gexp
.
	gív_°ack
.
p›_back
();

152  
	grv
;

157 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
F‹
* 
f
)

159 
°d
::
°rög
 
v¨übÀ
(
f
->variable());

160 
Ex¥essi⁄
* 
	glow
 = 
f
->
lowî_bound
()->
≥rf‹m
(
this
);

161 i‡(
	glow
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
NUMBER
) {

162 
throw
 
Ex˚±i⁄
::
Ty≥Mism©ch
(*
low
, "integer");

164 
Ex¥essi⁄
* 
	ghigh
 = 
f
->
uµî_bound
()->
≥rf‹m
(
this
);

165 i‡(
	ghigh
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
NUMBER
) {

166 
throw
 
Ex˚±i⁄
::
Ty≥Mism©ch
(*
high
, "integer");

168 
Numbî
* 
	gßss_°¨t
 = 
°©ic_ˇ°
<Numbî*>(
low
);

169 
Numbî
* 
	gßss_íd
 = 
°©ic_ˇ°
<Numbî*>(
high
);

171 i‡(
	gßss_°¨t
->
unô
(Ë!
ßss_íd
->unit()) {

172 
°d
::
°rög°ªam
 
msg
; 
	gmsg
 << "Incompatible units: '"

173 << 
	gßss_°¨t
->
unô
() << "'ánd '"

174 << 
	gßss_íd
->
unô
() << "'.";

175 
îr‹
(
msg
.
°r
(), 
low
->
p°©e
(), 
backåa˚
());

177 
	g°¨t
 = 
ßss_°¨t
->
vÆue
();

178 
	gíd
 = 
ßss_íd
->
vÆue
();

180 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

181 
	gexp
.
	gív_°ack
.
push_back
(&
ív
);

182 
Numbî
* 
	gô
 = 
SASS_MEMORY_NEW
(
ív
.
mem
, Numbî, 
low
->
p°©e
(), 
°¨t
, 
ßss_íd
->
unô
());

183 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

184 
Block
* 
	gbody
 = 
f
->
block
();

185 
Ex¥essi⁄
* 
	gvÆ
 = 0;

186 i‡(
	g°¨t
 < 
	gíd
) {

187 i‡(
	gf
->
is_ö˛usive
()Ë++
	gíd
;

188 
	gi
 = 
°¨t
;

189 
	gi
 < 
	gíd
;

190 ++
	gi
) {

191 
	gô
->
vÆue
(
i
);

192 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

193 
	gvÆ
 = 
body
->
≥rf‹m
(
this
);

194 i‡(
	gvÆ
) ;

197 i‡(
	gf
->
is_ö˛usive
()Ë--
	gíd
;

198 
	gi
 = 
°¨t
;

199 
	gi
 > 
	gíd
;

200 --
	gi
) {

201 
	gô
->
vÆue
(
i
);

202 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

203 
	gvÆ
 = 
body
->
≥rf‹m
(
this
);

204 i‡(
	gvÆ
) ;

207 
	gexp
.
	gív_°ack
.
p›_back
();

208  
	gvÆ
;

213 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Each
* 
e
)

215 
°d
::
ve˘‹
<°d::
°rög
> 
v¨übÀs
(
e
->variables());

216 
Ex¥essi⁄
* 
	gex¥
 = 
e
->
li°
()->
≥rf‹m
(
this
);

217 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

218 
	gexp
.
	gív_°ack
.
push_back
(&
ív
);

219 
	gVe˘‹ized
<
	gEx¥essi⁄
*>* 
	gli°
 = 0;

220 
M≠
* 
	gm≠
 = 0;

221 i‡(
	gex¥
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
) {

222 
m≠
 = 
°©ic_ˇ°
<
M≠
*>(
ex¥
);

224 i‡(
Sñe˘‹_Li°
* 
	gls
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ex¥
)) {

225 
Li°ize
 
li°ize
(
˘x
.
mem
);

226 
	gli°
 = 
dy«mic_ˇ°
<
Li°
*>(
ls
->
≥rf‹m
(&
li°ize
));

228 i‡(
	gex¥
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
LIST
) {

229 
li°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
ex¥
->
p°©e
(), 1, 
SASS_COMMA
);

230 *
	gli°
 << 
	gex¥
;

233 
	gli°
 = 
°©ic_ˇ°
<
Li°
*>(
ex¥
);

236 
Block
* 
	gbody
 = 
e
->
block
();

237 
Ex¥essi⁄
* 
	gvÆ
 = 0;

239 i‡(
	gm≠
) {

240 autÿ
	gkey
 : 
m≠
->
keys
()) {

241 
Ex¥essi⁄
* 
vÆue
 = 
m≠
->
©
(
key
);

243 i‡(
	gv¨übÀs
.
size
() == 1) {

244 
Li°
* 
v¨übÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
m≠
->
p°©e
(), 2, 
SASS_SPACE
);

245 *
	gv¨übÀ
 << 
	gkey
;

246 *
	gv¨übÀ
 << 
	gvÆue
;

247 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
v¨übÀ
);

249 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
key
);

250 
	gív
.
£t_loˇl
(
v¨übÀs
[1], 
vÆue
);

253 
	gvÆ
 = 
body
->
≥rf‹m
(
this
);

254 i‡(
	gvÆ
) ;

258 i‡(
	gli°
->
Àngth
(Ë=1 && 
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>(
li°
)) {

259 
li°
 = 
dy«mic_ˇ°
<
Ve˘‹ized
<
Ex¥essi⁄
*>*>(list);

261 
size_t
 
	gi
 = 0, 
	gL
 = 
li°
->
Àngth
(); i < L; ++i) {

262 
Ex¥essi⁄
* 
	ge
 = (*
li°
)[
i
];

264 i‡(
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>(
e
)Ëê
¨g
->
vÆue
();

266 i‡(
Li°
* 
	gsˇœrs
 = 
dy«mic_ˇ°
<Li°*>(
e
)) {

267 i‡(
v¨übÀs
.
size
() == 1) {

268 
Ex¥essi⁄
* 
v¨
 = 
sˇœrs
;

269 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
v¨
);

272 
size_t
 
	gj
 = 0, 
	gK
 = 
v¨übÀs
.
size
(); j < K; ++j) {

273 
Ex¥essi⁄
* 
	gªs
 = 
j
 >
sˇœrs
->
Àngth
()

274 ? 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
ex¥
->
p°©e
())

275 : (*
sˇœrs
)[
j
];

276 
	gív
.
£t_loˇl
(
v¨übÀs
[
j
], 
ªs
);

280 i‡(
	gv¨übÀs
.
size
() > 0) {

281 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
e
);

282 
size_t
 
	gj
 = 1, 
	gK
 = 
v¨übÀs
.
size
(); j < K; ++j) {

284 
Ex¥essi⁄
* 
	gªs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
ex¥
->
p°©e
());

285 
	gív
.
£t_loˇl
(
v¨übÀs
[
j
], 
ªs
);

289 
	gvÆ
 = 
body
->
≥rf‹m
(
this
);

290 i‡(
	gvÆ
) ;

293 
	gexp
.
	gív_°ack
.
p›_back
();

294  
	gvÆ
;

297 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Whûe
* 
w
)

299 
Ex¥essi⁄
* 
¥ed
 = 
w
->
¥ediˇã
();

300 
Block
* 
	gbody
 = 
w
->
block
();

301 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

302 
	gexp
.
	gív_°ack
.
push_back
(&
ív
);

303 *
	g¥ed
->
≥rf‹m
(
this
)) {

304 
Ex¥essi⁄
* 
	gvÆ
 = 
body
->
≥rf‹m
(
this
);

305 i‡(
	gvÆ
) {

306 
	gexp
.
	gív_°ack
.
p›_back
();

307  
	gvÆ
;

310 
	gexp
.
	gív_°ack
.
p›_back
();

314 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Rëu∫
* 
r
)

316  
r
->
vÆue
()->
≥rf‹m
(
this
);

319 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
W¨nög
* 
w
)

321 
Sass_Ouçut_StyÀ
 
out°yÀ
 = 
˘x
.
c_›ti⁄s
.
ouçut_°yÀ
;

322 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
NESTED
;

323 
Ex¥essi⁄
* 
	gmesßge
 = 
w
->
mesßge
()->
≥rf‹m
(
this
);

324 
Env
* 
	gív
 = 
exp
.
ívú⁄mít
();

327 i‡(
	gív
->
has
("@warn[f]")) {

329 
Deföôi⁄
* 
	gdef
 = 
°©ic_ˇ°
<Deföôi⁄*>((*
ív
)["@warn[f]"]);

332 
Sass_Fun˘i⁄_E¡ry
 
	gc_fun˘i⁄
 = 
def
->
c_fun˘i⁄
();

333 
Sass_Fun˘i⁄_Fn
 
	gc_func
 = 
ßss_fun˘i⁄_gë_fun˘i⁄
(
c_fun˘i⁄
);

335 
To_C
 
	gto_c
;

336 
Sass_VÆue
* 
	gc_¨gs
 = 
ßss_make_li°
(1, 
SASS_COMMA
);

337 
ßss_li°_£t_vÆue
(
c_¨gs
, 0, 
mesßge
->
≥rf‹m
(&
to_c
));

338 
Sass_VÆue
* 
	gc_vÆ
 = 
c_func
(
c_¨gs
, 
c_fun˘i⁄
, 
˘x
.
c_compûî
);

339 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

340 
ßss_dñëe_vÆue
(
c_¨gs
);

341 
ßss_dñëe_vÆue
(
c_vÆ
);

346 
	g°d
::
°rög
 
ªsu…
(
unquŸe
(
mesßge
->
to_ßss
()));

347 
Backåa˚
 
t›
(
backåa˚
(), 
w
->
p°©e
(), "");

348 
	g°d
::
˚º
 << "WARNING: " << 
ªsu…
;

349 
	g°d
::
˚º
 << 
t›
.
to_°rög
();

350 
	g°d
::
˚º
 << 
°d
::
ídl
 << std::endl;

351 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

355 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Eº‹
* 
e
)

357 
Sass_Ouçut_StyÀ
 
out°yÀ
 = 
˘x
.
c_›ti⁄s
.
ouçut_°yÀ
;

358 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
NESTED
;

359 
Ex¥essi⁄
* 
	gmesßge
 = 
e
->
mesßge
()->
≥rf‹m
(
this
);

360 
Env
* 
	gív
 = 
exp
.
ívú⁄mít
();

363 i‡(
	gív
->
has
("@error[f]")) {

365 
Deföôi⁄
* 
	gdef
 = 
°©ic_ˇ°
<Deföôi⁄*>((*
ív
)["@error[f]"]);

368 
Sass_Fun˘i⁄_E¡ry
 
	gc_fun˘i⁄
 = 
def
->
c_fun˘i⁄
();

369 
Sass_Fun˘i⁄_Fn
 
	gc_func
 = 
ßss_fun˘i⁄_gë_fun˘i⁄
(
c_fun˘i⁄
);

371 
To_C
 
	gto_c
;

372 
Sass_VÆue
* 
	gc_¨gs
 = 
ßss_make_li°
(1, 
SASS_COMMA
);

373 
ßss_li°_£t_vÆue
(
c_¨gs
, 0, 
mesßge
->
≥rf‹m
(&
to_c
));

374 
Sass_VÆue
* 
	gc_vÆ
 = 
c_func
(
c_¨gs
, 
c_fun˘i⁄
, 
˘x
.
c_compûî
);

375 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

376 
ßss_dñëe_vÆue
(
c_¨gs
);

377 
ßss_dñëe_vÆue
(
c_vÆ
);

382 
	g°d
::
°rög
 
ªsu…
(
unquŸe
(
mesßge
->
to_ßss
()));

383 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

384 
îr‹
(
ªsu…
, 
e
->
p°©e
());

388 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Debug
* 
d
)

390 
Sass_Ouçut_StyÀ
 
out°yÀ
 = 
˘x
.
c_›ti⁄s
.
ouçut_°yÀ
;

391 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
NESTED
;

392 
Ex¥essi⁄
* 
	gmesßge
 = 
d
->
vÆue
()->
≥rf‹m
(
this
);

393 
Env
* 
	gív
 = 
exp
.
ívú⁄mít
();

396 i‡(
	gív
->
has
("@debug[f]")) {

398 
Deföôi⁄
* 
	gdef
 = 
°©ic_ˇ°
<Deföôi⁄*>((*
ív
)["@debug[f]"]);

401 
Sass_Fun˘i⁄_E¡ry
 
	gc_fun˘i⁄
 = 
def
->
c_fun˘i⁄
();

402 
Sass_Fun˘i⁄_Fn
 
	gc_func
 = 
ßss_fun˘i⁄_gë_fun˘i⁄
(
c_fun˘i⁄
);

404 
To_C
 
	gto_c
;

405 
Sass_VÆue
* 
	gc_¨gs
 = 
ßss_make_li°
(1, 
SASS_COMMA
);

406 
ßss_li°_£t_vÆue
(
c_¨gs
, 0, 
mesßge
->
≥rf‹m
(&
to_c
));

407 
Sass_VÆue
* 
	gc_vÆ
 = 
c_func
(
c_¨gs
, 
c_fun˘i⁄
, 
˘x
.
c_compûî
);

408 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

409 
ßss_dñëe_vÆue
(
c_¨gs
);

410 
ßss_dñëe_vÆue
(
c_vÆ
);

415 
	g°d
::
°rög
 
cwd
(
˘x
.cwd());

416 
	g°d
::
°rög
 
ªsu…
(
unquŸe
(
mesßge
->
to_ßss
()));

417 
	g°d
::
°rög
 
abs_∑th
(
Sass
::
Fûe
::
ªl2abs
(
d
->
p°©e
().
∑th
, 
cwd
, cwd));

418 
	g°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
d
->
p°©e
().
∑th
, 
cwd
, cwd));

419 
	g°d
::
°rög
 
ouçut_∑th
(
Sass
::
Fûe
::
∑th_f‹_c⁄sﬁe
(
ªl_∑th
, 
abs_∑th
, 
d
->
p°©e
().
∑th
));

420 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
out°yÀ
;

422 
	g°d
::
˚º
 << 
ouçut_∑th
 << ":" << 
d
->
p°©e
().
löe
+1 << " DEBUG: " << 
ªsu…
;

423 
	g°d
::
˚º
 << 
°d
::
ídl
;

427 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Li°
* 
l
)

430 i‡(
l
->
£∑øt‹
(Ë=
SASS_HASH
) {

431 
M≠
* 
lm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Map,

432 
l
->
p°©e
(),

433 
l
->
Àngth
() / 2);

434 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; i += 2)

436 
Ex¥essi⁄
* 
key
 = (*
l
)[
i
+0]->
≥rf‹m
(
this
);

437 
Ex¥essi⁄
* 
	gvÆ
 = (*
l
)[
i
+1]->
≥rf‹m
(
this
);

439 
	gkey
->
is_dñayed
(
åue
);

440 *
	glm
 << 
	g°d
::
make_∑ú
(
key
, 
vÆ
);

442 i‡(
	glm
->
has_du∂iˇã_key
()) {

443 
throw
 
	gEx˚±i⁄
::
Du∂iˇãKeyEº‹
(*
lm
, *
l
);

446 
	glm
->
is_öãΩﬁ™t
(
l
->is_interpolant());

447  
	glm
->
≥rf‹m
(
this
);

450 i‡(
	gl
->
is_ex∑nded
()) Ü;

452 
Li°
* 
	gŒ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, List,

453 
l
->
p°©e
(),

454 
l
->
Àngth
(),

455 
l
->
£∑øt‹
(),

456 
l
->
is_¨gli°
());

457 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

458 *
	gŒ
 << (*
	gl
)[
i
]->
≥rf‹m
(
this
);

460 
	gŒ
->
is_öãΩﬁ™t
(
l
->is_interpolant());

461 
	gŒ
->
‰om_£À˘‹
(
l
->from_selector());

462 
	gŒ
->
is_ex∑nded
(
åue
);

463  
	gŒ
;

466 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
M≠
* 
m
)

468 i‡(
m
->
is_ex∑nded
())  m;

472 i‡(
	gm
->
has_du∂iˇã_key
()) {

473 
throw
 
	gEx˚±i⁄
::
Du∂iˇãKeyEº‹
(*
m
, *m);

476 
M≠
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Map,

477 
m
->
p°©e
(),

478 
m
->
Àngth
());

479 autÿ
	gkey
 : 
m
->
keys
()) {

480 
Ex¥essi⁄
* 
ex_key
 = 
key
->
≥rf‹m
(
this
);

481 
Ex¥essi⁄
* 
	gex_vÆ
 = 
m
->
©
(
key
)->
≥rf‹m
(
this
);

482 *
	gmm
 << 
	g°d
::
make_∑ú
(
ex_key
, 
ex_vÆ
);

486 i‡(
	gmm
->
has_du∂iˇã_key
()) {

487 
throw
 
	gEx˚±i⁄
::
Du∂iˇãKeyEº‹
(*
mm
, *
m
);

490 
	gmm
->
is_ex∑nded
(
åue
);

491  
	gmm
;

494 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Bö¨y_Ex¥essi⁄
* 
b
)

497 
Såög_Schema
* 
ªt_schema
 = 0;

498 
Sass_OP
 
	g›_ty≥
 = 
b
->
ty≥
();

501 i‡(
	g›_ty≥
 =
Sass_OP
::
DIV
 && 
b
->
is_dñayed
()) {

502 
b
->
right
(b->right()->
≥rf‹m
(
this
));

503 
	gb
->
À·
(
b
->À·()->
≥rf‹m
(
this
));

504  
	gb
;

508 i‡(
Såög_Schema
* 
	gs_l
 = 
dy«mic_ˇ°
<Såög_Schema*>(
b
->
À·
())) {

509 i‡(!
s_l
->
has_öãΩﬁ™t
(Ë&& (!s_l->
is_right_öãΩﬁ™t
())) {

510 
ªt_schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_Schema
, 
s_l
->
p°©e
());

511 
Bö¨y_Ex¥essi⁄
* 
	gbö_ex
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Bö¨y_Ex¥essi⁄, 
b
->
p°©e
(),

512 
b
->
›
(), 
s_l
->
œ°
(), b->
right
());

513 
	gbö_ex
->
is_dñayed
(
b
->
À·
()->is_dñayed(Ë|| b->
right
()->is_delayed());

515 
size_t
 
	gi
 = 0; i < 
	gs_l
->
Àngth
() - 1; ++i) {

516 *
	gªt_schema
 << 
	gs_l
->
©
(
i
)->
≥rf‹m
(
this
);

518 *
	gªt_schema
 << 
	gbö_ex
->
≥rf‹m
(
this
);

519  
	gªt_schema
->
≥rf‹m
(
this
);

522 i‡(
Såög_Schema
* 
	gs_r
 = 
dy«mic_ˇ°
<Såög_Schema*>(
b
->
right
())) {

523 i‡(!
s_r
->
has_öãΩﬁ™t
(Ë&& (!s_r->
is_À·_öãΩﬁ™t
(Ë|| 
›_ty≥
 =
Sass_OP
::
DIV
)) {

524 
ªt_schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_Schema
, 
s_r
->
p°©e
());

525 
Bö¨y_Ex¥essi⁄
* 
	gbö_ex
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Bö¨y_Ex¥essi⁄, 
b
->
p°©e
(),

526 
b
->
›
(), b->
À·
(), 
s_r
->
fú°
());

527 
	gbö_ex
->
is_dñayed
(
b
->
À·
()->is_dñayed(Ë|| b->
right
()->is_delayed());

529 *
	gªt_schema
 << 
	gbö_ex
->
≥rf‹m
(
this
);

530 
size_t
 
	gi
 = 1; i < 
	gs_r
->
Àngth
(); ++i) {

531 *
	gªt_schema
 << 
	gs_r
->
©
(
i
)->
≥rf‹m
(
this
);

533  
	gªt_schema
->
≥rf‹m
(
this
);

539 i‡(
	g›_ty≥
 =
Sass_OP
::
DIV
 && 
b
->
is_dñayed
()) {

540 
b
->
right
(b->right()->
≥rf‹m
(
this
));

541 
	gb
->
À·
(
b
->À·()->
≥rf‹m
(
this
));

542  
	gb
;

546 
Ex¥essi⁄
* 
	glhs
 = 
b
->
À·
();

547 
Ex¥essi⁄
* 
	grhs
 = 
b
->
right
();

552 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
lhs
)) {

553 i‡(
schema
->
is_right_öãΩﬁ™t
()) {

554 
b
->
is_dñayed
(
åue
);

558 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
rhs
)) {

559 i‡(
schema
->
is_À·_öãΩﬁ™t
()) {

560 
b
->
is_dñayed
(
åue
);

566 i‡(
	g›_ty≥
 =
Sass_OP
::
EQ
 ||

567 
›_ty≥
 =
Sass_OP
::
NEQ
 ||

568 
›_ty≥
 =
Sass_OP
::
GT
 ||

569 
›_ty≥
 =
Sass_OP
::
GTE
 ||

570 
›_ty≥
 =
Sass_OP
::
LT
 ||

571 
›_ty≥
 =
Sass_OP
::
LTE
)

574 i‡(
Såög_Schema
* 
schema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
lhs
)) {

575 i‡(
schema
->
has_öãΩﬁ™ts
()) {

576 
b
->
is_dñayed
(
åue
);

579 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
rhs
)) {

580 i‡(
schema
->
has_öãΩﬁ™ts
()) {

581 
b
->
is_dñayed
(
åue
);

584 
	glhs
->
is_ex∑nded
(
Ál£
);

585 
	glhs
->
£t_dñayed
(
Ál£
);

586 
	glhs
 = 
lhs
->
≥rf‹m
(
this
);

587 
	glhs
->
is_ex∑nded
(
Ál£
);

588 
	glhs
->
£t_dñayed
(
Ál£
);

589 
	glhs
 = 
lhs
->
≥rf‹m
(
this
);

590 
	grhs
->
is_ex∑nded
(
Ál£
);

591 
	grhs
->
£t_dñayed
(
Ál£
);

592 
	grhs
 = 
rhs
->
≥rf‹m
(
this
);

593 
	grhs
->
is_ex∑nded
(
Ál£
);

594 
	grhs
->
£t_dñayed
(
Ál£
);

595 
	grhs
 = 
rhs
->
≥rf‹m
(
this
);

604 
	glhs
 = 
lhs
->
≥rf‹m
(
this
);

605 
	glhs
->
is_dñayed
(
Ál£
);

606 
ty≥id
(*
lhs
Ë=ty≥id(
Bö¨y_Ex¥essi⁄
)) {

607 
Bö¨y_Ex¥essi⁄
* 
lhs_ex
 = 
°©ic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
lhs
);

608 i‡(
	glhs_ex
->
ty≥
(Ë=
Sass_OP
::
DIV
 && 
lhs_ex
->
is_dñayed
()) ;

609 
	glhs
 = 
EvÆ
::
›î©‹
()(
lhs_ex
);

612 
	g›_ty≥
) {

613 
	gSass_OP
::
AND
:

614  *
lhs
 ? 
b
->
right
()->
≥rf‹m
(
this
) :Ühs;

617 
	gSass_OP
::
OR
:

618  *
lhs
 ?Üh†: 
b
->
right
()->
≥rf‹m
(
this
);

625 
	grhs
 = 
rhs
->
≥rf‹m
(
this
);

628 i‡(
	g›_ty≥
 =
Sass_OP
::
DIV
 || 
›_ty≥
 =Sass_OP::
MUL
) {

629 i‡(
Såög_C⁄°™t
* 
°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
rhs
)) {

630 
°d
::
°rög
 
vÆue
(
°r
->value());

631 c⁄° * 
	g°¨t
 = 
vÆue
.
c_°r
();

632 i‡(
	gPªÀxî
::
£quí˚
 < 
PªÀxî
::
numbî
 >(
°¨t
) != 0) {

633 
rhs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
,Ñhs->
p°©e
(), TextuÆ::
DIMENSION
, 
°r
->
vÆue
());

634 
	grhs
->
is_dñayed
(
Ál£
);Ñh†
rhs
->
≥rf‹m
(
this
);

640 
	gEx¥essi⁄
::
C⁄¸ëe_Ty≥
 
l_ty≥
 = 
lhs
->
c⁄¸ëe_ty≥
();

641 
	gEx¥essi⁄
::
C⁄¸ëe_Ty≥
 
r_ty≥
 = 
rhs
->
c⁄¸ëe_ty≥
();

644 
Såög_Schema
* 
	gs1
 = 
dy«mic_ˇ°
<Såög_Schema*>(
b
->
À·
());

645 
Såög_Schema
* 
	gs2
 = 
dy«mic_ˇ°
<Såög_Schema*>(
b
->
right
());

646 
Bö¨y_Ex¥essi⁄
* 
	gb1
 = 
dy«mic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
b
->
À·
());

647 
Bö¨y_Ex¥essi⁄
* 
	gb2
 = 
dy«mic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
b
->
right
());

649 
boﬁ
 
	gschema_›
 = 
Ál£
;

651 
boﬁ
 
	gf‹˚_dñay
 = (
s2
 && s2->
is_À·_öãΩﬁ™t
()) ||

652 (
s1
 && s1->
is_right_öãΩﬁ™t
()) ||

653 (
b1
 && b1->
is_right_öãΩﬁ™t
()) ||

654 (
b2
 && b2->
is_À·_öãΩﬁ™t
());

656 i‡((
	gs1
 && s1->
has_öãΩﬁ™ts
()Ë|| (
	gs2
 && s2->has_öãΩﬁ™ts()Ë|| 
	gf‹˚_dñay
)

659 i‡(
	g›_ty≥
 =
Sass_OP
::
DIV
 || 
›_ty≥
 =Sass_OP::
MUL
 || op_ty≥ =Sass_OP::
MOD
 || op_ty≥ =Sass_OP::
ADD
 || op_ty≥ =Sass_OP::
SUB
 ||

660 
›_ty≥
 =
Sass_OP
::
EQ
) {

661 i‡(
Såög_C⁄°™t
* 
°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
lhs
)) {

662 
°d
::
°rög
 
vÆue
(
°r
->value());

663 c⁄° * 
	g°¨t
 = 
vÆue
.
c_°r
();

664 i‡(
	gPªÀxî
::
£quí˚
 < 
PªÀxî
::
dimísi⁄
, PªÀxî::
íd_of_fûe
 >(
°¨t
) != 0) {

665 
lhs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
,Ühs->
p°©e
(), TextuÆ::
DIMENSION
, 
°r
->
vÆue
());

666 
	glhs
->
is_dñayed
(
Ál£
);Üh†
lhs
->
≥rf‹m
(
this
);

669 i‡(
Såög_C⁄°™t
* 
	g°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
rhs
)) {

670 
°d
::
°rög
 
vÆue
(
°r
->value());

671 c⁄° * 
	g°¨t
 = 
vÆue
.
c_°r
();

672 i‡(
	gPªÀxî
::
£quí˚
 < 
PªÀxî
::
numbî
 >(
°¨t
) != 0) {

673 
rhs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
,Ñhs->
p°©e
(), TextuÆ::
DIMENSION
, 
°r
->
vÆue
());

674 
	grhs
->
is_dñayed
(
Ál£
);Ñh†
rhs
->
≥rf‹m
(
this
);

679 
To_VÆue
 
to_vÆue
(
˘x
, ctx.
mem
);

680 
VÆue
* 
	gv_l
 = 
dy«mic_ˇ°
<VÆue*>(
lhs
->
≥rf‹m
(&
to_vÆue
));

681 
VÆue
* 
	gv_r
 = 
dy«mic_ˇ°
<VÆue*>(
rhs
->
≥rf‹m
(&
to_vÆue
));

682 
	gl_ty≥
 = 
lhs
->
c⁄¸ëe_ty≥
();

683 
	gr_ty≥
 = 
rhs
->
c⁄¸ëe_ty≥
();

685 i‡(
	gs2
 && s2->
has_öãΩﬁ™ts
(Ë&& s2->
Àngth
()) {

686 
TextuÆ
* 
	g‰⁄t
 = 
dy«mic_ˇ°
<TextuÆ*>(
s2
->
ñemíts
().
‰⁄t
());

687 i‡(
	g‰⁄t
 && !‰⁄t->
is_öãΩﬁ™t
())

690 
	gschema_›
 = 
åue
;

691 
	grhs
 = 
‰⁄t
->
≥rf‹m
(
this
);

695 i‡(
	gf‹˚_dñay
) {

696 
	g°d
::
°rög
 
°r
("");

697 
	g°r
 +
v_l
->
to_°rög
(
˘x
.
c_›ti⁄s
);

698 i‡(
	gb
->
›
().
	gws_bef‹e
Ë
	g°r
 += " ";

699 
	g°r
 +
b
->
£∑øt‹
();

700 i‡(
	gb
->
›
().
	gws_a·î
Ë
	g°r
 += " ";

701 
	g°r
 +
v_r
->
to_°rög
(
˘x
.
c_›ti⁄s
);

702 
Såög_C⁄°™t
* 
	gvÆ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_C⁄°™t, 
lhs
->
p°©e
(), 
°r
);

703 
	gvÆ
->
is_öãΩﬁ™t
(
b
->
À·
()->
has_öãΩﬁ™t
());

704  
	gvÆ
;

709 
	gåy
 {

710 
	g›_ty≥
) {

711 
	gSass_OP
::
EQ
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), 
eq
(
lhs
, 
rhs
));

712 
	gSass_OP
::
NEQ
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), !
eq
(
lhs
, 
rhs
));

713 
	gSass_OP
::
GT
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), !
…
(
lhs
, 
rhs
, "gt"Ë&& !
eq
(lhs,Ñhs));

714 
	gSass_OP
::
GTE
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), !
…
(
lhs
, 
rhs
, "gte"));

715 
	gSass_OP
::
LT
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), 
…
(
lhs
, 
rhs
, "lt"));

716 
	gSass_OP
::
LTE
:  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
b
->
p°©e
(), 
…
(
lhs
, 
rhs
, "…e"Ë|| 
eq
(lhs,Ñhs));

720 
ˇtch
 (
Ex˚±i⁄
::
O≥øti⁄Eº‹
& 
îr
)

723 
throw
 
Ex˚±i⁄
::
SassVÆueEº‹
(
b
->
p°©e
(), 
îr
);

726 
	gl_ty≥
 = 
lhs
->
c⁄¸ëe_ty≥
();

727 
	gr_ty≥
 = 
rhs
->
c⁄¸ëe_ty≥
();

731 
Ex¥essi⁄
* 
	grv
 = 0;

732 
	gåy
 {

733 
P¨£rSèã
 
p°©e
(
b
->pstate());

734 i‡(
	gl_ty≥
 =
Ex¥essi⁄
::
NUMBER
 && 
r_ty≥
 == Expression::NUMBER) {

735 c⁄° 
Numbî
* 
l_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
lhs
);

736 c⁄° 
Numbî
* 
	gr_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
rhs
);

737 
	grv
 = 
›_numbîs
(
˘x
.
mem
, 
›_ty≥
, *
l_n
, *
r_n
, ctx.
c_›ti⁄s
, &
p°©e
);

739 i‡(
	gl_ty≥
 =
Ex¥essi⁄
::
NUMBER
 && 
r_ty≥
 =Ex¥essi⁄::
COLOR
) {

740 c⁄° 
Numbî
* 
l_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
lhs
);

741 c⁄° 
Cﬁ‹
* 
	gr_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
rhs
);

742 
	grv
 = 
›_numbî_cﬁ‹
(
˘x
.
mem
, 
›_ty≥
, *
l_n
, *
r_c
, ctx.
c_›ti⁄s
, &
p°©e
);

744 i‡(
	gl_ty≥
 =
Ex¥essi⁄
::
COLOR
 && 
r_ty≥
 =Ex¥essi⁄::
NUMBER
) {

745 c⁄° 
Cﬁ‹
* 
l_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
lhs
);

746 c⁄° 
Numbî
* 
	gr_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
rhs
);

747 
	grv
 = 
›_cﬁ‹_numbî
(
˘x
.
mem
, 
›_ty≥
, *
l_c
, *
r_n
, ctx.
c_›ti⁄s
, &
p°©e
);

749 i‡(
	gl_ty≥
 =
Ex¥essi⁄
::
COLOR
 && 
r_ty≥
 == Expression::COLOR) {

750 c⁄° 
Cﬁ‹
* 
l_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
lhs
);

751 c⁄° 
Cﬁ‹
* 
	gr_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
rhs
);

752 
	grv
 = 
›_cﬁ‹s
(
˘x
.
mem
, 
›_ty≥
, *
l_c
, *
r_c
, ctx.
c_›ti⁄s
, &
p°©e
);

755 
To_VÆue
 
to_vÆue
(
˘x
, ctx.
mem
);

756 
VÆue
* 
	gv_l
 = 
dy«mic_ˇ°
<VÆue*>(
lhs
->
≥rf‹m
(&
to_vÆue
));

757 
VÆue
* 
	gv_r
 = 
dy«mic_ˇ°
<VÆue*>(
rhs
->
≥rf‹m
(&
to_vÆue
));

758 
boﬁ
 
	göãΩﬁ™t
 = 
b
->
is_right_öãΩﬁ™t
() ||

759 
b
->
is_À·_öãΩﬁ™t
() ||

760 
b
->
is_öãΩﬁ™t
();

761 i‡(
	g›_ty≥
 =
Sass_OP
::
SUB
Ë
öãΩﬁ™t
 = 
Ál£
;

763 
VÆue
* 
	gex
 = 
›_°rögs
(
˘x
.
mem
, 
b
->
›
(), *
v_l
, *
v_r
, ctx.
c_›ti⁄s
, &
p°©e
, !
öãΩﬁ™t
);

764 i‡(
Såög_C⁄°™t
* 
	g°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
ex
))

766 i‡(
°r
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
)

768 
Såög_C⁄°™t
* 
l°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
lhs
);

769 
Såög_C⁄°™t
* 
	gr°r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
rhs
);

770 i‡(
	g›_ty≥
 !
Sass_OP
::
SUB
) {

771 i‡(
Såög_C⁄°™t
* 
‹g
 = 
l°r
 ?Ü°∏: 
r°r
)

772 { 
°r
->
quŸe_m¨k
(
‹g
->quote_mark()); }

776 
	gex
->
is_öãΩﬁ™t
(
b
->is_interpolant());

777 
	grv
 = 
ex
;

780 
ˇtch
 (
Ex˚±i⁄
::
O≥øti⁄Eº‹
& 
îr
)

783 
throw
 
Ex˚±i⁄
::
SassVÆueEº‹
(
b
->
p°©e
(), 
îr
);

786 i‡(
	grv
) {

787 i‡(
	gschema_›
) {

789 (*
	gs2
)[0] = 
rv
;

790 
	grv
 = 
s2
->
≥rf‹m
(
this
);

793  
	grv
;

797 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
U«ry_Ex¥essi⁄
* 
u
)

799 
Ex¥essi⁄
* 
›î™d
 = 
u
->›î™d()->
≥rf‹m
(
this
);

800 i‡(
	gu
->
ty≥
(Ë=
U«ry_Ex¥essi⁄
::
NOT
) {

801 
Boﬁón
* 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Boﬁón, 
u
->
p°©e
(), (
boﬁ
)*
›î™d
);

802 
	gªsu…
->
vÆue
(!
ªsu…
->value());

803  
	gªsu…
;

805 i‡(
	g›î™d
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NUMBER
) {

806 
Numbî
* 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Numbî, *
°©ic_ˇ°
<Numbî*>(
›î™d
));

807 
	gªsu…
->
vÆue
(
u
->
ty≥
(Ë=
U«ry_Ex¥essi⁄
::
MINUS


808 ? -
ªsu…
->
vÆue
()

809 : 
ªsu…
->
vÆue
());

810  
	gªsu…
;

815 i‡(
	g›î™d
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
 && 
dy«mic_ˇ°
<
V¨übÀ
*>(
u
->
›î™d
())) {

816 
u
->
›î™d
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, u->
p°©e
(), ""));

818 
	gu
->
›î™d
(operand);

819 
Såög_C⁄°™t
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

820 
u
->
p°©e
(),

821 
u
->
ö•e˘
());

822  
	gªsu…
;

825  
	gu
;

828 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Fun˘i⁄_CÆl
* 
c
)

830 i‡(
backåa˚
()->
∑ª¡
 !
NULL
 && backåa˚()->
dïth
(Ë> 
C⁄°™ts
::
MaxCÆlSèck
) {

832 
°d
::
o°rög°ªam
 
°m
;

833 
	g°m
 << "Sèck dïthÉx˚eded max o‡" << 
	gC⁄°™ts
::
MaxCÆlSèck
;

834 
îr‹
(
°m
.
°r
(), 
c
->
p°©e
(), 
backåa˚
());

836 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
c
->name()));

837 
	g°d
::
°rög
 
fuŒ_«me
(
«me
 + "[f]");

838 
Argumíts
* 
	g¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, *
c
->
¨gumíts
());

842 i‡(
	g«me
 ="ˇŒ" && 
¨gs
->
Àngth
() > 0) {

843 
Ex¥essi⁄
* 
ªdúe˘
 = 
¨gs
->
©
(0)->
≥rf‹m
(
this
);

844 
	g¨gs
->
îa£
(
¨gs
->
begö
());

845 
Fun˘i⁄_CÆl
* 
	glô
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Function_Call,

846 
c
->
p°©e
(),

847 
unquŸe
(
ªdúe˘
->
to_°rög
()),

848 
¨gs
);

849  
›î©‹
()(
	glô
);

852 
Env
* 
	gív
 = 
ívú⁄mít
();

853 i‡(!
	gív
->
has
(
fuŒ_«me
)) {

854 i‡(!
	gív
->
has
("*[f]")) {

856 
Argumít
* 
	g¨g
 : *
¨gs
) {

857 i‡(
Bö¨y_Ex¥essi⁄
* 
b
 = 
dy«mic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
¨g
->
vÆue
())) {

858 
b
->
ª£t_whôe•a˚
();

859 
	g¨g
->
is_dñayed
(
b
->
ˇn_dñay
());

862 
	g¨gs
 = 
°©ic_ˇ°
<
Argumíts
*>(
¨gs
->
≥rf‹m
(
this
));

863 
Fun˘i⁄_CÆl
* 
	glô
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Function_Call,

864 
c
->
p°©e
(),

865 
c
->
«me
(),

866 
¨gs
);

867 i‡(
	g¨gs
->
has_«med_¨gumíts
()) {

868 
îr‹
("Fun˘i⁄ " + 
c
->
«me
(Ë+ " d€¢'àsuµ‹àkeyw‹dárgumíts", c->
p°©e
());

870 
Såög_QuŸed
* 
	g°r
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, String_Quoted,

871 
c
->
p°©e
(),

872 
lô
->
to_°rög
(
˘x
.
c_›ti⁄s
));

873 
	g°r
->
is_öãΩﬁ™t
(
c
->is_interpolant());

874  
	g°r
;

877 
	gfuŒ_«me
 = "*[f]";

881 i‡(
	gfuŒ_«me
 != "if[f]") {

882 
¨gs
 = 
°©ic_ˇ°
<
Argumíts
*>◊rgs->
≥rf‹m
(
this
));

885 
Deföôi⁄
* 
	gdef
 = 
°©ic_ˇ°
<Deföôi⁄*>((*
ív
)[
fuŒ_«me
]);

887 i‡(
	gdef
->
is_ovîlﬂd_°ub
()) {

888 
	g°d
::
°rög°ªam
 
ss
;

889 
	gss
 << 
	gfuŒ_«me


890 << 
	g¨gs
->
Àngth
();

891 
	gfuŒ_«me
 = 
ss
.
°r
();

892 
	g°d
::
°rög
 
ªsﬁved_«me
(
fuŒ_«me
);

893 i‡(!
	gív
->
has
(
ªsﬁved_«me
)Ë
îr‹
("ovîlﬂded fun˘i⁄ `" + 
°d
::
°rög
(
c
->
«me
()Ë+ "` giví wr⁄gÇumbî o‡¨gumíts", c->
p°©e
());

894 
	gdef
 = 
°©ic_ˇ°
<
Deföôi⁄
*>((*
ív
)[
ªsﬁved_«me
]);

897 
Ex¥essi⁄
* 
	gªsu…
 = 
c
;

898 
Block
* 
	gbody
 = 
def
->
block
();

899 
N©ive_Fun˘i⁄
 
	gfunc
 = 
def
->
«tive_fun˘i⁄
();

900 
Sass_Fun˘i⁄_E¡ry
 
	gc_fun˘i⁄
 = 
def
->
c_fun˘i⁄
();

902 
P¨amëîs
* 
	g∑øms
 = 
def
->
∑ømëîs
();

903 
Env
 
‚_ív
(
def
->
ívú⁄mít
());

904 
	gexp
.
	gív_°ack
.
push_back
(&
‚_ív
);

906 i‡(
	gfunc
 || 
	gbody
) {

907 
böd
(
°d
::
°rög
("Fun˘i⁄"), 
c
->
«me
(), 
∑øms
, 
¨gs
, &
˘x
, &
‚_ív
, 
this
);

908 
Backåa˚
 
hîe
(
backåa˚
(), 
c
->
p°©e
(), ", i¿fun˘i⁄ `" + c->
«me
() + "`");

909 
	gexp
.
	gbackåa˚_°ack
.
push_back
(&
hîe
);

911 i‡(
	gbody
 && !
	gPªÀxî
::
ª_•ecül_fun
(
c
->
«me
().
c_°r
())Ë{ 
ªsu…
 = 
body
->
≥rf‹m
(
this
); }

912 i‡(
	gfunc
Ë{ 
	gªsu…
 = 
func
(
‚_ív
, *
ív
, 
˘x
, 
def
->
sig«tuª
(), 
c
->
p°©e
(), 
backåa˚
()); }

913 i‡(!
	gªsu…
Ë
îr‹
(
°d
::
°rög
("Fun˘i⁄ "Ë+ 
c
->
«me
(Ë+ " didÇŸÑëu∫á vÆue", c->
p°©e
());

914 
	gexp
.
	gbackåa˚_°ack
.
p›_back
();

919 i‡(
	gc_fun˘i⁄
) {

920 
Sass_Fun˘i⁄_Fn
 
	gc_func
 = 
ßss_fun˘i⁄_gë_fun˘i⁄
(
c_fun˘i⁄
);

921 i‡(
	gfuŒ_«me
 == "*[f]") {

922 
Såög_QuŸed
 *
°r
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
c
->
p°©e
(), c->
«me
());

923 
Argumíts
* 
	g√w_¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
c
->
p°©e
());

924 *
	g√w_¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
c
->
p°©e
(), 
°r
);

925 *
	g√w_¨gs
 +
¨gs
;

926 
	g¨gs
 = 
√w_¨gs
;

930 
	g°d
::
°rög
 
ff
(
c
->
«me
());

931 
böd
(
°d
::
°rög
("Fun˘i⁄"), 
c
->
«me
(), 
∑øms
, 
¨gs
, &
˘x
, &
‚_ív
, 
this
);

933 
Backåa˚
 
hîe
(
backåa˚
(), 
c
->
p°©e
(), ", i¿fun˘i⁄ `" + c->
«me
() + "`");

934 
	gexp
.
	gbackåa˚_°ack
.
push_back
(&
hîe
);

936 
To_C
 
	gto_c
;

937 
Sass_VÆue
* 
	gc_¨gs
 = 
ßss_make_li°
(
∑øms
[0].
Àngth
(), 
SASS_COMMA
);

938 
size_t
 
	gi
 = 0; i < 
	g∑øms
[0].
Àngth
(); i++) {

939 
	g°d
::
°rög
 
key
 = 
∑øms
[0][
i
]->
«me
();

940 
AST_Node
* 
	gnode
 = 
‚_ív
.
gë_loˇl
(
key
);

941 
Ex¥essi⁄
* 
	g¨g
 = 
°©ic_ˇ°
<Ex¥essi⁄*>(
node
);

942 
ßss_li°_£t_vÆue
(
c_¨gs
, 
i
, 
¨g
->
≥rf‹m
(&
to_c
));

944 
Sass_VÆue
* 
	gc_vÆ
 = 
c_func
(
c_¨gs
, 
c_fun˘i⁄
, 
˘x
.
c_compûî
);

945 i‡(
ßss_vÆue_gë_èg
(
c_vÆ
Ë=
SASS_ERROR
) {

946 
îr‹
("îr‹ i¿C fun˘i⁄ " + 
c
->
«me
(Ë+ ": " + 
ßss_îr‹_gë_mesßge
(
c_vÆ
), c->
p°©e
(), 
backåa˚
());

947 } i‡(
ßss_vÆue_gë_èg
(
c_vÆ
Ë=
SASS_WARNING
) {

948 
îr‹
("w¨nög i¿C fun˘i⁄ " + 
c
->
«me
(Ë+ ": " + 
ßss_w¨nög_gë_mesßge
(
c_vÆ
), c->
p°©e
(), 
backåa˚
());

950 
	gªsu…
 = 
cvÆ_to_a°node
(
˘x
.
mem
, 
c_vÆ
, ctx, 
backåa˚
(), 
c
->
p°©e
());

952 
	gexp
.
	gbackåa˚_°ack
.
p›_back
();

953 
ßss_dñëe_vÆue
(
c_¨gs
);

954 i‡(
	gc_vÆ
 !
c_¨gs
)

955 
ßss_dñëe_vÆue
(
c_vÆ
);

960 i‡(
	gªsu…
->
p°©e
().
	gfûe
 =
°d
::
°rög
::
≈os
)

961 
ªsu…
->
p°©e
(
c
->pstate());

963 
	gªsu…
->
is_dñayed
(
ªsu…
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
);

964 i‡(!
	gªsu…
->
is_dñayed
()Ëªsu… = 
ªsu…
->
≥rf‹m
(
this
);

965 
	gªsu…
->
is_öãΩﬁ™t
(
c
->is_interpolant());

966 
	gexp
.
	gív_°ack
.
p›_back
();

967  
	gªsu…
;

970 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Fun˘i⁄_CÆl_Schema
* 
s
)

972 
Ex¥essi⁄
* 
evÆu©ed_«me
 = 
s
->
«me
()->
≥rf‹m
(
this
);

973 
Ex¥essi⁄
* 
	gevÆu©ed_¨gs
 = 
s
->
¨gumíts
()->
≥rf‹m
(
this
);

974 
Såög_Schema
* 
	gss
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
s
->
p°©e
(), 2);

975 (*
	gss
Ë<< 
	gevÆu©ed_«me
 << 
	gevÆu©ed_¨gs
;

976  
	gss
->
≥rf‹m
(
this
);

979 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
V¨übÀ
* 
v
)

981 
°d
::
°rög
 
«me
(
v
->name());

982 
Ex¥essi⁄
* 
	gvÆue
 = 0;

983 
Env
* 
	gív
 = 
ívú⁄mít
();

984 i‡(
	gív
->
has
(
«me
)Ë
	gvÆue
 = 
°©ic_ˇ°
<
Ex¥essi⁄
*>((*
ív
)[name]);

985 
îr‹
("Undeföed v¨übÀ: \"" + 
v
->
«me
(Ë+ "\".", v->
p°©e
());

986 i‡(
ty≥id
(*
vÆue
Ë=ty≥id(
Argumít
)ËvÆuê
°©ic_ˇ°
<Argument*>(value)->value();

989 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NUMBER
) {

990 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, *
°©ic_ˇ°
<Number*>(value));

991 
	g°©ic_ˇ°
<
	gNumbî
*>(
	gvÆue
)->
zîo
(
åue
);

993 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
) {

994 i‡◊utÿ
°r
 = 
dy«mic_ˇ°
<
Såög_QuŸed
*>(
vÆue
)) {

995 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, *
°r
);

996 } i‡◊utÿ
	g°r
 = 
dy«mic_ˇ°
<
Såög_C⁄°™t
*>(
vÆue
)) {

997 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
°r
->
p°©e
(), str->value());

1000 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
) {

1001 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, *
°©ic_ˇ°
<List*>(value));

1003 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
) {

1004 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
M≠
, *
°©ic_ˇ°
<Map*>(value));

1006 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
BOOLEAN
) {

1007 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, *
°©ic_ˇ°
<Boolean*>(value));

1009 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
COLOR
) {

1010 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
, *
°©ic_ˇ°
<Color*>(value));

1012 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

1013 
vÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, vÆue->
p°©e
());

1015 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
SELECTOR
) {

1016 
vÆue
 = vÆue->
≥rf‹m
(
this
);

1019 
	gvÆue
->
is_öãΩﬁ™t
(
v
->is_interpolant());

1020 
	gvÆue
->
is_ex∑nded
(
Ál£
);

1021  
	gvÆue
->
≥rf‹m
(
this
);

1024 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
TextuÆ
* 
t
)

1026 
usög
 
PªÀxî
::
numbî
;

1027 
Ex¥essi⁄
* 
	gªsu…
 = 0;

1028 
size_t
 
	gL
 = 
t
->
vÆue
().
Àngth
();

1029 
boﬁ
 
	gzîo
 = !–(
L
 > 0 && 
t
->
vÆue
().
sub°r
(0, 1) == ".") ||

1030 (
L
 > 1 && 
t
->
vÆue
().
sub°r
(0, 2) == "0.") ||

1031 (
L
 > 1 && 
t
->
vÆue
().
sub°r
(0, 2) == "-.") ||

1032 (
L
 > 2 && 
t
->
vÆue
().
sub°r
(0, 3) == "-0.")

1035 c⁄° 
	g°d
::
°rög
& 
ãxt
 = 
t
->
vÆue
();

1036 
size_t
 
	gnum_pos
 = 
ãxt
.
föd_fú°_nŸ_of
(" \n\r\t");

1037 i‡(
	gnum_pos
 =
°d
::
°rög
::
≈os
Ë
num_pos
 = 
ãxt
.
Àngth
();

1038 
size_t
 
	gunô_pos
 = 
ãxt
.
föd_fú°_nŸ_of
("-+0123456789.", 
num_pos
);

1039 i‡(
	gunô_pos
 =
°d
::
°rög
::
≈os
Ë
unô_pos
 = 
ãxt
.
Àngth
();

1040 c⁄° 
	g°d
::
°rög
& 
num
 = 
ãxt
.
sub°r
(
num_pos
, 
unô_pos
 -Çum_pos);

1042 
	gt
->
ty≥
())

1044 
	gTextuÆ
::
NUMBER
:

1045 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
,

1046 
t
->
p°©e
(),

1047 
ßss_©of
(
num
.
c_°r
()),

1049 
zîo
);

1051 
	gTextuÆ
::
PERCENTAGE
:

1052 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
,

1053 
t
->
p°©e
(),

1054 
ßss_©of
(
num
.
c_°r
()),

1056 
åue
);

1058 
	gTextuÆ
::
DIMENSION
:

1059 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
,

1060 
t
->
p°©e
(),

1061 
ßss_©of
(
num
.
c_°r
()),

1062 
Tokí
(
numbî
(
ãxt
.
c_°r
())),

1063 
zîo
);

1065 
	gTextuÆ
::
HEX
: {

1066 i‡(
t
->
vÆue
().
sub°r
(0, 1) != "#") {

1067 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
t
->
p°©e
(),Å->
vÆue
());

1070 
	g°d
::
°rög
 
hext
(
t
->
vÆue
().
sub°r
(1));

1071 i‡(
	ghext
.
Àngth
() == 6) {

1072 
°d
::
°rög
 
r
(
hext
.
sub°r
(0,2));

1073 
	g°d
::
°rög
 
g
(
hext
.
sub°r
(2,2));

1074 
	g°d
::
°rög
 
b
(
hext
.
sub°r
(4,2));

1075 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

1076 
t
->
p°©e
(),

1077 
°©ic_ˇ°
<>(
°πﬁ
(
r
.
c_°r
(), 
NULL
, 16)),

1078 
°©ic_ˇ°
<>(
°πﬁ
(
g
.
c_°r
(), 
NULL
, 16)),

1079 
°©ic_ˇ°
<>(
°πﬁ
(
b
.
c_°r
(), 
NULL
, 16)),

1081 
t
->
vÆue
());

1084 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

1085 
t
->
p°©e
(),

1086 
°©ic_ˇ°
<>(
°πﬁ
(
°d
::
°rög
(2,
hext
[0]).
c_°r
(), 
NULL
, 16)),

1087 
°©ic_ˇ°
<>(
°πﬁ
(
°d
::
°rög
(2,
hext
[1]).
c_°r
(), 
NULL
, 16)),

1088 
°©ic_ˇ°
<>(
°πﬁ
(
°d
::
°rög
(2,
hext
[2]).
c_°r
(), 
NULL
, 16)),

1090 
t
->
vÆue
());

1094 
	gªsu…
->
is_öãΩﬁ™t
(
t
->is_interpolant());

1095  
	gªsu…
;

1098 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Numbî
* 
n
)

1100  
n
;

1103 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Boﬁón
* 
b
)

1105  
b
;

1108 
	gEvÆ
::
öãΩﬁ©i⁄
(
C⁄ãxt
& 
˘x
, 
°d
::
°rög
& 
ªs
, 
Ex¥essi⁄
* 
ex
, 
boﬁ
 
öto_quŸes
, boﬁ 
was_ô∂
) {

1110 
boﬁ
 
	g√eds_˛osög_bø˚
 = 
Ál£
;

1112 i‡(
Argumíts
* 
	g¨gs
 = 
dy«mic_ˇ°
<Argumíts*>(
ex
)) {

1113 
Li°
* 
Œ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
¨gs
->
p°©e
(), 0, 
SASS_COMMA
);

1114 autÿ
	g¨g
 : *
¨gs
) {

1115 *
Œ
 << 
¨g
->
vÆue
();

1117 
	gŒ
->
is_öãΩﬁ™t
(
¨gs
->is_interpolant());

1118 
	g√eds_˛osög_bø˚
 = 
åue
;

1119 
	gªs
 += "(";

1120 
	gex
 = 
Œ
;

1122 i‡(
Numbî
* 
	gƒ
 = 
dy«mic_ˇ°
<Numbî*>(
ex
)) {

1123 i‡(!
ƒ
->
is_vÆid_css_unô
()) {

1124 
throw
 
Ex˚±i⁄
::
InvÆidVÆue
(*
ƒ
);

1127 i‡(
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>(
ex
)) {

1128 
ex
 = 
¨g
->
vÆue
();

1130 i‡(
Såög_QuŸed
* 
	gsq
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
ex
)) {

1131 i‡(
was_ô∂
) {

1132 
boﬁ
 
was_öãΩﬁ™t
 = 
ex
->
is_öãΩﬁ™t
();

1133 
	gex
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
sq
->
p°©e
(), sq->
vÆue
());

1134 
	gex
->
is_öãΩﬁ™t
(
was_öãΩﬁ™t
);

1138 i‡(
	gdy«mic_ˇ°
<
	gNuŒ
*>(
	gex
)) { ; }

1141 i‡(
	gdy«mic_ˇ°
<
	gP¨ít_Sñe˘‹
*>(
	gex
)) {

1143 
	gex
 = 
ex
->
≥rf‹m
(
this
);

1146 i‡(
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ex
)) {

1147 
Li°
* 
Œ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
l
->
p°©e
(), 0,Ü->
£∑øt‹
());

1150 autÿ
	gôem
 : *
l
) {

1151 
ôem
->
is_öãΩﬁ™t
(
l
->is_interpolant());

1152 
	g°d
::
°rög
 
æ
(""); 
öãΩﬁ©i⁄
(
˘x
,Ñl, 
ôem
, 
öto_quŸes
, 
l
->
is_öãΩﬁ™t
());

1153 
boﬁ
 
	gis_nuŒ
 = 
dy«mic_ˇ°
<
NuŒ
*>(
ôem
) != 0;

1154 i‡(!
	gis_nuŒ
Ë*
	gŒ
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
ôem
->
p°©e
(), 
æ
);

1156 
	gªs
 +(
Œ
->
to_°rög
(
˘x
.
c_›ti⁄s
));

1157 
	gŒ
->
is_öãΩﬁ™t
(
l
->is_interpolant());

1170 i‡(
	göto_quŸes
 && 
	gex
->
is_öãΩﬁ™t
()) {

1171 
	gªs
 +
evacu©e_esˇ≥s
(
ex
 ?Éx->
to_°rög
(
˘x
.
c_›ti⁄s
) : "");

1173 
	gªs
 +
ex
 ?Éx->
to_°rög
(
˘x
.
c_›ti⁄s
) : "";

1177 i‡(
	g√eds_˛osög_bø˚
Ë
	gªs
 += ")";

1181 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Såög_Schema
* 
s
)

1183 
size_t
 
L
 = 
s
->
Àngth
();

1184 
boﬁ
 
	göto_quŸes
 = 
Ál£
;

1185 i‡(
	gL
 > 1) {

1186 i‡(!
	gdy«mic_ˇ°
<
	gSåög_QuŸed
*>((*
	gs
)[0]Ë&& !dy«mic_ˇ°<Såög_QuŸed*>((*s)[
L
 - 1])) {

1187 i‡(
Såög_C⁄°™t
* 
	gl
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>((*
s
)[0])) {

1188 i‡(
Såög_C⁄°™t
* 
r
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>((*
s
)[
L
 - 1])) {

1189 i‡(
r
->
vÆue
().
size
() > 0) {

1190 i‡(
l
->
vÆue
()[0] ='"' && 
r
->vÆue()[r->vÆue().
size
(Ë- 1] ='"'Ë
öto_quŸes
 = 
åue
;

1191 i‡(
	gl
->
vÆue
()[0] ='\'' && 
r
->vÆue()[r->vÆue().
size
(Ë- 1] ='\''Ë
öto_quŸes
 = 
åue
;

1197 
boﬁ
 
	gwas_quŸed
 = 
Ál£
;

1198 
boﬁ
 
	gwas_öãΩﬁ™t
 = 
Ál£
;

1199 
	g°d
::
°rög
 
ªs
("");

1200 
size_t
 
	gi
 = 0; i < 
	gL
; ++i) {

1201 
boﬁ
 
	gis_quŸed
 = 
dy«mic_ˇ°
<
Såög_QuŸed
*>((*
s
)[
i
]Ë!
NULL
;

1202 i‡(
	gwas_quŸed
 && !(*
	gs
)[
i
]->
is_öãΩﬁ™t
(Ë&& !
	gwas_öãΩﬁ™t
Ë{ 
	gªs
 += " "; }

1203 i‡(
	gi
 > 0 && 
	gis_quŸed
 && !(*
	gs
)[
i
]->
is_öãΩﬁ™t
(Ë&& !
	gwas_öãΩﬁ™t
Ë{ 
	gªs
 += " "; }

1204 
Ex¥essi⁄
* 
	gex
 = (*
s
)[
i
]->
is_dñayed
(Ë? (*s)[i] : (*s)[i]->
≥rf‹m
(
this
);

1205 
öãΩﬁ©i⁄
(
˘x
, 
ªs
, 
ex
, 
öto_quŸes
,Éx->
is_öãΩﬁ™t
());

1206 
	gwas_quŸed
 = 
dy«mic_ˇ°
<
Såög_QuŸed
*>((*
s
)[
i
]Ë!
NULL
;

1207 
	gwas_öãΩﬁ™t
 = (*
s
)[
i
]->
is_öãΩﬁ™t
();

1210 i‡(!
	gs
->
is_öãΩﬁ™t
()) {

1211 i‡(
	gs
->
Àngth
(Ë> 1 && 
	gªs
 =""Ë 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
s
->
p°©e
());

1212  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
s
->
p°©e
(), 
ªs
);

1214 
Såög_QuŸed
* 
	g°r
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
s
->
p°©e
(), 
ªs
);

1217 i‡(
	g°r
->
quŸe_m¨k
()) str->quote_mark('*');

1218 i‡(!
	gis_ö_commít
Ë
	g°r
->
vÆue
(
°rög_to_ouçut
(
°r
->value()));

1219 
	g°r
->
is_öãΩﬁ™t
(
s
->is_interpolant());

1220  
	g°r
;

1224 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Såög_C⁄°™t
* 
s
)

1226 i‡(!
s
->
is_dñayed
(Ë&& 
«me_to_cﬁ‹
(s->
vÆue
())) {

1227 
Cﬁ‹
* 
c
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Cﬁ‹, *
«me_to_cﬁ‹
(
s
->
vÆue
()));

1228 
	gc
->
p°©e
(
s
->pstate());

1229 
	gc
->
di•
(
s
->
vÆue
());

1230  
	gc
;

1232  
	gs
;

1235 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Såög_QuŸed
* 
s
)

1237 
Såög_QuŸed
* 
°r
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
s
->
p°©e
(), "");

1238 
	g°r
->
vÆue
(
s
->value());

1239 
	g°r
->
quŸe_m¨k
(
s
->quote_mark());

1240 
	g°r
->
is_öãΩﬁ™t
(
s
->is_interpolant());

1241  
	g°r
;

1244 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Suµ‹ts_O≥øt‹
* 
c
)

1246 
Ex¥essi⁄
* 
À·
 = 
c
->À·()->
≥rf‹m
(
this
);

1247 
Ex¥essi⁄
* 
	gright
 = 
c
->
right
()->
≥rf‹m
(
this
);

1248 
Suµ‹ts_O≥øt‹
* 
	gcc
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Operator,

1249 
c
->
p°©e
(),

1250 
°©ic_ˇ°
<
Suµ‹ts_C⁄dôi⁄
*>(
À·
),

1251 
°©ic_ˇ°
<
Suµ‹ts_C⁄dôi⁄
*>(
right
),

1252 
c
->
›î™d
());

1253  
	gcc
;

1256 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Suµ‹ts_Neg©i⁄
* 
c
)

1258 
Ex¥essi⁄
* 
c⁄dôi⁄
 = 
c
->c⁄dôi⁄()->
≥rf‹m
(
this
);

1259 
Suµ‹ts_Neg©i⁄
* 
	gcc
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Negation,

1260 
c
->
p°©e
(),

1261 
°©ic_ˇ°
<
Suµ‹ts_C⁄dôi⁄
*>(
c⁄dôi⁄
));

1262  
	gcc
;

1265 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Suµ‹ts_De˛¨©i⁄
* 
c
)

1267 
Ex¥essi⁄
* 
„©uª
 = 
c
->„©uª()->
≥rf‹m
(
this
);

1268 
Ex¥essi⁄
* 
	gvÆue
 = 
c
->
vÆue
()->
≥rf‹m
(
this
);

1269 
Suµ‹ts_De˛¨©i⁄
* 
	gcc
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Declaration,

1270 
c
->
p°©e
(),

1271 
„©uª
,

1272 
vÆue
);

1273  
	gcc
;

1276 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Suµ‹ts_I¡îpﬁ©i⁄
* 
c
)

1278 
Ex¥essi⁄
* 
vÆue
 = 
c
->vÆue()->
≥rf‹m
(
this
);

1279 
Suµ‹ts_I¡îpﬁ©i⁄
* 
	gcc
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Interpolation,

1280 
c
->
p°©e
(),

1281 
vÆue
);

1282  
	gcc
;

1285 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
At_RoŸ_Quîy
* 
e
)

1287 
Ex¥essi⁄
* 
„©uª
 = 
e
->feature();

1288 
	g„©uª
 = (
„©uª
 ? fótuª->
≥rf‹m
(
this
) : 0);

1289 
Ex¥essi⁄
* 
	gvÆue
 = 
e
->
vÆue
();

1290 
	gvÆue
 = (
vÆue
 ? vÆue->
≥rf‹m
(
this
) : 0);

1291 
Ex¥essi⁄
* 
	gì
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
At_RoŸ_Quîy
,

1292 
e
->
p°©e
(),

1293 
°©ic_ˇ°
<
Såög
*>(
„©uª
),

1294 
vÆue
);

1295  
	gì
;

1298 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Medü_Quîy
* 
q
)

1300 
Såög
* 
t
 = 
q
->
medü_ty≥
();

1301 
	gt
 = 
°©ic_ˇ°
<
Såög
*>(
t
 ?Å->
≥rf‹m
(
this
) : 0);

1302 
Medü_Quîy
* 
	gqq
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Media_Query,

1303 
q
->
p°©e
(),

1304 
t
,

1305 
q
->
Àngth
(),

1306 
q
->
is_√g©ed
(),

1307 
q
->
is_ª°ri˘ed
());

1308 
size_t
 
	gi
 = 0, 
	gL
 = 
q
->
Àngth
(); i < L; ++i) {

1309 *
	gqq
 << 
	g°©ic_ˇ°
<
	gMedü_Quîy_Ex¥essi⁄
*>((*
	gq
)[
i
]->
≥rf‹m
(
this
));

1311  
	gqq
;

1314 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Medü_Quîy_Ex¥essi⁄
* 
e
)

1316 
Ex¥essi⁄
* 
„©uª
 = 
e
->feature();

1317 
	g„©uª
 = (
„©uª
 ? fótuª->
≥rf‹m
(
this
) : 0);

1318 i‡(
	g„©uª
 && 
	gdy«mic_ˇ°
<
	gSåög_QuŸed
*>(feature)) {

1319 
	g„©uª
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

1320 
„©uª
->
p°©e
(),

1321 
dy«mic_ˇ°
<
Såög_QuŸed
*>(
„©uª
)->
vÆue
());

1323 
Ex¥essi⁄
* 
	gvÆue
 = 
e
->
vÆue
();

1324 
	gvÆue
 = (
vÆue
 ? vÆue->
≥rf‹m
(
this
) : 0);

1325 i‡(
	gvÆue
 && 
	gdy«mic_ˇ°
<
	gSåög_QuŸed
*>(value)) {

1327 
	gvÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

1328 
vÆue
->
p°©e
(),

1329 
dy«mic_ˇ°
<
Såög_QuŸed
*>(
vÆue
)->value());

1331  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Medü_Quîy_Ex¥essi⁄
,

1332 
e
->
p°©e
(),

1333 
„©uª
,

1334 
vÆue
,

1335 
e
->
is_öãΩﬁ©ed
());

1338 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
NuŒ
* 
n
)

1340  
n
;

1343 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Argumít
* 
a
)

1345 
Ex¥essi⁄
* 
vÆ
 = 
a
->
vÆue
();

1347 
	gvÆ
->
is_dñayed
(
a
->is_delayed());

1348 
	gvÆ
 = 
vÆ
->
≥rf‹m
(
this
);

1349 
	gvÆ
->
is_dñayed
(
Ál£
);

1351 
boﬁ
 
	gis_ª°_¨gumít
 = 
a
->
is_ª°_¨gumít
();

1352 
boﬁ
 
	gis_keyw‹d_¨gumít
 = 
a
->
is_keyw‹d_¨gumít
();

1354 i‡(
	ga
->
is_ª°_¨gumít
()) {

1355 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
) {

1356 
is_ª°_¨gumít
 = 
Ál£
;

1357 
	gis_keyw‹d_¨gumít
 = 
åue
;

1359 if(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
LIST
) {

1360 
Li°
* 
wøµî
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, List,

1361 
vÆ
->
p°©e
(),

1363 
SASS_COMMA
,

1364 
åue
);

1365 *
	gwøµî
 << 
	gvÆ
;

1366 
	gvÆ
 = 
wøµî
;

1369  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
,

1370 
a
->
p°©e
(),

1371 
vÆ
,

1372 
a
->
«me
(),

1373 
is_ª°_¨gumít
,

1374 
is_keyw‹d_¨gumít
);

1377 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Argumíts
* 
a
)

1379 
Argumíts
* 
Ø
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
a
->
p°©e
());

1380 i‡(
	ga
->
Àngth
(Ë=0Ë 
Ø
;

1381 
size_t
 
	gi
 = 0, 
	gL
 = 
a
->
Àngth
(); i < L; ++i) {

1382 
Argumít
* 
	g¨g
 = 
°©ic_ˇ°
<Argumít*>((*
a
)[
i
]->
≥rf‹m
(
this
));

1383 i‡(!(
	g¨g
->
is_ª°_¨gumít
(Ë||árg->
is_keyw‹d_¨gumít
())) {

1384 *
	gØ
 << 
	g¨g
;

1388 i‡(
	ga
->
has_ª°_¨gumít
()) {

1389 
Ex¥essi⁄
* 
	g•œt
 = 
°©ic_ˇ°
<
Argumít
*>(

1390 
a
->
gë_ª°_¨gumít
()->
≥rf‹m
(
this
)

1391 )->
vÆue
()->
≥rf‹m
(
this
);

1393 
Sass_Sï¨©‹
 
	g£∑øt‹
 = 
SASS_COMMA
;

1394 
Li°
* 
	gls
 = 
dy«mic_ˇ°
<Li°*>(
•œt
);

1395 
M≠
* 
	gms
 = 
dy«mic_ˇ°
<M≠*>(
•œt
);

1397 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, List,

1398 
•œt
->
p°©e
(),

1400 
ls
 ?Üs->
£∑øt‹
() : separator,

1401 
åue
);

1403 i‡(
	gls
 &&Üs->
is_¨gli°
()) {

1404 autÿ
	gas
 : *
ls
Ë*
¨gli°
 << 
as
;

1405 } i‡(
	gms
) {

1406 *
	gØ
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
•œt
->
p°©e
(), 
ms
, "", 
Ál£
, 
åue
);

1407 } i‡(
	gls
) {

1408 autÿ
	gas
 : *
ls
Ë*
¨gli°
 << 
as
;

1410 *
	g¨gli°
 << 
	g•œt
;

1412 i‡(
	g¨gli°
->
Àngth
()) {

1413 *
	gØ
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
•œt
->
p°©e
(), 
¨gli°
, "", 
åue
);

1417 i‡(
	ga
->
has_keyw‹d_¨gumít
()) {

1418 
Ex¥essi⁄
* 
	gkw¨g
 = 
°©ic_ˇ°
<
Argumít
*>(

1419 
a
->
gë_keyw‹d_¨gumít
()->
≥rf‹m
(
this
)

1420 )->
vÆue
()->
≥rf‹m
(
this
);

1422 *
	gØ
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
kw¨g
->
p°©e
(), kw¨g, "", 
Ál£
, 
åue
);

1425  
	gØ
;

1428 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
Commít
* 
c
)

1433 
ölöe
 
Ex¥essi⁄
* 
	gEvÆ
::
ÁŒback_im∂
(
AST_Node
* 
n
)

1435  
°©ic_ˇ°
<
Ex¥essi⁄
*>(
n
);

1440 
boﬁ
 
	gEvÆ
::
eq
(
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
)

1443  
	glhs
 && 
	grhs
 && *lh†=*
rhs
;

1446 
boﬁ
 
	gEvÆ
::
…
(
Ex¥essi⁄
* 
lhs
, Ex¥essi⁄* 
rhs
, 
°d
::
°rög
 
›
)

1448 
Numbî
* 
l
 = 
dy«mic_ˇ°
<Numbî*>(
lhs
);

1449 
Numbî
* 
	gr
 = 
dy«mic_ˇ°
<Numbî*>(
rhs
);

1451 i‡(!
	gl
 || !
	gr
Ë
throw
 
	gEx˚±i⁄
::
UndeföedO≥øti⁄
(
lhs
, 
rhs
, 
›
);

1453  *
	gl
 < *
	gr
;

1456 
VÆue
* 
	gEvÆ
::
›_numbîs
(
Mem‹y_M™agî
& 
mem
, 
Sass_OP
 
›
, c⁄° 
Numbî
& 
l
, c⁄° Numbî& 
r
, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
)

1458 
	glv
 = 
l
.
vÆue
();

1459 
	grv
 = 
r
.
vÆue
();

1460 i‡(
	g›
 =
Sass_OP
::
DIV
 && 
rv
 == 0) {

1462  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
p°©e
 ? *p°©ê: 
l
.p°©e(), 
lv
 ? "Infinity" : "NaN");

1464 i‡(
	g›
 =
Sass_OP
::
MOD
 && !
rv
) {

1466 
throw
 
Ex˚±i⁄
::
ZîoDivisi⁄Eº‹
(
l
, 
r
);

1469 
Numbî
 
tmp
(
r
);

1470 
boﬁ
 
	g°ri˘
 = 
›
 !
Sass_OP
::
MUL
 && o∞!Sass_OP::
DIV
;

1471 
	gtmp
.
n‹mÆize
(
l
.
föd_c⁄vîtibÀ_unô
(), 
°ri˘
);

1472 
	g°d
::
°rög
 
l_unô
(
l
.
unô
());

1473 
	g°d
::
°rög
 
r_unô
(
tmp
.
unô
());

1474 
Numbî
* 
	gv
 = 
SASS_MEMORY_NEW
(
mem
, Numbî, 
l
);

1475 
	gv
->
p°©e
’°©ê? *p°©ê: 
l
.pstate());

1476 i‡(
	gl_unô
.
em±y
(Ë&& (
	g›
 =
Sass_OP
::
ADD
 || 
›
 =Sass_OP::
SUB
 || o∞=Sass_OP::
MOD
)) {

1477 
v
->
numî©‹_unôs
(Ë
r
.numerator_units();

1478 
	gv
->
díomö©‹_unôs
(Ë
r
.denominator_units();

1481 i‡(
	g›
 =
Sass_OP
::
MUL
) {

1482 
v
->
vÆue
(
›s
[
›
](
lv
, 
rv
));

1483 
size_t
 
	gi
 = 0, 
	gS
 = 
r
.
numî©‹_unôs
().
size
(); i < S; ++i) {

1484 
	gv
->
numî©‹_unôs
().
push_back
(
r
.numî©‹_unôs()[
i
]);

1486 
size_t
 
	gi
 = 0, 
	gS
 = 
r
.
díomö©‹_unôs
().
size
(); i < S; ++i) {

1487 
	gv
->
díomö©‹_unôs
().
push_back
(
r
.díomö©‹_unôs()[
i
]);

1490 i‡(
	g›
 =
Sass_OP
::
DIV
) {

1491 
v
->
vÆue
(
›s
[
›
](
lv
, 
rv
));

1492 
size_t
 
	gi
 = 0, 
	gS
 = 
r
.
numî©‹_unôs
().
size
(); i < S; ++i) {

1493 
	gv
->
díomö©‹_unôs
().
push_back
(
r
.
numî©‹_unôs
()[
i
]);

1495 
size_t
 
	gi
 = 0, 
	gS
 = 
r
.
díomö©‹_unôs
().
size
(); i < S; ++i) {

1496 
	gv
->
numî©‹_unôs
().
push_back
(
r
.
díomö©‹_unôs
()[
i
]);

1499 
Numbî
 
rh
(
r
);

1500 
	gv
->
vÆue
(
›s
[
›
](
lv
, 
rh
.vÆue(Ë* 
r
.
c⁄vît_Á˘‹
(
l
)));

1502  
	gv
;

1504 
	gv
->
vÆue
(
›s
[
›
](
lv
, 
tmp
.value()));

1506 
	gv
->
n‹mÆize
();

1507  
	gv
;

1510 
VÆue
* 
	gEvÆ
::
›_numbî_cﬁ‹
(
Mem‹y_M™agî
& 
mem
, 
Sass_OP
 
›
, c⁄° 
Numbî
& 
l
, c⁄° 
Cﬁ‹
& 
rh
, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
)

1512 
Cﬁ‹
 
r
(
rh
);

1513 
	glv
 = 
l
.
vÆue
();

1514 
	g›
) {

1515 
	gSass_OP
::
ADD
:

1516 
Sass_OP
::
MUL
: {

1517  
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
,

1518 
p°©e
 ? *p°©ê: 
l
.pstate(),

1519 
›s
[
›
](
lv
, 
r
.r()),

1520 
›s
[
›
](
lv
, 
r
.
g
()),

1521 
›s
[
›
](
lv
, 
r
.
b
()),

1522 
r
.
a
());

1524 
	gSass_OP
::
SUB
:

1525 
Sass_OP
::
DIV
: {

1526 
°d
::
°rög
 
£p
(
›
 =
Sass_OP
::
SUB
 ? "-" : "/");

1527 
	g°d
::
°rög
 
cﬁ‹
(
r
.
to_°rög
(
›t
));

1528  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
,

1529 
p°©e
 ? *p°©ê: 
l
.pstate(),

1530 
l
.
to_°rög
(
›t
)

1531 + 
£p


1532 + 
cﬁ‹
);

1534 
	gSass_OP
::
MOD
: {

1535 
throw
 
Ex˚±i⁄
::
UndeföedO≥øti⁄
(&
l
, &
r
, 
ßss_›_to_«me
(
›
));

1540  
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
, 
rh
);

1543 
VÆue
* 
	gEvÆ
::
›_cﬁ‹_numbî
(
Mem‹y_M™agî
& 
mem
, 
Sass_OP
 
›
, c⁄° 
Cﬁ‹
& 
l
, c⁄° 
Numbî
& 
r
, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
)

1545 
	grv
 = 
r
.
vÆue
();

1546 i‡(
	g›
 =
Sass_OP
::
DIV
 && !
rv
) {

1548 
throw
 
Ex˚±i⁄
::
ZîoDivisi⁄Eº‹
(
l
, 
r
);

1550  
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
,

1551 
p°©e
 ? *p°©ê: 
l
.pstate(),

1552 
›s
[
›
](
l
.
r
(), 
rv
),

1553 
›s
[
›
](
l
.
g
(), 
rv
),

1554 
›s
[
›
](
l
.
b
(), 
rv
),

1555 
l
.
a
());

1558 
VÆue
* 
	gEvÆ
::
›_cﬁ‹s
(
Mem‹y_M™agî
& 
mem
, 
Sass_OP
 
›
, c⁄° 
Cﬁ‹
& 
l
, c⁄° Cﬁ‹& 
r
, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
)

1560 i‡(
	gl
.
a
(Ë!
r
.a()) {

1561 
throw
 
Ex˚±i⁄
::
AÕhaCh™√lsNŸEquÆ
(&
l
, &
r
, "+");

1563 i‡(
	g›
 =
Sass_OP
::
DIV
 && (!
r
.r(Ë|| !r.
g
(Ë||!r.
b
())) {

1565 
throw
 
Ex˚±i⁄
::
ZîoDivisi⁄Eº‹
(
l
, 
r
);

1567  
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
,

1568 
p°©e
 ? *p°©ê: 
l
.pstate(),

1569 
›s
[
›
](
l
.
r
(),Ñ.r()),

1570 
›s
[
›
](
l
.
g
(), 
r
.g()),

1571 
›s
[
›
](
l
.
b
(), 
r
.b()),

1572 
l
.
a
());

1575 
VÆue
* 
	gEvÆ
::
›_°rögs
(
Mem‹y_M™agî
& 
mem
, 
Sass
::
O≥ønd
 
›î™d
, VÆue& 
lhs
, VÆue& 
rhs
, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
, 
boﬁ
 
dñayed
)

1577 
	gEx¥essi⁄
::
C⁄¸ëe_Ty≥
 
…y≥
 = 
lhs
.
c⁄¸ëe_ty≥
();

1578 
	gEx¥essi⁄
::
C⁄¸ëe_Ty≥
 
πy≥
 = 
rhs
.
c⁄¸ëe_ty≥
();

1579 
Sass_OP
 
	g›
 = 
›î™d
.operand;

1581 
Såög_QuŸed
* 
	glq°r
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(&
lhs
);

1582 
Såög_QuŸed
* 
	grq°r
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(&
rhs
);

1584 
	g°d
::
°rög
 
l°r
(
lq°r
 ?Üq°r->
vÆue
(Ë: 
lhs
.
to_°rög
(
›t
));

1585 
	g°d
::
°rög
 
r°r
(
rq°r
 ?Ñq°r->
vÆue
(Ë: 
rhs
.
to_°rög
(
›t
));

1587 i‡(
	g…y≥
 =
Ex¥essi⁄
::
NULL_VAL
Ë
throw
 
Ex˚±i⁄
::
InvÆidNuŒO≥øti⁄
(&
lhs
, &
rhs
, 
ßss_›_to_«me
(
›
));

1588 i‡(
	gπy≥
 =
Ex¥essi⁄
::
NULL_VAL
Ë
throw
 
Ex˚±i⁄
::
InvÆidNuŒO≥øti⁄
(&
lhs
, &
rhs
, 
ßss_›_to_«me
(
›
));

1589 i‡(
	g›
 =
Sass_OP
::
MOD
Ë
throw
 
Ex˚±i⁄
::
UndeföedO≥øti⁄
(&
lhs
, &
rhs
, 
ßss_›_to_«me
(
›
));

1590 i‡(
	g›
 =
Sass_OP
::
MUL
Ë
throw
 
Ex˚±i⁄
::
UndeföedO≥øti⁄
(&
lhs
, &
rhs
, 
ßss_›_to_«me
(
›
));

1591 
	g°d
::
°rög
 
£p
;

1592 
	g›
) {

1593 
	gSass_OP
::
SUB
: 
£p
 = "-"; ;

1594 
	gSass_OP
::
DIV
: 
£p
 = "/"; ;

1595 
	gSass_OP
::
MUL
: 
£p
 = "*"; ;

1596 
	gSass_OP
::
MOD
: 
£p
 = "%"; ;

1597 
	gSass_OP
::
EQ
: 
£p
 = "=="; ;

1598 
	gSass_OP
::
NEQ
: 
£p
 = "!="; ;

1599 
	gSass_OP
::
LT
: 
£p
 = "<"; ;

1600 
	gSass_OP
::
GT
: 
£p
 = ">"; ;

1601 
	gSass_OP
::
LTE
: 
£p
 = "<="; ;

1602 
	gSass_OP
::
GTE
: 
£p
 = ">="; ;

1606 i‡–(
	g£p
 == "")

1609 
quŸe_m¨k
 = 0;

1610 
	g°d
::
°rög
 
unq
(
unquŸe
(
l°r
 + 
£p
 + 
r°r
, &
quŸe_m¨k
, 
åue
));

1611 i‡(
	gquŸe_m¨k
 && quote_mark != '*') {

1612  
SASS_MEMORY_NEW
(
mem
, 
Såög_C⁄°™t
, 
lhs
.
p°©e
(), 
quŸe_m¨k
 + 
unq
 + quote_mark);

1614  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
lhs
.
p°©e
(), 
l°r
 + 
£p
 + 
r°r
);

1617 i‡(
	g£p
 !"" && !
dñayed
) {

1618 i‡(
›î™d
.
ws_bef‹e
Ë
£p
 = " " + sep;

1619 i‡(
	g›î™d
.
	gws_a·î
Ë
	g£p
 = 
£p
 + " ";

1622 i‡(
	g›
 =
Sass_OP
::
SUB
 || 
›
 =Sass_OP::
DIV
) {

1623 i‡(
lq°r
 &&Üq°r->
quŸe_m¨k
()Ë
l°r
 = 
quŸe
(lstr);

1624 i‡(
	grq°r
 &&Ñq°r->
quŸe_m¨k
()Ë
	gr°r
 = 
quŸe
(
r°r
);

1625  
SASS_MEMORY_NEW
(
mem
, 
Såög_C⁄°™t
, 
lhs
.
p°©e
(), 
l°r
 + 
£p
 + 
r°r
);

1628  
SASS_MEMORY_NEW
(
mem
, 
Såög_C⁄°™t
, 
lhs
.
p°©e
(), (
l°r
Ë+ 
£p
 + (
r°r
));

1631 
Ex¥essi⁄
* 
cvÆ_to_a°node
(
Mem‹y_M™agî
& 
mem
, 
Sass_VÆue
* 
v
, 
C⁄ãxt
& 
˘x
, 
Backåa˚
* 
backåa˚
, 
P¨£rSèã
 
p°©e
)

1633 
usög
 
	g°d
::
°æí
;

1634 
usög
 
	g°d
::
°r˝y
;

1635 
Ex¥essi⁄
* 
	ge
 = 0;

1636 
ßss_vÆue_gë_èg
(
v
)) {

1637 
	gSASS_BOOLEAN
: {

1638 
e
 = 
SASS_MEMORY_NEW
(
mem
, 
Boﬁón
, 
p°©e
, !!
ßss_boﬁón_gë_vÆue
(
v
));

1640 
	gSASS_NUMBER
: {

1641 
e
 = 
SASS_MEMORY_NEW
(
mem
, 
Numbî
, 
p°©e
, 
ßss_numbî_gë_vÆue
(
v
), 
ßss_numbî_gë_unô
(v));

1643 
	gSASS_COLOR
: {

1644 
e
 = 
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
, 
p°©e
, 
ßss_cﬁ‹_gë_r
(
v
), 
ßss_cﬁ‹_gë_g
(v), 
ßss_cﬁ‹_gë_b
(v), 
ßss_cﬁ‹_gë_a
(v));

1646 
	gSASS_STRING
: {

1647 i‡(
ßss_°rög_is_quŸed
(
v
))

1648 
e
 = 
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
p°©e
, 
ßss_°rög_gë_vÆue
(
v
));

1650 
	ge
 = 
SASS_MEMORY_NEW
(
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
ßss_°rög_gë_vÆue
(
v
));

1653 
	gSASS_LIST
: {

1654 
Li°
* 
l
 = 
SASS_MEMORY_NEW
(
mem
, Li°, 
p°©e
, 
ßss_li°_gë_Àngth
(
v
), 
ßss_li°_gë_£∑øt‹
(v));

1655 
size_t
 
	gi
 = 0, 
	gL
 = 
ßss_li°_gë_Àngth
(
v
); i < L; ++i) {

1656 *
	gl
 << 
cvÆ_to_a°node
(
mem
, 
ßss_li°_gë_vÆue
(
v
, 
i
), 
˘x
, 
backåa˚
, 
p°©e
);

1658 
	ge
 = 
l
;

1660 
	gSASS_MAP
: {

1661 
M≠
* 
m
 = 
SASS_MEMORY_NEW
(
mem
, M≠, 
p°©e
);

1662 
size_t
 
	gi
 = 0, 
	gL
 = 
ßss_m≠_gë_Àngth
(
v
); i < L; ++i) {

1663 *
	gm
 << 
	g°d
::
make_∑ú
(

1664 
cvÆ_to_a°node
(
mem
, 
ßss_m≠_gë_key
(
v
, 
i
), 
˘x
, 
backåa˚
, 
p°©e
),

1665 
cvÆ_to_a°node
(
mem
, 
ßss_m≠_gë_vÆue
(
v
, 
i
), 
˘x
, 
backåa˚
, 
p°©e
));

1667 
	ge
 = 
m
;

1669 
	gSASS_NULL
: {

1670 
e
 = 
SASS_MEMORY_NEW
(
mem
, 
NuŒ
, 
p°©e
);

1672 
	gSASS_ERROR
: {

1673 
îr‹
("Eº‹ i¿C fun˘i⁄: " + 
°d
::
°rög
(
ßss_îr‹_gë_mesßge
(
v
)), 
p°©e
, 
backåa˚
);

1675 
	gSASS_WARNING
: {

1676 
îr‹
("W¨nög i¿C fun˘i⁄: " + 
°d
::
°rög
(
ßss_w¨nög_gë_mesßge
(
v
)), 
p°©e
, 
backåa˚
);

1679  
	ge
;

1682 
Sñe˘‹_Li°
* 
	gEvÆ
::
›î©‹
()(Sñe˘‹_Li°* 
s
)

1684 
°d
::
ve˘‹
<
Sñe˘‹_Li°
*> 
rv
;

1685 
Sñe˘‹_Li°
* 
	g¶
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
s
->
p°©e
());

1686 
	g¶
->
is_›ti⁄Æ
(
s
->is_optional());

1687 
	g¶
->
medü_block
(
s
->media_block());

1688 
	g¶
->
is_›ti⁄Æ
(
s
->is_optional());

1689 
size_t
 
	gi
 = 0, 
	giL
 = 
s
->
Àngth
(); i < iL; ++i) {

1690 
	grv
.
push_back
(
›î©‹
()((*
s
)[
i
]));

1695 
size_t
 
	ground
 = 0;

1696 
	ground
 !
°d
::
°rög
::
≈os
) {

1697 
boﬁ
 
ab‹t
 = 
åue
;

1698 
size_t
 
	gi
 = 0, 
	giL
 = 
rv
.
size
(); i < iL; ++i) {

1699 i‡(
	grv
[
i
]->
Àngth
(Ë> 
	ground
) {

1700 *
	g¶
 << (*
	grv
[
i
])[
round
];

1701 
	gab‹t
 = 
Ál£
;

1704 i‡(
	gab‹t
) {

1705 
	ground
 = 
°d
::
°rög
::
≈os
;

1707 ++ 
	ground
;

1711  
	g¶
;

1715 
Sñe˘‹_Li°
* 
	gEvÆ
::
›î©‹
()(
Com∂ex_Sñe˘‹
* 
s
)

1717  
s
->
∑ª¡ize
(
£À˘‹
(), 
˘x
);

1722 
Aâribuã_Sñe˘‹
* 
	gEvÆ
::
›î©‹
()(Aâribuã_Sñe˘‹* 
s
)

1724 
Såög
* 
©å
 = 
s
->
vÆue
();

1725 i‡(
	g©å
Ë{áâ∏
°©ic_ˇ°
<
Såög
*>(
©å
->
≥rf‹m
(
this
)); }

1726 
Aâribuã_Sñe˘‹
* 
	gss
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Aâribuã_Sñe˘‹, *
s
);

1727 
	gss
->
vÆue
(
©å
);

1728  
	gss
;

1731 
Sñe˘‹_Li°
* 
	gEvÆ
::
›î©‹
()(
Sñe˘‹_Schema
* 
s
)

1734 
°d
::
°rög
 
ªsu…_°r
(
s
->
c⁄ã¡s
()->
≥rf‹m
(
this
)->
to_°rög
(
˘x
.
c_›ti⁄s
));

1735 
	gªsu…_°r
 = 
unquŸe
(
Utû
::
πrim
(
ªsu…_°r
)) + "\n{";

1736 
P¨£r
 
	gp
 = P¨£r::
‰om_c_°r
(
ªsu…_°r
.
c_°r
(), 
˘x
, 
s
->
p°©e
());

1737 
	gp
.
	gœ°_medü_block
 = 
s
->
medü_block
();

1738 
Sñe˘‹_Li°
* 
	g¶
 = 
p
.
∑r£_£À˘‹_li°
(
exp
.
block_°ack
.
back
()->
is_roŸ
());

1739 i‡(
	gs
->
has_∑ª¡_ªf
()Ë
	g¶
->
ªmove_∑ª¡_£À˘‹s
();

1740  
›î©‹
()(
	g¶
);

1743 
Ex¥essi⁄
* 
	gEvÆ
::
›î©‹
()(
P¨ít_Sñe˘‹
* 
p
)

1745 
Sñe˘‹_Li°
* 
¥
 = 
£À˘‹
();

1746 i‡(
	g¥
) {

1747 
	gexp
.
	g£À˘‹_°ack
.
p›_back
();

1748 
	g¥
 = 
›î©‹
()(
¥
);

1749 
	gexp
.
	g£À˘‹_°ack
.
push_back
(
¥
);

1750  
	g¥
;

1752  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p
->
p°©e
());

	@node_modules/node-sass/src/libsass/src/eval.hpp

1 #i‚de‡
SASS_EVAL_H


2 
	#SASS_EVAL_H


	)

4 
	~"a°.hµ
"

5 
	~"c⁄ãxt.hµ
"

6 
	~"›î©i⁄.hµ
"

7 
	~"ívú⁄mít.hµ
"

9 
«me•a˚
 
	gSass
 {

11 
˛ass
 
	gEx∑nd
;

12 
˛ass
 
	gC⁄ãxt
;

14 
˛ass
 
	gEvÆ
 : 
public
 
O≥øti⁄_CRTP
<
Ex¥essi⁄
*, Eval> {

16 
	g¥iv©e
:

17 
Ex¥essi⁄
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

19 
	gpublic
:

20 
Ex∑nd
& 
exp
;

21 
	gC⁄ãxt
& 
	g˘x
;

22 
EvÆ
(
Ex∑nd
& 
exp
);

23 ~
EvÆ
();

25 
boﬁ
 
	gis_ö_commít
;

27 
Env
* 
ívú⁄mít
();

28 
	gC⁄ãxt
& 
c⁄ãxt
();

29 
Sñe˘‹_Li°
* 
£À˘‹
();

30 
Backåa˚
* 
backåa˚
();

33 
Ex¥essi⁄
* 
›î©‹
()(
	gBlock
*);

34 
Ex¥essi⁄
* 
›î©‹
()(
	gAssignmít
*);

35 
Ex¥essi⁄
* 
›î©‹
()(
	gIf
*);

36 
Ex¥essi⁄
* 
›î©‹
()(
	gF‹
*);

37 
Ex¥essi⁄
* 
›î©‹
()(
	gEach
*);

38 
Ex¥essi⁄
* 
›î©‹
()(
	gWhûe
*);

39 
Ex¥essi⁄
* 
›î©‹
()(
	gRëu∫
*);

40 
Ex¥essi⁄
* 
›î©‹
()(
	gW¨nög
*);

41 
Ex¥essi⁄
* 
›î©‹
()(
	gEº‹
*);

42 
Ex¥essi⁄
* 
›î©‹
()(
	gDebug
*);

44 
Ex¥essi⁄
* 
›î©‹
()(
	gLi°
*);

45 
Ex¥essi⁄
* 
›î©‹
()(
	gM≠
*);

46 
Ex¥essi⁄
* 
›î©‹
()(
	gBö¨y_Ex¥essi⁄
*);

47 
Ex¥essi⁄
* 
›î©‹
()(
	gU«ry_Ex¥essi⁄
*);

48 
Ex¥essi⁄
* 
›î©‹
()(
	gFun˘i⁄_CÆl
*);

49 
Ex¥essi⁄
* 
›î©‹
()(
	gFun˘i⁄_CÆl_Schema
*);

50 
Ex¥essi⁄
* 
›î©‹
()(
	gV¨übÀ
*);

51 
Ex¥essi⁄
* 
›î©‹
()(
	gTextuÆ
*);

52 
Ex¥essi⁄
* 
›î©‹
()(
	gNumbî
*);

53 
Ex¥essi⁄
* 
›î©‹
()(
	gBoﬁón
*);

54 
Ex¥essi⁄
* 
›î©‹
()(
	gSåög_Schema
*);

55 
Ex¥essi⁄
* 
›î©‹
()(
	gSåög_QuŸed
*);

56 
Ex¥essi⁄
* 
›î©‹
()(
	gSåög_C⁄°™t
*);

58 
Ex¥essi⁄
* 
›î©‹
()(
	gMedü_Quîy
*);

59 
Ex¥essi⁄
* 
›î©‹
()(
	gMedü_Quîy_Ex¥essi⁄
*);

60 
Ex¥essi⁄
* 
›î©‹
()(
	gAt_RoŸ_Quîy
*);

61 
Ex¥essi⁄
* 
›î©‹
()(
	gSuµ‹ts_O≥øt‹
*);

62 
Ex¥essi⁄
* 
›î©‹
()(
	gSuµ‹ts_Neg©i⁄
*);

63 
Ex¥essi⁄
* 
›î©‹
()(
	gSuµ‹ts_De˛¨©i⁄
*);

64 
Ex¥essi⁄
* 
›î©‹
()(
	gSuµ‹ts_I¡îpﬁ©i⁄
*);

65 
Ex¥essi⁄
* 
›î©‹
()(
	gNuŒ
*);

66 
Ex¥essi⁄
* 
›î©‹
()(
	gArgumít
*);

67 
Ex¥essi⁄
* 
›î©‹
()(
	gArgumíts
*);

68 
Ex¥essi⁄
* 
›î©‹
()(
	gCommít
*);

71 
Sñe˘‹_Li°
* 
›î©‹
()(
	gSñe˘‹_Li°
*);

72 
Sñe˘‹_Li°
* 
›î©‹
()(
	gCom∂ex_Sñe˘‹
*);

73 
Aâribuã_Sñe˘‹
* 
›î©‹
()(
	gAâribuã_Sñe˘‹
*);

75 
Ty≥_Sñe˘‹
* 
›î©‹
()(Ty≥_Sñe˘‹* 
	gs
) {  s; };

76 
P£udo_Sñe˘‹
* 
›î©‹
()(P£udo_Sñe˘‹* 
	gs
) {  s; };

77 
Wøµed_Sñe˘‹
* 
›î©‹
()(Wøµed_Sñe˘‹* 
	gs
) {  s; };

78 
Sñe˘‹_QuÆifõr
* 
›î©‹
()(Sñe˘‹_QuÆifõr* 
	gs
) {  s; };

79 
Sñe˘‹_Pœ˚hﬁdî
* 
›î©‹
()(Sñe˘‹_Pœ˚hﬁdî* 
	gs
) {  s; };

81 
Sñe˘‹_Li°
* 
›î©‹
()(
	gSñe˘‹_Schema
*);

82 
Ex¥essi⁄
* 
›î©‹
()(
	gP¨ít_Sñe˘‹
*);

84 
	gãm∂©e
 <
ty≥«me
 
	gU
>

85 
Ex¥essi⁄
* 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

88 
boﬁ
 
eq
(
Ex¥essi⁄
*, Expression*);

89 
boﬁ
 
…
(
Ex¥essi⁄
*, Ex¥essi⁄*, 
°d
::
°rög
 
›
);

91 
VÆue
* 
›_numbîs
(
Mem‹y_M™agî
&, 
Sass_OP
, c⁄° 
Numbî
&, c⁄° Numbî&, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
 = 0);

92 
VÆue
* 
›_numbî_cﬁ‹
(
Mem‹y_M™agî
&, 
Sass_OP
, c⁄° 
Numbî
&, c⁄° 
Cﬁ‹
&, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
 = 0);

93 
VÆue
* 
›_cﬁ‹_numbî
(
Mem‹y_M™agî
&, 
Sass_OP
, c⁄° 
Cﬁ‹
&, c⁄° 
Numbî
&, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
 = 0);

94 
VÆue
* 
›_cﬁ‹s
(
Mem‹y_M™agî
&, 
Sass_OP
, c⁄° 
Cﬁ‹
&, c⁄° Cﬁ‹&, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
 = 0);

95 
VÆue
* 
›_°rögs
(
Mem‹y_M™agî
&, 
Sass
::
O≥ønd
, VÆue&, VÆue&, 
Sass_In•e˘_O±i⁄s
 
›t
, 
P¨£rSèã
* 
p°©e
 = 0, 
boﬁ
 
öãΩﬁ™t
 = 
Ál£
);

97 
	g¥iv©e
:

98 
öãΩﬁ©i⁄
(
C⁄ãxt
& 
˘x
, 
°d
::
°rög
& 
ªs
, 
Ex¥essi⁄
* 
ex
, 
boﬁ
 
öto_quŸes
, boﬁ 
was_ô∂
 = 
Ál£
);

102 
Ex¥essi⁄
* 
cvÆ_to_a°node
(
Mem‹y_M™agî
& 
mem
, 
Sass_VÆue
* 
v
, 
C⁄ãxt
& 
˘x
, 
Backåa˚
* 
backåa˚
, 
P¨£rSèã
 
p°©e
 = ParserState("[AST]"));

	@node_modules/node-sass/src/libsass/src/expand.cpp

1 
	~"ßss.hµ
"

2 
	~<io°ªam
>

3 
	~<ty≥öfo
>

5 
	~"ex∑nd.hµ
"

6 
	~"böd.hµ
"

7 
	~"evÆ.hµ
"

8 
	~"backåa˚.hµ
"

9 
	~"c⁄ãxt.hµ
"

10 
	~"∑r£r.hµ
"

12 
«me•a˚
 
	gSass
 {

14 
	gEx∑nd
::
Ex∑nd
(
C⁄ãxt
& 
˘x
, 
Env
* 
ív
, 
Backåa˚
* 
bt
)

15 : 
˘x
(ctx),

16 
evÆ
(
EvÆ
(*
this
)),

17 
ív_°ack
(
°d
::
ve˘‹
<
Env
*>()),

18 
block_°ack
(
°d
::
ve˘‹
<
Block
*>()),

19 
ˇŒ_°ack
(
°d
::
ve˘‹
<
AST_Node
*>()),

20 
¥›îty_°ack
(
°d
::
ve˘‹
<
Såög
*>()),

21 
£À˘‹_°ack
(
°d
::
ve˘‹
<
Sñe˘‹_Li°
*>()),

22 
medü_block_°ack
(
°d
::
ve˘‹
<
Medü_Block
*>()),

23 
backåa˚_°ack
(
°d
::
ve˘‹
<
Backåa˚
*>()),

24 
ö_key‰ames
(
Ál£
)

26 
	gív_°ack
.
push_back
(0);

27 
	gív_°ack
.
push_back
(
ív
);

28 
	gblock_°ack
.
push_back
(0);

29 
	gˇŒ_°ack
.
push_back
(0);

31 
	g¥›îty_°ack
.
push_back
(0);

32 
	g£À˘‹_°ack
.
push_back
(0);

33 
	gmedü_block_°ack
.
push_back
(0);

34 
	gbackåa˚_°ack
.
push_back
(0);

35 
	gbackåa˚_°ack
.
push_back
(
bt
);

38 
	gC⁄ãxt
& 
	gEx∑nd
::
c⁄ãxt
()

40  
˘x
;

43 
Env
* 
	gEx∑nd
::
ívú⁄mít
()

45 i‡(
ív_°ack
.
size
() > 0)

46  
ív_°ack
.
back
();

50 
Sñe˘‹_Li°
* 
	gEx∑nd
::
£À˘‹
()

52 i‡(
£À˘‹_°ack
.
size
() > 0)

53  
£À˘‹_°ack
.
back
();

57 
Backåa˚
* 
	gEx∑nd
::
backåa˚
()

59 i‡(
backåa˚_°ack
.
size
() > 0)

60  
backåa˚_°ack
.
back
();

65 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Block
* 
b
)

69 
Env
 
ív
(
ívú⁄mít
());

71 
Block
* 
	gbb
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block,

72 
b
->
p°©e
(),

73 
b
->
Àngth
(),

74 
b
->
is_roŸ
());

76 
	gthis
->
	gblock_°ack
.
push_back
(
bb
);

77 
	gthis
->
	gív_°ack
.
push_back
(&
ív
);

79 
	gthis
->
≠≥nd_block
(
b
);

81 
	gthis
->
	gblock_°ack
.
p›_back
();

82 
	gthis
->
	gív_°ack
.
p›_back
();

84  
	gbb
;

87 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
RuÀ£t
* 
r
)

91 i‡(
ö_key‰ames
) {

92 
Key‰ame_RuÀ
* 
k
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Key‰ame_RuÀ, 
r
->
p°©e
(),Ñ->
block
()->
≥rf‹m
(
this
)->block());

93 i‡(
	gr
->
£À˘‹
()) {

94 
	g£À˘‹_°ack
.
push_back
(0);

95 
	gk
->
£À˘‹
(
°©ic_ˇ°
<
Sñe˘‹_Li°
*>(
r
->£À˘‹()->
≥rf‹m
(&
evÆ
)));

96 
	g£À˘‹_°ack
.
p›_back
();

98  
	gk
;

102 i‡(
	gr
->
is_roŸ
()) {

103 i‡(
Sñe˘‹_Li°
* 
	g£À˘‹_li°
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
r
->
£À˘‹
())) {

104 
Com∂ex_Sñe˘‹
* 
com∂ex_£À˘‹
 : 
£À˘‹_li°
->
ñemíts
()) {

105 
Com∂ex_Sñe˘‹
* 
èû
 = 
com∂ex_£À˘‹
;

106 
	gèû
) {

107 i‡(
	gèû
->
hód
()Ë
Sim∂e_Sñe˘‹
* 
	ghódî
 : 
èû
->hód()->
ñemíts
()) {

108 i‡(
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>(
hódî
Ë=
NULL
) ;

109 
	g°d
::
°rög
 
£l_°r
(
com∂ex_£À˘‹
->
to_°rög
(
˘x
.
c_›ti⁄s
));

110 
îr‹
("Ba£-ÀvñÑuÀ†ˇ¬Ÿ c⁄èöÅhê∑ª¡-£À˘‹-ª„ªncög ch¨a˘î '&'.", 
hódî
->
p°©e
(), 
backåa˚
());

112 
	gèû
 = 
èû
->tail();

118 
Ex¥essi⁄
* 
	gex
 = 
r
->
£À˘‹
()->
≥rf‹m
(&
evÆ
);

119 
Sñe˘‹_Li°
* 
	g£l
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ex
);

120 i‡(
	g£l
 =0Ë
throw
 
°d
::
ru¡ime_îr‹
("ExpandedÇull selector");

122 i‡(
	g£l
->
Àngth
(Ë=0 || 
£l
->
has_∑ª¡_ªf
()) {

123 
boﬁ
 
has_∑ª¡_£À˘‹
 = 
Ál£
;

124 
size_t
 
	gi
 = 0, 
	gL
 = 
£À˘‹_°ack
.
size
(); i < L && !
	ghas_∑ª¡_£À˘‹
; i++) {

125 
Sñe˘‹_Li°
* 
	gŒ
 = 
£À˘‹_°ack
.
©
(
i
);

126 
	ghas_∑ª¡_£À˘‹
 = 
Œ
 !0 &&Ül->
Àngth
() > 0;

128 i‡(!
	ghas_∑ª¡_£À˘‹
) {

129 
îr‹
("Ba£-ÀvñÑuÀ†ˇ¬Ÿ c⁄èöÅhê∑ª¡-£À˘‹-ª„ªncög ch¨a˘î '&'.", 
£l
->
p°©e
(), 
backåa˚
());

133 
	g£À˘‹_°ack
.
push_back
(
£l
);

134 
Env
* 
	gív
 = 0;

135 i‡(
	gblock_°ack
.
back
()->
is_roŸ
()) {

136 
	gív
 = 
√w
 
Env
(
ívú⁄mít
());

137 
	gív_°ack
.
push_back
(
ív
);

139 
	g£l
->
£t_medü_block
(
medü_block_°ack
.
back
());

140 
Block
* 
	gblk
 = 
r
->
block
()->
≥rf‹m
(
this
)->block();

141 
RuÀ£t
* 
	gº
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Ruleset,

142 
r
->
p°©e
(),

143 
£l
,

144 
blk
);

145 
	g£À˘‹_°ack
.
p›_back
();

146 i‡(
	gblock_°ack
.
back
()->
is_roŸ
()) {

147 
	gív_°ack
.
p›_back
();

148 
dñëe
 
	gív
;

150 
	gº
->
is_roŸ
(
r
->is_root());

151 
	gº
->
èbs
(
r
->tabs());

153  
	gº
;

156 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Pr›£t
* 
p
)

158 
¥›îty_°ack
.
push_back
(
p
->
¥›îty_‰agmít
());

159 
Block
* 
	gex∑nded_block
 = 
p
->
block
()->
≥rf‹m
(
this
)->block();

161 
size_t
 
	gi
 = 0, 
	gL
 = 
ex∑nded_block
->
Àngth
(); i < L; ++i) {

162 
Sèãmít
* 
	g°m
 = (*
ex∑nded_block
)[
i
];

163 i‡(
De˛¨©i⁄
* 
	gdec
 = 
°©ic_ˇ°
<De˛¨©i⁄*>(
°m
)) {

164 
Såög_Schema
* 
comböed_¥›
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p
->
p°©e
());

165 i‡(!
	g¥›îty_°ack
.
em±y
()) {

166 *
	gcomböed_¥›
 << 
	g¥›îty_°ack
.
back
()->
≥rf‹m
(&
evÆ
)

167 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

168 
p
->
p°©e
(), "-")

169 << 
	gdec
->
¥›îty
();

172 *
	gcomböed_¥›
 << 
	gdec
->
¥›îty
();

174 
	gdec
->
¥›îty
(
comböed_¥›
);

175 *
	gblock_°ack
.
back
(Ë<< 
	gdec
;

177 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Commít
)) {

181 
îr‹
("c⁄ã¡†o‡«me•a˚dÖr›îtõ†mu°Ñesu… i¿°yÀ de˛¨©i⁄†⁄ly", 
°m
->
p°©e
(), 
backåa˚
());

185 
	g¥›îty_°ack
.
p›_back
();

190 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Suµ‹ts_Block
* 
f
)

192 
Ex¥essi⁄
* 
c⁄dôi⁄
 = 
f
->c⁄dôi⁄()->
≥rf‹m
(&
evÆ
);

193 
Suµ‹ts_Block
* 
	gff
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Supports_Block,

194 
f
->
p°©e
(),

195 
°©ic_ˇ°
<
Suµ‹ts_C⁄dôi⁄
*>(
c⁄dôi⁄
),

196 
f
->
block
()->
≥rf‹m
(
this
)->block());

197  
	gff
;

200 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Medü_Block
* 
m
)

202 
medü_block_°ack
.
push_back
(
m
);

203 
Ex¥essi⁄
* 
	gmq
 = 
m
->
medü_quîõs
()->
≥rf‹m
(&
evÆ
);

204 
	g°d
::
°rög
 
°r_mq
(
mq
->
to_°rög
(
˘x
.
c_›ti⁄s
));

205 * 
	g°r
 = 
ßss_c›y_c_°rög
(
°r_mq
.
c_°r
());

206 
	g˘x
.
	g°rögs
.
push_back
(
°r
);

207 
P¨£r
 
p
(P¨£r::
‰om_c_°r
(
°r
, 
˘x
, 
mq
->
p°©e
()));

208 
	gmq
 = 
p
.
∑r£_medü_quîõs
();

209 
Medü_Block
* 
	gmm
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Media_Block,

210 
m
->
p°©e
(),

211 
°©ic_ˇ°
<
Li°
*>(
mq
->
≥rf‹m
(&
evÆ
)),

212 
m
->
block
()->
≥rf‹m
(
this
)->block(),

214 
	gmedü_block_°ack
.
p›_back
();

215 
	gmm
->
èbs
(
m
->tabs());

216  
	gmm
;

219 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
At_RoŸ_Block
* 
a
)

221 
Block
* 
ab
 = 
a
->
block
();

223 
Ex¥essi⁄
* 
	g´
 = 
a
->
ex¥essi⁄
();

224 i‡(
	g´
Ë´ = 
´
->
≥rf‹m
(&
evÆ
);

225 
	g´
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
At_RoŸ_Quîy
, 
a
->
p°©e
());

226 
Block
* 
	gbb
 = 
ab
 ?áb->
≥rf‹m
(
this
)->
block
() : 0;

227 
At_RoŸ_Block
* 
	gØ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, At_Root_Block,

228 
a
->
p°©e
(),

229 
bb
,

230 
°©ic_ˇ°
<
At_RoŸ_Quîy
*>(
´
));

232  
	gØ
;

235 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Dúe˘ive
* 
a
)

237 
LOCAL_FLAG
(
ö_key‰ames
, 
a
->
is_key‰ames
());

238 
Block
* 
	gab
 = 
a
->
block
();

239 
Sñe˘‹
* 
	gas
 = 
a
->
£À˘‹
();

240 
Ex¥essi⁄
* 
	gav
 = 
a
->
vÆue
();

241 
	g£À˘‹_°ack
.
push_back
(0);

242 i‡(
	gav
Ëav = 
av
->
≥rf‹m
(&
evÆ
);

243 i‡(
	gas
Ëa†
dy«mic_ˇ°
<
Sñe˘‹
*>(
as
->
≥rf‹m
(&
evÆ
));

244 
	g£À˘‹_°ack
.
p›_back
();

245 
Block
* 
	gbb
 = 
ab
 ?áb->
≥rf‹m
(
this
)->
block
() : 0;

246 
Dúe˘ive
* 
	gØ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Directive,

247 
a
->
p°©e
(),

248 
a
->
keyw‹d
(),

249 
as
,

250 
bb
,

251 
av
);

252  
	gØ
;

255 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
De˛¨©i⁄
* 
d
)

257 
Såög
* 
ﬁd_p
 = 
d
->
¥›îty
();

258 
Såög
* 
	g√w_p
 = 
°©ic_ˇ°
<Såög*>(
ﬁd_p
->
≥rf‹m
(&
evÆ
));

259 
Ex¥essi⁄
* 
	gvÆue
 = 
d
->
vÆue
()->
≥rf‹m
(&
evÆ
);

260 i‡(!
	gvÆue
 || (vÆue->
is_övisibÀ
(Ë&& !
	gd
->
is_imp‹è¡
()))  0;

261 
De˛¨©i⁄
* 
	gde˛
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Declaration,

262 
d
->
p°©e
(),

263 
√w_p
,

264 
vÆue
,

265 
d
->
is_imp‹è¡
());

266 
	gde˛
->
èbs
(
d
->tabs());

267  
	gde˛
;

270 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Assignmít
* 
a
)

272 
Env
* 
ív
 = 
ívú⁄mít
();

273 
	g°d
::
°rög
 
v¨
(
a
->
v¨übÀ
());

274 i‡(
	ga
->
is_globÆ
()) {

275 i‡(
	ga
->
is_deÁu…
()) {

276 i‡(
	gív
->
has_globÆ
(
v¨
)) {

277 
Ex¥essi⁄
* 
	ge
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
ív
->
gë_globÆ
(
v¨
));

278 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

279 
ív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

283 
	gív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

287 
	gív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

290 i‡(
	ga
->
is_deÁu…
()) {

291 i‡(
	gív
->
has_Àxiˇl
(
v¨
)) {

292 autÿ
	gcur
 = 
ív
;

293 
	gcur
 && cur->
is_Àxiˇl
()) {

294 i‡(
	gcur
->
has_loˇl
(
v¨
)) {

295 i‡(
AST_Node
* 
	gnode
 = 
cur
->
gë_loˇl
(
v¨
)) {

296 
Ex¥essi⁄
* 
e
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
node
);

297 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

298 
cur
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

302 
throw
 
	g°d
::
ru¡ime_îr‹
("EnvÇot in sync");

306 
	gcur
 = 
cur
->
∑ª¡
();

308 
throw
 
	g°d
::
ru¡ime_îr‹
("EnvÇot in sync");

310 i‡(
	gív
->
has_globÆ
(
v¨
)) {

311 i‡(
AST_Node
* 
	gnode
 = 
ív
->
gë_globÆ
(
v¨
)) {

312 
Ex¥essi⁄
* 
e
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
node
);

313 i‡(!
	ge
 ||É->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

314 
ív
->
£t_globÆ
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

318 i‡(
	gív
->
is_Àxiˇl
()) {

319 
	gív
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

322 
	gív
->
£t_loˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

326 
	gív
->
£t_Àxiˇl
(
v¨
, 
a
->
vÆue
()->
≥rf‹m
(&
evÆ
));

331 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Imp‹t
* 
imp
)

333 
Imp‹t
* 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Imp‹t, 
imp
->
p°©e
());

334 i‡(
	gimp
->
medü_quîõs
(Ë&& imp->medü_quîõs()->
size
()) {

335 
Ex¥essi⁄
* 
	gex
 = 
imp
->
medü_quîõs
()->
≥rf‹m
(&
evÆ
);

336 
	gªsu…
->
medü_quîõs
(
dy«mic_ˇ°
<
Li°
*>(
ex
));

338  
size_t
 
	gi
 = 0, 
	gS
 = 
imp
->
uæs
().
size
(); i < S; ++i) {

339 
	gªsu…
->
uæs
().
push_back
(
imp
->uæs()[
i
]->
≥rf‹m
(&
evÆ
));

343  
	gªsu…
;

346 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Imp‹t_Stub
* 
i
)

349 
AST_Node
* 
∑ª¡
 = 
ˇŒ_°ack
.
back
();

350 i‡(
	g∑ª¡
 && 
	gdy«mic_ˇ°
<
	gBlock
*>’¨ítË=
NULL
) {

351 
îr‹
("Imp‹àdúe˘ive†mayÇŸ bêu£d wôhö c⁄åﬁ dúe˘ive†‹ mixös.", 
i
->
p°©e
());

354 
Sass_Imp‹t_E¡ry
 
	gimp‹t
 = 
ßss_make_imp‹t
(

355 
i
->
imp_∑th
().
c_°r
(),

356 
i
->
abs_∑th
().
c_°r
(),

359 
	g˘x
.
	gimp‹t_°ack
.
push_back
(
imp‹t
);

360 c⁄° 
	g°d
::
°rög
& 
abs_∑th
(
i
->
ªsour˚
().abs_path);

361 
≠≥nd_block
(
˘x
.
shìts
.
©
(
abs_∑th
).
roŸ
);

362 
ßss_dñëe_imp‹t
(
˘x
.
imp‹t_°ack
.
back
());

363 
	g˘x
.
	gimp‹t_°ack
.
p›_back
();

367 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
W¨nög
* 
w
)

370 
w
->
≥rf‹m
(&
evÆ
);

374 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Eº‹
* 
e
)

377 
e
->
≥rf‹m
(&
evÆ
);

381 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Debug
* 
d
)

384 
d
->
≥rf‹m
(&
evÆ
);

388 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Commít
* 
c
)

390 
evÆ
.
is_ö_commít
 = 
åue
;

391 autÿ
	grv
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Commít
, 
c
->
p°©e
(), 
°©ic_ˇ°
<
Såög
*>(c->
ãxt
()->
≥rf‹m
(&
evÆ
)), c->
is_imp‹è¡
());

392 
	gevÆ
.
	gis_ö_commít
 = 
Ál£
;

394  
	grv
;

397 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
If
* 
i
)

399 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

400 
	gív_°ack
.
push_back
(&
ív
);

401 
	gˇŒ_°ack
.
push_back
(
i
);

402 i‡(*
	gi
->
¥ediˇã
()->
≥rf‹m
(&
evÆ
)) {

403 
≠≥nd_block
(
i
->
block
());

406 
Block
* 
	gÆt
 = 
i
->
Æã∫©ive
();

407 i‡(
	gÆt
Ë
≠≥nd_block
(
Æt
);

409 
	gˇŒ_°ack
.
p›_back
();

410 
	gív_°ack
.
p›_back
();

416 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
F‹
* 
f
)

418 
°d
::
°rög
 
v¨übÀ
(
f
->variable());

419 
Ex¥essi⁄
* 
	glow
 = 
f
->
lowî_bound
()->
≥rf‹m
(&
evÆ
);

420 i‡(
	glow
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
NUMBER
) {

421 
throw
 
Ex˚±i⁄
::
Ty≥Mism©ch
(*
low
, "integer");

423 
Ex¥essi⁄
* 
	ghigh
 = 
f
->
uµî_bound
()->
≥rf‹m
(&
evÆ
);

424 i‡(
	ghigh
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
NUMBER
) {

425 
throw
 
Ex˚±i⁄
::
Ty≥Mism©ch
(*
high
, "integer");

427 
Numbî
* 
	gßss_°¨t
 = 
°©ic_ˇ°
<Numbî*>(
low
);

428 
Numbî
* 
	gßss_íd
 = 
°©ic_ˇ°
<Numbî*>(
high
);

430 i‡(
	gßss_°¨t
->
unô
(Ë!
ßss_íd
->unit()) {

431 
°d
::
°rög°ªam
 
msg
; 
	gmsg
 << "Incompatible units: '"

432 << 
	gßss_°¨t
->
unô
() << "'ánd '"

433 << 
	gßss_íd
->
unô
() << "'.";

434 
îr‹
(
msg
.
°r
(), 
low
->
p°©e
(), 
backåa˚
());

436 
	g°¨t
 = 
ßss_°¨t
->
vÆue
();

437 
	gíd
 = 
ßss_íd
->
vÆue
();

439 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

440 
	gív_°ack
.
push_back
(&
ív
);

441 
	gˇŒ_°ack
.
push_back
(
f
);

442 
Numbî
* 
	gô
 = 
SASS_MEMORY_NEW
(
ív
.
mem
, Numbî, 
low
->
p°©e
(), 
°¨t
, 
ßss_íd
->
unô
());

443 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

444 
Block
* 
	gbody
 = 
f
->
block
();

445 i‡(
	g°¨t
 < 
	gíd
) {

446 i‡(
	gf
->
is_ö˛usive
()Ë++
	gíd
;

447 
	gi
 = 
°¨t
;

448 
	gi
 < 
	gíd
;

449 ++
	gi
) {

450 
	gô
->
vÆue
(
i
);

451 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

452 
≠≥nd_block
(
body
);

455 i‡(
	gf
->
is_ö˛usive
()Ë--
	gíd
;

456 
	gi
 = 
°¨t
;

457 
	gi
 > 
	gíd
;

458 --
	gi
) {

459 
	gô
->
vÆue
(
i
);

460 
	gív
.
£t_loˇl
(
v¨übÀ
, 
ô
);

461 
≠≥nd_block
(
body
);

464 
	gˇŒ_°ack
.
p›_back
();

465 
	gív_°ack
.
p›_back
();

471 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Each
* 
e
)

473 
°d
::
ve˘‹
<°d::
°rög
> 
v¨übÀs
(
e
->variables());

474 
Ex¥essi⁄
* 
	gex¥
 = 
e
->
li°
()->
≥rf‹m
(&
evÆ
);

475 
	gVe˘‹ized
<
	gEx¥essi⁄
*>* 
	gli°
 = 0;

476 
M≠
* 
	gm≠
 = 0;

477 i‡(
	gex¥
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
) {

478 
m≠
 = 
°©ic_ˇ°
<
M≠
*>(
ex¥
);

480 i‡(
Sñe˘‹_Li°
* 
	gls
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ex¥
)) {

481 
Li°ize
 
li°ize
(
˘x
.
mem
);

482 
	gli°
 = 
dy«mic_ˇ°
<
Li°
*>(
ls
->
≥rf‹m
(&
li°ize
));

484 i‡(
	gex¥
->
c⁄¸ëe_ty≥
(Ë!
Ex¥essi⁄
::
LIST
) {

485 
li°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
ex¥
->
p°©e
(), 1, 
SASS_COMMA
);

486 *
	gli°
 << 
	gex¥
;

489 
	gli°
 = 
°©ic_ˇ°
<
Li°
*>(
ex¥
);

492 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

493 
	gív_°ack
.
push_back
(&
ív
);

494 
	gˇŒ_°ack
.
push_back
(
e
);

495 
Block
* 
	gbody
 = 
e
->
block
();

497 i‡(
	gm≠
) {

498 autÿ
	gkey
 : 
m≠
->
keys
()) {

499 
Ex¥essi⁄
* 
k
 = 
key
->
≥rf‹m
(&
evÆ
);

500 
Ex¥essi⁄
* 
	gv
 = 
m≠
->
©
(
key
)->
≥rf‹m
(&
evÆ
);

502 i‡(
	gv¨übÀs
.
size
() == 1) {

503 
Li°
* 
v¨übÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
m≠
->
p°©e
(), 2, 
SASS_SPACE
);

504 *
	gv¨übÀ
 << 
	gk
;

505 *
	gv¨übÀ
 << 
	gv
;

506 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
v¨übÀ
);

508 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
k
);

509 
	gív
.
£t_loˇl
(
v¨übÀs
[1], 
v
);

511 
≠≥nd_block
(
body
);

516 i‡(
	gli°
->
Àngth
(Ë=1 && 
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>(
li°
)) {

517 
li°
 = 
dy«mic_ˇ°
<
Ve˘‹ized
<
Ex¥essi⁄
*>*>(list);

519 
size_t
 
	gi
 = 0, 
	gL
 = 
li°
->
Àngth
(); i < L; ++i) {

520 
Ex¥essi⁄
* 
	ge
 = (*
li°
)[
i
];

522 i‡(
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>(
e
)Ëê
¨g
->
vÆue
();

524 i‡(
Li°
* 
	gsˇœrs
 = 
dy«mic_ˇ°
<Li°*>(
e
)) {

525 i‡(
v¨übÀs
.
size
() == 1) {

526 
Ex¥essi⁄
* 
v¨
 = 
sˇœrs
;

528 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
v¨
);

530 
size_t
 
	gj
 = 0, 
	gK
 = 
v¨übÀs
.
size
(); j < K; ++j) {

531 
Ex¥essi⁄
* 
	gªs
 = 
j
 >
sˇœrs
->
Àngth
()

532 ? 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
ex¥
->
p°©e
())

533 : (*
sˇœrs
)[
j
]->
≥rf‹m
(&
evÆ
);

534 
	gív
.
£t_loˇl
(
v¨übÀs
[
j
], 
ªs
);

538 i‡(
	gv¨übÀs
.
size
() > 0) {

539 
	gív
.
£t_loˇl
(
v¨übÀs
[0], 
e
);

540 
size_t
 
	gj
 = 1, 
	gK
 = 
v¨übÀs
.
size
(); j < K; ++j) {

541 
Ex¥essi⁄
* 
	gªs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
ex¥
->
p°©e
());

542 
	gív
.
£t_loˇl
(
v¨übÀs
[
j
], 
ªs
);

546 
≠≥nd_block
(
body
);

549 
	gˇŒ_°ack
.
p›_back
();

550 
	gív_°ack
.
p›_back
();

554 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Whûe
* 
w
)

556 
Ex¥essi⁄
* 
¥ed
 = 
w
->
¥ediˇã
();

557 
Block
* 
	gbody
 = 
w
->
block
();

558 
Env
 
ív
(
ívú⁄mít
(), 
åue
);

559 
	gív_°ack
.
push_back
(&
ív
);

560 
	gˇŒ_°ack
.
push_back
(
w
);

561 *
	g¥ed
->
≥rf‹m
(&
evÆ
)) {

562 
≠≥nd_block
(
body
);

564 
	gˇŒ_°ack
.
p›_back
();

565 
	gív_°ack
.
p›_back
();

569 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Rëu∫
* 
r
)

571 
îr‹
("@ªtu∫ may o∆y bêu£d wôhöá fun˘i⁄", 
r
->
p°©e
(), 
backåa˚
());

576 
	gEx∑nd
::
ex∑nd_£À˘‹_li°
(
Sñe˘‹
* 
s
, 
Sñe˘‹_Li°
* 
exãndî
) {

578 i‡(
Sñe˘‹_Li°
* 
	g¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
s
)) {

579 
Com∂ex_Sñe˘‹
* 
com∂ex_£À˘‹
 : 
¶
->
ñemíts
()) {

580 
Com∂ex_Sñe˘‹
* 
èû
 = 
com∂ex_£À˘‹
;

581 
	gèû
) {

582 i‡(
	gèû
->
hód
()Ë
Sim∂e_Sñe˘‹
* 
	ghódî
 : 
èû
->hód()->
ñemíts
()) {

583 i‡(
dy«mic_ˇ°
<
P¨ít_Sñe˘‹
*>(
hódî
Ë=
NULL
) ;

584 
	g°d
::
°rög
 
£l_°r
(
com∂ex_£À˘‹
->
to_°rög
(
˘x
.
c_›ti⁄s
));

585 
îr‹
("C™'àexãnd " + 
£l_°r
 + ": c™'àexãndÖ¨íà£À˘‹s", 
hódî
->
p°©e
(), 
backåa˚
());

587 
	gèû
 = 
èû
->tail();

593 
Sñe˘‹_Li°
* 
	gc⁄ãxtuÆized
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
s
->
≥rf‹m
(&
evÆ
));

594 i‡(
	gc⁄ãxtuÆized
 =
NULL
) ;

595 autÿ
	gcom∂ex_£l
 : 
c⁄ãxtuÆized
->
ñemíts
()) {

596 
Com∂ex_Sñe˘‹
* 
c
 = 
com∂ex_£l
;

597 i‡(!
	gc
->
hód
(Ë|| c->
èû
()) {

598 
	g°d
::
°rög
 
£l_°r
(
c⁄ãxtuÆized
->
to_°rög
(
˘x
.
c_›ti⁄s
));

599 
îr‹
("C™'àexãnd " + 
£l_°r
 + ": c™'àexãndÇe°ed sñe˘‹s", 
c
->
p°©e
(), 
backåa˚
());

601 
Compound_Sñe˘‹
* 
	g∂a˚hﬁdî
 = 
c
->
hód
();

602 i‡(
	gc⁄ãxtuÆized
->
is_›ti⁄Æ
()Ë
	g∂a˚hﬁdî
->is_›ti⁄Æ(
åue
);

603 
size_t
 
	gi
 = 0, 
	gL
 = 
exãndî
->
Àngth
(); i < L; ++i) {

604 
Com∂ex_Sñe˘‹
* 
	g£l
 = (*
exãndî
)[
i
];

605 i‡(!(
	g£l
->
hód
(Ë&& sñ->hód()->
Àngth
() > 0 &&

606 
	gdy«mic_ˇ°
<
	gP¨ít_Sñe˘‹
*>((*
	g£l
->
hód
())[0])))

608 
Compound_Sñe˘‹
* 
	ghh
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, (*
exãndî
)[
i
]->
p°©e
());

609 
	ghh
->
medü_block
((*
exãndî
)[
i
]->media_block());

610 
Com∂ex_Sñe˘‹
* 
	gs£l
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, (*
exãndî
)[
i
]->
p°©e
());

611 
	gs£l
->
medü_block
((*
exãndî
)[
i
]->media_block());

612 i‡(
	g£l
->
has_löe_„ed
()Ë
	gs£l
->has_löe_„ed(
åue
);

613 
P¨ít_Sñe˘‹
* 
	gps
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, P¨ít_Sñe˘‹, (*
exãndî
)[
i
]->
p°©e
());

614 
	gps
->
medü_block
((*
exãndî
)[
i
]->media_block());

615 *
	ghh
 << 
	gps
;

616 
	gs£l
->
èû
(
£l
);

617 
	gs£l
->
hód
(
hh
);

618 
	g£l
 = 
s£l
;

621 
	g˘x
.
	gsub£t_m≠
.
put
(
∂a˚hﬁdî
->
to_°r_vec
(), 
°d
::
make_∑ú
(
£l
,Ölaceholder));

627 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Exãnsi⁄
* 
e
)

629 i‡(
Sñe˘‹_Li°
* 
exãndî
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
£À˘‹
())) {

630 
Sñe˘‹
* 
s
 = 
e
->
£À˘‹
();

631 i‡(
Sñe˘‹_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Sñe˘‹_Schema*>(
s
)) {

632 i‡(
schema
->
has_∑ª¡_ªf
()Ë
s
 = 
evÆ
(schema);

634 i‡(
Sñe˘‹_Li°
* 
	g¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
s
)) {

635 
Com∂ex_Sñe˘‹
* 
cs
 : *
¶
) {

636 i‡(
cs
 !
NULL
 && cs->
hód
() != NULL) {

637 
cs
->
hód
()->
medü_block
(
medü_block_°ack
.
back
());

641 
	g£À˘‹_°ack
.
push_back
(0);

642 
ex∑nd_£À˘‹_li°
(
s
, 
exãndî
);

643 
	g£À˘‹_°ack
.
p›_back
();

648 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Deföôi⁄
* 
d
)

650 
Env
* 
ív
 = 
ívú⁄mít
();

651 
Deföôi⁄
* 
	gdd
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Deföôi⁄, *
d
);

652 
	gív
->
loˇl_‰ame
()[
d
->
«me
() +

653 (
d
->
ty≥
(Ë=
Deföôi⁄
::
MIXIN
 ? "[m]" : "[f]")] = 
dd
;

655 i‡(
	gd
->
ty≥
(Ë=
Deföôi⁄
::
FUNCTION
 && (

656 
PªÀxî
::
ˇlc_‚_ˇŒ
(
d
->
«me
().
c_°r
()) ||

657 
d
->
«me
() == "element" ||

658 
d
->
«me
() == "expression" ||

659 
d
->
«me
() == "url"

661 
dïªˇãd
(

662 "Namögá fun˘i⁄ \"" + 
d
->
«me
() + "\" is disallowed",

664 
d
->
p°©e
()

670 
	gdd
->
ívú⁄mít
(
ív
);

674 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
Mixö_CÆl
* 
c
)

676 
Env
* 
ív
 = 
ívú⁄mít
();

677 
	g°d
::
°rög
 
fuŒ_«me
(
c
->
«me
() + "[m]");

678 i‡(!
	gív
->
has
(
fuŒ_«me
)) {

679 
îr‹
("nÿmixöÇamed " + 
c
->
«me
(), c->
p°©e
(), 
backåa˚
());

681 
Deföôi⁄
* 
	gdef
 = 
°©ic_ˇ°
<Deföôi⁄*>((*
ív
)[
fuŒ_«me
]);

682 
Block
* 
	gbody
 = 
def
->
block
();

683 
P¨amëîs
* 
	g∑øms
 = 
def
->
∑ømëîs
();

685 i‡(
	gc
->
block
(Ë&& c->
«me
(Ë!"@c⁄ã¡" && !
body
->
has_c⁄ã¡
()) {

686 
îr‹
("Mixö \"" + 
c
->
«me
(Ë+ "\" d€†nŸác˚±á c⁄ã¡ block.", c->
p°©e
(), 
backåa˚
());

688 
Argumíts
* 
	g¨gs
 = 
°©ic_ˇ°
<Argumíts*>(
c
->
¨gumíts
()

689 ->
≥rf‹m
(&
evÆ
));

690 
Backåa˚
 
√w_bt
(
backåa˚
(), 
c
->
p°©e
(), ", i¿mixö `" + c->
«me
() + "`");

691 
	gbackåa˚_°ack
.
push_back
(&
√w_bt
);

692 
Env
 
√w_ív
(
def
->
ívú⁄mít
());

693 
	gív_°ack
.
push_back
(&
√w_ív
);

694 i‡(
	gc
->
block
()) {

696 
Deföôi⁄
* 
	gthunk
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Definition,

697 
c
->
p°©e
(),

699 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
P¨amëîs
, 
c
->
p°©e
()),

700 
c
->
block
(),

701 
Deföôi⁄
::
MIXIN
);

702 
	gthunk
->
ívú⁄mít
(
ív
);

703 
	g√w_ív
.
loˇl_‰ame
()["@c⁄ã¡[m]"] = 
thunk
;

706 
böd
(
°d
::
°rög
("Mixö"), 
c
->
«me
(), 
∑øms
, 
¨gs
, &
˘x
, &
√w_ív
, &
evÆ
);

707 
≠≥nd_block
(
body
);

708 
	gbackåa˚_°ack
.
p›_back
();

709 
	gív_°ack
.
p›_back
();

713 
Sèãmít
* 
	gEx∑nd
::
›î©‹
()(
C⁄ã¡
* 
c
)

715 
Env
* 
ív
 = 
ívú⁄mít
();

717 i‡(!
	gív
->
has
("@content[m]"))  0;

718 i‡(
	gblock_°ack
.
back
()->
is_roŸ
()) {

719 
	g£À˘‹_°ack
.
push_back
(0);

721 
Mixö_CÆl
* 
	gˇŒ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Mixin_Call,

722 
c
->
p°©e
(),

724 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumíts
, 
c
->
p°©e
()));

725 
Sèãmít
* 
	g°m
 = 
ˇŒ
->
≥rf‹m
(
this
);

726 i‡(
	gblock_°ack
.
back
()->
is_roŸ
()) {

727 
	g£À˘‹_°ack
.
p›_back
();

729  
	g°m
;

733 
ölöe
 
Sèãmít
* 
	gEx∑nd
::
ÁŒback_im∂
(
AST_Node
* 
n
)

735 
°d
::
°rög
 
îr
 =°d:: såög("`Ex∑nd` d€¢'àh™dÀ "Ë+ 
ty≥id
(*
n
).
«me
();

736 
Såög_QuŸed
* 
	gmsg
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
P¨£rSèã
("[WARN]"), 
îr
);

737 
îr‹
("unknow¿öã∫ÆÉº‹;ÖÀa£ c⁄è˘ÅhêLibSas†maöèöîs", 
n
->
p°©e
(), 
backåa˚
());

738  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
W¨nög
, 
P¨£rSèã
("[WARN]"), 
msg
);

742 
ölöe
 
	gEx∑nd
::
≠≥nd_block
(
Block
* 
b
)

744 i‡(
b
->
is_roŸ
()Ë
ˇŒ_°ack
.
push_back
(b);

745 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

746 
Sèãmít
* 
	gôh
 = (*
b
)[
i
]->
≥rf‹m
(
this
);

747 i‡(
	gôh
Ë*
	gblock_°ack
.
back
() << ith;

749 i‡(
	gb
->
is_roŸ
()Ë
	gˇŒ_°ack
.
p›_back
();

	@node_modules/node-sass/src/libsass/src/expand.hpp

1 #i‚de‡
SASS_EXPAND_H


2 
	#SASS_EXPAND_H


	)

4 
	~<ve˘‹
>

6 
	~"a°.hµ
"

7 
	~"evÆ.hµ
"

8 
	~"›î©i⁄.hµ
"

9 
	~"ívú⁄mít.hµ
"

11 
«me•a˚
 
	gSass
 {

13 
˛ass
 
	gLi°ize
;

14 
˛ass
 
	gC⁄ãxt
;

15 
˛ass
 
	gEvÆ
;

16 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

17 
	gBackåa˚
;

19 
˛ass
 
	gEx∑nd
 : 
public
 
O≥øti⁄_CRTP
<
Sèãmít
*, Expand> {

20 
	gpublic
:

22 
Env
* 
ívú⁄mít
();

23 
	gC⁄ãxt
& 
c⁄ãxt
();

24 
Sñe˘‹_Li°
* 
£À˘‹
();

25 
Backåa˚
* 
backåa˚
();

27 
	gC⁄ãxt
& 
	g˘x
;

28 
EvÆ
 
	gevÆ
;

31 
	g°d
::
ve˘‹
<
Env
*> 
ív_°ack
;

32 
	g°d
::
ve˘‹
<
Block
*> 
block_°ack
;

33 
	g°d
::
ve˘‹
<
AST_Node
*> 
ˇŒ_°ack
;

34 
	g°d
::
ve˘‹
<
Såög
*> 
¥›îty_°ack
;

35 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*> 
£À˘‹_°ack
;

36 
	g°d
::
ve˘‹
<
Medü_Block
*> 
medü_block_°ack
;

37 
	g°d
::
ve˘‹
<
Backåa˚
*>
backåa˚_°ack
;

38 
boﬁ
 
	gö_key‰ames
;

40 
Sèãmít
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

42 
	g¥iv©e
:

43 
ex∑nd_£À˘‹_li°
(
Sñe˘‹
*, 
Sñe˘‹_Li°
* 
exãndî
);

45 
	gpublic
:

46 
Ex∑nd
(
C⁄ãxt
&, 
Env
*, 
Backåa˚
*);

47 ~
Ex∑nd
() { }

49 
Sèãmít
* 
›î©‹
()(
	gBlock
*);

50 
Sèãmít
* 
›î©‹
()(
	gRuÀ£t
*);

51 
Sèãmít
* 
›î©‹
()(
	gPr›£t
*);

52 
Sèãmít
* 
›î©‹
()(
	gMedü_Block
*);

53 
Sèãmít
* 
›î©‹
()(
	gSuµ‹ts_Block
*);

54 
Sèãmít
* 
›î©‹
()(
	gAt_RoŸ_Block
*);

55 
Sèãmít
* 
›î©‹
()(
	gDúe˘ive
*);

56 
Sèãmít
* 
›î©‹
()(
	gDe˛¨©i⁄
*);

57 
Sèãmít
* 
›î©‹
()(
	gAssignmít
*);

58 
Sèãmít
* 
›î©‹
()(
	gImp‹t
*);

59 
Sèãmít
* 
›î©‹
()(
	gImp‹t_Stub
*);

60 
Sèãmít
* 
›î©‹
()(
	gW¨nög
*);

61 
Sèãmít
* 
›î©‹
()(
	gEº‹
*);

62 
Sèãmít
* 
›î©‹
()(
	gDebug
*);

63 
Sèãmít
* 
›î©‹
()(
	gCommít
*);

64 
Sèãmít
* 
›î©‹
()(
	gIf
*);

65 
Sèãmít
* 
›î©‹
()(
	gF‹
*);

66 
Sèãmít
* 
›î©‹
()(
	gEach
*);

67 
Sèãmít
* 
›î©‹
()(
	gWhûe
*);

68 
Sèãmít
* 
›î©‹
()(
	gRëu∫
*);

69 
Sèãmít
* 
›î©‹
()(
	gExãnsi⁄
*);

70 
Sèãmít
* 
›î©‹
()(
	gDeföôi⁄
*);

71 
Sèãmít
* 
›î©‹
()(
	gMixö_CÆl
*);

72 
Sèãmít
* 
›î©‹
()(
	gC⁄ã¡
*);

74 
	gãm∂©e
 <
ty≥«me
 
	gU
>

75 
Sèãmít
* 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

77 
≠≥nd_block
(
Block
*);

	@node_modules/node-sass/src/libsass/src/extend.cpp

1 
	~"ßss.hµ
"

2 
	~"exãnd.hµ
"

3 
	~"c⁄ãxt.hµ
"

4 
	~"backåa˚.hµ
"

5 
	~"∑ths.hµ
"

6 
	~"∑r£r.hµ
"

7 
	~"node.hµ
"

8 
	~"ßss_utû.hµ
"

9 
	~"ªmove_∂a˚hﬁdîs.hµ
"

10 
	~"debug.hµ
"

11 
	~<io°ªam
>

12 
	~<deque
>

13 
	~<£t
>

62 
«me•a˚
 
	gSass
 {

65 
	g°d
::
	t∑ú
<
	tCom∂ex_Sñe˘‹
*, 
	tCompound_Sñe˘‹
*> 
	tExãnsi⁄Paú
;

66 
	g°d
::
	tve˘‹
<
	tExãnsi⁄Paú
> 
	tSub£tM≠E¡rõs
;

68 #ifde‡
DEBUG


71 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, c⁄° 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
) {

72 
combö©‹
) {

73 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
: 
os
 << "\" \""; ;

74 
	gCom∂ex_Sñe˘‹
::
PARENT_OF
: 
os
 << "\">\""; ;

75 
	gCom∂ex_Sñe˘‹
::
PRECEDES
: 
os
 << "\"~\""; ;

76 
	gCom∂ex_Sñe˘‹
::
ADJACENT_TO
: 
os
 << "\"+\""; ;

77 
	gCom∂ex_Sñe˘‹
::
REFERENCE
: 
os
 << "\"/\""; ;

80  
	gos
;

84 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, 
	gCompound_Sñe˘‹
& 
	gcompoundSñe˘‹
) {

85 
size_t
 
	gi
 = 0, 
	gL
 = 
compoundSñe˘‹
.
Àngth
(); i < L; ++i) {

86 i‡(
	gi
 > 0Ë
	gos
 << ", ";

87 
	gos
 << 
	gcompoundSñe˘‹
[
i
]->
to_°rög
();

89  
	gos
;

92 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, 
	gSim∂e_Sñe˘‹
& 
	gsim∂eSñe˘‹
) {

93 
	gos
 << 
	gsim∂eSñe˘‹
.
to_°rög
();

94  
	gos
;

98 
¥ötSim∂eSñe˘‹
(
Sim∂e_Sñe˘‹
* 
pSim∂eSñe˘‹
, c⁄° * 
mesßge
=
NULL
, 
boﬁ
 
√wlöe
=
åue
) {

100 i‡(
mesßge
) {

101 
°d
::
˚º
 << 
mesßge
;

104 i‡(
	gpSim∂eSñe˘‹
) {

105 
	g°d
::
˚º
 << "[" << *
pSim∂eSñe˘‹
 << "]";

107 
	g°d
::
˚º
 << "NULL";

110 i‡(
	g√wlöe
) {

111 
	g°d
::
˚º
 << 
°d
::
ídl
;

116 
	g°d
::
	t∑ú
<
	tCompound_Sñe˘‹
*, 
	tCom∂ex_Sñe˘‹
*> 
	tSñsNewSeqPaú
;

117 
	g°d
::
	tve˘‹
<
	tSñsNewSeqPaú
> 
	tSñsNewSeqPaúCﬁÀ˘i⁄
;

121 
¥ötCompoundSñe˘‹
(
Compound_Sñe˘‹
* 
pCompoundSñe˘‹
, c⁄° * 
mesßge
=
NULL
, 
boﬁ
 
√wlöe
=
åue
) {

123 i‡(
mesßge
) {

124 
°d
::
˚º
 << 
mesßge
;

127 i‡(
	gpCompoundSñe˘‹
) {

128 
	g°d
::
˚º
 << "[" << *
pCompoundSñe˘‹
 << "]";

130 
	g°d
::
˚º
 << "NULL";

133 i‡(
	g√wlöe
) {

134 
	g°d
::
˚º
 << 
°d
::
ídl
;

139 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, 
	gCom∂ex_Sñe˘‹
& 
	gcom∂exSñe˘‹
) {

141 
	gos
 << "[";

142 
Com∂ex_Sñe˘‹
* 
	gpIãr
 = &
com∂exSñe˘‹
;

143 
boﬁ
 
	gfú°
 = 
åue
;

144 
	gpIãr
) {

145 i‡(
	gpIãr
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
) {

146 i‡(!
fú°
) {

147 
os
 << ", ";

149 
	gfú°
 = 
Ál£
;

150 
	gos
 << 
	gpIãr
->
combö©‹
();

153 i‡(!
	gfú°
) {

154 
	gos
 << ", ";

156 
	gfú°
 = 
Ál£
;

158 i‡(
	gpIãr
->
hód
()) {

159 
	gos
 << 
	gpIãr
->
hód
()->
to_°rög
();

161 
	gos
 << "NULL_HEAD";

164 
	gpIãr
 = 
pIãr
->
èû
();

166 
	gos
 << "]";

168  
	gos
;

173 
¥ötCom∂exSñe˘‹
(
Com∂ex_Sñe˘‹
* 
pCom∂exSñe˘‹
, c⁄° * 
mesßge
=
NULL
, 
boﬁ
 
√wlöe
=
åue
) {

175 i‡(
mesßge
) {

176 
°d
::
˚º
 << 
mesßge
;

179 i‡(
	gpCom∂exSñe˘‹
) {

180 
	g°d
::
˚º
 << *
pCom∂exSñe˘‹
;

182 
	g°d
::
˚º
 << "NULL";

185 i‡(
	g√wlöe
) {

186 
	g°d
::
˚º
 << 
°d
::
ídl
;

190 
¥ötSñsNewSeqPaúCﬁÀ˘i⁄
(
SñsNewSeqPaúCﬁÀ˘i⁄
& 
cﬁÀ˘i⁄
, c⁄° * 
mesßge
=
NULL
, 
boﬁ
 
√wlöe
=
åue
) {

192 i‡(
mesßge
) {

193 
°d
::
˚º
 << 
mesßge
;

195 
boﬁ
 
	gfú°
 = 
åue
;

196 
	g°d
::
˚º
 << "[";

197 
	gSñsNewSeqPaú
& 
	g∑ú
 : 
cﬁÀ˘i⁄
) {

198 i‡(
fú°
) {

199 
fú°
 = 
Ál£
;

201 
	g°d
::
˚º
 << ", ";

203 
	g°d
::
˚º
 << "[";

204 
Compound_Sñe˘‹
* 
	gpSñs
 = 
∑ú
.
fú°
;

205 
Com∂ex_Sñe˘‹
* 
	gpNewSñe˘‹
 = 
∑ú
.
£c⁄d
;

206 
	g°d
::
˚º
 << "[" << *
pSñs
 << "], ";

207 
¥ötCom∂exSñe˘‹
(
pNewSñe˘‹
, 
NULL
, 
Ál£
);

209 
	g°d
::
˚º
 << "]";

211 i‡(
	g√wlöe
) {

212 
	g°d
::
˚º
 << 
°d
::
ídl
;

217 
¥ötSour˚sSë
(
Sour˚sSë
& 
sour˚s
, 
C⁄ãxt
& 
˘x
, c⁄° * 
mesßge
=
NULL
, 
boﬁ
 
√wlöe
=
åue
) {

219 i‡(
mesßge
) {

220 
°d
::
˚º
 << 
mesßge
;

225 
	g°d
::
	tdeque
<
	t°d
::
	t°rög
> 
	tSour˚Såögs
;

226 
Sour˚Såögs
 
	gsour˚Såögs
;

227 
	gSour˚sSë
::
ôî©‹
 iãøt‹ = 
sour˚s
.
begö
(), 
	gôî©‹End
 = sour˚s.
íd
(); 
	gôî©‹
 !
ôî©‹End
; ++iterator) {

228 
Com∂ex_Sñe˘‹
* 
	gpSour˚
 = *
ôî©‹
;

229 
	g°d
::
°rög°ªam
 
s°ªam
;

230 
	gs°ªam
 << 
com∂exSñe˘‹ToNode
(
pSour˚
, 
˘x
);

231 
	gsour˚Såögs
.
push_back
(
s°ªam
.
°r
());

235 
	g°d
::
s‹t
(
sour˚Såögs
.
begö
(), sour˚Såögs.
íd
());

237 
	g°d
::
˚º
 << "SourcesSet[";

238 
	gSour˚Såögs
::
ôî©‹
 iãøt‹ = 
sour˚Såögs
.
begö
(), 
	gôî©‹End
 = sour˚Såögs.
íd
(); 
	gôî©‹
 !
ôî©‹End
; ++iterator) {

239 
	g°d
::
°rög
 
sour˚
 = *
ôî©‹
;

240 i‡(
	gôî©‹
 !
sour˚Såögs
.
begö
()) {

241 
°d
::
˚º
 << ", ";

243 
	g°d
::
˚º
 << 
sour˚
;

245 
	g°d
::
˚º
 << "]";

247 i‡(
	g√wlöe
) {

248 
	g°d
::
˚º
 << 
°d
::
ídl
;

253 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, 
	gSub£tM≠E¡rõs
& 
	gíåõs
) {

254 
	gos
 << "SUBSET_MAP_ENTRIES[";

256 
	gSub£tM≠E¡rõs
::
ôî©‹
 iãøt‹ = 
íåõs
.
begö
(), 
	gídIãøt‹
 =É¡rõs.
íd
(); 
	gôî©‹
 !
ídIãøt‹
; ++iterator) {

257 
Com∂ex_Sñe˘‹
* 
	gpExtCom∂exSñe˘‹
 = 
ôî©‹
->
fú°
;

258 
Compound_Sñe˘‹
* 
	gpExtCompoundSñe˘‹
 = 
ôî©‹
->
£c⁄d
;

260 i‡(
	gôî©‹
 !
íåõs
.
begö
()) {

261 
os
 << ", ";

264 
	gos
 << "(";

266 i‡(
	gpExtCom∂exSñe˘‹
) {

267 
	g°d
::
˚º
 << *
pExtCom∂exSñe˘‹
;

269 
	g°d
::
˚º
 << "NULL";

272 
	gos
 << " -> ";

274 i‡(
	gpExtCompoundSñe˘‹
) {

275 
	g°d
::
˚º
 << *
pExtCompoundSñe˘‹
;

277 
	g°d
::
˚º
 << "NULL";

280 
	gos
 << ")";

284 
	gos
 << "]";

286  
	gos
;

290 
boﬁ
 
∑ª¡Su≥r£À˘‹
(
Com∂ex_Sñe˘‹
* 
pO√
, Com∂ex_Sñe˘‹* 
pTwo
, 
C⁄ãxt
& 
˘x
) {

293 
Posôi⁄
 
noPosôi⁄
(-1, -1, -1);

294 
Ty≥_Sñe˘‹
 
ÁkeP¨ít
(
P¨£rSèã
("[FAKE]"), "temp");

295 
Compound_Sñe˘‹
 
ÁkeHód
(
P¨£rSèã
("[FAKE]"), 1 );

296 
	gÁkeHód
.
ñemíts
().
push_back
(&
ÁkeP¨ít
);

297 
Com∂ex_Sñe˘‹
 
ÁkeP¨ítC⁄èöî
(
P¨£rSèã
("[FAKE]"), Com∂ex_Sñe˘‹::
ANCESTOR_OF
, &
ÁkeHód
 , 
NULL
 );

299 
	gpO√
->
£t_ö√rmo°
(&
ÁkeP¨ítC⁄èöî
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
);

300 
	gpTwo
->
£t_ö√rmo°
(&
ÁkeP¨ítC⁄èöî
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
);

302 
boﬁ
 
	gisSu≥r£À˘‹
 = 
pO√
->
is_su≥r£À˘‹_of
(
pTwo
);

304 
	gpO√
->
˛ór_ö√rmo°
();

305 
	gpTwo
->
˛ór_ö√rmo°
();

307  
	gisSu≥r£À˘‹
;

310 
nodeToCom∂exSñe˘‹Deque
(c⁄° 
Node
& 
node
, 
Com∂exSñe˘‹Deque
& 
out
, 
C⁄ãxt
& 
˘x
) {

311 
	gNodeDeque
::
ôî©‹
 
ôî
 = 
node
.
cﬁÀ˘i⁄
()->
begö
(), 
	gôîEnd
 =Çode.cﬁÀ˘i⁄()->
íd
(); 
	gôî
 !
ôîEnd
; iter++) {

312 
	gNode
& 
	gchûd
 = *
ôî
;

313 
	gout
.
push_back
(
nodeToCom∂exSñe˘‹
(
chûd
, 
˘x
));

317 
Node
 
com∂exSñe˘‹DequeToNode
(c⁄° 
Com∂exSñe˘‹Deque
& 
deque
, 
C⁄ãxt
& 
˘x
) {

318 
Node
 
	gªsu…
 = Node::
¸óãCﬁÀ˘i⁄
();

320 
	gCom∂exSñe˘‹Deque
::
c⁄°_ôî©‹
 
ôî
 = 
deque
.
begö
(), 
	gôîEnd
 = deque.
íd
(); 
	gôî
 !
ôîEnd
; iter++) {

321 
Com∂ex_Sñe˘‹
* 
	gpChûd
 = *
ôî
;

322 
	gªsu…
.
cﬁÀ˘i⁄
()->
push_back
(
com∂exSñe˘‹ToNode
(
pChûd
, 
˘x
));

325  
	gªsu…
;

328 ˛as†
	cLcsCﬁÀ˘i⁄Com∑øt‹
 {

329 
	gpublic
:

330 
LcsCﬁÀ˘i⁄Com∑øt‹
(
C⁄ãxt
& 
˘x
Ë: 
mCtx
(ctx) {}

332 
C⁄ãxt
& 
mCtx
;

334 
boﬁ
 
›î©‹
()(
Com∂ex_Sñe˘‹
* 
	gpO√
, Com∂ex_Sñe˘‹* 
	gpTwo
, 
	gCom∂ex_Sñe˘‹
*& 
	gpOut
) const {

345 i‡(
£À˘‹s_equÆ
(*
pO√
, *
pTwo
, 
åue
 )) {

346 
	gpOut
 = 
pO√
;

347  
	gåue
;

350 i‡(
	gpO√
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
 || 
pTwo
->combinator() != Complex_Selector::ANCESTOR_OF) {

351  
Ál£
;

354 i‡(
∑ª¡Su≥r£À˘‹
(
pO√
, 
pTwo
, 
mCtx
)) {

355 
	gpOut
 = 
pTwo
;

356  
	gåue
;

359 i‡(
∑ª¡Su≥r£À˘‹
(
pTwo
, 
pO√
, 
mCtx
)) {

360 
	gpOut
 = 
pO√
;

361  
	gåue
;

364  
	gÁl£
;

375 
	$lcs_backåa˚
(c⁄° 
LCSTabÀ
& 
c
, 
Com∂exSñe˘‹Deque
& 
x
, Com∂exSñe˘‹Deque& 
y
, 
i
, 
j
, c⁄° 
LcsCﬁÀ˘i⁄Com∑øt‹
& 
com∑øt‹
, Com∂exSñe˘‹Deque& 
out
) {

379 i‡(
i
 =0 || 
j
 == 0) {

380 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING EMPTY")

385 
Com∂ex_Sñe˘‹
* 
pCom∑ªOut
 = 
NULL
;

386 i‡(
	`com∑øt‹
(
x
[
i
], 
y
[
j
], 
pCom∑ªOut
)) {

387 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING AFTER ELEM COMPARE")

388 
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
 - 1, 
j
 - 1, 
com∑øt‹
, 
out
);

389 
out
.
	`push_back
(
pCom∑ªOut
);

393 i‡(
c
[
i
][
j
 - 1] > c[i - 1][j]) {

394 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING AFTER TABLE COMPARE")

395 
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
, 
j
 - 1, 
com∑øt‹
, 
out
);

399 
	`DEBUG_PRINTLN
(
LCS
, "FINAL RETURN")

400 
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
 - 1, 
j
, 
com∑øt‹
, 
out
);

402 
	}
}

410 
	$lcs_èbÀ
(c⁄° 
Com∂exSñe˘‹Deque
& 
x
, c⁄° Com∂exSñe˘‹Deque& 
y
, c⁄° 
LcsCﬁÀ˘i⁄Com∑øt‹
& 
com∑øt‹
, 
LCSTabÀ
& 
out
) {

414 
LCSTabÀ
 
	`c
(
x
.
	`size
(), 
°d
::
ve˘‹
<>(
y
.size()));

420 
size_t
 
i
 = 1; i < 
x
.
	`size
(); i++) {

421 
size_t
 
j
 = 1; j < 
y
.
	`size
(); j++) {

422 
Com∂ex_Sñe˘‹
* 
pCom∑ªOut
 = 
NULL
;

424 i‡(
	`com∑øt‹
(
x
[
i
], 
y
[
j
], 
pCom∑ªOut
)) {

425 
c
[
i
][
j
] = c[i - 1][j - 1] + 1;

427 
c
[
i
][
j
] = 
°d
::
	`max
(c[i][j - 1], c[i - 1][j]);

432 
out
 = 
c
;

433 
	}
}

449 
	$lcs
(
Com∂exSñe˘‹Deque
& 
x
, Com∂exSñe˘‹Deque& 
y
, c⁄° 
LcsCﬁÀ˘i⁄Com∑øt‹
& 
com∑øt‹
, 
C⁄ãxt
& 
˘x
, Com∂exSñe˘‹Deque& 
out
) {

453 
x
.
	`push_‰⁄t
(
NULL
);

454 
y
.
	`push_‰⁄t
(
NULL
);

456 
LCSTabÀ
 
èbÀ
;

457 
	`lcs_èbÀ
(
x
, 
y
, 
com∑øt‹
, 
èbÀ
);

459  
	`lcs_backåa˚
(
èbÀ
, 
x
, 
y
, 
°©ic_ˇ°
<>(x.
	`size
()Ë- 1, sètic_ˇ°<>(y.size()Ë- 1, 
com∑øt‹
, 
out
);

460 
	}
}

529 
Node
 
	$åim
(
Node
& 
£q£s
, 
C⁄ãxt
& 
˘x
, 
boﬁ
 
isRïœ˚
) {

533 i‡(
£q£s
.
	`cﬁÀ˘i⁄
()->
	`size
() > 100) {

534  
£q£s
;

538 
	`DEBUG_PRINTLN
(
TRIM
, "TRIM: " << 
£q£s
)

541 
Node
 
ªsu…
 = Node::
	`¸óãCﬁÀ˘i⁄
();

542 
ªsu…
.
	`∂us
(
£q£s
);

544 
	`DEBUG_PRINTLN
(
TRIM
, "RESULT INITIAL: " << 
ªsu…
)

549 
toTrimIndex
 = 0;

551 
NodeDeque
::
ôî©‹
 
£q£sIãr
 = 
£q£s
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
£q£sIãrEnd
 = seq£s.cﬁÀ˘i⁄()->
	`íd
(); seqsesIter != seqsesIterEnd; ++seqsesIter) {

552 
Node
& 
£qs1
 = *
£q£sIãr
;

554 
	`DEBUG_PRINTLN
(
TRIM
, "SEQS1: " << 
£qs1
 << " " << 
toTrimIndex
)

556 
Node
 
ãmpResu…
 = Node::
	`¸óãCﬁÀ˘i⁄
();

557 
ãmpResu…
.
gŸ_löe_„ed
 = 
£qs1
.got_line_feed;

559 
NodeDeque
::
ôî©‹
 
£qs1Iãr
 = 
£qs1
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
£qs1EndIãr
 = seqs1.cﬁÀ˘i⁄()->
	`íd
(); seqs1Iter != seqs1EndIter; ++seqs1Iter) {

560 
Node
& 
£q1
 = *
£qs1Iãr
;

562 
Com∂ex_Sñe˘‹
* 
pSeq1
 = 
	`nodeToCom∂exSñe˘‹
(
£q1
, 
˘x
);

572 
maxS≥cificôy
 = 
isRïœ˚
 ? 
pSeq1
->
	`•ecificôy
() : 0;

573 
Sour˚sSë
 
sour˚s
 = 
pSeq1
->
	`sour˚s
();

575 
	`DEBUG_PRINTLN
(
TRIM
, "TRIM SEQ1: " << 
£q1
)

576 
	`DEBUG_EXEC
(
TRIM
, 
	`¥ötSour˚sSë
(
sour˚s
, 
˘x
, "TRIM SOURCES: "))

578 
Sour˚sSë
::
ôî©‹
 
sour˚sSëIãøt‹
 = 
sour˚s
.
	`begö
(), 
sour˚sSëIãøt‹End
 = sour˚s.
	`íd
(); sourcesSetIterator != sourcesSetIteratorEnd; ++sourcesSetIterator) {

579 c⁄° 
Com∂ex_Sñe˘‹
* c⁄° 
pCuºítSñe˘‹
 = *
sour˚sSëIãøt‹
;

580 
maxS≥cificôy
 = 
°d
::
	`max
(maxS≥cificôy, 
pCuºítSñe˘‹
->
	`•ecificôy
());

583 
	`DEBUG_PRINTLN
(
TRIM
, "MAX SPECIFICITY: " << 
maxS≥cificôy
)

585 
boﬁ
 
isM‹eS≥cificOuãr
 = 
Ál£
;

587 
ªsu…Index
 = 0;

589 
NodeDeque
::
ôî©‹
 
ªsu…Iãr
 = 
ªsu…
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
ªsu…IãrEnd
 =Ñesu….cﬁÀ˘i⁄()->
	`íd
();ÑesultIter !=ÑesultIterEnd; ++resultIter) {

590 
Node
& 
£qs2
 = *
ªsu…Iãr
;

592 
	`DEBUG_PRINTLN
(
TRIM
, "SEQS1: " << 
£qs1
)

593 
	`DEBUG_PRINTLN
(
TRIM
, "SEQS2: " << 
£qs2
)

599 i‡(
£qs1
.
	`cﬁÀ˘i⁄
(Ë=
£qs2
.collection()) {

600 
	`DEBUG_PRINTLN
(
TRIM
, "CONTINUE")

604 
boﬁ
 
isM‹eS≥cificI¬î
 = 
Ál£
;

606 
NodeDeque
::
ôî©‹
 
£qs2Iãr
 = 
£qs2
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
£qs2IãrEnd
 = seqs2.cﬁÀ˘i⁄()->
	`íd
(); seqs2Iter != seqs2IterEnd; ++seqs2Iter) {

607 
Node
& 
£q2
 = *
£qs2Iãr
;

609 
Com∂ex_Sñe˘‹
* 
pSeq2
 = 
	`nodeToCom∂exSñe˘‹
(
£q2
, 
˘x
);

611 
	`DEBUG_PRINTLN
(
TRIM
, "SEQ2 SPEC: " << 
pSeq2
->
	`•ecificôy
())

612 
	`DEBUG_PRINTLN
(
TRIM
, "IS SPEC: " << 
pSeq2
->
	`•ecificôy
(Ë<< " >" << 
maxS≥cificôy
 << " " << (pSeq2->specificity() >= maxSpecificity ? "true" : "false"))

613 
	`DEBUG_PRINTLN
(
TRIM
, "IS SUPER: " << (
pSeq2
->
	`is_su≥r£À˘‹_of
(
pSeq1
) ? "true" : "false"))

615 
isM‹eS≥cificI¬î
 = 
pSeq2
->
	`•ecificôy
(Ë>
maxS≥cificôy
 &&ÖSeq2->
	`is_su≥r£À˘‹_of
(
pSeq1
);

617 i‡(
isM‹eS≥cificI¬î
) {

618 
	`DEBUG_PRINTLN
(
TRIM
, "FOUND MORE SPECIFIC")

624 i‡(
isM‹eS≥cificI¬î
) {

625 
isM‹eS≥cificOuãr
 = 
åue
;

629 
ªsu…Index
++;

632 i‡(!
isM‹eS≥cificOuãr
) {

633 
	`DEBUG_PRINTLN
(
TRIM
, "PUSHING: " << 
£q1
)

634 
ãmpResu…
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£q1
);

639 
	`DEBUG_PRINTLN
(
TRIM
, "RESULT BEFORE ASSIGN: " << 
ªsu…
)

640 
	`DEBUG_PRINTLN
(
TRIM
, "TEMP RESULT: " << 
toTrimIndex
 << " " << 
ãmpResu…
)

641 (*
ªsu…
.
	`cﬁÀ˘i⁄
())[
toTrimIndex
] = 
ãmpResu…
;

643 
toTrimIndex
++;

645 
	`DEBUG_PRINTLN
(
TRIM
, "RESULT: " << 
ªsu…
)

648  
ªsu…
;

649 
	}
}

653 
boﬁ
 
	$∑ª¡Su≥r£À˘‹
(c⁄° 
Node
& 
⁄e
, c⁄° Node& 
two
, 
C⁄ãxt
& 
˘x
) {

656 
Posôi⁄
 
	`noPosôi⁄
(-1, -1, -1);

657 
Ty≥_Sñe˘‹
 
	`ÁkeP¨ít
(
	`P¨£rSèã
("[FAKE]"), "temp");

658 
Compound_Sñe˘‹
 
	`ÁkeHód
(
	`P¨£rSèã
("[FAKE]"), 1 );

659 
ÁkeHód
.
	`ñemíts
().
	`push_back
(&
ÁkeP¨ít
);

660 
Com∂ex_Sñe˘‹
 
	`ÁkeP¨ítC⁄èöî
(
	`P¨£rSèã
("[FAKE]"), Com∂ex_Sñe˘‹::
ANCESTOR_OF
, &
ÁkeHód
 , 
NULL
 );

662 
Com∂ex_Sñe˘‹
* 
pO√WôhFakeP¨ít
 = 
	`nodeToCom∂exSñe˘‹
(
⁄e
, 
˘x
);

663 
pO√WôhFakeP¨ít
->
	`£t_ö√rmo°
(&
ÁkeP¨ítC⁄èöî
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
);

664 
Com∂ex_Sñe˘‹
* 
pTwoWôhFakeP¨ít
 = 
	`nodeToCom∂exSñe˘‹
(
two
, 
˘x
);

665 
pTwoWôhFakeP¨ít
->
	`£t_ö√rmo°
(&
ÁkeP¨ítC⁄èöî
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
);

667  
pO√WôhFakeP¨ít
->
	`is_su≥r£À˘‹_of
(
pTwoWôhFakeP¨ít
);

668 
	}
}

671 ˛as†
	cP¨ítSu≥r£À˘‹Chunkî
 {

672 
	gpublic
:

673 
P¨ítSu≥r£À˘‹Chunkî
(
Node
& 
lcs
, 
C⁄ãxt
& 
˘x
Ë: 
mLcs
÷cs), 
mCtx
(ctx) {}

674 
	gNode
& 
	gmLcs
;

675 
	gC⁄ãxt
& 
	gmCtx
;

677 
boﬁ
 
›î©‹
()(c⁄° 
	gNode
& 
	g£q
) const {

679 i‡(
	g£q
.
cﬁÀ˘i⁄
()->
size
(Ë=0Ë 
Ál£
;

680  
∑ª¡Su≥r£À˘‹
(
£q
.
cﬁÀ˘i⁄
()->
‰⁄t
(), 
mLcs
.cﬁÀ˘i⁄()->‰⁄t(), 
mCtx
);

684 ˛as†
	cSubwóveEm±yChunkî
 {

685 
	gpublic
:

686 
boﬁ
 
›î©‹
()(c⁄° 
Node
& 
£q
) const {

689  
£q
.
cﬁÀ˘i⁄
()->
em±y
();

725 
	gãm∂©e
<
ty≥«me
 
	gChunkîTy≥
>

726 
Node
 
	$chunks
(
Node
& 
£q1
, Node& 
£q2
, c⁄° 
ChunkîTy≥
& 
chunkî
) {

727 
Node
 
chunk1
 = Node::
	`¸óãCﬁÀ˘i⁄
();

728 
£q1
.
	`cﬁÀ˘i⁄
()->
	`size
(Ë&& !
	`chunkî
(seq1)) {

729 
chunk1
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£q1
.cﬁÀ˘i⁄()->
	`‰⁄t
());

730 
£q1
.
	`cﬁÀ˘i⁄
()->
	`p›_‰⁄t
();

733 
Node
 
chunk2
 = Node::
	`¸óãCﬁÀ˘i⁄
();

734 !
	`chunkî
(
£q2
)) {

735 
chunk2
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£q2
.cﬁÀ˘i⁄()->
	`‰⁄t
());

736 
£q2
.
	`cﬁÀ˘i⁄
()->
	`p›_‰⁄t
();

739 i‡(
chunk1
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& 
chunk2
.collection()->empty()) {

740 
	`DEBUG_PRINTLN
(
CHUNKS
, "RETURNING BOTH EMPTY")

741  
Node
::
	`¸óãCﬁÀ˘i⁄
();

744 i‡(
chunk1
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

745 
Node
 
chunk2Wøµî
 = Node::
	`¸óãCﬁÀ˘i⁄
();

746 
chunk2Wøµî
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
chunk2
);

747 
	`DEBUG_PRINTLN
(
CHUNKS
, "RETURNING ONE EMPTY")

748  
chunk2Wøµî
;

751 i‡(
chunk2
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

752 
Node
 
chunk1Wøµî
 = Node::
	`¸óãCﬁÀ˘i⁄
();

753 
chunk1Wøµî
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
chunk1
);

754 
	`DEBUG_PRINTLN
(
CHUNKS
, "RETURNING TWO EMPTY")

755  
chunk1Wøµî
;

758 
Node
 
≥rms
 = Node::
	`¸óãCﬁÀ˘i⁄
();

760 
Node
 
fú°Pîmuèti⁄
 = Node::
	`¸óãCﬁÀ˘i⁄
();

761 
fú°Pîmuèti⁄
.
	`cﬁÀ˘i⁄
()->
	`ö£π
(fú°Pîmuèti⁄.cﬁÀ˘i⁄()->
	`íd
(), 
chunk1
.cﬁÀ˘i⁄()->
	`begö
(), chunk1.collection()->end());

762 
fú°Pîmuèti⁄
.
	`cﬁÀ˘i⁄
()->
	`ö£π
(fú°Pîmuèti⁄.cﬁÀ˘i⁄()->
	`íd
(), 
chunk2
.cﬁÀ˘i⁄()->
	`begö
(), chunk2.collection()->end());

763 
≥rms
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
fú°Pîmuèti⁄
);

765 
Node
 
£c⁄dPîmuèti⁄
 = Node::
	`¸óãCﬁÀ˘i⁄
();

766 
£c⁄dPîmuèti⁄
.
	`cﬁÀ˘i⁄
()->
	`ö£π
(£c⁄dPîmuèti⁄.cﬁÀ˘i⁄()->
	`íd
(), 
chunk2
.cﬁÀ˘i⁄()->
	`begö
(), chunk2.collection()->end());

767 
£c⁄dPîmuèti⁄
.
	`cﬁÀ˘i⁄
()->
	`ö£π
(£c⁄dPîmuèti⁄.cﬁÀ˘i⁄()->
	`íd
(), 
chunk1
.cﬁÀ˘i⁄()->
	`begö
(), chunk1.collection()->end());

768 
≥rms
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£c⁄dPîmuèti⁄
);

770 
	`DEBUG_PRINTLN
(
CHUNKS
, "RETURNING PERM")

772  
≥rms
;

773 
	}
}

776 
Node
 
	$groupSñe˘‹s
(
Node
& 
£q
, 
C⁄ãxt
& 
˘x
) {

777 
Node
 
√wSeq
 = Node::
	`¸óãCﬁÀ˘i⁄
();

779 
Node
 
èû
 = Node::
	`¸óãCﬁÀ˘i⁄
();

780 
èû
.
	`∂us
(
£q
);

782 !
èû
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

783 
Node
 
hód
 = Node::
	`¸óãCﬁÀ˘i⁄
();

786 
hód
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
èû
.cﬁÀ˘i⁄()->
	`‰⁄t
());

787 
èû
.
	`cﬁÀ˘i⁄
()->
	`p›_‰⁄t
();

788 } !
èû
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& (
hód
.cﬁÀ˘i⁄()->
	`back
().
	`isCombö©‹
(Ë||Åaû.cﬁÀ˘i⁄()->
	`‰⁄t
().isCombinator()));

790 
√wSeq
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
hód
);

793  
√wSeq
;

794 
	}
}

797 
	$gëAndRemoveInôülOps
(
Node
& 
£q
, Node& 
›s
) {

798 
NodeDeque
& 
£qCﬁÀ˘i⁄
 = *(
£q
.
	`cﬁÀ˘i⁄
());

799 
NodeDeque
& 
›sCﬁÀ˘i⁄
 = *(
›s
.
	`cﬁÀ˘i⁄
());

801 
£qCﬁÀ˘i⁄
.
	`size
(Ë> 0 && seqCﬁÀ˘i⁄.
	`‰⁄t
().
	`isCombö©‹
()) {

802 
›sCﬁÀ˘i⁄
.
	`push_back
(
£qCﬁÀ˘i⁄
.
	`‰⁄t
());

803 
£qCﬁÀ˘i⁄
.
	`p›_‰⁄t
();

805 
	}
}

808 
	$gëAndRemoveFöÆOps
(
Node
& 
£q
, Node& 
›s
) {

809 
NodeDeque
& 
£qCﬁÀ˘i⁄
 = *(
£q
.
	`cﬁÀ˘i⁄
());

810 
NodeDeque
& 
›sCﬁÀ˘i⁄
 = *(
›s
.
	`cﬁÀ˘i⁄
());

812 
£qCﬁÀ˘i⁄
.
	`size
(Ë> 0 && seqCﬁÀ˘i⁄.
	`back
().
	`isCombö©‹
()) {

813 
›sCﬁÀ˘i⁄
.
	`push_back
(
£qCﬁÀ˘i⁄
.
	`back
());

814 
£qCﬁÀ˘i⁄
.
	`p›_back
();

816 
	}
}

836 
Node
 
	$mîgeInôülOps
(
Node
& 
£q1
, Node& 
£q2
, 
C⁄ãxt
& 
˘x
) {

837 
Node
 
›s1
 = Node::
	`¸óãCﬁÀ˘i⁄
();

838 
Node
 
›s2
 = Node::
	`¸óãCﬁÀ˘i⁄
();

840 
	`gëAndRemoveInôülOps
(
£q1
, 
›s1
);

841 
	`gëAndRemoveInôülOps
(
£q2
, 
›s2
);

849 
DeÁu…LcsCom∑øt‹
 
lcsDeÁu…Com∑øt‹
;

850 
Node
 
›sLcs
 = 
	`lcs
(
›s1
, 
›s2
, 
lcsDeÁu…Com∑øt‹
, 
˘x
);

852 i‡(!(
›sLcs
 =
›s1
 || opsLc†=
›s2
)) {

853  
Node
::
	`¸óãNû
();

859  (
›s1
.
	`cﬁÀ˘i⁄
()->
	`size
(Ë> 
›s2
.collection()->size() ? ops1 : ops2);

860 
	}
}

927 
Node
 
	$mîgeFöÆOps
(
Node
& 
£q1
, Node& 
£q2
, 
C⁄ãxt
& 
˘x
, Node& 
ªs
) {

929 
Node
 
›s1
 = Node::
	`¸óãCﬁÀ˘i⁄
();

930 
Node
 
›s2
 = Node::
	`¸óãCﬁÀ˘i⁄
();

932 
	`gëAndRemoveFöÆOps
(
£q1
, 
›s1
);

933 
	`gëAndRemoveFöÆOps
(
£q2
, 
›s2
);

939 i‡(
›s1
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& 
›s2
.collection()->empty()) {

940  
ªs
;

943 i‡(
›s1
.
	`cﬁÀ˘i⁄
()->
	`size
(Ë> 1 || 
›s2
.collection()->size() > 1) {

944 
DeÁu…LcsCom∑øt‹
 
lcsDeÁu…Com∑øt‹
;

945 
Node
 
›sLcs
 = 
	`lcs
(
›s1
, 
›s2
, 
lcsDeÁu…Com∑øt‹
, 
˘x
);

949 i‡(!(
›sLcs
 =
›s1
 || opsLc†=
›s2
)) {

950  
Node
::
	`¸óãNû
();

953 i‡(
›s1
.
	`cﬁÀ˘i⁄
()->
	`size
(Ë> 
›s2
.collection()->size()) {

954 
ªs
.
	`cﬁÀ˘i⁄
()->
	`ö£π
‘es.cﬁÀ˘i⁄()->
	`begö
(), 
›s1
.cﬁÀ˘i⁄()->
	`rbegö
(), ops1.cﬁÀ˘i⁄()->
	`ªnd
());

956 
ªs
.
	`cﬁÀ˘i⁄
()->
	`ö£π
‘es.cﬁÀ˘i⁄()->
	`begö
(), 
›s2
.cﬁÀ˘i⁄()->
	`rbegö
(), ops2.cﬁÀ˘i⁄()->
	`ªnd
());

959  
ªs
;

962 i‡(!
›s1
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& !
›s2
.collection()->empty()) {

964 
Node
 
›1
 = 
›s1
.
	`cﬁÀ˘i⁄
()->
	`‰⁄t
();

965 
Node
 
›2
 = 
›s2
.
	`cﬁÀ˘i⁄
()->
	`‰⁄t
();

967 
Node
 
£l1
 = 
£q1
.
	`cﬁÀ˘i⁄
()->
	`back
();

968 
£q1
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

970 
Node
 
£l2
 = 
£q2
.
	`cﬁÀ˘i⁄
()->
	`back
();

971 
£q2
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

973 i‡(
›1
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PRECEDES
 && 
›2
.combinator() == Complex_Selector::PRECEDES) {

975 i‡(
£l1
.
	`£À˘‹
()->
	`is_su≥r£À˘‹_of
(
£l2
.selector())) {

977 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›1
 );

978 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£l2
);

980 } i‡(
£l2
.
	`£À˘‹
()->
	`is_su≥r£À˘‹_of
(
£l1
.selector())) {

982 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›1
 );

983 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£l1
);

987 
	`DEBUG_PRINTLN
(
ALL
, "£l1: " << 
£l1
)

988 
	`DEBUG_PRINTLN
(
ALL
, "£l2: " << 
£l2
)

990 
Com∂ex_Sñe˘‹
* 
pMîgedWøµî
 = 
£l1
.
	`£À˘‹
()->
	`˛⁄e
(
˘x
);

992 
Compound_Sñe˘‹
* 
pMîged
 = 
£l1
.
	`£À˘‹
()->
	`hód
()->
	`unify_wôh
(
£l2
.£À˘‹()->hód(), 
˘x
);

993 
pMîgedWøµî
->
	`hód
(
pMîged
);

995 
	`DEBUG_EXEC
(
ALL
, 
	`¥ötCompoundSñe˘‹
(
pMîged
, "MERGED: "))

997 
Node
 
√wRes
 = Node::
	`¸óãCﬁÀ˘i⁄
();

999 
Node
 
fú°Pîm
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1000 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l1
);

1001 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1002 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l2
);

1003 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1004 
√wRes
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
fú°Pîm
);

1006 
Node
 
£c⁄dPîm
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1007 
£c⁄dPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l2
);

1008 
£c⁄dPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1009 
£c⁄dPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l1
);

1010 
£c⁄dPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1011 
√wRes
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£c⁄dPîm
);

1013 i‡(
pMîged
) {

1014 
Node
 
mîgedPîm
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1015 
mîgedPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãSñe˘‹
(
pMîgedWøµî
, 
˘x
));

1016 
mîgedPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1017 
√wRes
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
mîgedPîm
);

1020 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
√wRes
);

1022 
	`DEBUG_PRINTLN
(
ALL
, "RESULT: " << 
ªs
)

1026 } i‡(((
›1
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PRECEDES
 && 
›2
.combö©‹(Ë=Com∂ex_Sñe˘‹::
ADJACENT_TO
)) || ((op1.combinator() == Complex_Selector::ADJACENT_TO && op2.combinator() == Complex_Selector::PRECEDES))) {

1028 
Node
 
tûdeSñ
 = 
£l1
;

1029 
Node
 
tûdeOp
 = 
›1
;

1030 
Node
 
∂usSñ
 = 
£l2
;

1031 
Node
 
∂usOp
 = 
›2
;

1032 i‡(
›1
.
	`combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
PRECEDES
) {

1033 
tûdeSñ
 = 
£l2
;

1034 
tûdeOp
 = 
›2
;

1035 
∂usSñ
 = 
£l1
;

1036 
∂usOp
 = 
›1
;

1039 i‡(
tûdeSñ
.
	`£À˘‹
()->
	`is_su≥r£À˘‹_of
(
∂usSñ
.selector())) {

1041 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
∂usOp
);

1042 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
∂usSñ
);

1046 
	`DEBUG_PRINTLN
(
ALL
, "PLUS SEL: " << 
∂usSñ
)

1047 
	`DEBUG_PRINTLN
(
ALL
, "TILDE SEL: " << 
tûdeSñ
)

1049 
Com∂ex_Sñe˘‹
* 
pMîgedWøµî
 = 
∂usSñ
.
	`£À˘‹
()->
	`˛⁄e
(
˘x
);

1051 
Compound_Sñe˘‹
* 
pMîged
 = 
∂usSñ
.
	`£À˘‹
()->
	`hód
()->
	`unify_wôh
(
tûdeSñ
.£À˘‹()->hód(), 
˘x
);

1052 
pMîgedWøµî
->
	`hód
(
pMîged
);

1054 
	`DEBUG_EXEC
(
ALL
, 
	`¥ötCompoundSñe˘‹
(
pMîged
, "MERGED: "))

1056 
Node
 
√wRes
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1058 
Node
 
fú°Pîm
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1059 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
tûdeSñ
);

1060 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
PRECEDES
));

1061 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
∂usSñ
);

1062 
fú°Pîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
ADJACENT_TO
));

1063 
√wRes
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
fú°Pîm
);

1065 i‡(
pMîged
) {

1066 
Node
 
mîgedPîm
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1067 
mîgedPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãSñe˘‹
(
pMîgedWøµî
, 
˘x
));

1068 
mîgedPîm
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCombö©‹
(
Com∂ex_Sñe˘‹
::
ADJACENT_TO
));

1069 
√wRes
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
mîgedPîm
);

1072 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
√wRes
);

1074 
	`DEBUG_PRINTLN
(
ALL
, "RESULT: " << 
ªs
)

1077 } i‡(
›1
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PARENT_OF
 && (
›2
.combö©‹(Ë=Com∂ex_Sñe˘‹::
PRECEDES
 || op2.combö©‹(Ë=Com∂ex_Sñe˘‹::
ADJACENT_TO
)) {

1079 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›2
);

1080 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£l2
);

1082 
£q1
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l1
);

1083 
£q1
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
›1
);

1085 } i‡(
›2
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PARENT_OF
 && (
›1
.combö©‹(Ë=Com∂ex_Sñe˘‹::
PRECEDES
 || op1.combö©‹(Ë=Com∂ex_Sñe˘‹::
ADJACENT_TO
)) {

1087 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›1
);

1088 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£l1
);

1090 
£q2
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£l2
);

1091 
£q2
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
›2
);

1093 } i‡(
›1
.
	`combö©‹
(Ë=
›2
.combinator()) {

1095 
	`DEBUG_PRINTLN
(
ALL
, "£l1: " << 
£l1
)

1096 
	`DEBUG_PRINTLN
(
ALL
, "£l2: " << 
£l2
)

1098 
Com∂ex_Sñe˘‹
* 
pMîgedWøµî
 = 
£l1
.
	`£À˘‹
()->
	`˛⁄e
(
˘x
);

1100 
Compound_Sñe˘‹
* 
pMîged
 = 
£l1
.
	`£À˘‹
()->
	`hód
()->
	`unify_wôh
(
£l2
.£À˘‹()->hód(), 
˘x
);

1101 
pMîgedWøµî
->
	`hód
(
pMîged
);

1103 
	`DEBUG_EXEC
(
ALL
, 
	`¥ötCompoundSñe˘‹
(
pMîged
, "MERGED: "))

1105 i‡(!
pMîged
) {

1106  
Node
::
	`¸óãNû
();

1109 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›1
);

1110 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
Node
::
	`¸óãSñe˘‹
(
pMîgedWøµî
, 
˘x
));

1112 
	`DEBUG_PRINTLN
(
ALL
, "RESULT: " << 
ªs
)

1115  
Node
::
	`¸óãNû
();

1118  
	`mîgeFöÆOps
(
£q1
, 
£q2
, 
˘x
, 
ªs
);

1120 } i‡(!
›s1
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

1122 
Node
 
›1
 = 
›s1
.
	`cﬁÀ˘i⁄
()->
	`‰⁄t
();

1124 i‡(
›1
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PARENT_OF
 && !
£q2
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& seq2.cﬁÀ˘i⁄()->
	`back
().
	`£À˘‹
()->
	`is_su≥r£À˘‹_of
(
£q1
.collection()->back().selector())) {

1125 
£q2
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

1129 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›1
);

1130 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£q1
.cﬁÀ˘i⁄()->
	`back
());

1131 
£q1
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

1133  
	`mîgeFöÆOps
(
£q1
, 
£q2
, 
˘x
, 
ªs
);

1137 
Node
 
›2
 = 
›s2
.
	`cﬁÀ˘i⁄
()->
	`‰⁄t
();

1139 i‡(
›2
.
	`combö©‹
(Ë=
Com∂ex_Sñe˘‹
::
PARENT_OF
 && !
£q1
.
	`cﬁÀ˘i⁄
()->
	`em±y
(Ë&& seq1.cﬁÀ˘i⁄()->
	`back
().
	`£À˘‹
()->
	`is_su≥r£À˘‹_of
(
£q2
.collection()->back().selector())) {

1140 
£q1
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

1143 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
›2
);

1144 
ªs
.
	`cﬁÀ˘i⁄
()->
	`push_‰⁄t
(
£q2
.cﬁÀ˘i⁄()->
	`back
());

1145 
£q2
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

1147  
	`mîgeFöÆOps
(
£q1
, 
£q2
, 
˘x
, 
ªs
);

1151 
	}
}

1190 
Node
 
	gExãnd
::
	$subwóve
(
Node
& 
⁄e
, Node& 
two
, 
C⁄ãxt
& 
˘x
) {

1192 i‡(
⁄e
.
	`cﬁÀ˘i⁄
()->
	`size
() == 0) {

1193 
Node
 
out
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1194 
out
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
two
);

1195  
out
;

1197 i‡(
two
.
	`cﬁÀ˘i⁄
()->
	`size
() == 0) {

1198 
Node
 
out
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1199 
out
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
⁄e
);

1200  
out
;

1205 
Node
 
£q1
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1206 
£q1
.
	`∂us
(
⁄e
);

1207 
Node
 
£q2
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1208 
£q2
.
	`∂us
(
two
);

1210 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "SUBWEAVE ONE: " << 
£q1
)

1211 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "SUBWEAVE TWO: " << 
£q2
)

1213 
Node
 
öô
 = 
	`mîgeInôülOps
(
£q1
, 
£q2
, 
˘x
);

1214 i‡(
öô
.
	`isNû
()) {

1215  
Node
::
	`¸óãNû
();

1218 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "INIT: " << 
öô
)

1220 
Node
 
ªs
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1221 
Node
 
fö
 = 
	`mîgeFöÆOps
(
£q1
, 
£q2
, 
˘x
, 
ªs
);

1222 i‡(
fö
.
	`isNû
()) {

1223  
Node
::
	`¸óãNû
();

1226 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "FIN: " << 
fö
)

1232 
NodeDeque
::
ôî©‹
 
föIãr
 = 
fö
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
föEndIãr
 = fö.cﬁÀ˘i⁄()->
	`íd
();

1233 
föIãr
 !
föEndIãr
; ++finIter) {

1235 
Node
& 
chûdNode
 = *
föIãr
;

1237 i‡(!
chûdNode
.
	`isCﬁÀ˘i⁄
()) {

1238 
Node
 
wøµî
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1239 
wøµî
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
chûdNode
);

1240 
chûdNode
 = 
wøµî
;

1245 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "FIN MAPPED: " << 
fö
)

1249 
Node
 
groupSeq1
 = 
	`groupSñe˘‹s
(
£q1
, 
˘x
);

1250 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "SEQ1: " << 
groupSeq1
)

1252 
Node
 
groupSeq2
 = 
	`groupSñe˘‹s
(
£q2
, 
˘x
);

1253 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "SEQ2: " << 
groupSeq2
)

1256 
Com∂exSñe˘‹Deque
 
groupSeq1C⁄vîãd
;

1257 
	`nodeToCom∂exSñe˘‹Deque
(
groupSeq1
, 
groupSeq1C⁄vîãd
, 
˘x
);

1259 
Com∂exSñe˘‹Deque
 
groupSeq2C⁄vîãd
;

1260 
	`nodeToCom∂exSñe˘‹Deque
(
groupSeq2
, 
groupSeq2C⁄vîãd
, 
˘x
);

1262 
Com∂exSñe˘‹Deque
 
out
;

1263 
LcsCﬁÀ˘i⁄Com∑øt‹
 
	`cﬁÀ˘i⁄Com∑øt‹
(
˘x
);

1264 
	`lcs
(
groupSeq2C⁄vîãd
, 
groupSeq1C⁄vîãd
, 
cﬁÀ˘i⁄Com∑øt‹
, 
˘x
, 
out
);

1265 
Node
 
£qLcs
 = 
	`com∂exSñe˘‹DequeToNode
(
out
, 
˘x
);

1267 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "SEQLCS: " << 
£qLcs
)

1270 
Node
 
öôWøµî
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1271 
öôWøµî
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
öô
);

1272 
Node
 
diff
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1273 
diff
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
öôWøµî
);

1275 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "DIFF INIT: " << 
diff
)

1278 !
£qLcs
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

1279 
P¨ítSu≥r£À˘‹Chunkî
 
	`su≥r£À˘‹Chunkî
(
£qLcs
, 
˘x
);

1280 
Node
 
chunksResu…
 = 
	`chunks
(
groupSeq1
, 
groupSeq2
, 
su≥r£À˘‹Chunkî
);

1281 
diff
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
chunksResu…
);

1283 
Node
 
lcsWøµî
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1284 
lcsWøµî
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
£qLcs
.cﬁÀ˘i⁄()->
	`‰⁄t
());

1285 
£qLcs
.
	`cﬁÀ˘i⁄
()->
	`p›_‰⁄t
();

1286 
diff
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
lcsWøµî
);

1288 i‡(
groupSeq1
.
	`cﬁÀ˘i⁄
()->
	`size
()ËgroupSeq1.cﬁÀ˘i⁄()->
	`p›_‰⁄t
();

1289 i‡(
groupSeq2
.
	`cﬁÀ˘i⁄
()->
	`size
()ËgroupSeq2.cﬁÀ˘i⁄()->
	`p›_‰⁄t
();

1292 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "DIFF POST LCS: " << 
diff
)

1295 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "CHUNKS: ONE=" << 
groupSeq1
 << " TWO=" << 
groupSeq2
)

1298 
SubwóveEm±yChunkî
 
em±yChunkî
;

1299 
Node
 
chunksResu…
 = 
	`chunks
(
groupSeq1
, 
groupSeq2
, 
em±yChunkî
);

1300 
diff
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
chunksResu…
);

1303 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "DIFF POST CHUNKS: " << 
diff
)

1306 
diff
.
	`cﬁÀ˘i⁄
()->
	`ö£π
(diff.cﬁÀ˘i⁄()->
	`íd
(), 
fö
.cﬁÀ˘i⁄()->
	`begö
(), fin.collection()->end());

1308 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "DIFF POST FIN MAPPED: " << 
diff
)

1311 
Node
 
diffFûãªd
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1312 
NodeDeque
::
ôî©‹
 
diffIãr
 = 
diff
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
diffEndIãr
 = diff.cﬁÀ˘i⁄()->
	`íd
();

1313 
diffIãr
 !
diffEndIãr
; ++diffIter) {

1314 
Node
& 
node
 = *
diffIãr
;

1315 i‡(
node
.
	`cﬁÀ˘i⁄
(Ë&& !node.cﬁÀ˘i⁄()->
	`em±y
()) {

1316 
diffFûãªd
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
node
);

1319 
diff
 = 
diffFûãªd
;

1321 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "DIFF POST REJECT: " << 
diff
)

1324 
Node
 
∑thsResu…
 = 
	`∑ths
(
diff
, 
˘x
);

1326 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "PATHS: " << 
∑thsResu…
)

1330 
NodeDeque
::
ôî©‹
 
∑thsIãr
 = 
∑thsResu…
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
∑thsEndIãr
 =Ö©hsResu….cﬁÀ˘i⁄()->
	`íd
();

1331 
∑thsIãr
 !
∑thsEndIãr
; ++pathsIter) {

1333 
Node
& 
chûd
 = *
∑thsIãr
;

1334 
chûd
 = 
	`Ê©ãn
(chûd, 
˘x
);

1337 
	`DEBUG_PRINTLN
(
SUBWEAVE
, "FLATTENED: " << 
∑thsResu…
)

1347  
∑thsResu…
;

1349 
	}
}

1453 
Node
 
	$wóve
(
Node
& 
∑th
, 
C⁄ãxt
& 
˘x
) {

1455 
	`DEBUG_PRINTLN
(
WEAVE
, "WEAVE: " << 
∑th
)

1457 
Node
 
bef‹es
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1458 
bef‹es
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãCﬁÀ˘i⁄
());

1460 
Node
 
a·îs
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1461 
a·îs
.
	`∂us
(
∑th
);

1463 !
a·îs
.
	`cﬁÀ˘i⁄
()->
	`em±y
()) {

1464 
Node
 
cuºít
 = 
a·îs
.
	`cﬁÀ˘i⁄
()->
	`‰⁄t
().
	`˛⁄e
(
˘x
);

1465 
a·îs
.
	`cﬁÀ˘i⁄
()->
	`p›_‰⁄t
();

1466 
	`DEBUG_PRINTLN
(
WEAVE
, "CURRENT: " << 
cuºít
)

1467 i‡(
cuºít
.
	`cﬁÀ˘i⁄
()->
	`size
() == 0) ;

1469 
Node
 
œ°_cuºít
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1470 
œ°_cuºít
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
cuºít
.cﬁÀ˘i⁄()->
	`back
());

1471 
cuºít
.
	`cﬁÀ˘i⁄
()->
	`p›_back
();

1472 
	`DEBUG_PRINTLN
(
WEAVE
, "CURRENT POST POP: " << 
cuºít
)

1473 
	`DEBUG_PRINTLN
(
WEAVE
, "LAST CURRENT: " << 
œ°_cuºít
)

1475 
Node
 
ãmpResu…
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1477 
NodeDeque
::
ôî©‹
 
bef‹esIãr
 = 
bef‹es
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
bef‹esEndIãr
 = bef‹es.cﬁÀ˘i⁄()->
	`íd
(); beforesIter != beforesEndIter; beforesIter++) {

1478 
Node
& 
bef‹e
 = *
bef‹esIãr
;

1480 
Node
 
sub
 = 
Exãnd
::
	`subwóve
(
bef‹e
, 
cuºít
, 
˘x
);

1482 
	`DEBUG_PRINTLN
(
WEAVE
, "SUB: " << 
sub
)

1484 i‡(
sub
.
	`isNû
()) {

1485  
Node
::
	`¸óãCﬁÀ˘i⁄
();

1488 
NodeDeque
::
ôî©‹
 
subIãr
 = 
sub
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
subEndIãr
 = sub.cﬁÀ˘i⁄()->
	`íd
(); subIter != subEndIter; subIter++) {

1489 
Node
& 
£qs
 = *
subIãr
;

1491 
Node
 
toPush
 = Node::
	`¸óãCﬁÀ˘i⁄
();

1492 
toPush
.
	`∂us
(
£qs
);

1493 
toPush
.
	`∂us
(
œ°_cuºít
);

1495 
ãmpResu…
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
toPush
);

1500 
bef‹es
 = 
ãmpResu…
;

1504  
bef‹es
;

1505 
	}
}

1511 
Node
 
exãndCom∂exSñe˘‹
(

1512 
Com∂ex_Sñe˘‹
* 
pCom∂exSñe˘‹
,

1513 
C⁄ãxt
& 
˘x
,

1514 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
,

1515 
°d
::
£t
<
Compound_Sñe˘‹
> 
£í
, 
boﬁ
 
isRïœ˚
, boﬁ 
isOrigöÆ
);

1531 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
>

1532 ˛as†
	cGroupByToAFun˘‹
 {

1533 
	gpublic
:

1534 
KeyTy≥
 
›î©‹
()(
Exãnsi⁄Paú
& 
extPaú
) const {

1535 
Com∂ex_Sñe˘‹
* 
pSñe˘‹
 = 
extPaú
.
fú°
;

1536  *
	gpSñe˘‹
;

1539 
Node
 
exãndCompoundSñe˘‹
(

1540 
Compound_Sñe˘‹
* 
pSñe˘‹
,

1541 
C⁄ãxt
& 
˘x
,

1542 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
,

1543 
°d
::
£t
<
Compound_Sñe˘‹
> 
£í
, 
boﬁ
 
isRïœ˚
) {

1545 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñe˘‹
, "EXTEND COMPOUND: "))

1548 
Node
 
	gexãndedSñe˘‹s
 = Node::
¸óãCﬁÀ˘i⁄
();

1551 
Sub£tM≠E¡rõs
 
	gíåõs
 = 
sub£t_m≠
.
gë_v
(
pSñe˘‹
->
to_°r_vec
());

1553 
	g°d
::
	tve˘‹
<
	t°d
::
	t∑ú
<
	tCom∂ex_Sñe˘‹
, std::ve˘‹<
	tExãnsi⁄Paú
> > > 
	tGrou≥dByToAResu…
;

1555 
	gGroupByToAFun˘‹
<
	gCom∂ex_Sñe˘‹
> 
	gextPaúKeyFun˘‹
;

1556 
Grou≥dByToAResu…
 
	g¨r
;

1557 
group_by_to_a
(
íåõs
, 
extPaúKeyFun˘‹
, 
¨r
);

1559 
	g°d
::
	t∑ú
<
	tCompound_Sñe˘‹
*, 
	tCom∂ex_Sñe˘‹
*> 
	tSñsNewSeqPaú
;

1560 
	g°d
::
	tve˘‹
<
	tSñsNewSeqPaú
> 
	tSñsNewSeqPaúCﬁÀ˘i⁄
;

1563 
SñsNewSeqPaúCﬁÀ˘i⁄
 
	ghﬁdî
;

1566 
	gGrou≥dByToAResu…
::
ôî©‹
 
grou≥dIãr
 = 
¨r
.
begö
(), 
	ggrou≥dIãrEnd
 =áº.
íd
(); 
	ggrou≥dIãr
 !
grou≥dIãrEnd
; groupedIter++) {

1567 
	g°d
::
∑ú
<
Com∂ex_Sñe˘‹
, std::
ve˘‹
<
Exãnsi⁄Paú
> >& 
grou≥dPaú
 = *
grou≥dIãr
;

1569 
	gCom∂ex_Sñe˘‹
& 
	g£q
 = 
grou≥dPaú
.
fú°
;

1570 
	g°d
::
ve˘‹
<
Exãnsi⁄Paú
>& 
group
 = 
grou≥dPaú
.
£c⁄d
;

1572 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCom∂exSñe˘‹
(&
£q
, "SEQ: "))

1575 
Compound_Sñe˘‹
* 
	gpSñs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
pSñe˘‹
->
p°©e
());

1576 
	g°d
::
ve˘‹
<
Exãnsi⁄Paú
>::
ôî©‹
 
groupIãr
 = 
group
.
begö
(), 
	ggroupIãrEnd
 = group.
íd
(); 
	ggroupIãr
 !
groupIãrEnd
; groupIter++) {

1577 
	gExãnsi⁄Paú
& 
	g∑ú
 = *
groupIãr
;

1578 
Compound_Sñe˘‹
* 
	gpCompound
 = 
∑ú
.
£c⁄d
;

1579 
size_t
 
	gödex
 = 0; index < 
	gpCompound
->
Àngth
(); index++) {

1580 
Sim∂e_Sñe˘‹
* 
	gpSim∂eSñe˘‹
 = (*
pCompound
)[
ödex
];

1581 (*
	gpSñs
Ë<< 
	gpSim∂eSñe˘‹
;

1582 
	gpCompound
->
exãnded
(
åue
);

1586 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñs
, "SELS: "))

1588 
Com∂ex_Sñe˘‹
* 
	gpExtCom∂exSñe˘‹
 = &
£q
;

1589 
Compound_Sñe˘‹
* 
	gpExtCompoundSñe˘‹
 = 
pSñs
;

1593 
Compound_Sñe˘‹
* 
	gpSñe˘‹WôhoutExãndSñe˘‹s
 = 
pSñe˘‹
->
möus
(
pExtCompoundSñe˘‹
, 
˘x
);

1595 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñe˘‹
, "MEMBERS: "))

1596 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñe˘‹WôhoutExãndSñe˘‹s
, "SELF_WO_SEL: "))

1598 
Compound_Sñe˘‹
* 
	gpI¬îmo°CompoundSñe˘‹
 = 
pExtCom∂exSñe˘‹
->
œ°
()->
hód
();

1599 
Compound_Sñe˘‹
* 
	gpUnifõdSñe˘‹
 = 
NULL
;

1601 i‡(!
	gpI¬îmo°CompoundSñe˘‹
) {

1602 
	gpI¬îmo°CompoundSñe˘‹
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Compound_Sñe˘‹
, 
pSñe˘‹
->
p°©e
());

1605 
	gpUnifõdSñe˘‹
 = 
pI¬îmo°CompoundSñe˘‹
->
unify_wôh
(
pSñe˘‹WôhoutExãndSñe˘‹s
, 
˘x
);

1608 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pI¬îmo°CompoundSñe˘‹
, "LHS: "))

1609 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñe˘‹WôhoutExãndSñe˘‹s
, "RHS: "))

1610 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pUnifõdSñe˘‹
, "UNIFIED: "))

1613 i‡(!
	gpUnifõdSñe˘‹
 ||ÖUnifõdSñe˘‹->
Àngth
() == 0) {

1624 
Com∂ex_Sñe˘‹
* 
	gpNewSñe˘‹
 = 
pExtCom∂exSñe˘‹
->
˛⁄eFuŒy
(
˘x
);

1626 
Com∂ex_Sñe˘‹
* 
	gpNewI¬îMo°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, 
pSñe˘‹
->
p°©e
(), Com∂ex_Sñe˘‹::
ANCESTOR_OF
, 
pUnifõdSñe˘‹
, 
NULL
);

1628 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
 = 
pNewSñe˘‹
->
˛ór_ö√rmo°
();

1629 
	gpNewSñe˘‹
->
£t_ö√rmo°
(
pNewI¬îMo°
, 
combö©‹
);

1631 #ifde‡
DEBUG


1632 
Sour˚sSë
 
	gdebugSë
;

1633 
	gdebugSë
 = 
pNewSñe˘‹
->
sour˚s
();

1634 i‡(
	gdebugSë
.
size
() > 0) {

1635 
	gthrow
 "TheÇew selector should start withÇo sources. SomethingÇeedsÅo be clonedÅo fixÅhis.";

1637 
	gdebugSë
 = 
pExtCom∂exSñe˘‹
->
sour˚s
();

1638 i‡(
	gdebugSë
.
size
() > 0) {

1639 
	gthrow
 "TheÉxtension selector from our subset map shouldÇot have sources. These will bleedÅoÅheÇew selector. SomethingÇeedsÅo be clonedÅo fixÅhis.";

1646 
DEBUG_PRINTLN
(
EXTEND_COMPOUND
, "SOURCES SETTING ON NEW SEQ: " << 
com∂exSñe˘‹ToNode
(
pNewSñe˘‹
, 
˘x
))

1648 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
Sour˚sSë
 
ﬁdSë
 = 
pNewSñe˘‹
->
sour˚s
(); 
¥ötSour˚sSë
(ﬁdSë, 
˘x
, "SOURCES NEW SEQ BEGIN: "))

1650 
Sour˚sSë
 
	g√wSour˚sSë
 = 
pSñe˘‹
->
sour˚s
();

1651 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötSour˚sSë
(
√wSour˚sSë
, 
˘x
, "SOURCES THIS EXTEND: "))

1653 
	g√wSour˚sSë
.
ö£π
(
pExtCom∂exSñe˘‹
);

1654 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötSour˚sSë
(
√wSour˚sSë
, 
˘x
, "SOURCES WITH NEW SOURCE: "))

1657 
	gpNewSñe˘‹
->
addSour˚s
(
√wSour˚sSë
, 
˘x
);

1659 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
Sour˚sSë
 
√wSë
 = 
pNewSñe˘‹
->
sour˚s
(); 
¥ötSour˚sSë
“ewSë, 
˘x
, "SOURCES ON NEW SELECTOR AFTER ADD: "))

1660 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötSour˚sSë
(
pSñe˘‹
->
sour˚s
(), 
˘x
, "SOURCES THIS EXTEND WHICH SHOULD BE SAME STILL: "))

1663 i‡(
	gpSñs
->
has_löe_„ed
()Ë
	gpNewSñe˘‹
->has_löe_„ed(
åue
);;

1665 
	ghﬁdî
.
push_back
(
°d
::
make_∑ú
(
pSñs
, 
pNewSñe˘‹
));

1669 
	gSñsNewSeqPaúCﬁÀ˘i⁄
::
ôî©‹
 
hﬁdîIãr
 = 
hﬁdî
.
begö
(), 
	ghﬁdîIãrEnd
 = hﬁdî.
íd
(); 
	ghﬁdîIãr
 !
hﬁdîIãrEnd
; holderIter++) {

1670 
	gSñsNewSeqPaú
& 
	g∑ú
 = *
hﬁdîIãr
;

1672 
Compound_Sñe˘‹
* 
	gpSñs
 = 
∑ú
.
fú°
;

1673 
Com∂ex_Sñe˘‹
* 
	gpNewSñe˘‹
 = 
∑ú
.
£c⁄d
;

1677 i‡(
	g£í
.
föd
(*
pSñs
Ë!
£í
.
íd
()) {

1682 
	g°d
::
£t
<
Compound_Sñe˘‹
> 
ªcur£Sìn
(
£í
);

1683 
	gªcur£Sìn
.
ö£π
(*
pSñs
);

1686 
DEBUG_PRINTLN
(
EXTEND_COMPOUND
, "RECURSING DO EXTEND: " << 
com∂exSñe˘‹ToNode
(
pNewSñe˘‹
, 
˘x
))

1687 
Node
 
	gªcur£ExãndedSñe˘‹s
 = 
exãndCom∂exSñe˘‹
(
pNewSñe˘‹
, 
˘x
, 
sub£t_m≠
, 
ªcur£Sìn
, 
isRïœ˚
, 
Ál£
);

1689 
DEBUG_PRINTLN
(
EXTEND_COMPOUND
, "RECURSING DO EXTEND RETURN: " << 
ªcur£ExãndedSñe˘‹s
)

1691 
	gNodeDeque
::
ôî©‹
 iãøt‹ = 
ªcur£ExãndedSñe˘‹s
.
cﬁÀ˘i⁄
()->
begö
(), 
	gídIãøt‹
 =Ñecur£ExãndedSñe˘‹s.cﬁÀ˘i⁄()->
íd
();

1692 
	gôî©‹
 !
ídIãøt‹
; ++iterator) {

1693 
	gNode
& 
	g√wSñe˘‹
 = *
ôî©‹
;

1698 i‡(!
	gexãndedSñe˘‹s
.
c⁄èös
(
√wSñe˘‹
, 
Ál£
 )) {

1700 
	gexãndedSñe˘‹s
.
cﬁÀ˘i⁄
()->
push_back
(
√wSñe˘‹
);

1705 
DEBUG_EXEC
(
EXTEND_COMPOUND
, 
¥ötCompoundSñe˘‹
(
pSñe˘‹
, "EXTEND COMPOUND END: "))

1707  
	gexãndedSñe˘‹s
;

1711 
boﬁ
 
	$com∂exSñe˘‹HasExãnsi⁄
(

1712 
Com∂ex_Sñe˘‹
* 
pCom∂exSñe˘‹
,

1713 
C⁄ãxt
& 
˘x
,

1714 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
) {

1716 
boﬁ
 
hasExãnsi⁄
 = 
Ál£
;

1718 
Com∂ex_Sñe˘‹
* 
pIãr
 = 
pCom∂exSñe˘‹
;

1720 !
hasExãnsi⁄
 && 
pIãr
) {

1721 
Compound_Sñe˘‹
* 
pHód
 = 
pIãr
->
	`hód
();

1723 i‡(
pHód
) {

1724 
Sim∂e_Sñe˘‹
* 
pSim∂e
 : *
pHód
) {

1725 i‡(
Wøµed_Sñe˘‹
* 
ws
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
pSim∂e
)) {

1726 i‡(
Sñe˘‹_Li°
* 
¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ws
->
	`£À˘‹
())) {

1727 
Com∂ex_Sñe˘‹
* 
cs
 : 
¶
->
	`ñemíts
()) {

1728 
cs
) {

1729 i‡(
	`com∂exSñe˘‹HasExãnsi⁄
(
cs
, 
˘x
, 
sub£t_m≠
)) {

1730 
hasExãnsi⁄
 = 
åue
;

1733 
cs
 = cs->
	`èû
();

1739 
Sub£tM≠E¡rõs
 
íåõs
 = 
sub£t_m≠
.
	`gë_v
(
pHód
->
	`to_°r_vec
());

1740 
Exãnsi⁄Paú
 
ext
 : 
íåõs
) {

1743 i‡(
ext
.
£c⁄d
->
	`medü_block
() == 0) ;

1744 i‡(
pHód
->
	`medü_block
() &&

1745 
ext
.
£c⁄d
->
	`medü_block
()->
	`medü_quîõs
() &&

1746 
pHód
->
	`medü_block
()->
	`medü_quîõs
()

1748 
°d
::
°rög
 
	`quîy_À·
(
ext
.
£c⁄d
->
	`medü_block
()->
	`medü_quîõs
()->
	`to_°rög
(
˘x
.
c_›ti⁄s
));

1749 
°d
::
°rög
 
	`quîy_right
(
pHód
->
	`medü_block
()->
	`medü_quîõs
()->
	`to_°rög
(
˘x
.
c_›ti⁄s
));

1750 i‡(
quîy_À·
 =
quîy_right
) ;

1754 
°d
::
°rög°ªam
 
îr
;

1755 
°d
::
°rög
 
	`cwd
(
Sass
::
Fûe
::
	`gë_cwd
());

1756 
P¨£rSèã
 
	`p°©e
(
ext
.
£c⁄d
->pstate());

1757 
°d
::
°rög
 
	`ªl_∑th
(
Sass
::
Fûe
::
	`abs2ªl
(
p°©e
.
∑th
, 
cwd
, cwd));

1758 
îr
 << "You mayÇot @extendán outer selector from within @media.\n";

1759 
îr
 << "You may only @extend selectors withinÅhe same directive.\n";

1760 
îr
 << "From \"@exãnd " << 
ext
.
£c⁄d
->
	`to_°rög
(
˘x
.
c_›ti⁄s
) << "\"";

1761 
îr
 << " o¿löê" << 
p°©e
.
löe
+1 << " o‡" << 
ªl_∑th
 << "\n";

1762 
	`îr‹
(
îr
.
	`°r
(), 
pCom∂exSñe˘‹
->
	`p°©e
());

1764 i‡(
íåõs
.
	`size
(Ë> 0Ë
hasExãnsi⁄
 = 
åue
;

1767 
pIãr
 =ÖIãr->
	`èû
();

1770  
hasExãnsi⁄
;

1771 
	}
}

1785 
Node
 
exãndCom∂exSñe˘‹
(

1786 
Com∂ex_Sñe˘‹
* 
pCom∂exSñe˘‹
,

1787 
C⁄ãxt
& 
˘x
,

1788 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
,

1789 
°d
::
£t
<
Compound_Sñe˘‹
> 
£í
, 
boﬁ
 
isRïœ˚
, boﬁ 
isOrigöÆ
) {

1791 
Node
 
	gcom∂exSñe˘‹
 = 
com∂exSñe˘‹ToNode
(
pCom∂exSñe˘‹
, 
˘x
);

1792 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "EXTEND COMPLEX: " << 
com∂exSñe˘‹
)

1794 
Node
 
	gexãndedNŸEx∑nded
 = Node::
¸óãCﬁÀ˘i⁄
();

1796 
	gNodeDeque
::
ôî©‹
 
com∂exSñIãr
 = 
com∂exSñe˘‹
.
cﬁÀ˘i⁄
()->
begö
(),

1797 
	gcom∂exSñIãrEnd
 = 
com∂exSñe˘‹
.
cﬁÀ˘i⁄
()->
íd
();

1798 
	gcom∂exSñIãr
 !
com∂exSñIãrEnd
; ++complexSelIter)

1801 
	gNode
& 
	gs£qOrOp
 = *
com∂exSñIãr
;

1803 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "LOOP: " << 
s£qOrOp
)

1807 i‡(!
	gs£qOrOp
.
isSñe˘‹
()) {

1810 
Node
 
	gouãr
 = Node::
¸óãCﬁÀ˘i⁄
();

1811 
Node
 
	gö√r
 = Node::
¸óãCﬁÀ˘i⁄
();

1812 
	gouãr
.
cﬁÀ˘i⁄
()->
push_back
(
ö√r
);

1813 
	gö√r
.
cﬁÀ˘i⁄
()->
push_back
(
s£qOrOp
);

1814 
	gexãndedNŸEx∑nded
.
cﬁÀ˘i⁄
()->
push_back
(
ouãr
);

1818 
Compound_Sñe˘‹
* 
	gpCompoundSñe˘‹
 = 
s£qOrOp
.
£À˘‹
()->
hód
();

1821 
Node
 
	gexãnded
 = 
exãndCompoundSñe˘‹
(
pCompoundSñe˘‹
, 
˘x
, 
sub£t_m≠
, 
£í
, 
isRïœ˚
);

1822 i‡(
	gs£qOrOp
.
	ggŸ_löe_„ed
Ë
	gexãnded
.gŸ_löe_„ed = 
åue
;

1823 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "EXTENDED: " << 
exãnded
)

1828 
Com∂ex_Sñe˘‹
* 
	gpJu°CuºítCompoundSñe˘‹
 = 
s£qOrOp
.
£À˘‹
();

1831 i‡(
	gisOrigöÆ
 && !
	gpCom∂exSñe˘‹
->
has_∂a˚hﬁdî
()) {

1832 
Sour˚sSë
 
	g§c£t
;

1833 
	g§c£t
.
ö£π
(
pCom∂exSñe˘‹
);

1834 
	gpJu°CuºítCompoundSñe˘‹
->
addSour˚s
(
§c£t
, 
˘x
);

1835 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "ADD SOURCES: " << *
pCom∂exSñe˘‹
)

1838 
boﬁ
 
	gisSu≥r£À˘‹
 = 
Ál£
;

1839 
	gNodeDeque
::
ôî©‹
 iãøt‹ = 
exãnded
.
cﬁÀ˘i⁄
()->
begö
(), 
	gídIãøt‹
 =Éxãnded.cﬁÀ˘i⁄()->
íd
();

1840 
	gôî©‹
 !
ídIãøt‹
; ++iterator) {

1841 
	gNode
& 
	gchûdNode
 = *
ôî©‹
;

1842 
Com∂ex_Sñe˘‹
* 
	gpExãnsi⁄Sñe˘‹
 = 
nodeToCom∂exSñe˘‹
(
chûdNode
, 
˘x
);

1843 i‡(
	gpExãnsi⁄Sñe˘‹
->
is_su≥r£À˘‹_of
(
pJu°CuºítCompoundSñe˘‹
)) {

1844 
	gisSu≥r£À˘‹
 = 
åue
;

1849 i‡(!
	gisSu≥r£À˘‹
) {

1850 i‡(
	gs£qOrOp
.
	ggŸ_löe_„ed
Ë
	gpJu°CuºítCompoundSñe˘‹
->
has_löe_„ed
(
s£qOrOp
.
gŸ_löe_„ed
);

1851 
	gexãnded
.
cﬁÀ˘i⁄
()->
push_‰⁄t
(
com∂exSñe˘‹ToNode
(
pJu°CuºítCompoundSñe˘‹
, 
˘x
));

1854 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "CHOICES UNSHIFTED: " << 
exãnded
)

1857 
	gexãndedNŸEx∑nded
.
cﬁÀ˘i⁄
()->
push_back
(
exãnded
);

1861 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "EXTENDED NOT EXPANDED: " << 
exãndedNŸEx∑nded
)

1866 
Node
 
	g∑ths
 = 
Sass
::
∑ths
(
exãndedNŸEx∑nded
, 
˘x
);

1868 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "PATHS: " << 
∑ths
)

1873 
Node
 
	gwóves
 = Node::
¸óãCﬁÀ˘i⁄
();

1875 
	gNodeDeque
::
ôî©‹
 
∑thsIãr
 = 
∑ths
.
cﬁÀ˘i⁄
()->
begö
(), 
	g∑thsEndIãr
 =Ö©hs.cﬁÀ˘i⁄()->
íd
(); 
	g∑thsIãr
 !
∑thsEndIãr
; ++pathsIter) {

1876 
	gNode
& 
	g∑th
 = *
∑thsIãr
;

1877 
Node
 
	gwóved
 = 
wóve
(
∑th
, 
˘x
);

1878 
	gwóved
.
	ggŸ_löe_„ed
 = 
∑th
.
gŸ_löe_„ed
;

1879 
	gwóves
.
cﬁÀ˘i⁄
()->
push_back
(
wóved
);

1882 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "WEAVES: " << 
wóves
)

1887 
Node
 
	gåimmed
 = 
åim
(
wóves
, 
˘x
, 
isRïœ˚
);

1889 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "TRIMMED: " << 
åimmed
)

1893 
Node
 
	gexãndedSñe˘‹s
 = 
Ê©ãn
(
åimmed
, 
˘x
, 1);

1895 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, ">>>>> EXTENDED: " << 
exãndedSñe˘‹s
)

1898 
DEBUG_PRINTLN
(
EXTEND_COMPLEX
, "EXTEND COMPLEX END: " << 
com∂exSñe˘‹
)

1901  
	gexãndedSñe˘‹s
;

1909 
Sñe˘‹_Li°
* 
	gExãnd
::
	$exãndSñe˘‹Li°
(
Sñe˘‹_Li°
* 
pSñe˘‹Li°
, 
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
, 
boﬁ
 
isRïœ˚
, boﬁ& 
exãndedSomëhög
) {

1911 
Sñe˘‹_Li°
* 
pNewSñe˘‹s
 = 
	`SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
pSñe˘‹Li°
->
	`p°©e
(),ÖSñe˘‹Li°->
	`Àngth
());

1913 
exãndedSomëhög
 = 
Ál£
;

1915 
size_t
 
ödex
 = 0, 
Àngth
 = 
pSñe˘‹Li°
->
	`Àngth
(); index <Üength; index++) {

1916 
Com∂ex_Sñe˘‹
* 
pSñe˘‹
 = (*
pSñe˘‹Li°
)[
ödex
];

1923 i‡(!
	`com∂exSñe˘‹HasExãnsi⁄
(
pSñe˘‹
, 
˘x
, 
sub£t_m≠
)) {

1924 *
pNewSñe˘‹s
 << 
pSñe˘‹
;

1928 
exãndedSomëhög
 = 
åue
;

1930 
°d
::
£t
<
Compound_Sñe˘‹
> 
£í
;

1932 
Node
 
exãndedSñe˘‹s
 = 
	`exãndCom∂exSñe˘‹
(
pSñe˘‹
, 
˘x
, 
sub£t_m≠
, 
£í
, 
isRïœ˚
, 
åue
);

1933 i‡(!
pSñe˘‹
->
	`has_∂a˚hﬁdî
()) {

1934 i‡(!
exãndedSñe˘‹s
.
	`c⁄èös
(
	`com∂exSñe˘‹ToNode
(
pSñe˘‹
, 
˘x
), 
åue
 )) {

1935 *
pNewSñe˘‹s
 << 
pSñe˘‹
;

1939 
NodeDeque
::
ôî©‹
 iãøt‹ = 
exãndedSñe˘‹s
.
	`cﬁÀ˘i⁄
()->
	`begö
(), 
ôî©‹Begö
 =ÉxãndedSñe˘‹s.cﬁÀ˘i⁄()->begö(), 
ôî©‹End
 =ÉxãndedSñe˘‹s.cﬁÀ˘i⁄()->
	`íd
(); iterator != iteratorEnd; ++iterator) {

1941 if(
isRïœ˚
 && 
ôî©‹
 =
ôî©‹Begö
 && 
exãndedSñe˘‹s
.
	`cﬁÀ˘i⁄
()->
	`size
() > 1 ) ;

1943 
Node
& 
chûdNode
 = *
ôî©‹
;

1944 *
pNewSñe˘‹s
 << 
	`nodeToCom∂exSñe˘‹
(
chûdNode
, 
˘x
);

1948 
Remove_Pœ˚hﬁdîs
 
	`ªmove_∂a˚hﬁdîs
(
˘x
);

1951 
pNewSñe˘‹s
 = 
ªmove_∂a˚hﬁdîs
.
	`ªmove_∂a˚hﬁdîs
(pNewSelectors);

1954 
Com∂ex_Sñe˘‹
* 
cur
 : *
pNewSñe˘‹s
) {

1956 
cur
) {

1958 i‡(
cur
->
	`hód
()) {

1960 
Compound_Sñe˘‹
* 
˝y_hód
 = 
	`SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
cur
->
	`p°©e
());

1961 
Sim∂e_Sñe˘‹
* 
hs
 : *
cur
->
	`hód
()) {

1962 i‡(
Wøµed_Sñe˘‹
* 
ws
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
hs
)) {

1963 i‡(
Sñe˘‹_Li°
* 
¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ws
->
	`£À˘‹
())) {

1965 i‡(
¶
->
	`em±y
()) {

1967 *
˝y_hód
 << 
	`SASS_MEMORY_NEW
(
˘x
.
mem
, 
Ty≥_Sñe˘‹
, 
hs
->
	`p°©e
(), 
ws
->
	`«me
());

1972 
Sñe˘‹_Li°
* 
ext_¶
 = 
	`exãndSñe˘‹Li°
(
¶
, 
˘x
, 
sub£t_m≠
);

1973 
size_t
 
i
 = 0; i < 
ext_¶
->
	`Àngth
(); i += 1) {

1974 i‡(
Com∂ex_Sñe˘‹
* 
ext_cs
 = 
ext_¶
->
	`©
(
i
)) {

1976 
Wøµed_Sñe˘‹
* 
˝y_ws
 = 
	`SASS_MEMORY_NEW
(
˘x
.
mem
, Wøµed_Sñe˘‹, *
ws
);

1977 
Sñe˘‹_Li°
* 
˝y_ws_¶
 = 
	`SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
¶
->
	`p°©e
());

1979 i‡(
ext_cs
->
	`fú°
()Ë*
˝y_ws_¶
 <<Éxt_cs->first();

1981 
˝y_ws
->
	`£À˘‹
(
˝y_ws_¶
);

1983 *
˝y_hód
 << 
˝y_ws
;

1988 *
˝y_hód
 << 
hs
;

1991 *
˝y_hód
 << 
hs
;

1995 
cur
->
	`hód
(
˝y_hód
);

1998 
cur
 = cur->
	`èû
();

2001  
pNewSñe˘‹s
;

2003 
	}
}

2006 
boﬁ
 
	$shouldExãndBlock
(
Block
* 
b
) {

2021 
size_t
 
i
 = 0, 
L
 = 
b
->
	`Àngth
(); i < L; ++i) {

2022 
Sèãmít
* 
°m
 = (*
b
)[
i
];

2024 i‡(
	`ty≥id
(*
°m
Ë=ty≥id(
RuÀ£t
)) {

2028  
åue
;

2032  
Ál£
;

2034 
	}
}

2038 
	gãm∂©e
 <
ty≥«me
 
	gObje˘Ty≥
>

2039 
	$exãndObje˘WôhSñe˘‹AndBlock
(
Obje˘Ty≥
* 
pObje˘
, 
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
) {

2041 
	`DEBUG_PRINTLN
(
EXTEND_OBJECT
, "FOUND SELECTOR: " << 
°©ic_ˇ°
<
Sñe˘‹_Li°
*>(
pObje˘
->
	`£À˘‹
())->
	`to_°rög
(
˘x
.
c_›ti⁄s
))

2045 i‡(!
	`shouldExãndBlock
(
pObje˘
->
	`block
())) {

2046 
	`DEBUG_PRINTLN
(
EXTEND_OBJECT
, "RETURNING WITHOUT EXTEND ATTEMPT")

2050 
boﬁ
 
exãndedSomëhög
 = 
Ál£
;

2051 
Sñe˘‹_Li°
* 
pNewSñe˘‹Li°
 = 
Exãnd
::
	`exãndSñe˘‹Li°
(
°©ic_ˇ°
<Sñe˘‹_Li°*>(
pObje˘
->
	`£À˘‹
()), 
˘x
, 
sub£t_m≠
, 
Ál£
, 
exãndedSomëhög
);

2053 i‡(
exãndedSomëhög
 && 
pNewSñe˘‹Li°
) {

2054 
	`DEBUG_PRINTLN
(
EXTEND_OBJECT
, "EXTEND ORIGINAL SELECTORS: " << 
°©ic_ˇ°
<
Sñe˘‹_Li°
*>(
pObje˘
->
	`£À˘‹
())->
	`to_°rög
(
˘x
.
c_›ti⁄s
))

2055 
	`DEBUG_PRINTLN
(
EXTEND_OBJECT
, "EXTEND SETTING NEW SELECTORS: " << 
pNewSñe˘‹Li°
->
	`to_°rög
(
˘x
.
c_›ti⁄s
))

2056 
pNewSñe˘‹Li°
->
	`ªmove_∑ª¡_£À˘‹s
();

2057 
pObje˘
->
	`£À˘‹
(
pNewSñe˘‹Li°
);

2059 
	`DEBUG_PRINTLN
(
EXTEND_OBJECT
, "EXTEND DID NOT TRY TO EXTEND ANYTHING")

2061 
	}
}

2065 
	gExãnd
::
	$Exãnd
(
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
ssm
)

2066 : 
	`˘x
(
˘x
), 
	$sub£t_m≠
(
ssm
)

2067 { 
	}
}

2069 
	gExãnd
::
	$›î©‹
()(
Block
* 
b
)

2071 
size_t
 
i
 = 0, 
L
 = 
b
->
	`Àngth
(); i < L; ++i) {

2072 (*
b
)[
i
]->
	`≥rf‹m
(
this
);

2076 i‡(
b
->
	`is_roŸ
()) {

2078 autÿc⁄° &
ô
 : 
sub£t_m≠
.
	`vÆues
()) {

2079 
Com∂ex_Sñe˘‹
* 
£l
 = 
ô
.
fú°
 ? it.fú°->
	`fú°
(Ë: 
NULL
;

2080 
Compound_Sñe˘‹
* 
ext
 = 
ô
.
£c⁄d
 ? it.£c⁄d : 
NULL
;

2081 i‡(
ext
 && (ext->
	`exãnded
(Ë||Éxt->
	`is_›ti⁄Æ
())) ;

2082 
°d
::
°rög
 
	`°r_£l
(
£l
->
	`to_°rög
({ 
NESTED
, 5 }));

2083 
°d
::
°rög
 
	`°r_ext
(
ext
->
	`to_°rög
({ 
NESTED
, 5 }));

2086 
	`îr‹
("\"" + 
°r_£l
 + "\" faûedÅÿ@exãnd \"" + 
°r_ext
 + "\".\n"

2087 "Thê£À˘‹ \"" + 
°r_ext
 + "\" wasÇot found.\n"

2088 "U£ \"@exãnd " + 
°r_ext
 + " !optional\" ifÅhe"

2089 "Éxãnd should bêabÀÅÿÁû.", 
ext
->
	`p°©e
());

2093 
	}
}

2095 
	gExãnd
::
	$›î©‹
()(
RuÀ£t
* 
pRuÀ£t
)

2097 
	`exãndObje˘WôhSñe˘‹AndBlock
(
pRuÀ£t
, 
˘x
, 
sub£t_m≠
);

2098 
pRuÀ£t
->
	`block
()->
	`≥rf‹m
(
this
);

2099 
	}
}

2101 
	gExãnd
::
	$›î©‹
()(
Suµ‹ts_Block
* 
pFótuªBlock
)

2103 
pFótuªBlock
->
	`block
()->
	`≥rf‹m
(
this
);

2104 
	}
}

2106 
	gExãnd
::
	$›î©‹
()(
Medü_Block
* 
pMedüBlock
)

2108 
pMedüBlock
->
	`block
()->
	`≥rf‹m
(
this
);

2109 
	}
}

2111 
	gExãnd
::
	$›î©‹
()(
Dúe˘ive
* 
a
)

2115 i‡(
a
->
	`block
()Ëa->block()->
	`≥rf‹m
(
this
);

2117 
	}
}

	@node_modules/node-sass/src/libsass/src/extend.hpp

1 #i‚de‡
SASS_EXTEND_H


2 
	#SASS_EXTEND_H


	)

4 
	~<°rög
>

6 
	~"a°.hµ
"

7 
	~"›î©i⁄.hµ
"

8 
	~"sub£t_m≠.hµ
"

10 
«me•a˚
 
	gSass
 {

12 
˛ass
 
	gC⁄ãxt
;

13 
˛ass
 
	gNode
;

15 
	gSub£t_M≠
<
	t°d
::
	t°rög
, std::
	t∑ú
<
	tCom∂ex_Sñe˘‹
*, 
	tCompound_Sñe˘‹
*> > 
	tExãnsi⁄Sub£tM≠
;

17 
˛ass
 
	gExãnd
 : 
public
 
O≥øti⁄_CRTP
<, Extend> {

19 
	gC⁄ãxt
& 
	g˘x
;

20 
	gExãnsi⁄Sub£tM≠
& 
	gsub£t_m≠
;

22 
ÁŒback_im∂
(
AST_Node
* 
n
) { }

24 
	gpublic
:

25 
Node
 
subwóve
(Node& 
⁄e
, Node& 
two
, 
C⁄ãxt
& 
˘x
);

26 
Sñe˘‹_Li°
* 
exãndSñe˘‹Li°
(Sñe˘‹_Li°* 
pSñe˘‹Li°
, 
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
, 
boﬁ
 
isRïœ˚
, boﬁ& 
exãndedSomëhög
);

27 
Sñe˘‹_Li°
* 
exãndSñe˘‹Li°
(Sñe˘‹_Li°* 
pSñe˘‹Li°
, 
C⁄ãxt
& 
˘x
, 
Exãnsi⁄Sub£tM≠
& 
sub£t_m≠
, 
boﬁ
 
isRïœ˚
 = 
Ál£
) {

28 
boﬁ
 
exãndedSomëhög
 = 
Ál£
;

29  
exãndSñe˘‹Li°
(
pSñe˘‹Li°
, 
˘x
, 
sub£t_m≠
, 
isRïœ˚
, 
exãndedSomëhög
);

31 
Exãnd
(
C⁄ãxt
&, 
Exãnsi⁄Sub£tM≠
&);

32 ~
Exãnd
() { }

34 
›î©‹
()(
	gBlock
*);

35 
›î©‹
()(
	gRuÀ£t
*);

36 
›î©‹
()(
	gSuµ‹ts_Block
*);

37 
›î©‹
()(
	gMedü_Block
*);

38 
›î©‹
()(
	gDúe˘ive
*);

40 
	gãm∂©e
 <
ty≥«me
 
	gU
>

41 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

	@node_modules/node-sass/src/libsass/src/file.cpp

1 #ifde‡
_WIN32


2 #ifde‡
__MINGW32__


3 #i‚de‡
off64_t


4 
	#off64_t
 
_off64_t


	)

7 
	~<dúe˘.h
>

8 
	#S_ISDIR
(
mode
Ë(((modeË& 
S_IFMT
Ë=
S_IFDIR
)

	)

10 
	~<uni°d.h
>

12 
	~"ßss.hµ
"

13 
	~<io°ªam
>

14 
	~<f°ªam
>

15 
	~<c˘y≥
>

16 
	~<ve˘‹
>

17 
	~<Æg‹ôhm
>

18 
	~<sys/°©.h
>

19 
	~"fûe.hµ
"

20 
	~"c⁄ãxt.hµ
"

21 
	~"¥ñexî.hµ
"

22 
	~"utf8_°rög.hµ
"

23 
	~"ßss2scss.h
"

25 #ifde‡
_WIN32


26 
	~<wödows.h
>

28 #ifde‡
_MSC_VER


29 
	~<codecvt
>

30 
ölöe
 
	g°d
::
°rög
 
	$w°rög_to_°rög
(c⁄° 
°d
::
w°rög
& 
w°r
)

32 
°d
::
w°rög_c⁄vît
<°d::
codecvt_utf8
<
wch¨_t
>, wch¨_t> 
wch¨_c⁄vîãr
;

33  
wch¨_c⁄vîãr
.
	`to_byãs
(
w°r
);

34 
	}
}

36 
ölöe
 
	g°d
::
°rög
 
	$w°rög_to_°rög
(c⁄° 
°d
::
w°rög
 &
w°r
)

38 
size_√eded
 = 
	`WideCh¨ToMu…iByã
(
CP_UTF8
, 0, &
w°r
[0], ()w°r.
	`size
(), 
NULL
, 0, NULL, NULL);

39 
°d
::
°rög
 
	`°rTo
(
size_√eded
, 0);

40 
	`WideCh¨ToMu…iByã
(
CP_UTF8
, 0, &
w°r
[0], ()w°r.
	`size
(), &
°rTo
[0], 
size_√eded
, 
NULL
, NULL);

41  
°rTo
;

42 
	}
}

46 
«me•a˚
 
	gSass
 {

47 
«me•a˚
 
	gFûe
 {

51 
	g°d
::
°rög
 
gë_cwd
()

53 c⁄° 
size_t
 
wd_Àn
 = 1024;

54 #i‚de‡
_WIN32


55 
	gwd
[
wd_Àn
];

56 
	g°d
::
°rög
 
cwd
 = 
gëcwd
(
wd
, 
wd_Àn
);

58 
wch¨_t
 
	gwd
[
wd_Àn
];

59 
	g°d
::
°rög
 
cwd
 = 
w°rög_to_°rög
(
_wgëcwd
(
wd
, 
wd_Àn
));

61 
ª∂a˚
(
cwd
.
begö
(), cwd.
íd
(), '\\', '/');

63 i‡(
	gcwd
[
cwd
.
Àngth
() - 1] != '/') cwd += '/';

64  
	gcwd
;

68 
boﬁ
 
fûe_exi°s
(c⁄° 
°d
::
°rög
& 
∑th
)

70 #ifde‡
_WIN32


71 
°d
::
w°rög
 
w∑th
 = 
UTF_8
::
c⁄vît_to_utf16
(
∑th
);

72 
DWORD
 
	gdwAârib
 = 
GëFûeAâribuãsW
(
w∑th
.
c_°r
());

73  (
	gdwAârib
 !
INVALID_FILE_ATTRIBUTES
 &&

74 (!(
dwAârib
 & 
FILE_ATTRIBUTE_DIRECTORY
)));

76 
°©
 
	g°_buf
;

77  (
°©
 (
∑th
.
c_°r
(), &
°_buf
) == 0) &&

78 (!
S_ISDIR
 (
°_buf
.
°_mode
));

84 
boﬁ
 
is_absﬁuã_∑th
(c⁄° 
°d
::
°rög
& 
∑th
)

86 #ifde‡
_WIN32


87 i‡(
∑th
.
Àngth
(Ë>2 && 
ißÕha
’©h[0]Ë&&Ö©h[1] =':'Ë 
åue
;

89 
size_t
 
	gi
 = 0;

91 i‡(
	g∑th
[
i
] && 
	gPªÀxî
::
is_Æpha
(
∑th
[i])) {

93 
∑th
[
i
] && 
PªÀxî
::
is_Ænum
(path[i])) ++i;

94 
	gi
 = 
i
 && 
∑th
[i] == ':' ? i + 1 : 0;

96  
	g∑th
[
i
] == '/';

100 
ölöe
 
size_t
 
föd_œ°_fﬁdî_£∑øt‹
(c⁄° 
°d
::
°rög
& 
∑th
, size_à
limô
 = std::°rög::
≈os
)

102 
size_t
 
pos
 = 
°d
::
°rög
::
≈os
;

103 
size_t
 
	gpos_p
 = 
∑th
.
föd_œ°_of
('/', 
limô
);

104 #ifde‡
_WIN32


105 
size_t
 
	gpos_w
 = 
∑th
.
föd_œ°_of
('\\', 
limô
);

107 
size_t
 
	gpos_w
 = 
°d
::
°rög
::
≈os
;

109 i‡(
	gpos_p
 !
°d
::
°rög
::
≈os
 && 
pos_w
 != std::string::npos) {

110 
pos
 = 
°d
::
max
(
pos_p
, 
pos_w
);

112 i‡(
	gpos_p
 !
°d
::
°rög
::
≈os
) {

113 
pos
 = 
pos_p
;

116 
	gpos
 = 
pos_w
;

118  
	gpos
;

122 
	g°d
::
°rög
 
dú_«me
(c⁄° 
°d
::°rög& 
∑th
)

124 
size_t
 
pos
 = 
föd_œ°_fﬁdî_£∑øt‹
(
∑th
);

125 i‡(
	gpos
 =
°d
::
°rög
::
≈os
)  "";

126  
	g∑th
.
sub°r
(0, 
pos
+1);

130 
	g°d
::
°rög
 
ba£_«me
(c⁄° 
°d
::°rög& 
∑th
)

132 
size_t
 
pos
 = 
föd_œ°_fﬁdî_£∑øt‹
(
∑th
);

133 i‡(
	gpos
 =
°d
::
°rög
::
≈os
Ë 
∑th
;

134  
	g∑th
.
sub°r
(
pos
+1);

139 
	g°d
::
°rög
 
make_ˇn⁄iˇl_∑th
 (
°d
::°rög 
∑th
)

143 
size_t
 
pos
;

145 #ifde‡
_WIN32


147 
ª∂a˚
(
∑th
.
begö
(),Ö©h.
íd
(), '\\', '/');

150 
	gpos
 = 0;

151 (
	gpos
 = 
∑th
.
föd
("/./", 
pos
)Ë!
°d
::
°rög
::
≈os
Ë∑th.
îa£
(pos, 2);

153 
	gpos
 = 0;

154 
	g∑th
.
Àngth
(Ë> 1 &&Ö©h.
sub°r
(0, 2Ë="./"Ë
∑th
.
îa£
(0, 2);

155 (
	gpos
 = 
∑th
.
Àngth
()Ë> 1 &&Ö©h.
sub°r
(
pos
 - 2Ë="/."Ë∑th.
îa£
(pos - 2);

158 
size_t
 
	g¥Ÿo
 = 0;

160 i‡(
	g∑th
[
¥Ÿo
] && 
	gPªÀxî
::
is_Æpha
(
∑th
[proto])) {

162 
∑th
[
¥Ÿo
] && 
PªÀxî
::
is_Ænum
(path[proto++])) {}

164 i‡(
¥Ÿo
 && 
∑th
[proto] == ':') ++Öroto;

168 
	g∑th
[
¥Ÿo
++] == '/') {}

170 
pos
 = 
¥Ÿo
;

171 (
	gpos
 = 
∑th
.
föd
("//", 
pos
)Ë!
°d
::
°rög
::
≈os
Ë∑th.
îa£
(pos, 1);

173  
	g∑th
;

179 
	g°d
::
°rög
 
joö_∑ths
(
°d
::°rög 
l
, std::°rög 
r
)

182 #ifde‡
_WIN32


184 
ª∂a˚
(
l
.
begö
(),Ü.
íd
(), '\\', '/');

185 
ª∂a˚
(
r
.
begö
(),Ñ.
íd
(), '\\', '/');

188 i‡(
	gl
.
em±y
()Ë 
	gr
;

189 i‡(
	gr
.
em±y
()Ë 
	gl
;

191 i‡(
is_absﬁuã_∑th
(
r
)Ë 
	gr
;

192 i‡(
	gl
[
l
.
Àngth
()-1] != '/')Ü += '/';

194 (
	gr
.
Àngth
(Ë> 3Ë&& (‘.
sub°r
(0, 3Ë="../"Ë|| (
r
.substr(0, 3)) == "..\\")) {

195 
size_t
 
L
 = 
l
.
Àngth
(), 
	gpos
 = 
föd_œ°_fﬁdî_£∑øt‹
(l, L - 2);

196 
boﬁ
 
	gis_¶ash
 = 
pos
 + 2 =
L
 && (
l
[pos+1] == '/' ||Ü[pos+1] == '\\');

197 
boﬁ
 
	gis_£lf
 = 
pos
 + 3 =
L
 && (
l
[pos+1] == '.');

198 i‡(!
	gis_£lf
 && !
	gis_¶ash
Ë
	gr
 = 
r
.
sub°r
(3);

199 
	gl
 = 
l
.
sub°r
(0, 
pos
 =
°d
::
°rög
::
≈os
 ?Öos :Öos + 1);

202  
	gl
 + 
	gr
;

205 
	g°d
::
°rög
 
∑th_f‹_c⁄sﬁe
(c⁄° 
°d
::°rög& 
ªl_∑th
, c⁄° std::°rög& 
abs_∑th
, c⁄° std::°rög& 
‹ig_∑th
)

210 i‡(
ªl_∑th
.
sub°r
(0, 3) == "../") {

211  
‹ig_∑th
;

214  
	gabs_∑th
 =
‹ig_∑th
 ? 
abs_∑th
 : 
ªl_∑th
;

218 
	g°d
::
°rög
 
ªl2abs
(c⁄° 
°d
::°rög& 
∑th
, c⁄° std::°rög& 
ba£
, c⁄° std::°rög& 
cwd
)

220  
make_ˇn⁄iˇl_∑th
(
joö_∑ths
(joö_∑ths(
cwd
, 
ba£
), 
∑th
));

225 
	g°d
::
°rög
 
abs2ªl
(c⁄° 
°d
::°rög& 
∑th
, c⁄° std::°rög& 
ba£
, c⁄° std::°rög& 
cwd
)

228 
°d
::
°rög
 
abs_∑th
 = 
ªl2abs
(
∑th
, 
cwd
);

229 
	g°d
::
°rög
 
abs_ba£
 = 
ªl2abs
(
ba£
, 
cwd
);

231 
size_t
 
	g¥Ÿo
 = 0;

233 i‡(
	g∑th
[
¥Ÿo
] && 
	gPªÀxî
::
is_Æpha
(
∑th
[proto])) {

235 
∑th
[
¥Ÿo
] && 
PªÀxî
::
is_Ænum
(path[proto++])) {}

237 i‡(
¥Ÿo
 && 
∑th
[proto] == ':') ++Öroto;

242 i‡(
	g¥Ÿo
 && 
	g∑th
[
¥Ÿo
++] ='/' &&ÖrŸÿ> 3Ë 
∑th
;

244 #ifde‡
_WIN32


247 i‡(
	gabs_ba£
[0] !
abs_∑th
[0]) ábs_path;

250 
	g°d
::
°rög
 
°rù≥d_uri
 = "";

251 
	g°d
::
°rög
 
°rù≥d_ba£
 = "";

253 
size_t
 
	gödex
 = 0;

254 
size_t
 
	gmöSize
 = 
°d
::
mö
(
abs_∑th
.
size
(), 
abs_ba£
.size());

255 
size_t
 
	gi
 = 0; i < 
	gmöSize
; ++i) {

256 #ifde‡
FS_CASE_SENSITIVE


257 i‡(
	gabs_∑th
[
i
] !
abs_ba£
[i]) ;

261 i‡(
tﬁowî
(
abs_∑th
[
i
]Ë!tﬁowî(
abs_ba£
[i])) ;

263 i‡(
	gabs_∑th
[
i
] ='/'Ë
ödex
 = i + 1;

265 
size_t
 
	gi
 = 
ödex
; i < 
	gabs_∑th
.
size
(); ++i) {

266 
	g°rù≥d_uri
 +
abs_∑th
[
i
];

268 
size_t
 
	gi
 = 
ödex
; i < 
	gabs_ba£
.
size
(); ++i) {

269 
	g°rù≥d_ba£
 +
abs_ba£
[
i
];

272 
size_t
 
	gÀ·
 = 0;

273 
size_t
 
	gdúe˘‹õs
 = 0;

274 
size_t
 
	gright
 = 0;Ñighà< 
	g°rù≥d_ba£
.
size
(); ++right) {

275 i‡(
	g°rù≥d_ba£
[
right
] == '/') {

276 i‡(
°rù≥d_ba£
.
sub°r
(
À·
, 2) != "..") {

277 ++
dúe˘‹õs
;

279 i‡(
	gdúe˘‹õs
 > 1) {

280 --
	gdúe˘‹õs
;

283 
	gdúe˘‹õs
 = 0;

285 
	gÀ·
 = 
right
 + 1;

289 
	g°d
::
°rög
 
ªsu…
 = "";

290 
size_t
 
	gi
 = 0; i < 
	gdúe˘‹õs
; ++i) {

291 
	gªsu…
 += "../";

293 
	gªsu…
 +
°rù≥d_uri
;

295  
	gªsu…
;

303 
	g°d
::
ve˘‹
<
In˛ude
> 
ªsﬁve_ö˛udes
(c⁄° 
°d
::
°rög
& 
roŸ
, c⁄° std::°rög& 
fûe
)

305 
°d
::
°rög
 
fûíame
 = 
joö_∑ths
(
roŸ
, 
fûe
);

307 c⁄° 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
exts
 = {

311 
	g°d
::
°rög
 
ba£
(
dú_«me
(
fûe
));

312 
	g°d
::
°rög
 
«me
(
ba£_«me
(
fûe
));

313 
	g°d
::
ve˘‹
<
In˛ude
> 
ö˛udes
;

315 
	g°d
::
°rög
 
ªl_∑th
(
joö_∑ths
(
ba£
, 
«me
));

316 
	g°d
::
°rög
 
abs_∑th
(
joö_∑ths
(
roŸ
, 
ªl_∑th
));

317 i‡(
fûe_exi°s
(
abs_∑th
)Ë
	gö˛udes
.
push_back
({{ 
ªl_∑th
, 
roŸ
 },ábs_path });

319 
	gªl_∑th
 = 
joö_∑ths
(
ba£
, "_" + 
«me
);

320 
	gabs_∑th
 = 
joö_∑ths
(
roŸ
, 
ªl_∑th
);

321 i‡(
fûe_exi°s
(
abs_∑th
)Ë
	gö˛udes
.
push_back
({{ 
ªl_∑th
, 
roŸ
 },ábs_path });

323 autÿ
	gext
 : 
exts
) {

324 
ªl_∑th
 = 
joö_∑ths
(
ba£
, "_" + 
«me
 + 
ext
);

325 
	gabs_∑th
 = 
joö_∑ths
(
roŸ
, 
ªl_∑th
);

326 i‡(
fûe_exi°s
(
abs_∑th
)Ë
	gö˛udes
.
push_back
({{ 
ªl_∑th
, 
roŸ
 },ábs_path });

329 autÿ
	gext
 : 
exts
) {

330 
ªl_∑th
 = 
joö_∑ths
(
ba£
, 
«me
 + 
ext
);

331 
	gabs_∑th
 = 
joö_∑ths
(
roŸ
, 
ªl_∑th
);

332 i‡(
fûe_exi°s
(
abs_∑th
)Ë
	gö˛udes
.
push_back
({{ 
ªl_∑th
, 
roŸ
 },ábs_path });

335  
	gö˛udes
;

339 
	g°d
::
°rög
 
föd_fûe
(c⁄° 
°d
::°rög& 
fûe
, c⁄° std::
ve˘‹
<°d::°rög> 
∑ths
)

342 
size_t
 
i
 = 0, 
	gS
 = 
∑ths
.
size
(); 
	gi
 < S; ++i)

344 
	g°d
::
ve˘‹
<
In˛ude
> 
ªsﬁved
(
ªsﬁve_ö˛udes
(
∑ths
[
i
], 
fûe
));

345 i‡(
	gªsﬁved
.
size
()ËÑesﬁved[0].
	gabs_∑th
;

348  
	g°d
::
°rög
("");

352 
	g°d
::
°rög
 
föd_fûe
(c⁄° 
°d
::°rög& 
fûe
, c⁄° * 
∑ths
[])

354 i‡(
	g∑ths
 =0Ë 
°d
::
°rög
("");

355 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ö˛udes
(0);

357 c⁄° ** 
	gô
 = 
∑ths
;

358 
	gô
 && *it) {

359 
	gö˛udes
.
push_back
(*
ô
);

360 ++
	gô
;

362  
föd_fûe
(
fûe
, 
ö˛udes
);

368 * 
ªad_fûe
(c⁄° 
°d
::
°rög
& 
∑th
)

370 #ifde‡
_WIN32


371 
BYTE
* 
pBuf„r
;

372 
DWORD
 
	gdwByãs
;

374 
	g°d
::
w°rög
 
w∑th
 = 
UTF_8
::
c⁄vît_to_utf16
(
∑th
);

375 
HANDLE
 
	ghFûe
 = 
Cª©eFûeW
(
w∑th
.
c_°r
(), 
GENERIC_READ
, 
FILE_SHARE_READ
, 
NULL
, 
OPEN_EXISTING
, 0, NULL);

376 i‡(
	ghFûe
 =
INVALID_HANDLE_VALUE
)  0;

377 
DWORD
 
	gdwFûeLígth
 = 
GëFûeSize
(
hFûe
, 
NULL
);

378 i‡(
	gdwFûeLígth
 =
INVALID_FILE_SIZE
)  0;

380 
	gpBuf„r
 = (
BYTE
*)
mÆloc
((
dwFûeLígth
+1)*(BYTE));

381 
RódFûe
(
hFûe
, 
pBuf„r
, 
dwFûeLígth
, &
dwByãs
, 
NULL
);

382 
	gpBuf„r
[
dwFûeLígth
] = '\0';

383 
Clo£H™dÀ
(
hFûe
);

385 * 
	gc⁄ã¡s
 = (*Ë
pBuf„r
;

387 
°©
 
	g°
;

388 i‡(
°©
(
∑th
.
c_°r
(), &
°
Ë=-1 || 
S_ISDIR
(°.
°_mode
))  0;

389 
	g°d
::
if°ªam
 
fûe
(
∑th
.
c_°r
(), 
°d
::
ios
::
ö
 | std::ios::
bö¨y
 | std::ios::
©e
);

390 * 
	gc⁄ã¡s
 = 0;

391 i‡(
	gfûe
.
is_›í
()) {

392 
size_t
 
	gsize
 = 
fûe
.
ãŒg
();

394 
	gc⁄ã¡s
 = (*Ë
mÆloc
((
size
+1)*());

395 
	gfûe
.
£ekg
(0, 
°d
::
ios
::
beg
);

396 
	gfûe
.
ªad
(
c⁄ã¡s
, 
size
);

397 
	gc⁄ã¡s
[
size
] = '\0';

398 
	gfûe
.
˛o£
();

401 
	g°d
::
°rög
 
exãnsi⁄
;

402 i‡(
	g∑th
.
Àngth
() > 5) {

403 
	gexãnsi⁄
 = 
∑th
.
sub°r
’©h.
Àngth
() - 5, 5);

405 
size_t
 
	gi
=0; i<
	gexãnsi⁄
.
size
();++i)

406 
	gexãnsi⁄
[
i
] = 
tﬁowî
(
exãnsi⁄
[i]);

407 i‡(
	gexãnsi⁄
 =".ßss" && 
c⁄ã¡s
 != 0) {

408 * 
c⁄vîãd
 = 
ßss2scss
(
c⁄ã¡s
, 
SASS2SCSS_PRETTIFY_1
 | 
SASS2SCSS_KEEP_COMMENT
);

409 
‰ì
(
c⁄ã¡s
);

410  
	gc⁄vîãd
;

412  
	gc⁄ã¡s
;

	@node_modules/node-sass/src/libsass/src/file.hpp

1 #i‚de‡
SASS_FILE_H


2 
	#SASS_FILE_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

7 
«me•a˚
 
	gSass
 {

9 
˛ass
 
	gBlock
;

10 
˛ass
 
	gC⁄ãxt
;

12 
«me•a˚
 
	gFûe
 {

16 
	g°d
::
°rög
 
gë_cwd
();

19 
boﬁ
 
fûe_exi°s
(c⁄° 
°d
::
°rög
& 
fûe
);

23 
boﬁ
 
is_absﬁuã_∑th
(c⁄° 
°d
::
°rög
& 
∑th
);

26 
	g°d
::
°rög
 
dú_«me
(c⁄° 
°d
::°rög& 
∑th
);

29 
	g°d
::
°rög
 
ba£_«me
(c⁄° 
°d
::string&);

33 
	g°d
::
°rög
 
make_ˇn⁄iˇl_∑th
 (
°d
::°rög 
∑th
);

37 
	g°d
::
°rög
 
joö_∑ths
(
°d
::°rög 
roŸ
, std::°rög 
«me
);

41 
	g°d
::
°rög
 
∑th_f‹_c⁄sﬁe
(c⁄° 
°d
::°rög& 
ªl_∑th
, c⁄° std::°rög& 
abs_∑th
, c⁄° std::°rög& 
‹ig_∑th
);

44 
	g°d
::
°rög
 
ªl2abs
(c⁄° 
°d
::°rög& 
∑th
, c⁄° std::°rög& 
ba£
 = ".", c⁄° std::°rög& 
cwd
 = 
gë_cwd
());

48 
	g°d
::
°rög
 
abs2ªl
(c⁄° 
°d
::°rög& 
∑th
, c⁄° std::°rög& 
ba£
 = ".", c⁄° std::°rög& 
cwd
 = 
gë_cwd
());

51 
	g°d
::
°rög
 
föd_fûe
(c⁄° 
°d
::°rög& 
fûe
, c⁄° std::
ve˘‹
<°d::°rög> 
∑ths
);

53 
	g°d
::
°rög
 
föd_fûe
(c⁄° 
°d
::°rög& 
fûe
, c⁄° ** 
∑ths
);

58 * 
ªad_fûe
(c⁄° 
°d
::
°rög
& 
fûe
);

63 ˛as†
	cImp‹ãr
 {

64 
	gpublic
:

66 
°d
::
°rög
 
imp_∑th
;

68 
	g°d
::
°rög
 
˘x_∑th
;

71 
	g°d
::
°rög
 
ba£_∑th
;

72 
	gpublic
:

73 
Imp‹ãr
(
°d
::
°rög
 
imp_∑th
, std::°rög 
˘x_∑th
)

74 : 
imp_∑th
(
Fûe
::
make_ˇn⁄iˇl_∑th
(imp_path)),

75 
˘x_∑th
(
Fûe
::
make_ˇn⁄iˇl_∑th
(ctx_path)),

76 
ba£_∑th
(
Fûe
::
dú_«me
(
˘x_∑th
))

81 ˛as†
	cIn˛ude
 : 
public
 
Imp‹ãr
 {

82 
public
:

84 
°d
::
°rög
 
abs_∑th
;

85 
	gpublic
:

86 
In˛ude
(c⁄° 
Imp‹ãr
& 
imp
, 
°d
::
°rög
 
abs_∑th
)

87 : 
Imp‹ãr
(
imp
), 
abs_∑th
(abs_path)

92 ˛as†
	cResour˚
 {

93 
	gpublic
:

95 * 
c⁄ã¡s
;

97 * 
	g§cm≠
;

98 
	gpublic
:

99 
Resour˚
(* 
c⁄ã¡s
, * 
§cm≠
)

100 : 
c⁄ã¡s
(c⁄ã¡s), 
§cm≠
(srcmap)

105 ˛as†
	cStyÀShìt
 : 
public
 
Resour˚
 {

106 
public
:

108 
Block
* 
roŸ
;

109 
	gpublic
:

110 
StyÀShìt
(c⁄° 
Resour˚
& 
ªs
, 
Block
* 
roŸ
)

111 : 
Resour˚
(
ªs
), 
roŸ
(root)

115 
«me•a˚
 
	gFûe
 {

117 
	g°d
::
ve˘‹
<
In˛ude
> 
ªsﬁve_ö˛udes
(c⁄° 
°d
::
°rög
& 
roŸ
, c⁄° std::°rög& 
fûe
);

	@node_modules/node-sass/src/libsass/src/functions.cpp

1 
	~"ßss.hµ
"

2 
	~"fun˘i⁄s.hµ
"

3 
	~"a°.hµ
"

4 
	~"c⁄ãxt.hµ
"

5 
	~"backåa˚.hµ
"

6 
	~"∑r£r.hµ
"

7 
	~"c⁄°™ts.hµ
"

8 
	~"ö•e˘.hµ
"

9 
	~"exãnd.hµ
"

10 
	~"evÆ.hµ
"

11 
	~"utû.hµ
"

12 
	~"ex∑nd.hµ
"

13 
	~"utf8_°rög.hµ
"

14 
	~"ßss/ba£.h
"

15 
	~"utf8.h
"

17 
	~<c°döt
>

18 
	~<c°dlib
>

19 
	~<cm©h
>

20 
	~<c˘y≥
>

21 
	~<s°ªam
>

22 
	~<°rög
>

23 
	~<iom™ù
>

24 
	~<io°ªam
>

25 
	~<øndom
>

26 
	~<£t
>

28 #ifde‡
__MINGW32__


29 
	~"wödows.h
"

30 
	~"wö¸y±.h
"

33 
	#ARG
(
¨g«me
, 
¨gty≥
Ë
gë_¨g
<¨gty≥>◊rg«me, 
ív
, 
sig
, 
p°©e
, 
backåa˚
)

	)

34 
	#ARGR
(
¨g«me
, 
¨gty≥
, 
lo
, 
hi
Ë
	`gë_¨g_r
◊rg«me, 
ív
, 
sig
, 
p°©e
,Üo, hi, 
backåa˚
)

	)

35 
	#ARGM
(
¨g«me
, 
¨gty≥
, 
˘x
Ë
	`gë_¨g_m
◊rg«me, 
ív
, 
sig
, 
p°©e
, 
backåa˚
, ctx)

	)

37 
«me•a˚
 
	gSass
 {

38 
usög
 
	g°d
::
°rög°ªam
;

39 
usög
 
	g°d
::
ídl
;

41 
Deföôi⁄
* 
make_«tive_fun˘i⁄
(
Sig«tuª
 
sig
, 
N©ive_Fun˘i⁄
 
func
, 
C⁄ãxt
& 
˘x
)

43 
P¨£r
 
	gsig_∑r£r
 = P¨£r::
‰om_c_°r
(
sig
, 
˘x
, 
P¨£rSèã
("[built-in function]"));

44 
	gsig_∑r£r
.
	gÀx
<
	gPªÀxî
::
idítifõr
>();

45 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
sig_∑r£r
.
Àxed
));

46 
P¨amëîs
* 
	g∑øms
 = 
sig_∑r£r
.
∑r£_∑ømëîs
();

47  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Deföôi⁄
,

48 
P¨£rSèã
("[built-in function]"),

49 
sig
,

50 
«me
,

51 
∑øms
,

52 
func
,

53 
Ál£
);

56 
Deföôi⁄
* 
make_c_fun˘i⁄
(
Sass_Fun˘i⁄_E¡ry
 
c_func
, 
C⁄ãxt
& 
˘x
)

58 
usög
 
«me•a˚
 
	gPªÀxî
;

60 c⁄° * 
	gsig
 = 
ßss_fun˘i⁄_gë_sig«tuª
(
c_func
);

61 
P¨£r
 
	gsig_∑r£r
 = P¨£r::
‰om_c_°r
(
sig
, 
˘x
, 
P¨£rSèã
("[c function]"));

63 
	gsig_∑r£r
.
	gÀx
 < 
	gÆã∫©ives
 < 
	gidítifõr
, 
	gexa˘ly
 <'*'>,

64 
	gexa˘ly
 < 
	gC⁄°™ts
::
w¨n_kwd
 >,

65 
	gexa˘ly
 < 
	gC⁄°™ts
::
îr‹_kwd
 >,

66 
	gexa˘ly
 < 
	gC⁄°™ts
::
debug_kwd
 >

68 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
sig_∑r£r
.
Àxed
));

69 
P¨amëîs
* 
	g∑øms
 = 
sig_∑r£r
.
∑r£_∑ømëîs
();

70  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Deföôi⁄
,

71 
P¨£rSèã
("[c function]"),

72 
sig
,

73 
«me
,

74 
∑øms
,

75 
c_func
,

76 
Ál£
, 
åue
);

79 
	g°d
::
°rög
 
fun˘i⁄_«me
(
Sig«tuª
 
sig
)

81 
°d
::
°rög
 
°r
(
sig
);

82  
	g°r
.
sub°r
(0, 
°r
.
föd
('('));

85 
«me•a˚
 
	gFun˘i⁄s
 {

87 
ölöe
 
h™dÀ_utf8_îr‹
 (c⁄° 
P¨£rSèã
& 
p°©e
, 
Backåa˚
* 
backåa˚
)

89 
	gåy
 {

90 
	gthrow
;

92 
ˇtch
 (
utf8
::
övÆid_code_poöt
) {

93 
°d
::
°rög
 
msg
("utf8::invalid_code_point");

94 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

96 
ˇtch
 (
utf8
::
nŸ_íough_room
) {

97 
°d
::
°rög
 
msg
("utf8::not_enough_room");

98 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

100 
ˇtch
 (
utf8
::
övÆid_utf8
) {

101 
°d
::
°rög
 
msg
("utf8::invalid_utf8");

102 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

104 
ˇtch
 (...Ë{ 
	gthrow
; }

107 
	gãm∂©e
 <
ty≥«me
 
	gT
>

108 
T
* 
gë_¨g
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
)

111 
T
* 
	gvÆ
 = 
dy«mic_ˇ°
<T*>(
ív
[
¨g«me
]);

112 i‡(!
	gvÆ
) {

113 
	g°d
::
°rög
 
msg
("argument `");

114 
	gmsg
 +
¨g«me
;

115 
	gmsg
 += "` of `";

116 
	gmsg
 +
sig
;

117 
	gmsg
 += "` must beá ";

118 
	gmsg
 +
T
::
ty≥_«me
();

119 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

121  
	gvÆ
;

124 
M≠
* 
gë_¨g_m
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
, 
C⁄ãxt
& 
˘x
)

127 
M≠
* 
	gvÆ
 = 
dy«mic_ˇ°
<M≠*>(
ív
[
¨g«me
]);

128 i‡(
	gvÆ
)  val;

130 
Li°
* 
	glvÆ
 = 
dy«mic_ˇ°
<Li°*>(
ív
[
¨g«me
]);

131 i‡(
	glvÆ
 &&ÜvÆ->
Àngth
(Ë=0Ë 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
M≠
, 
p°©e
, 0);

134 
	gvÆ
 = 
gë_¨g
<
M≠
>(
¨g«me
, 
	gív
, 
	gsig
, 
	gp°©e
, 
	gbackåa˚
);

135  
	gvÆ
;

138 
Numbî
* 
gë_¨g_r
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
lo
, 
hi
, 
Backåa˚
* 
backåa˚
)

141 
Numbî
* 
	gvÆ
 = 
gë_¨g
<Numbî>(
¨g«me
, 
	gív
, 
	gsig
, 
	gp°©e
, 
	gbackåa˚
);

142 
	gv
 = 
vÆ
->
vÆue
();

143 i‡(!(
	glo
 <
v
 && v <
hi
)) {

144 
°d
::
°rög°ªam
 
msg
;

145 
	gmsg
 << "¨gumíà`" << 
	g¨g«me
 << "` o‡`" << 
	gsig
 << "` must be between ";

146 
	gmsg
 << 
	glo
 << "ánd " << 
	ghi
;

147 
îr‹
(
msg
.
°r
(), 
p°©e
, 
backåa˚
);

149  
	gvÆ
;

152 
	#ARGSEL
(
¨g«me
, 
£…y≥
, 
c⁄ãxtuÆize
Ë
gë_¨g_£l
<£…y≥>◊rg«me, 
ív
, 
sig
, 
p°©e
, 
backåa˚
, 
˘x
)

	)

154 
	gãm∂©e
 <
ty≥«me
 
	gT
>

155 
T
* 
gë_¨g_£l
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
, 
C⁄ãxt
& 
˘x
);

157 
	gãm∂©e
 <>

158 
Sñe˘‹_Li°
* 
gë_¨g_£l
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
, 
C⁄ãxt
& 
˘x
) {

159 
Ex¥essi⁄
* 
	gexp
 = 
ARG
(
¨g«me
, Expression);

160 i‡(
	gexp
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

161 
°d
::
°rög°ªam
 
msg
;

162 
	gmsg
 << 
	g¨g«me
 << ":Çull isÇotá valid selector: it must beá string,\n";

163 
	gmsg
 << "®li° o‡°rögs, o∏®li° o‡li°†o‡°rög†f‹ `" << 
fun˘i⁄_«me
(
sig
) << "'";

164 
îr‹
(
msg
.
°r
(), 
p°©e
);

166 i‡(
Såög_C⁄°™t
* 
	g°r
 =
dy«mic_ˇ°
<Såög_C⁄°™t*>(
exp
)) {

167 
°r
->
quŸe_m¨k
(0);

169 
	g°d
::
°rög
 
exp_§c
 = 
exp
->
to_°rög
(
˘x
.
c_›ti⁄s
) + "{";

170  
	gP¨£r
::
∑r£_£À˘‹
(
exp_§c
.
c_°r
(), 
˘x
);

173 
	gãm∂©e
 <>

174 
Com∂ex_Sñe˘‹
* 
gë_¨g_£l
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
, 
C⁄ãxt
& 
˘x
) {

175 
Ex¥essi⁄
* 
	gexp
 = 
ARG
(
¨g«me
, Expression);

176 i‡(
	gexp
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

177 
°d
::
°rög°ªam
 
msg
;

178 
	gmsg
 << 
	g¨g«me
 << ":Çull isÇotá valid selector: it must beá string,\n";

179 
	gmsg
 << "®li° o‡°rögs, o∏®li° o‡li°†o‡°rög†f‹ `" << 
fun˘i⁄_«me
(
sig
) << "'";

180 
îr‹
(
msg
.
°r
(), 
p°©e
);

182 i‡(
Såög_C⁄°™t
* 
	g°r
 =
dy«mic_ˇ°
<Såög_C⁄°™t*>(
exp
)) {

183 
°r
->
quŸe_m¨k
(0);

185 
	g°d
::
°rög
 
exp_§c
 = 
exp
->
to_°rög
(
˘x
.
c_›ti⁄s
) + "{";

186 
Sñe˘‹_Li°
* 
	g£l_li°
 = 
P¨£r
::
∑r£_£À˘‹
(
exp_§c
.
c_°r
(), 
˘x
);

187  (
	g£l_li°
->
Àngth
(Ë> 0Ë? sñ_li°->
fú°
() : 0;

190 
	gãm∂©e
 <>

191 
Compound_Sñe˘‹
* 
gë_¨g_£l
(c⁄° 
°d
::
°rög
& 
¨g«me
, 
Env
& 
ív
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
, 
C⁄ãxt
& 
˘x
) {

192 
Ex¥essi⁄
* 
	gexp
 = 
ARG
(
¨g«me
, Expression);

193 i‡(
	gexp
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

194 
°d
::
°rög°ªam
 
msg
;

195 
	gmsg
 << 
	g¨g«me
 << ":ÇuŒ i†nŸá såög f‹ `" << 
fun˘i⁄_«me
(
sig
) << "'";

196 
îr‹
(
msg
.
°r
(), 
p°©e
);

198 i‡(
Såög_C⁄°™t
* 
	g°r
 =
dy«mic_ˇ°
<Såög_C⁄°™t*>(
exp
)) {

199 
°r
->
quŸe_m¨k
(0);

201 
	g°d
::
°rög
 
exp_§c
 = 
exp
->
to_°rög
(
˘x
.
c_›ti⁄s
) + "{";

202 
Sñe˘‹_Li°
* 
	g£l_li°
 = 
P¨£r
::
∑r£_£À˘‹
(
exp_§c
.
c_°r
(), 
˘x
);

203  (
	g£l_li°
->
Àngth
(Ë> 0Ë? sñ_li°->
fú°
()->
èû
()->
hód
() : 0;

206 #ifde‡
__MINGW32__


207 
uöt64_t
 
GëSìd
()

209 
HCRYPTPROV
 
	ghp
 = 0;

210 
BYTE
 
	grb
[8];

211 
Cry±AcquúeC⁄ãxt
(&
hp
, 0, 0, 
PROV_RSA_FULL
, 
CRYPT_VERIFYCONTEXT
);

212 
Cry±GíR™dom
(
hp
, (
rb
),Ñb);

213 
Cry±Rñó£C⁄ãxt
(
hp
, 0);

215 
uöt64_t
 
	g£ed
;

216 
mem˝y
(&
£ed
, &
rb
[0], (seed));

218  
	g£ed
;

221 
uöt64_t
 
GëSìd
()

223 
	g°d
::
øndom_devi˚
 
rd
;

224  
rd
();

232 
	g°d
::
mt19937
 
ønd
(
°©ic_ˇ°
<>(
GëSìd
()));

235 
	g°d
::
£t
<
°d
::
°rög
> 
„©uªs
 {

246 
ölöe
 
cﬁ‹_num
(
Numbî
* 
n
) {

247 i‡(
	gn
->
unô
() == "%") {

248  
°d
::
mö
(°d::
max
(
n
->
vÆue
() * 255 / 100.0, 0.0), 255.0);

250  
	g°d
::
mö
(
°d
::
max
(
n
->
vÆue
(), 0.0), 255.0);

254 
ölöe
 
Æpha_num
(
Numbî
* 
n
) {

255 i‡(
	gn
->
unô
() == "%") {

256  
°d
::
mö
(°d::
max
(
n
->
vÆue
(), 0.0), 100.0);

258  
	g°d
::
mö
(
°d
::
max
(
n
->
vÆue
(), 0.0), 1.0);

262 
Sig«tuª
 
	grgb_sig
 = "rgb($red, $green, $blue)";

263 
BUILT_IN
(
rgb
)

265  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

266 
p°©e
,

267 
cﬁ‹_num
(
ARG
("$ªd", 
Numbî
)),

268 
cﬁ‹_num
(
ARG
("$gªí", 
Numbî
)),

269 
cﬁ‹_num
(
ARG
("$blue", 
Numbî
)));

272 
Sig«tuª
 
	grgba_4_sig
 = "rgba($red, $green, $blue, $alpha)";

273 
BUILT_IN
(
rgba_4
)

275  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

276 
p°©e
,

277 
cﬁ‹_num
(
ARG
("$ªd", 
Numbî
)),

278 
cﬁ‹_num
(
ARG
("$gªí", 
Numbî
)),

279 
cﬁ‹_num
(
ARG
("$blue", 
Numbî
)),

280 
Æpha_num
(
ARG
("$Æpha", 
Numbî
)));

283 
Sig«tuª
 
	grgba_2_sig
 = "rgba($color, $alpha)";

284 
BUILT_IN
(
rgba_2
)

286 
Cﬁ‹
* 
	gc_¨g
 = 
ARG
("$color", Color);

287 
Cﬁ‹
* 
	g√w_c
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Cﬁ‹, *
c_¨g
);

288 
	g√w_c
->
a
(
Æpha_num
(
ARG
("$Æpha", 
Numbî
)));

289 
	g√w_c
->
di•
("");

290  
	g√w_c
;

293 
Sig«tuª
 
	gªd_sig
 = "red($color)";

294 
BUILT_IN
(
ªd
)

295 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
ARG
("$cﬁ‹", 
Cﬁ‹
)->
r
()); }

297 
Sig«tuª
 
	ggªí_sig
 = "green($color)";

298 
BUILT_IN
(
gªí
)

299 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
ARG
("$cﬁ‹", 
Cﬁ‹
)->
g
()); }

301 
Sig«tuª
 
	gblue_sig
 = "blue($color)";

302 
BUILT_IN
(
blue
)

303 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
ARG
("$cﬁ‹", 
Cﬁ‹
)->
b
()); }

305 
Sig«tuª
 
	gmix_sig
 = "mix($color-1, $color-2, $weight: 50%)";

306 
BUILT_IN
(
mix
)

308 
Cﬁ‹
* 
	gcﬁ‹1
 = 
ARG
("$color-1", Color);

309 
Cﬁ‹
* 
	gcﬁ‹2
 = 
ARG
("$color-2", Color);

310 
Numbî
* 
	gweight
 = 
ARGR
("$weight", Number, 0, 100);

312 
	gp
 = 
weight
->
vÆue
()/100;

313 
	gw
 = 2*
p
 - 1;

314 
	ga
 = 
cﬁ‹1
->
a
(Ë- 
cﬁ‹2
->a();

316 
	gw1
 = (((
w
 * 
a
 == -1) ? w : (w +á)/(1 + w*a)) + 1)/2.0;

317 
	gw2
 = 1 - 
w1
;

319  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

320 
p°©e
,

321 
Sass
::
round
(
w1
*
cﬁ‹1
->
r
(Ë+ 
w2
*
cﬁ‹2
->r(), 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
),

322 
Sass
::
round
(
w1
*
cﬁ‹1
->
g
(Ë+ 
w2
*
cﬁ‹2
->g(), 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
),

323 
Sass
::
round
(
w1
*
cﬁ‹1
->
b
(Ë+ 
w2
*
cﬁ‹2
->b(), 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
),

324 
cﬁ‹1
->
a
()*
p
 + 
cﬁ‹2
->a()*(1-p));

332 
	sHSL
 { 
	gh
; 
	gs
; 
	gl
; };

333 
HSL
 
rgb_to_h¶
(
r
, 
g
, 
b
)

337 
	gr
 /255.0; 
	gg
 /255.0; 
	gb
 /= 255.0;

339 
	gmax
 = 
°d
::
max
(
r
, std::max(
g
, 
b
));

340 
	gmö
 = 
°d
::
mö
(
r
, std::mö(
g
, 
b
));

341 
	gdñè
 = 
max
 - 
mö
;

343 
	gh
 = 0, 
	gs
 = 0, 
	gl
 = (
max
 + 
mö
) / 2.0;

345 i‡(
	gmax
 =
mö
) {

346 
h
 = 
s
 = 0;

349 i‡(
	gl
 < 0.5Ë
	gs
 = 
dñè
 / (
max
 + 
mö
);

350 
	gs
 = 
dñè
 / (2.0 - 
max
 - 
mö
);

352 i‡(
	gr
 =
max
Ë
h
 = (
g
 - 
b
Ë/ 
dñè
 + (g < b ? 6 : 0);

353 i‡(
	gg
 =
max
Ë
h
 = (
b
 - 
r
Ë/ 
dñè
 + 2;

354 i‡(
	gb
 =
max
Ë
h
 = (
r
 - 
g
Ë/ 
dñè
 + 4;

357 
HSL
 
	gh¶_°ru˘
;

358 
	gh¶_°ru˘
.
	gh
 = 
h
 / 6 * 360;

359 
	gh¶_°ru˘
.
	gs
 = 
s
 * 100;

360 
	gh¶_°ru˘
.
	gl
 = 
l
 * 100;

362  
	gh¶_°ru˘
;

366 
h_to_rgb
(
m1
, 
m2
, 
h
) {

367 
	gh
 < 0) h += 1;

368 
	gh
 > 1) h -= 1;

369 i‡(
	gh
*6.0 < 1Ë 
	gm1
 + (
	gm2
 - m1)*h*6;

370 i‡(
	gh
*2.0 < 1Ë 
	gm2
;

371 i‡(
	gh
*3.0 < 2Ë 
	gm1
 + (
	gm2
 - m1) * (2.0/3.0 - h)*6;

372  
	gm1
;

375 
Cﬁ‹
* 
h¶a_im∂
(
h
, 
s
, 
l
, 
a
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
)

377 
	gh
 /= 360.0;

378 
	gs
 /= 100.0;

379 
	gl
 /= 100.0;

381 i‡(
	gl
 < 0)Ü = 0;

382 i‡(
	gs
 < 0) s = 0;

383 i‡(
	gl
 > 1)Ü = 1;

384 i‡(
	gs
 > 1) s = 1;

385 
	gh
 < 0) h += 1;

386 
	gh
 > 1) h -= 1;

389 
	gm2
;

390 i‡(
	gl
 <0.5Ë
m2
 = 
l
*(
s
+1.0);

391 
	gm2
 = (
l
+
s
)-(l*s);

392 
	gm1
 = (
l
*2.0)-
m2
;

394 
	gr
 = (
h_to_rgb
(
m1
, 
m2
, 
h
 + 1.0/3.0) * 255.0);

395 
	gg
 = (
h_to_rgb
(
m1
, 
m2
, 
h
) * 255.0);

396 
	gb
 = (
h_to_rgb
(
m1
, 
m2
, 
h
 - 1.0/3.0) * 255.0);

398  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
, 
p°©e
, 
r
, 
g
, 
b
, 
a
);

401 
Sig«tuª
 
	gh¶_sig
 = "hsl($hue, $saturation, $lightness)";

402 
BUILT_IN
(
h¶
)

404  
h¶a_im∂
(
ARG
("$hue", 
Numbî
)->
vÆue
(),

405 
ARG
("$ßtuøti⁄", 
Numbî
)->
vÆue
(),

406 
ARG
("$lighäess", 
Numbî
)->
vÆue
(),

408 
˘x
,

409 
p°©e
);

412 
Sig«tuª
 
	gh¶a_sig
 = "hsla($hue, $saturation, $lightness, $alpha)";

413 
BUILT_IN
(
h¶a
)

415  
h¶a_im∂
(
ARG
("$hue", 
Numbî
)->
vÆue
(),

416 
ARG
("$ßtuøti⁄", 
Numbî
)->
vÆue
(),

417 
ARG
("$lighäess", 
Numbî
)->
vÆue
(),

418 
ARG
("$Æpha", 
Numbî
)->
vÆue
(),

419 
˘x
,

420 
p°©e
);

423 
Sig«tuª
 
	ghue_sig
 = "hue($color)";

424 
BUILT_IN
(
hue
)

426 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

427 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

428 
rgb_cﬁ‹
->
g
(),

429 
rgb_cﬁ‹
->
b
());

430  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
h¶_cﬁ‹
.
h
, "deg");

433 
Sig«tuª
 
	gßtuøti⁄_sig
 = "saturation($color)";

434 
BUILT_IN
(
ßtuøti⁄
)

436 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

437 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

438 
rgb_cﬁ‹
->
g
(),

439 
rgb_cﬁ‹
->
b
());

440  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
h¶_cﬁ‹
.
s
, "%");

443 
Sig«tuª
 
	glighäess_sig
 = "lightness($color)";

444 
BUILT_IN
(
lighäess
)

446 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

447 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

448 
rgb_cﬁ‹
->
g
(),

449 
rgb_cﬁ‹
->
b
());

450  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
h¶_cﬁ‹
.
l
, "%");

453 
Sig«tuª
 
	gadju°_hue_sig
 = "adjust-hue($color, $degrees)";

454 
BUILT_IN
(
adju°_hue
)

456 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

457 
Numbî
* 
	gdegªes
 = 
ARG
("$degrees", Number);

458 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

459 
rgb_cﬁ‹
->
g
(),

460 
rgb_cﬁ‹
->
b
());

461  
h¶a_im∂
(
h¶_cﬁ‹
.
h
 + 
degªes
->
vÆue
(),

462 
h¶_cﬁ‹
.
s
,

463 
h¶_cﬁ‹
.
l
,

464 
rgb_cﬁ‹
->
a
(),

465 
˘x
,

466 
p°©e
);

469 
Sig«tuª
 
	glighãn_sig
 = "lighten($color, $amount)";

470 
BUILT_IN
(
lighãn
)

472 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

473 
Numbî
* 
	gamou¡
 = 
ARGR
("$amount", Number, 0, 100);

474 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

475 
rgb_cﬁ‹
->
g
(),

476 
rgb_cﬁ‹
->
b
());

478 
	gh¶cﬁ‹L
 = 
h¶_cﬁ‹
.
l
;

479 i‡(
	gh¶cﬁ‹L
 < 0) {

480 
	gh¶cﬁ‹L
 = 0;

483  
h¶a_im∂
(
h¶_cﬁ‹
.
h
,

484 
h¶_cﬁ‹
.
s
,

485 
h¶cﬁ‹L
 + 
amou¡
->
vÆue
(),

486 
rgb_cﬁ‹
->
a
(),

487 
˘x
,

488 
p°©e
);

491 
Sig«tuª
 
	gd¨kí_sig
 = "darken($color, $amount)";

492 
BUILT_IN
(
d¨kí
)

494 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

495 
Numbî
* 
	gamou¡
 = 
ARGR
("$amount", Number, 0, 100);

496 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

497 
rgb_cﬁ‹
->
g
(),

498 
rgb_cﬁ‹
->
b
());

501 
	gh¶cﬁ‹L
 = 
h¶_cﬁ‹
.
l
;

502 i‡(
	gh¶cﬁ‹L
 > 100) {

503 
	gh¶cﬁ‹L
 = 100;

506  
h¶a_im∂
(
h¶_cﬁ‹
.
h
,

507 
h¶_cﬁ‹
.
s
,

508 
h¶cﬁ‹L
 - 
amou¡
->
vÆue
(),

509 
rgb_cﬁ‹
->
a
(),

510 
˘x
,

511 
p°©e
);

514 
Sig«tuª
 
	gßtuøã_sig
 = "saturate($color, $amount: false)";

515 
BUILT_IN
(
ßtuøã
)

518 
Numbî
* 
	gamou¡
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$amount"]);

519 i‡(!
	gamou¡
) {

520  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "ßtuøã(" + 
ív
["$cﬁ‹"]->
to_°rög
(˘x.
c_›ti⁄s
) + ")");

523 
ARGR
("$amou¡", 
Numbî
, 0, 100);

524 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

525 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

526 
rgb_cﬁ‹
->
g
(),

527 
rgb_cﬁ‹
->
b
());

529 
	gh¶cﬁ‹S
 = 
h¶_cﬁ‹
.
s
 + 
amou¡
->
vÆue
();

532 i‡(
	gh¶cﬁ‹S
 < 0) {

533 
	gh¶cﬁ‹S
 = 0;

535 i‡(
	gh¶cﬁ‹S
 > 100) {

536 
	gh¶cﬁ‹S
 = 100;

539  
h¶a_im∂
(
h¶_cﬁ‹
.
h
,

540 
h¶cﬁ‹S
,

541 
h¶_cﬁ‹
.
l
,

542 
rgb_cﬁ‹
->
a
(),

543 
˘x
,

544 
p°©e
);

547 
Sig«tuª
 
	gdeßtuøã_sig
 = "desaturate($color, $amount)";

548 
BUILT_IN
(
deßtuøã
)

550 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

551 
Numbî
* 
	gamou¡
 = 
ARGR
("$amount", Number, 0, 100);

552 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

553 
rgb_cﬁ‹
->
g
(),

554 
rgb_cﬁ‹
->
b
());

556 
	gh¶cﬁ‹S
 = 
h¶_cﬁ‹
.
s
 - 
amou¡
->
vÆue
();

559 i‡(
	gh¶cﬁ‹S
 <= 0) {

560 
h¶cﬁ‹S
 = 0;

562 i‡(
	gh¶cﬁ‹S
 > 100) {

563 
	gh¶cﬁ‹S
 = 100;

566  
h¶a_im∂
(
h¶_cﬁ‹
.
h
,

567 
h¶cﬁ‹S
,

568 
h¶_cﬁ‹
.
l
,

569 
rgb_cﬁ‹
->
a
(),

570 
˘x
,

571 
p°©e
);

574 
Sig«tuª
 
	ggøysˇÀ_sig
 = "grayscale($color)";

575 
BUILT_IN
(
gøysˇÀ
)

578 
Numbî
* 
	gamou¡
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$color"]);

579 i‡(
	gamou¡
) {

580  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "gøysˇÀ(" + 
amou¡
->
to_°rög
(˘x.
c_›ti⁄s
) + ")");

583 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

584 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

585 
rgb_cﬁ‹
->
g
(),

586 
rgb_cﬁ‹
->
b
());

587  
h¶a_im∂
(
h¶_cﬁ‹
.
h
,

589 
h¶_cﬁ‹
.
l
,

590 
rgb_cﬁ‹
->
a
(),

591 
˘x
,

592 
p°©e
);

595 
Sig«tuª
 
	gcom∂emít_sig
 = "complement($color)";

596 
BUILT_IN
(
com∂emít
)

598 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

599 
HSL
 
	gh¶_cﬁ‹
 = 
rgb_to_h¶
(
rgb_cﬁ‹
->
r
(),

600 
rgb_cﬁ‹
->
g
(),

601 
rgb_cﬁ‹
->
b
());

602  
h¶a_im∂
(
h¶_cﬁ‹
.
h
 - 180.0,

603 
h¶_cﬁ‹
.
s
,

604 
h¶_cﬁ‹
.
l
,

605 
rgb_cﬁ‹
->
a
(),

606 
˘x
,

607 
p°©e
);

610 
Sig«tuª
 
	gövît_sig
 = "invert($color)";

611 
BUILT_IN
(
övît
)

614 
Numbî
* 
	gamou¡
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$color"]);

615 i‡(
	gamou¡
) {

616  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "övît(" + 
amou¡
->
to_°rög
(˘x.
c_›ti⁄s
) + ")");

619 
Cﬁ‹
* 
	grgb_cﬁ‹
 = 
ARG
("$color", Color);

620  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

621 
p°©e
,

622 255 - 
rgb_cﬁ‹
->
r
(),

623 255 - 
rgb_cﬁ‹
->
g
(),

624 255 - 
rgb_cﬁ‹
->
b
(),

625 
rgb_cﬁ‹
->
a
());

631 
Sig«tuª
 
	gÆpha_sig
 = "alpha($color)";

632 
Sig«tuª
 
	g›acôy_sig
 = "opacity($color)";

633 
BUILT_IN
(
Æpha
)

635 
Såög_C⁄°™t
* 
	gõ_kwd
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
ív
["$color"]);

636 i‡(
	gõ_kwd
) {

637  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "Æpha(" + 
õ_kwd
->
vÆue
() + ")");

641 
Numbî
* 
	gamou¡
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$color"]);

642 i‡(
	gamou¡
) {

643  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "›acôy(" + 
amou¡
->
to_°rög
(˘x.
c_›ti⁄s
) + ")");

646  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
ARG
("$cﬁ‹", 
Cﬁ‹
)->
a
());

649 
Sig«tuª
 
	g›acify_sig
 = "opacify($color, $amount)";

650 
Sig«tuª
 
	gÁde_ö_sig
 = "fade-in($color, $amount)";

651 
BUILT_IN
(
›acify
)

653 
Cﬁ‹
* 
	gcﬁ‹
 = 
ARG
("$color", Color);

654 
	gamou¡
 = 
ARGR
("$amou¡", 
Numbî
, 0, 1)->
vÆue
();

655 
	gÆpha
 = 
°d
::
mö
(
cﬁ‹
->
a
(Ë+ 
amou¡
, 1.0);

656  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

657 
p°©e
,

658 
cﬁ‹
->
r
(),

659 
cﬁ‹
->
g
(),

660 
cﬁ‹
->
b
(),

661 
Æpha
);

664 
Sig«tuª
 
	gå™•¨ítize_sig
 = "transparentize($color, $amount)";

665 
Sig«tuª
 
	gÁde_out_sig
 = "fade-out($color, $amount)";

666 
BUILT_IN
(
å™•¨ítize
)

668 
Cﬁ‹
* 
	gcﬁ‹
 = 
ARG
("$color", Color);

669 
	gamou¡
 = 
ARGR
("$amou¡", 
Numbî
, 0, 1)->
vÆue
();

670 
	gÆpha
 = 
°d
::
max
(
cﬁ‹
->
a
(Ë- 
amou¡
, 0.0);

671  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

672 
p°©e
,

673 
cﬁ‹
->
r
(),

674 
cﬁ‹
->
g
(),

675 
cﬁ‹
->
b
(),

676 
Æpha
);

683 
Sig«tuª
 
	gadju°_cﬁ‹_sig
 = "adjust-color($color, $red: false, $green: false, $blue: false, $hue: false, $saturation: false, $lightness: false, $alpha: false)";

684 
BUILT_IN
(
adju°_cﬁ‹
)

686 
Cﬁ‹
* 
	gcﬁ‹
 = 
ARG
("$color", Color);

687 
Numbî
* 
	gr
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$red"]);

688 
Numbî
* 
	gg
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$green"]);

689 
Numbî
* 
	gb
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$blue"]);

690 
Numbî
* 
	gh
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$hue"]);

691 
Numbî
* 
	gs
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$saturation"]);

692 
Numbî
* 
	gl
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$lightness"]);

693 
Numbî
* 
	ga
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$alpha"]);

695 
boﬁ
 
	grgb
 = 
r
 || 
g
 || 
b
;

696 
boﬁ
 
	gh¶
 = 
h
 || 
s
 || 
l
;

698 i‡(
	grgb
 && 
	gh¶
) {

699 
îr‹
("ˇ¬Ÿ s≥cify bŸh RGBánd HSL vÆue†f‹ `adju°-cﬁ‹`", 
p°©e
);

701 i‡(
	grgb
) {

702 
	gº
 = 
r
 ? 
ARGR
("$ªd", 
Numbî
, -255, 255)->
vÆue
() : 0;

703 
	ggg
 = 
g
 ? 
ARGR
("$gªí", 
Numbî
, -255, 255)->
vÆue
() : 0;

704 
	gbb
 = 
b
 ? 
ARGR
("$blue", 
Numbî
, -255, 255)->
vÆue
() : 0;

705 
	gØ
 = 
a
 ? 
ARGR
("$Æpha", 
Numbî
, -1, 1)->
vÆue
() : 0;

706  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

707 
p°©e
,

708 
cﬁ‹
->
r
(Ë+ 
º
,

709 
cﬁ‹
->
g
(Ë+ 
gg
,

710 
cﬁ‹
->
b
(Ë+ 
bb
,

711 
cﬁ‹
->
a
(Ë+ 
Ø
);

713 i‡(
	gh¶
) {

714 
HSL
 
	gh¶_°ru˘
 = 
rgb_to_h¶
(
cﬁ‹
->
r
(), cﬁ‹->
g
(), cﬁ‹->
b
());

715 
	gss
 = 
s
 ? 
ARGR
("$ßtuøti⁄", 
Numbî
, -100, 100)->
vÆue
() : 0;

716 
	gŒ
 = 
l
 ? 
ARGR
("$lighäess", 
Numbî
, -100, 100)->
vÆue
() : 0;

717 
	gØ
 = 
a
 ? 
ARGR
("$Æpha", 
Numbî
, -1, 1)->
vÆue
() : 0;

718  
h¶a_im∂
(
h¶_°ru˘
.
h
 + (h ? h->
vÆue
() : 0),

719 
h¶_°ru˘
.
s
 + 
ss
,

720 
h¶_°ru˘
.
l
 + 
Œ
,

721 
cﬁ‹
->
a
(Ë+ 
Ø
,

722 
˘x
,

723 
p°©e
);

725 i‡(
	ga
) {

726  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

727 
p°©e
,

728 
cﬁ‹
->
r
(),

729 
cﬁ‹
->
g
(),

730 
cﬁ‹
->
b
(),

731 
cﬁ‹
->
a
(Ë+ (®?á->
vÆue
() : 0));

733 
îr‹
("nŸÉnoughárgumít†f‹ `adju°-cﬁ‹`", 
p°©e
);

735  
	gcﬁ‹
;

738 
Sig«tuª
 
	gsˇÀ_cﬁ‹_sig
 = "scale-color($color, $red: false, $green: false, $blue: false, $hue: false, $saturation: false, $lightness: false, $alpha: false)";

739 
BUILT_IN
(
sˇÀ_cﬁ‹
)

741 
Cﬁ‹
* 
	gcﬁ‹
 = 
ARG
("$color", Color);

742 
Numbî
* 
	gr
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$red"]);

743 
Numbî
* 
	gg
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$green"]);

744 
Numbî
* 
	gb
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$blue"]);

745 
Numbî
* 
	gh
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$hue"]);

746 
Numbî
* 
	gs
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$saturation"]);

747 
Numbî
* 
	gl
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$lightness"]);

748 
Numbî
* 
	ga
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$alpha"]);

750 
boﬁ
 
	grgb
 = 
r
 || 
g
 || 
b
;

751 
boﬁ
 
	gh¶
 = 
h
 || 
s
 || 
l
;

753 i‡(
	grgb
 && 
	gh¶
) {

754 
îr‹
("ˇ¬Ÿ s≥cify bŸh RGBánd HSL vÆue†f‹ `sˇÀ-cﬁ‹`", 
p°©e
);

756 i‡(
	grgb
) {

757 
	grsˇÀ
 = (
r
 ? 
ARGR
("$ªd", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

758 
	ggsˇÀ
 = (
g
 ? 
ARGR
("$gªí", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

759 
	gbsˇÀ
 = (
b
 ? 
ARGR
("$blue", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

760 
	gasˇÀ
 = (
a
 ? 
ARGR
("$Æpha", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

761  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

762 
p°©e
,

763 
cﬁ‹
->
r
(Ë+ 
rsˇÀ
 * (rscale > 0.0 ? 255 - color->r() : color->r()),

764 
cﬁ‹
->
g
(Ë+ 
gsˇÀ
 * (gscale > 0.0 ? 255 - color->g() : color->g()),

765 
cﬁ‹
->
b
(Ë+ 
bsˇÀ
 * (bscale > 0.0 ? 255 - color->b() : color->b()),

766 
cﬁ‹
->
a
(Ë+ 
asˇÀ
 * (ascale > 0.0 ? 1.0 - color->a() : color->a()));

768 i‡(
	gh¶
) {

769 
	ghsˇÀ
 = (
h
 ? 
ARGR
("$hue", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

770 
	gssˇÀ
 = (
s
 ? 
ARGR
("$ßtuøti⁄", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

771 
	glsˇÀ
 = (
l
 ? 
ARGR
("$lighäess", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

772 
	gasˇÀ
 = (
a
 ? 
ARGR
("$Æpha", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

773 
HSL
 
	gh¶_°ru˘
 = 
rgb_to_h¶
(
cﬁ‹
->
r
(), cﬁ‹->
g
(), cﬁ‹->
b
());

774 
	gh¶_°ru˘
.
	gh
 +
hsˇÀ
 * (hsˇÀ > 0.0 ? 360.0 - 
h¶_°ru˘
.
h
 : hsl_struct.h);

775 
	gh¶_°ru˘
.
	gs
 +
ssˇÀ
 * (ssˇÀ > 0.0 ? 100.0 - 
h¶_°ru˘
.
s
 : hsl_struct.s);

776 
	gh¶_°ru˘
.
	gl
 +
lsˇÀ
 * (lsˇÀ > 0.0 ? 100.0 - 
h¶_°ru˘
.
l
 : hsl_struct.l);

777 
	gÆpha
 = 
cﬁ‹
->
a
(Ë+ 
asˇÀ
 * (ascale > 0.0 ? 1.0 - color->a() : color->a());

778  
h¶a_im∂
(
h¶_°ru˘
.
h
, h¶_°ru˘.
s
, h¶_°ru˘.
l
, 
Æpha
, 
˘x
, 
p°©e
);

780 i‡(
	ga
) {

781 
	gasˇÀ
 = (
a
 ? 
ARGR
("$Æpha", 
Numbî
, -100.0, 100.0)->
vÆue
() : 0.0) / 100.0;

782  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

783 
p°©e
,

784 
cﬁ‹
->
r
(),

785 
cﬁ‹
->
g
(),

786 
cﬁ‹
->
b
(),

787 
cﬁ‹
->
a
(Ë+ 
asˇÀ
 * (ascale > 0.0 ? 1.0 - color->a() : color->a()));

789 
îr‹
("nŸÉnoughárgumít†f‹ `sˇÀ-cﬁ‹`", 
p°©e
);

791  
	gcﬁ‹
;

794 
Sig«tuª
 
	gch™ge_cﬁ‹_sig
 = "change-color($color, $red: false, $green: false, $blue: false, $hue: false, $saturation: false, $lightness: false, $alpha: false)";

795 
BUILT_IN
(
ch™ge_cﬁ‹
)

797 
Cﬁ‹
* 
	gcﬁ‹
 = 
ARG
("$color", Color);

798 
Numbî
* 
	gr
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$red"]);

799 
Numbî
* 
	gg
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$green"]);

800 
Numbî
* 
	gb
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$blue"]);

801 
Numbî
* 
	gh
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$hue"]);

802 
Numbî
* 
	gs
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$saturation"]);

803 
Numbî
* 
	gl
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$lightness"]);

804 
Numbî
* 
	ga
 = 
dy«mic_ˇ°
<Numbî*>(
ív
["$alpha"]);

806 
boﬁ
 
	grgb
 = 
r
 || 
g
 || 
b
;

807 
boﬁ
 
	gh¶
 = 
h
 || 
s
 || 
l
;

809 i‡(
	grgb
 && 
	gh¶
) {

810 
îr‹
("ˇ¬Ÿ s≥cify bŸh RGBánd HSL vÆue†f‹ `ch™ge-cﬁ‹`", 
p°©e
);

812 i‡(
	grgb
) {

813  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

814 
p°©e
,

815 
r
 ? 
ARGR
("$ªd", 
Numbî
, 0, 255)->
vÆue
(Ë: 
cﬁ‹
->r(),

816 
g
 ? 
ARGR
("$gªí", 
Numbî
, 0, 255)->
vÆue
(Ë: 
cﬁ‹
->g(),

817 
b
 ? 
ARGR
("$blue", 
Numbî
, 0, 255)->
vÆue
(Ë: 
cﬁ‹
->b(),

818 
a
 ? 
ARGR
("$Æpha", 
Numbî
, 0, 255)->
vÆue
(Ë: 
cﬁ‹
->a());

820 i‡(
	gh¶
) {

821 
HSL
 
	gh¶_°ru˘
 = 
rgb_to_h¶
(
cﬁ‹
->
r
(), cﬁ‹->
g
(), cﬁ‹->
b
());

822 i‡(
	gh
Ë
	gh¶_°ru˘
.h = 
°©ic_ˇ°
<>(((°©ic_ˇ°<>(
h
->
vÆue
()) % 360) + 360) % 360) / 360.0;

823 i‡(
	gs
Ë
	gh¶_°ru˘
.†
ARGR
("$ßtuøti⁄", 
Numbî
, 0, 100)->
vÆue
();

824 i‡(
	gl
Ë
	gh¶_°ru˘
.»
ARGR
("$lighäess", 
Numbî
, 0, 100)->
vÆue
();

825 
	gÆpha
 = 
a
 ? 
ARGR
("$Æpha", 
Numbî
, 0, 1.0)->
vÆue
(Ë: 
cﬁ‹
->a();

826  
h¶a_im∂
(
h¶_°ru˘
.
h
, h¶_°ru˘.
s
, h¶_°ru˘.
l
, 
Æpha
, 
˘x
, 
p°©e
);

828 i‡(
	ga
) {

829 
	gÆpha
 = 
a
 ? 
ARGR
("$Æpha", 
Numbî
, 0, 1.0)->
vÆue
(Ë: 
cﬁ‹
->a();

830  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Cﬁ‹
,

831 
p°©e
,

832 
cﬁ‹
->
r
(),

833 
cﬁ‹
->
g
(),

834 
cﬁ‹
->
b
(),

835 
Æpha
);

837 
îr‹
("nŸÉnoughárgumít†f‹ `ch™ge-cﬁ‹`", 
p°©e
);

839  
	gcﬁ‹
;

842 
	gãm∂©e
 <
size_t
 
	gønge
>

843 
ˇp_ch™√l
(
c
) {

844 i‡(
	gc
 > 
	gønge
) Ñange;

845 i‡(
	gc
 < 0)  0;

846  
	gc
;

849 
Sig«tuª
 
	gõ_hex_°r_sig
 = "ie-hex-str($color)";

850 
BUILT_IN
(
õ_hex_°r
)

852 
Cﬁ‹
* 
	gc
 = 
ARG
("$color", Color);

853 
	gr
 = 
ˇp_ch™√l
<0xff>(
c
->
r
());

854 
	gg
 = 
ˇp_ch™√l
<0xff>(
c
->
g
());

855 
	gb
 = 
ˇp_ch™√l
<0xff>(
c
->
b
());

856 
	ga
 = 
ˇp_ch™√l
<1> (
c
->
a
()) * 255;

858 
	g°d
::
°rög°ªam
 
ss
;

859 
	gss
 << '#' << 
	g°d
::
£tw
(2Ë<< 
°d
::
£tfûl
('0');

860 
	gss
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
Sass
::
round
(
a
, 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
));

861 
	gss
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
Sass
::
round
(
r
, 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
));

862 
	gss
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
Sass
::
round
(
g
, 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
));

863 
	gss
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
Sass
::
round
(
b
, 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
));

865 
	g°d
::
°rög
 
ªsu…
(
ss
.
°r
());

866 
size_t
 
	gi
 = 0, 
	gL
 = 
ªsu…
.
Àngth
(); i < L; ++i) {

867 
	gªsu…
[
i
] = 
°d
::
touµî
(
ªsu…
[i]);

869  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
ªsu…
);

876 
Sig«tuª
 
	gunquŸe_sig
 = "unquote($string)";

877 
BUILT_IN
(
ßss_unquŸe
)

879 
AST_Node
* 
	g¨g
 = 
ív
["$string"];

880 i‡(
Såög_QuŸed
* 
	g°rög_quŸed
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
¨g
)) {

881 
Såög_C⁄°™t
* 
ªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_C⁄°™t, 
p°©e
, 
°rög_quŸed
->
vÆue
());

883 
	gªsu…
->
ßss_fix_1291
(
°rög_quŸed
->
quŸe_m¨k
() != 0);

884  
	gªsu…
;

886 i‡(
	gdy«mic_ˇ°
<
	gSåög_C⁄°™t
*>(
	g¨g
)) {

887  (
	gEx¥essi⁄
*Ë
	g¨g
;

890 
Sass_Ouçut_StyÀ
 
	gﬁd°yÀ
 = 
˘x
.
c_›ti⁄s
.
ouçut_°yÀ
;

891 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
SASS_STYLE_NESTED
;

892 
	g°d
::
°rög
 
vÆ
(
¨g
->
to_°rög
(
˘x
.
c_›ti⁄s
));

893 
	gvÆ
 = 
dy«mic_ˇ°
<
NuŒ
*>(
¨g
Ë? "nuŒ" : 
vÆ
;

894 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
ﬁd°yÀ
;

896 
dïªˇãd_fun˘i⁄
("Passög " + 
vÆ
 + ",áÇ⁄-°rög vÆue,ÅÿunquŸe()", 
p°©e
);

897  (
	gEx¥essi⁄
*Ë
	g¨g
;

901 
Sig«tuª
 
	gquŸe_sig
 = "quote($string)";

902 
BUILT_IN
(
ßss_quŸe
)

904 
AST_Node
* 
	g¨g
 = 
ív
["$string"];

906 i‡(
Såög_QuŸed
* 
	gq°r
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
¨g
)) {

907 
q°r
->
quŸe_m¨k
('*');

908  
	gq°r
;

911 
	g°d
::
°rög
 
°r
(
quŸe
(
¨g
->
to_°rög
(
˘x
.
c_›ti⁄s
), 
Såög_C⁄°™t
::
doubÀ_quŸe
()));

912 
Såög_QuŸed
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
p°©e
, 
°r
);

913 
	gªsu…
->
is_dñayed
(
åue
);

914 
	gªsu…
->
quŸe_m¨k
('*');

915  
	gªsu…
;

919 
Sig«tuª
 
	g°r_Àngth_sig
 = "str-length($string)";

920 
BUILT_IN
(
°r_Àngth
)

922 
size_t
 
	gÀn
 = 
°d
::
°rög
::
≈os
;

923 
	gåy
 {

924 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

925 
	gÀn
 = 
UTF_8
::
code_poöt_cou¡
(
s
->
vÆue
(), 0, s->vÆue().
size
());

930 
ˇtch
 (...Ë{ 
h™dÀ_utf8_îr‹
(
p°©e
, 
backåa˚
); }

932  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
Àn
);

935 
Sig«tuª
 
	g°r_ö£π_sig
 = "str-insert($string, $insert, $index)";

936 
BUILT_IN
(
°r_ö£π
)

938 
	g°d
::
°rög
 
°r
;

939 
	gåy
 {

940 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

941 
	g°r
 = 
s
->
vÆue
();

942 
	g°r
 = 
unquŸe
(
°r
);

943 
Såög_C⁄°™t
* 
	gi
 = 
ARG
("$insert", String_Constant);

944 
	g°d
::
°rög
 
ös
 = 
i
->
vÆue
();

945 
	gös
 = 
unquŸe
(
ös
);

946 
Numbî
* 
	göd
 = 
ARG
("$index", Number);

947 
	gödex
 = 
öd
->
vÆue
();

948 
size_t
 
	gÀn
 = 
UTF_8
::
code_poöt_cou¡
(
°r
, 0, så.
size
());

950 i‡(
	gödex
 > 0 && index <
Àn
) {

952 
°r
.
ö£π
(
UTF_8
::
off£t_©_posôi⁄
(°r, 
°©ic_ˇ°
<
size_t
>(
ödex
Ë- 1), 
ös
);

954 i‡(
	gödex
 > 
	gÀn
) {

956 
	g°r
 +
ös
;

958 i‡(
	gödex
 == 0) {

959 
°r
 = 
ös
 + str;

961 i‡(
	g°d
::
abs
(
ödex
Ë<
Àn
) {

963 
ödex
 +
Àn
 + 1;

964 
	g°r
.
ö£π
(
UTF_8
::
off£t_©_posôi⁄
(
°r
, 
°©ic_ˇ°
<
size_t
>(
ödex
)), 
ös
);

968 
	g°r
 = 
ös
 + 
°r
;

971 i‡(
Såög_QuŸed
* 
	gss
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
s
)) {

972 i‡(
ss
->
quŸe_m¨k
()Ë
°r
 = 
quŸe
(str);

977 
ˇtch
 (...Ë{ 
h™dÀ_utf8_îr‹
(
p°©e
, 
backåa˚
); }

978  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
°r
);

981 
Sig«tuª
 
	g°r_ödex_sig
 = "str-index($string, $substring)";

982 
BUILT_IN
(
°r_ödex
)

984 
size_t
 
	gödex
 = 
°d
::
°rög
::
≈os
;

985 
	gåy
 {

986 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

987 
Såög_C⁄°™t
* 
	gt
 = 
ARG
("$substring", String_Constant);

988 
	g°d
::
°rög
 
°r
 = 
s
->
vÆue
();

989 
	g°r
 = 
unquŸe
(
°r
);

990 
	g°d
::
°rög
 
sub°r
 = 
t
->
vÆue
();

991 
	gsub°r
 = 
unquŸe
(
sub°r
);

993 
size_t
 
	gc_ödex
 = 
°r
.
föd
(
sub°r
);

994 if(
	gc_ödex
 =
°d
::
°rög
::
≈os
) {

995  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
);

997 
	gödex
 = 
UTF_8
::
code_poöt_cou¡
(
°r
, 0, 
c_ödex
) + 1;

1001 
ˇtch
 (...Ë{ 
h™dÀ_utf8_îr‹
(
p°©e
, 
backåa˚
); }

1003  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
ödex
);

1006 
Sig«tuª
 
	g°r_¶i˚_sig
 = "str-slice($string, $start-at, $end-at:-1)";

1007 
BUILT_IN
(
°r_¶i˚
)

1009 
	g°d
::
°rög
 
√w°r
;

1010 
	gåy
 {

1011 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

1012 
	g°¨t_©
 = 
ARG
("$°¨t-©", 
Numbî
)->
vÆue
();

1013 
	gíd_©
 = 
ARG
("$íd-©", 
Numbî
)->
vÆue
();

1015 
	g°d
::
°rög
 
°r
 = 
unquŸe
(
s
->
vÆue
());

1017 
size_t
 
	gsize
 = 
utf8
::
di°™˚
(
°r
.
begö
(), så.
íd
());

1018 i‡(
	gíd_©
 <
size
 * -1.0Ë{ 
íd_©
 += size; }

1019 i‡(
	gíd_©
 < 0Ë{Énd_© +
size
 + 1; }

1020 i‡(
	gíd_©
 > 
	gsize
Ë{Énd_© = ()
size
; }

1021 i‡(
	g°¨t_©
 < 0Ë{ sèπ_© +
size
 + 1; }

1022 i‡(
	g°¨t_©
 =0Ë{ ++ 
°¨t_©
; }

1024 i‡(
	g°¨t_©
 <
íd_©
)

1026 
°d
::
°rög
::
ôî©‹
 
°¨t
 = 
°r
.
begö
();

1027 
	gutf8
::
adv™˚
(
°¨t
, 
°¨t_©
 - 1, 
°r
.
íd
());

1028 
	g°d
::
°rög
::
ôî©‹
 
íd
 = 
°¨t
;

1029 
	gutf8
::
adv™˚
(
íd
, 
íd_©
 - 
°¨t_©
 + 1, 
°r
.end());

1030 
	g√w°r
 = 
°d
::
°rög
(
°¨t
, 
íd
);

1032 i‡(
Såög_QuŸed
* 
	gss
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
s
)) {

1033 if(
ss
->
quŸe_m¨k
()Ë
√w°r
 = 
quŸe
(newstr);

1038 
ˇtch
 (...Ë{ 
h™dÀ_utf8_îr‹
(
p°©e
, 
backåa˚
); }

1039  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
√w°r
);

1042 
Sig«tuª
 
	gto_uµî_ˇ£_sig
 = "to-upper-case($string)";

1043 
BUILT_IN
(
to_uµî_ˇ£
)

1045 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

1046 
	g°d
::
°rög
 
°r
 = 
s
->
vÆue
();

1048 
size_t
 
	gi
 = 0, 
	gL
 = 
°r
.
Àngth
(); i < L; ++i) {

1049 i‡(
	gSass
::
Utû
::
isAscii
(
°r
[
i
])) {

1050 
°r
[
i
] = 
°d
::
touµî
(str[i]);

1054 i‡(
Såög_QuŸed
* 
	gss
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
s
)) {

1055 
Såög_QuŸed
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, *
ss
);

1056 
	g˝y
->
vÆue
(
°r
);

1057  
	g˝y
;

1059  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
°r
);

1063 
Sig«tuª
 
	gto_lowî_ˇ£_sig
 = "to-lower-case($string)";

1064 
BUILT_IN
(
to_lowî_ˇ£
)

1066 
Såög_C⁄°™t
* 
	gs
 = 
ARG
("$string", String_Constant);

1067 
	g°d
::
°rög
 
°r
 = 
s
->
vÆue
();

1069 
size_t
 
	gi
 = 0, 
	gL
 = 
°r
.
Àngth
(); i < L; ++i) {

1070 i‡(
	gSass
::
Utû
::
isAscii
(
°r
[
i
])) {

1071 
°r
[
i
] = 
°d
::
tﬁowî
(str[i]);

1075 i‡(
Såög_QuŸed
* 
	gss
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
s
)) {

1076 
Såög_QuŸed
* 
˝y
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, *
ss
);

1077 
	g˝y
->
vÆue
(
°r
);

1078  
	g˝y
;

1080  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
°r
);

1088 
Sig«tuª
 
	g≥r˚¡age_sig
 = "percentage($number)";

1089 
BUILT_IN
(
≥r˚¡age
)

1091 
Numbî
* 
	gn
 = 
ARG
("$number", Number);

1092 i‡(!
	gn
->
is_unôÀss
()Ë
îr‹
("¨gumíà$numbî o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu° bêunôÀss", 
p°©e
);

1093  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
n
->
vÆue
() * 100, "%");

1096 
Sig«tuª
 
	ground_sig
 = "round($number)";

1097 
BUILT_IN
(
round
)

1099 
Numbî
* 
	gn
 = 
ARG
("$number", Number);

1100 
Numbî
* 
	gr
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Numbî, *
n
);

1101 
	gr
->
p°©e
(pstate);

1102 
	gr
->
vÆue
(
Sass
::
round
(
r
->vÆue(), 
˘x
.
c_›ti⁄s
.
¥ecisi⁄
));

1103  
	gr
;

1106 
Sig«tuª
 
	g˚û_sig
 = "ceil($number)";

1107 
BUILT_IN
(
˚û
)

1109 
Numbî
* 
	gn
 = 
ARG
("$number", Number);

1110 
Numbî
* 
	gr
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Numbî, *
n
);

1111 
	gr
->
p°©e
(pstate);

1112 
	gr
->
vÆue
(
°d
::
˚û
(
r
->value()));

1113  
	gr
;

1116 
Sig«tuª
 
	gÊo‹_sig
 = "floor($number)";

1117 
BUILT_IN
(
Êo‹
)

1119 
Numbî
* 
	gn
 = 
ARG
("$number", Number);

1120 
Numbî
* 
	gr
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Numbî, *
n
);

1121 
	gr
->
p°©e
(pstate);

1122 
	gr
->
vÆue
(
°d
::
Êo‹
(
r
->value()));

1123  
	gr
;

1126 
Sig«tuª
 
	gabs_sig
 = "abs($number)";

1127 
BUILT_IN
(
abs
)

1129 
Numbî
* 
	gn
 = 
ARG
("$number", Number);

1130 
Numbî
* 
	gr
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Numbî, *
n
);

1131 
	gr
->
p°©e
(pstate);

1132 
	gr
->
vÆue
(
°d
::
abs
(
r
->value()));

1133  
	gr
;

1136 
Sig«tuª
 
	gmö_sig
 = "min($numbers...)";

1137 
BUILT_IN
(
mö
)

1139 
Li°
* 
	g¨gli°
 = 
ARG
("$numbers", List);

1140 
Numbî
* 
	gÀa°
 = 0;

1141 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1142 
Ex¥essi⁄
* 
	gvÆ
 = 
¨gli°
->
vÆue_©_ödex
(
i
);

1143 
Numbî
* 
	gxi
 = 
dy«mic_ˇ°
<Numbî*>(
vÆ
);

1144 i‡(!
	gxi
) {

1145 
îr‹
("\"" + 
vÆ
->
to_°rög
(
˘x
.
c_›ti⁄s
Ë+ "\" i†nŸáÇumbî f‹ `mö'", 
p°©e
);

1147 i‡(
	gÀa°
) {

1148 i‡(*
	gxi
 < *
	gÀa°
ËÀa° = 
xi
;

1149 } 
	gÀa°
 = 
xi
;

1151  
	gÀa°
;

1154 
Sig«tuª
 
	gmax_sig
 = "max($numbers...)";

1155 
BUILT_IN
(
max
)

1157 
Li°
* 
	g¨gli°
 = 
ARG
("$numbers", List);

1158 
Numbî
* 
	ggª©e°
 = 0;

1159 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1160 
Ex¥essi⁄
* 
	gvÆ
 = 
¨gli°
->
vÆue_©_ödex
(
i
);

1161 
Numbî
* 
	gxi
 = 
dy«mic_ˇ°
<Numbî*>(
vÆ
);

1162 i‡(!
	gxi
) {

1163 
îr‹
("\"" + 
vÆ
->
to_°rög
(
˘x
.
c_›ti⁄s
Ë+ "\" i†nŸáÇumbî f‹ `max'", 
p°©e
);

1165 i‡(
	ggª©e°
) {

1166 i‡(*
	ggª©e°
 < *
	gxi
Ëgª©e° = 
xi
;

1167 } 
	ggª©e°
 = 
xi
;

1169  
	ggª©e°
;

1172 
Sig«tuª
 
	gøndom_sig
 = "random($limit:false)";

1173 
BUILT_IN
(
øndom
)

1175 
AST_Node
* 
	g¨g
 = 
ív
["$limit"];

1176 
VÆue
* 
	gv
 = 
dy«mic_ˇ°
<VÆue*>(
¨g
);

1177 
Numbî
* 
	gl
 = 
dy«mic_ˇ°
<Numbî*>(
¨g
);

1178 
Boﬁón
* 
	gb
 = 
dy«mic_ˇ°
<Boﬁón*>(
¨g
);

1179 i‡(
	gl
) {

1180 
	gv
 = 
l
->
vÆue
();

1181 i‡(
	gv
 < 1) {

1182 
°rög°ªam
 
	gîr
;

1183 
	gîr
 << "$limô " << 
	gv
 << " must be greaterÅhan orÉqualÅo 1 for `random`";

1184 
îr‹
(
îr
.
°r
(), 
p°©e
);

1186 
boﬁ
 
	geq_öt
 = 
°d
::
Ábs
(
åunc
(
v
Ë- vË< 
NUMBER_EPSILON
;

1187 i‡(!
	geq_öt
) {

1188 
°rög°ªam
 
	gîr
;

1189 
	gîr
 << "Ex≥˘ed $limôÅÿbê™ i¡egî buàgŸ `" << 
	gv
 << "` for `random`";

1190 
îr‹
(
îr
.
°r
(), 
p°©e
);

1192 
	g°d
::
unif‹m_ªÆ_di°ributi⁄
<> 
di°ribut‹
(1, 
v
 + 1);

1193 
uöt_Á°32_t
 
	gdi°ribuãd
 = 
°©ic_ˇ°
<uöt_Á°32_t>(
di°ribut‹
(
ønd
));

1194  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
di°ribuãd
);

1196 i‡(
	gb
) {

1197 
	g°d
::
unif‹m_ªÆ_di°ributi⁄
<> 
di°ribut‹
(0, 1);

1198 
	gdi°ribuãd
 = 
°©ic_ˇ°
<>(
di°ribut‹
(
ønd
));

1199  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 
di°ribuãd
);

1200 } i‡(
	gv
) {

1201 
throw
 
	gEx˚±i⁄
::
InvÆidArgumítTy≥
(
p°©e
, "øndom", "$limô", "numbî", 
v
);

1203 
throw
 
	gEx˚±i⁄
::
InvÆidArgumítTy≥
(
p°©e
, "random", "$limit", "number");

1212 
Sig«tuª
 
	gÀngth_sig
 = "length($list)";

1213 
BUILT_IN
(
Àngth
)

1215 i‡(
Sñe˘‹_Li°
* 
	g¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ív
["$list"])) {

1216  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
¶
->
Àngth
());

1218 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$list", Expression);

1219 i‡(
	gv
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
) {

1220 
M≠
* 
m≠
 = 
dy«mic_ˇ°
<M≠*>(
ív
["$list"]);

1221  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()(
m≠
 ? m≠->
Àngth
() : 1));

1223 i‡(
	gv
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
SELECTOR
) {

1224 i‡(
Compound_Sñe˘‹
* 
h
 = 
dy«mic_ˇ°
<Compound_Sñe˘‹*>(
v
)) {

1225  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
h
->
Àngth
());

1226 } i‡(
Sñe˘‹_Li°
* 
	gls
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
v
)) {

1227  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()
ls
->
Àngth
());

1229  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, 1);

1233 
Li°
* 
	gli°
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1234  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
,

1235 
p°©e
,

1236 ()(
li°
 ?Üi°->
size
() : 1));

1239 
Sig«tuª
 
	g¡h_sig
 = "nth($list, $n)";

1240 
BUILT_IN
(
¡h
)

1242 
Numbî
* 
	gn
 = 
ARG
("$n", Number);

1243 
M≠
* 
	gm
 = 
dy«mic_ˇ°
<M≠*>(
ív
["$list"]);

1244 i‡(
Sñe˘‹_Li°
* 
	g¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ív
["$list"])) {

1245 
size_t
 
Àn
 = 
m
 ? m->
Àngth
(Ë: 
¶
->length();

1246 
boﬁ
 
	gem±y
 = 
m
 ? m->
em±y
(Ë: 
¶
->empty();

1247 i‡(
	gem±y
Ë
îr‹
("¨gumíà`$li°` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu°ÇŸ bêem±y", 
p°©e
);

1248 
	gödex
 = 
°d
::
Êo‹
(
n
->
vÆue
(Ë< 0 ? 
Àn
 +Ç->value() :Ç->value() - 1);

1249 i‡(
	gödex
 < 0 || index > 
	gÀn
 - 1Ë
îr‹
("ödex ouào‡bound†f‹ `" + 
°d
::
°rög
(
sig
Ë+ "`", 
p°©e
);

1251 
Li°ize
 
li°ize
(
˘x
.
mem
);

1252  (*
	g¶
)[
°©ic_ˇ°
<>(
ödex
)]->
≥rf‹m
(&
li°ize
);

1254 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1255 i‡(
	gn
->
vÆue
(Ë=0Ë
îr‹
("¨gumíà`$n` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu° bên⁄-zîo", 
p°©e
);

1257 i‡(!
	gm
 && !
	gl
) {

1258 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1259 *
	gl
 << 
ARG
("$li°", 
Ex¥essi⁄
);

1261 
size_t
 
	gÀn
 = 
m
 ? m->
Àngth
(Ë: 
l
->length();

1262 
boﬁ
 
	gem±y
 = 
m
 ? m->
em±y
(Ë: 
l
->empty();

1263 i‡(
	gem±y
Ë
îr‹
("¨gumíà`$li°` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu°ÇŸ bêem±y", 
p°©e
);

1264 
	gödex
 = 
°d
::
Êo‹
(
n
->
vÆue
(Ë< 0 ? 
Àn
 +Ç->value() :Ç->value() - 1);

1265 i‡(
	gödex
 < 0 || index > 
	gÀn
 - 1Ë
îr‹
("ödex ouào‡bound†f‹ `" + 
°d
::
°rög
(
sig
Ë+ "`", 
p°©e
);

1267 i‡(
	gm
) {

1268 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1269 *
	gl
 << 
	gm
->
keys
()[
°©ic_ˇ°
<>(
ödex
)];

1270 *
	gl
 << 
	gm
->
©
(
m
->
keys
()[
°©ic_ˇ°
<>(
ödex
)]);

1271  
	gl
;

1274  
	gl
->
vÆue_©_ödex
(
°©ic_ˇ°
<>(
ödex
));

1278 
Sig«tuª
 
	g£t_¡h_sig
 = "set-nth($list, $n, $value)";

1279 
BUILT_IN
(
£t_¡h
)

1281 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1282 
Numbî
* 
	gn
 = 
ARG
("$n", Number);

1283 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$value", Expression);

1284 i‡(!
	gl
) {

1285 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1286 *
	gl
 << 
ARG
("$li°", 
Ex¥essi⁄
);

1288 i‡(
	gl
->
em±y
()Ë
îr‹
("¨gumíà`$li°` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu°ÇŸ bêem±y", 
p°©e
);

1289 
	gödex
 = 
°d
::
Êo‹
(
n
->
vÆue
(Ë< 0 ? 
l
->
Àngth
() +Ç->value() :Ç->value() - 1);

1290 i‡(
	gödex
 < 0 || index > 
	gl
->
Àngth
(Ë- 1Ë
îr‹
("ödex ouào‡bound†f‹ `" + 
°d
::
°rög
(
sig
Ë+ "`", 
p°©e
);

1291 
Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
l
->
Àngth
(),Ü->
£∑øt‹
());

1292 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

1293 *
	gªsu…
 << ((
	gi
 =
ödex
Ë? 
v
 : (*
l
)[
i
]);

1295  
	gªsu…
;

1298 
Sig«tuª
 
	gödex_sig
 = "index($list, $value)";

1299 
BUILT_IN
(
ödex
)

1301 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1302 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$value", Expression);

1303 i‡(!
	gl
) {

1304 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1305 *
	gl
 << 
ARG
("$li°", 
Ex¥essi⁄
);

1307 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

1308 i‡(
	gEvÆ
::
eq
(
l
->
vÆue_©_ödex
(
i
), 
v
)Ë 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Numbî
, 
p°©e
, ()(i+1));

1310  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
);

1313 
Sig«tuª
 
	gjoö_sig
 = "join($list1, $list2, $separator:áuto)";

1314 
BUILT_IN
(
joö
)

1316 
Li°
* 
	gl1
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list1"]);

1317 
Li°
* 
	gl2
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list2"]);

1318 
Såög_C⁄°™t
* 
	g£p
 = 
ARG
("$separator", String_Constant);

1319 
Sass_Sï¨©‹
 
	g£p_vÆ
 = (
l1
 ?Ü1->
£∑øt‹
(Ë: 
SASS_SPACE
);

1320 i‡(!
	gl1
) {

1321 
	gl1
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1322 *
	gl1
 << 
ARG
("$li°1", 
Ex¥essi⁄
);

1323 
	g£p_vÆ
 = (
l2
 ?Ü2->
£∑øt‹
(Ë: 
SASS_SPACE
);

1325 i‡(!
	gl2
) {

1326 
	gl2
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1327 *
	gl2
 << 
ARG
("$li°2", 
Ex¥essi⁄
);

1329 
size_t
 
	gÀn
 = 
l1
->
Àngth
(Ë+ 
l2
->length();

1330 
	g°d
::
°rög
 
£p_°r
 = 
unquŸe
(
£p
->
vÆue
());

1331 i‡(
	g£p_°r
 ="•a˚"Ë
£p_vÆ
 = 
SASS_SPACE
;

1332 i‡(
	g£p_°r
 ="comma"Ë
£p_vÆ
 = 
SASS_COMMA
;

1333 i‡(
	g£p_°r
 !"auto"Ë
îr‹
("¨gumíà`$£∑øt‹` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu° bê`•a˚`, `comma`, o∏`auto`", 
p°©e
);

1334 
Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
Àn
, 
£p_vÆ
);

1335 *
	gªsu…
 +
l1
;

1336 *
	gªsu…
 +
l2
;

1337  
	gªsu…
;

1340 
Sig«tuª
 
	g≠≥nd_sig
 = "append($list, $val, $separator:áuto)";

1341 
BUILT_IN
(
≠≥nd
)

1343 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1344 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$val", Expression);

1345 i‡(
Sñe˘‹_Li°
* 
	g¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ív
["$list"])) {

1346 
Li°ize
 
li°ize
(
˘x
.
mem
);

1347 
	gl
 = 
dy«mic_ˇ°
<
Li°
*>(
¶
->
≥rf‹m
(&
li°ize
));

1349 
Såög_C⁄°™t
* 
	g£p
 = 
ARG
("$separator", String_Constant);

1350 i‡(!
	gl
) {

1351 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1352 *
	gl
 << 
ARG
("$li°", 
Ex¥essi⁄
);

1354 
Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
l
->
Àngth
(Ë+ 1,Ü->
£∑øt‹
());

1355 
	g°d
::
°rög
 
£p_°r
(
unquŸe
(
£p
->
vÆue
()));

1356 i‡(
	g£p_°r
 ="•a˚"Ë
ªsu…
->
£∑øt‹
(
SASS_SPACE
);

1357 i‡(
	g£p_°r
 ="comma"Ë
ªsu…
->
£∑øt‹
(
SASS_COMMA
);

1358 i‡(
	g£p_°r
 !"auto"Ë
îr‹
("¨gumíà`$£∑øt‹` o‡`" + 
°d
::
°rög
(
sig
Ë+ "` mu° bê`•a˚`, `comma`, o∏`auto`", 
p°©e
);

1359 *
	gªsu…
 +
l
;

1360 
boﬁ
 
	gis_¨gli°
 = 
l
->
is_¨gli°
();

1361 
	gªsu…
->
is_¨gli°
(is_arglist);

1362 i‡(
	gis_¨gli°
) {

1363 *
	gªsu…
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
,

1364 
v
->
p°©e
(),

1365 
v
,

1367 
Ál£
,

1368 
Ál£
);

1371 *
	gªsu…
 << 
	gv
;

1373  
	gªsu…
;

1376 
Sig«tuª
 
	gzù_sig
 = "zip($lists...)";

1377 
BUILT_IN
(
zù
)

1379 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, *
ARG
("$lists", List));

1380 
size_t
 
	gsh‹ã°
 = 0;

1381 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1382 
Li°
* 
	gôh
 = 
dy«mic_ˇ°
<Li°*>(
¨gli°
->
vÆue_©_ödex
(
i
));

1383 i‡(!
	gôh
) {

1384 
	gôh
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1385 *
	gôh
 << 
	g¨gli°
->
vÆue_©_ödex
(
i
);

1386 i‡(
	g¨gli°
->
is_¨gli°
()) {

1387 ((
	gArgumít
*)(*
	g¨gli°
)[
i
])->
vÆue
(
ôh
);

1389 (*
	g¨gli°
)[
i
] = 
ôh
;

1392 
	gsh‹ã°
 = (
i
 ? 
°d
::
mö
(
sh‹ã°
, 
ôh
->
Àngth
()) : ith->length());

1394 
Li°
* 
	gzù≥rs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
sh‹ã°
, 
SASS_COMMA
);

1395 
size_t
 
	gL
 = 
¨gli°
->
Àngth
();

1396 
size_t
 
	gi
 = 0; i < 
	gsh‹ã°
; ++i) {

1397 
Li°
* 
	gzù≥r
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
L
);

1398 
size_t
 
	gj
 = 0; j < 
	gL
; ++j) {

1399 *
	gzù≥r
 << (*
	g°©ic_ˇ°
<
	gLi°
*>(
	g¨gli°
->
vÆue_©_ödex
(
j
)))[
i
];

1401 *
	gzù≥rs
 << 
	gzù≥r
;

1403  
	gzù≥rs
;

1406 
Sig«tuª
 
	gli°_£∑øt‹_sig
 = "list_separator($list)";

1407 
BUILT_IN
(
li°_£∑øt‹
)

1409 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
ív
["$list"]);

1410 i‡(!
	gl
) {

1411 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 1);

1412 *
	gl
 << 
ARG
("$li°", 
Ex¥essi⁄
);

1414  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

1415 
p°©e
,

1416 
l
->
£∑øt‹
(Ë=
SASS_COMMA
 ? "comma" : "space");

1423 
Sig«tuª
 
	gm≠_gë_sig
 = "map-get($map, $key)";

1424 
BUILT_IN
(
m≠_gë
)

1426 
M≠
* 
	gm
 = 
ARGM
("$m≠", M≠, 
˘x
);

1427 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$key", Expression);

1428 
	gåy
 {

1429  
	gm
->
©
(
v
);

1430 } 
ˇtch
 (c⁄° 
°d
::
out_of_ønge
&) {

1431  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
);

1433 
ˇtch
 (...Ë{ 
	gthrow
; }

1436 
Sig«tuª
 
	gm≠_has_key_sig
 = "map-has-key($map, $key)";

1437 
BUILT_IN
(
m≠_has_key
)

1439 
M≠
* 
	gm
 = 
ARGM
("$m≠", M≠, 
˘x
);

1440 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$key", Expression);

1441  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
m
->
has
(
v
));

1444 
Sig«tuª
 
	gm≠_keys_sig
 = "map-keys($map)";

1445 
BUILT_IN
(
m≠_keys
)

1447 
M≠
* 
	gm
 = 
ARGM
("$m≠", M≠, 
˘x
);

1448 
Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
m
->
Àngth
(), 
SASS_COMMA
);

1449 áutÿ
	gkey
 : 
m
->
keys
()) {

1450 *
ªsu…
 << 
key
;

1452  
	gªsu…
;

1455 
Sig«tuª
 
	gm≠_vÆues_sig
 = "map-values($map)";

1456 
BUILT_IN
(
m≠_vÆues
)

1458 
M≠
* 
	gm
 = 
ARGM
("$m≠", M≠, 
˘x
);

1459 
Li°
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 
m
->
Àngth
(), 
SASS_COMMA
);

1460 áutÿ
	gkey
 : 
m
->
keys
()) {

1461 *
ªsu…
 << 
m
->
©
(
key
);

1463  
	gªsu…
;

1466 
Sig«tuª
 
	gm≠_mîge_sig
 = "map-merge($map1, $map2)";

1467 
BUILT_IN
(
m≠_mîge
)

1469 
M≠
* 
	gm1
 = 
ARGM
("$m≠1", M≠, 
˘x
);

1470 
M≠
* 
	gm2
 = 
ARGM
("$m≠2", M≠, 
˘x
);

1472 
size_t
 
	gÀn
 = 
m1
->
Àngth
(Ë+ 
m2
->length();

1473 
M≠
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, M≠, 
p°©e
, 
Àn
);

1474 *
	gªsu…
 +
m1
;

1475 *
	gªsu…
 +
m2
;

1476  
	gªsu…
;

1479 
Sig«tuª
 
	gm≠_ªmove_sig
 = "map-remove($map, $keys...)";

1480 
BUILT_IN
(
m≠_ªmove
)

1482 
boﬁ
 
	gªmove
;

1483 
M≠
* 
	gm
 = 
ARGM
("$m≠", M≠, 
˘x
);

1484 
Li°
* 
	g¨gli°
 = 
ARG
("$keys", List);

1485 
M≠
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, M≠, 
p°©e
, 1);

1486 autÿ
	gkey
 : 
m
->
keys
()) {

1487 
ªmove
 = 
Ál£
;

1488 
size_t
 
	gj
 = 0, 
	gK
 = 
¨gli°
->
Àngth
(); j < K && !
	gªmove
; ++j) {

1489 
	gªmove
 = 
EvÆ
::
eq
(
key
, 
¨gli°
->
vÆue_©_ödex
(
j
));

1491 i‡(!
	gªmove
Ë*
	gªsu…
 << 
	g°d
::
make_∑ú
(
key
, 
m
->
©
(key));

1493  
	gªsu…
;

1496 
Sig«tuª
 
	gkeyw‹ds_sig
 = "keywords($args)";

1497 
BUILT_IN
(
keyw‹ds
)

1499 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, *
ARG
("$args", List));

1500 
M≠
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, M≠, 
p°©e
, 1);

1501 
size_t
 
	gi
 = 
¨gli°
->
size
(), 
	gL
 =árgli°->
Àngth
(); i < L; ++i) {

1502 
	g°d
::
°rög
 
«me
 = 
°d
::°rög(((
Argumít
*)(*
¨gli°
)[
i
])->name());

1503 
	g«me
 = 
«me
.
îa£
(0, 1);

1504 *
	gªsu…
 << 
	g°d
::
make_∑ú
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
,

1505 
p°©e
, 
«me
),

1506 ((
Argumít
*)(*
¨gli°
)[
i
])->
vÆue
());

1508  
	gªsu…
;

1515 
Sig«tuª
 
	gty≥_of_sig
 = "type-of($value)";

1516 
BUILT_IN
(
ty≥_of
)

1518 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$value", Expression);

1519  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
v
->
ty≥
());

1522 
Sig«tuª
 
	gunô_sig
 = "unit($number)";

1523 
BUILT_IN
(
unô
)

1524 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
quŸe
(
ARG
("$numbî", 
Numbî
)->
unô
(), '"')); }

1526 
Sig«tuª
 
	gunôÀss_sig
 = "unitless($number)";

1527 
BUILT_IN
(
unôÀss
)

1528 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
ARG
("$numbî", 
Numbî
)->
is_unôÀss
()); }

1530 
Sig«tuª
 
	gcom∑øbÀ_sig
 = "comparable($number-1, $number-2)";

1531 
BUILT_IN
(
com∑øbÀ
)

1533 
Numbî
* 
	gn1
 = 
ARG
("$number-1", Number);

1534 
Numbî
* 
	gn2
 = 
ARG
("$number-2", Number);

1535 i‡(
	gn1
->
is_unôÀss
(Ë|| 
	gn2
->is_unitless()) {

1536  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1538 
Numbî
 
tmp_n2
(*
n2
);

1539 
	gtmp_n2
.
n‹mÆize
(
n1
->
föd_c⁄vîtibÀ_unô
());

1540  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
n1
->
unô
(Ë=
tmp_n2
.unit());

1543 
Sig«tuª
 
	gv¨übÀ_exi°s_sig
 = "variable-exists($name)";

1544 
BUILT_IN
(
v¨übÀ_exi°s
)

1546 
	g°d
::
°rög
 
s
 = 
Utû
::
n‹mÆize_undîsc‹es
(
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
()));

1548 if(
	gd_ív
.
has
("$"+
s
)) {

1549  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1552  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
);

1556 
Sig«tuª
 
	gglobÆ_v¨übÀ_exi°s_sig
 = "global-variable-exists($name)";

1557 
BUILT_IN
(
globÆ_v¨übÀ_exi°s
)

1559 
	g°d
::
°rög
 
s
 = 
Utû
::
n‹mÆize_undîsc‹es
(
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
()));

1561 if(
	gd_ív
.
has_globÆ
("$"+
s
)) {

1562  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1565  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
);

1569 
Sig«tuª
 
	gfun˘i⁄_exi°s_sig
 = "function-exists($name)";

1570 
BUILT_IN
(
fun˘i⁄_exi°s
)

1572 
	g°d
::
°rög
 
s
 = 
Utû
::
n‹mÆize_undîsc‹es
(
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
()));

1574 if(
	gd_ív
.
has_globÆ
(
s
+"[f]")) {

1575  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1578  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
);

1582 
Sig«tuª
 
	gmixö_exi°s_sig
 = "mixin-exists($name)";

1583 
BUILT_IN
(
mixö_exi°s
)

1585 
	g°d
::
°rög
 
s
 = 
Utû
::
n‹mÆize_undîsc‹es
(
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
()));

1587 if(
	gd_ív
.
has_globÆ
(
s
+"[m]")) {

1588  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1591  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
);

1595 
Sig«tuª
 
	g„©uª_exi°s_sig
 = "feature-exists($name)";

1596 
BUILT_IN
(
„©uª_exi°s
)

1598 
	g°d
::
°rög
 
s
 = 
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
());

1600 if(
	g„©uªs
.
föd
(
s
Ë=
„©uªs
.
íd
()) {

1601  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
);

1604  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
);

1608 
Sig«tuª
 
	gˇŒ_sig
 = "call($name, $args...)";

1609 
BUILT_IN
(
ˇŒ
)

1611 
	g°d
::
°rög
 
«me
 = 
Utû
::
n‹mÆize_undîsc‹es
(
unquŸe
(
ARG
("$«me", 
Såög_C⁄°™t
)->
vÆue
()));

1612 
Li°
* 
	g¨gli°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, *
ARG
("$args", List));

1614 
Argumíts
* 
	g¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
p°©e
);

1619 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1620 
Ex¥essi⁄
* 
	gex¥
 = 
¨gli°
->
vÆue_©_ödex
(
i
);

1626 i‡(
	g¨gli°
->
is_¨gli°
()) {

1627 
Argumít
* 
	g¨g
 = 
dy«mic_ˇ°
<Argumít*>((*
¨gli°
)[
i
]);

1628 *
	g¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
,

1629 
p°©e
,

1630 
ex¥
,

1631 
¨g
 ?árg->
«me
() : "",

1632 
¨g
 ?árg->
is_ª°_¨gumít
(Ë: 
Ál£
,

1633 
¨g
 ?árg->
is_keyw‹d_¨gumít
(Ë: 
Ál£
);

1635 *
	g¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
p°©e
, 
ex¥
);

1638 
Fun˘i⁄_CÆl
* 
	gfunc
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Fun˘i⁄_CÆl, 
p°©e
, 
«me
, 
¨gs
);

1639 
Ex∑nd
 
ex∑nd
(
˘x
, &
d_ív
, 
backåa˚
);

1640  
	gfunc
->
≥rf‹m
(&
ex∑nd
.
evÆ
);

1648 
Sig«tuª
 
	gnŸ_sig
 = "not($value)";

1649 
BUILT_IN
(
ßss_nŸ
)

1650 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
ARG
("$vÆue", 
Ex¥essi⁄
)->
is_Ál£
()); }

1652 
Sig«tuª
 
	gif_sig
 = "if($condition, $if-true, $if-false)";

1655 
BUILT_IN
(
ßss_if
)

1657 
Ex∑nd
 
ex∑nd
(
˘x
, &
d_ív
, 
backåa˚
);

1658 
boﬁ
 
	gis_åue
 = !
ARG
("$c⁄dôi⁄", 
Ex¥essi⁄
)->
≥rf‹m
(&
ex∑nd
.
evÆ
)->
is_Ál£
();

1659 i‡(
	gis_åue
) {

1660  
ARG
("$if-åue", 
Ex¥essi⁄
)->
≥rf‹m
(&
ex∑nd
.
evÆ
);

1663  
ARG
("$if-Ál£", 
Ex¥essi⁄
)->
≥rf‹m
(&
ex∑nd
.
evÆ
);

1671 
Sig«tuª
 
	gimage_uæ_sig
 = "image-url($path, $only-path: false, $cache-buster: false)";

1672 
BUILT_IN
(
image_uæ
)

1674 
îr‹
("`image_uæ` ha†bì¿ªmoved fromÜibßs†beˇu£ it'†nŸÖ¨ào‡thêSas†•ec", 
p°©e
);

1685 
Sig«tuª
 
	gö•e˘_sig
 = "inspect($value)";

1686 
BUILT_IN
(
ö•e˘
)

1688 
Ex¥essi⁄
* 
	gv
 = 
ARG
("$value", Expression);

1689 i‡(
	gv
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

1690  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "null");

1691 } i‡(
	gv
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
BOOLEAN
 && *
v
 == 0) {

1692  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, "false");

1693 } i‡(
	gv
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
) {

1694  
v
;

1697 
Sass_Ouçut_StyÀ
 
	gﬁd_°yÀ
;

1698 
	gﬁd_°yÀ
 = 
˘x
.
c_›ti⁄s
.
ouçut_°yÀ
;

1699 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
TO_SASS
;

1700 
Emôãr
 
emôãr
(
˘x
.
c_›ti⁄s
);

1701 
In•e˘
 
i
(
emôãr
);

1702 
	gi
.
	gö_de˛¨©i⁄
 = 
Ál£
;

1703 
	gv
->
≥rf‹m
(&
i
);

1704 
	g˘x
.
	gc_›ti⁄s
.
	gouçut_°yÀ
 = 
ﬁd_°yÀ
;

1705  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
i
.
gë_buf„r
());

1709 
Sig«tuª
 
	g£À˘‹_√°_sig
 = "selector-nest($selectors...)";

1710 
BUILT_IN
(
£À˘‹_√°
)

1712 
Li°
* 
	g¨gli°
 = 
ARG
("$selectors", List);

1715 if–
	g¨gli°
->
Àngth
() == 0 )

1716 
îr‹
("$£À˘‹s: AàÀa° o√ sñe˘‹ mu° bê∑s£d", 
p°©e
);

1719 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*> 
∑r£dSñe˘‹s
;

1720 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1721 
Ex¥essi⁄
* 
	gexp
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
¨gli°
->
vÆue_©_ödex
(
i
));

1722 i‡(
	gexp
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

1723 
°d
::
°rög°ªam
 
msg
;

1724 
	gmsg
 << "$selectors:Çull isÇotá valid selector: it must beá string,\n";

1725 
	gmsg
 << "aÜist of strings, oráÜist ofÜists of strings for 'selector-nest'";

1726 
îr‹
(
msg
.
°r
(), 
p°©e
);

1728 i‡(
Såög_C⁄°™t
* 
	g°r
 =
dy«mic_ˇ°
<Såög_C⁄°™t*>(
exp
)) {

1729 
°r
->
quŸe_m¨k
(0);

1731 
	g°d
::
°rög
 
exp_§c
 = 
exp
->
to_°rög
(
˘x
.
c_›ti⁄s
) + "{";

1732 
Sñe˘‹_Li°
* 
	g£l
 = 
P¨£r
::
∑r£_£À˘‹
(
exp_§c
.
c_°r
(), 
˘x
);

1733 
	g∑r£dSñe˘‹s
.
push_back
(
£l
);

1737 if–
	g∑r£dSñe˘‹s
.
em±y
() ) {

1738  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
);

1742 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*>::
ôî©‹
 
ôr
 = 
∑r£dSñe˘‹s
.
begö
();

1743 
Sñe˘‹_Li°
* 
	gªsu…
 = *
ôr
;

1744 ++
	gôr
;

1746 ;
	gôr
 !
∑r£dSñe˘‹s
.
íd
(); ++itr) {

1747 
Sñe˘‹_Li°
* 
	gchûd
 = *
ôr
;

1748 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
ex∂oded
;

1749 
Sñe˘‹_Li°
* 
	grv
 = 
chûd
->
∑ª¡ize
(
ªsu…
, 
˘x
);

1750 
size_t
 
	gm
 = 0, 
	gmLí
 = 
rv
->
Àngth
(); m < mLen; ++m) {

1751 
	gex∂oded
.
push_back
((*
rv
)[
m
]);

1753 
	gªsu…
->
ñemíts
(
ex∂oded
);

1756 
Li°ize
 
li°ize
(
˘x
.
mem
);

1757  
	gªsu…
->
≥rf‹m
(&
li°ize
);

1760 
Sig«tuª
 
	g£À˘‹_≠≥nd_sig
 = "selector-append($selectors...)";

1761 
BUILT_IN
(
£À˘‹_≠≥nd
)

1763 
Li°
* 
	g¨gli°
 = 
ARG
("$selectors", List);

1766 if–
	g¨gli°
->
Àngth
() == 0 )

1767 
îr‹
("$£À˘‹s: AàÀa° o√ sñe˘‹ mu° bê∑s£d", 
p°©e
);

1770 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*> 
∑r£dSñe˘‹s
;

1771 
size_t
 
	gi
 = 0, 
	gL
 = 
¨gli°
->
Àngth
(); i < L; ++i) {

1772 
Ex¥essi⁄
* 
	gexp
 = 
dy«mic_ˇ°
<Ex¥essi⁄*>(
¨gli°
->
vÆue_©_ödex
(
i
));

1773 i‡(
	gexp
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

1774 
°d
::
°rög°ªam
 
msg
;

1775 
	gmsg
 << "$selectors:Çull isÇotá valid selector: it must beá string,\n";

1776 
	gmsg
 << "aÜist of strings, oráÜist ofÜists of strings for 'selector-append'";

1777 
îr‹
(
msg
.
°r
(), 
p°©e
);

1779 i‡(
Såög_C⁄°™t
* 
	g°r
 =
dy«mic_ˇ°
<Såög_C⁄°™t*>(
exp
)) {

1780 
°r
->
quŸe_m¨k
(0);

1782 
	g°d
::
°rög
 
exp_§c
 = 
exp
->
to_°rög
() + "{";

1783 
Sñe˘‹_Li°
* 
	g£l
 = 
P¨£r
::
∑r£_£À˘‹
(
exp_§c
.
c_°r
(), 
˘x
);

1784 
	g∑r£dSñe˘‹s
.
push_back
(
£l
);

1788 if–
	g∑r£dSñe˘‹s
.
em±y
() ) {

1789  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
);

1793 
	g°d
::
ve˘‹
<
Sñe˘‹_Li°
*>::
ôî©‹
 
ôr
 = 
∑r£dSñe˘‹s
.
begö
();

1794 
Sñe˘‹_Li°
* 
	gªsu…
 = *
ôr
;

1795 ++
	gôr
;

1797 ;
	gôr
 !
∑r£dSñe˘‹s
.
íd
(); ++itr) {

1798 
Sñe˘‹_Li°
* 
	gchûd
 = *
ôr
;

1799 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
√wEÀmíts
;

1808 
size_t
 
	gi
 = 0, 
	gªsu…Lí
 = 
ªsu…
->
Àngth
(); i <ÑesultLen; ++i) {

1809 
size_t
 
	gj
 = 0, 
	gchûdLí
 = 
chûd
->
Àngth
(); j < childLen; ++j) {

1810 
Com∂ex_Sñe˘‹
* 
	g∑ª¡SeqCl⁄e
 = (*
ªsu…
)[
i
]->
˛⁄eFuŒy
(
˘x
);

1811 
Com∂ex_Sñe˘‹
* 
	gchûdSeq
 = (*
chûd
)[
j
];

1812 
Com∂ex_Sñe˘‹
* 
	gba£
 = 
chûdSeq
->
èû
();

1815 if–
	gchûdSeq
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
Combö©‹
::
ANCESTOR_OF
 ) {

1816 
°d
::
°rög
 
msg
("Can'táppend `");

1817 
	gmsg
 +
chûdSeq
->
to_°rög
();

1818 
	gmsg
 += "`Åo `";

1819 
	gmsg
 +
∑ª¡SeqCl⁄e
->
to_°rög
();

1820 
	gmsg
 += "`";

1821 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

1825 
Ty≥_Sñe˘‹
* 
	gpTy≥
 = 
dy«mic_ˇ°
<Ty≥_Sñe˘‹*>(
chûdSeq
->
hód
()->
fú°
());

1826 if(
	gpTy≥
 &&ÖTy≥->
«me
() == "*") {

1827 
°d
::
°rög
 
msg
("Can'táppend `");

1828 
	gmsg
 +
chûdSeq
->
to_°rög
();

1829 
	gmsg
 += "`Åo `";

1830 
	gmsg
 +
∑ª¡SeqCl⁄e
->
to_°rög
();

1831 
	gmsg
 += "`";

1832 
îr‹
(
msg
, 
p°©e
, 
backåa˚
);

1838 *(
	g∑ª¡SeqCl⁄e
->
ö√rmo°
()->
hód
()Ë+(
ba£
->head());

1841 
	g∑ª¡SeqCl⁄e
->
ö√rmo°
()->
èû
–
ba£
->tail() );

1843 
	g√wEÀmíts
.
push_back
(
∑ª¡SeqCl⁄e
);

1847 
	gªsu…
->
ñemíts
(
√wEÀmíts
);

1850 
Li°ize
 
li°ize
(
˘x
.
mem
);

1851  
	gªsu…
->
≥rf‹m
(&
li°ize
);

1854 
Sig«tuª
 
	g£À˘‹_unify_sig
 = "selector-unify($selector1, $selector2)";

1855 
BUILT_IN
(
£À˘‹_unify
)

1857 
Sñe˘‹_Li°
* 
	g£À˘‹1
 = 
ARGSEL
("$£À˘‹1", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1858 
Sñe˘‹_Li°
* 
	g£À˘‹2
 = 
ARGSEL
("$£À˘‹2", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1860 
Sñe˘‹_Li°
* 
	gªsu…
 = 
£À˘‹1
->
unify_wôh
(
£À˘‹2
, 
˘x
);

1861 
Li°ize
 
li°ize
(
˘x
.
mem
);

1862  
	gªsu…
->
≥rf‹m
(&
li°ize
);

1865 
Sig«tuª
 
	gsim∂e_£À˘‹s_sig
 = "simple-selectors($selector)";

1866 
BUILT_IN
(
sim∂e_£À˘‹s
)

1868 
Compound_Sñe˘‹
* 
	g£l
 = 
ARGSEL
("$£À˘‹", Compound_Sñe˘‹, 
p_c⁄ãxtuÆize
);

1870 
Li°
* 
	gl
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
£l
->
p°©e
(), sñ->
Àngth
(), 
SASS_COMMA
);

1872 
size_t
 
	gi
 = 0, 
	gL
 = 
£l
->
Àngth
(); i < L; ++i) {

1873 
Sim∂e_Sñe˘‹
* 
	gss
 = (*
£l
)[
i
];

1874 
	g°d
::
°rög
 
ss_°rög
 = 
ss
->
to_°rög
() ;

1876 *
	gl
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
ss
->
p°©e
(), 
ss_°rög
);

1879  
	gl
;

1882 
Sig«tuª
 
	g£À˘‹_exãnd_sig
 = "selector-extend($selector, $extendee, $extender)";

1883 
BUILT_IN
(
£À˘‹_exãnd
)

1885 
Sñe˘‹_Li°
* 
	g£À˘‹
 = 
ARGSEL
("$£À˘‹", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1886 
Sñe˘‹_Li°
* 
	gexãndì
 = 
ARGSEL
("$exãndì", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1887 
Sñe˘‹_Li°
* 
	gexãndî
 = 
ARGSEL
("$exãndî", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1889 
Exãnsi⁄Sub£tM≠
 
	gsub£t_m≠
;

1890 
	gexãndî
->
p›uœã_exãnds
(
exãndì
, 
˘x
, 
sub£t_m≠
);

1892 
Sñe˘‹_Li°
* 
	gªsu…
 = 
Exãnd
::
exãndSñe˘‹Li°
(
£À˘‹
, 
˘x
, 
sub£t_m≠
, 
Ál£
);

1894 
Li°ize
 
li°ize
(
˘x
.
mem
);

1895  
	gªsu…
->
≥rf‹m
(&
li°ize
);

1898 
Sig«tuª
 
	g£À˘‹_ª∂a˚_sig
 = "selector-replace($selector, $original, $replacement)";

1899 
BUILT_IN
(
£À˘‹_ª∂a˚
)

1901 
Sñe˘‹_Li°
* 
	g£À˘‹
 = 
ARGSEL
("$£À˘‹", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1902 
Sñe˘‹_Li°
* 
	g‹igöÆ
 = 
ARGSEL
("$‹igöÆ", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1903 
Sñe˘‹_Li°
* 
	gª∂a˚mít
 = 
ARGSEL
("$ª∂a˚mít", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1905 
Exãnsi⁄Sub£tM≠
 
	gsub£t_m≠
;

1906 
	gª∂a˚mít
->
p›uœã_exãnds
(
‹igöÆ
, 
˘x
, 
sub£t_m≠
);

1908 
Sñe˘‹_Li°
* 
	gªsu…
 = 
Exãnd
::
exãndSñe˘‹Li°
(
£À˘‹
, 
˘x
, 
sub£t_m≠
, 
åue
);

1910 
Li°ize
 
li°ize
(
˘x
.
mem
);

1911  
	gªsu…
->
≥rf‹m
(&
li°ize
);

1914 
Sig«tuª
 
	g£À˘‹_∑r£_sig
 = "selector-parse($selector)";

1915 
BUILT_IN
(
£À˘‹_∑r£
)

1917 
Sñe˘‹_Li°
* 
	g£l
 = 
ARGSEL
("$£À˘‹", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1919 
Li°ize
 
li°ize
(
˘x
.
mem
);

1920  
	g£l
->
≥rf‹m
(&
li°ize
);

1923 
Sig«tuª
 
	gis_su≥r£À˘‹_sig
 = "is-superselector($super, $sub)";

1924 
BUILT_IN
(
is_su≥r£À˘‹
)

1926 
Sñe˘‹_Li°
* 
	g£l_sup
 = 
ARGSEL
("$su≥r", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1927 
Sñe˘‹_Li°
* 
	g£l_sub
 = 
ARGSEL
("$sub", Sñe˘‹_Li°, 
p_c⁄ãxtuÆize
);

1928 
boﬁ
 
	gªsu…
 = 
£l_sup
->
is_su≥r£À˘‹_of
(
£l_sub
);

1929  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
ªsu…
);

1932 
Sig«tuª
 
	gunique_id_sig
 = "unique-id()";

1933 
BUILT_IN
(
unique_id
)

1935 
	g°d
::
°rög°ªam
 
ss
;

1936 
	g°d
::
unif‹m_ªÆ_di°ributi⁄
<> 
di°ribut‹
(0, 4294967296);

1937 
uöt_Á°32_t
 
	gdi°ribuãd
 = 
°©ic_ˇ°
<uöt_Á°32_t>(
di°ribut‹
(
ønd
));

1938 
	gss
 << "u" << 
	g°d
::
£tfûl
('0'Ë<< 
°d
::
£tw
(8Ë<< std::
hex
 << 
di°ribuãd
;

1939  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
ss
.
°r
());

	@node_modules/node-sass/src/libsass/src/functions.hpp

1 #i‚de‡
SASS_FUNCTIONS_H


2 
	#SASS_FUNCTIONS_H


	)

4 
	~"li°ize.hµ
"

5 
	~"posôi⁄.hµ
"

6 
	~"ívú⁄mít.hµ
"

7 
	~"ßss/fun˘i⁄s.h
"

9 
	#BUILT_IN
(
«me
Ë
Ex¥essi⁄
*\

10 
	`«me
(
Env
& 
ív
, Env& 
d_ív
, 
C⁄ãxt
& 
˘x
, 
Sig«tuª
 
sig
, 
P¨£rSèã
 
p°©e
, 
Backåa˚
* 
backåa˚
)

	)

12 
«me•a˚
 
	gSass
 {

13 
˛ass
 
	gC⁄ãxt
;

14 
	gBackåa˚
;

15 
˛ass
 
	gAST_Node
;

16 
˛ass
 
	gEx¥essi⁄
;

17 
˛ass
 
	gDeföôi⁄
;

18 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

19 c⁄° * 
	tSig«tuª
;

20 
	gEx¥essi⁄
* (*
	tN©ive_Fun˘i⁄
)(
	tEnv
&, Env&, 
	tC⁄ãxt
&, 
	tSig«tuª
, 
	tP¨£rSèã
, 
	tBackåa˚
*);

22 
Deföôi⁄
* 
make_«tive_fun˘i⁄
(
Sig«tuª
, 
N©ive_Fun˘i⁄
, 
C⁄ãxt
& 
˘x
);

23 
Deföôi⁄
* 
make_c_fun˘i⁄
(
Sass_Fun˘i⁄_E¡ry
 
c_func
, 
C⁄ãxt
& 
˘x
);

25 
	g°d
::
°rög
 
fun˘i⁄_«me
(
Sig«tuª
);

27 
«me•a˚
 
	gFun˘i⁄s
 {

29 
Sig«tuª
 
rgb_sig
;

30 
Sig«tuª
 
rgba_4_sig
;

31 
Sig«tuª
 
rgba_2_sig
;

32 
Sig«tuª
 
ªd_sig
;

33 
Sig«tuª
 
gªí_sig
;

34 
Sig«tuª
 
blue_sig
;

35 
Sig«tuª
 
mix_sig
;

36 
Sig«tuª
 
h¶_sig
;

37 
Sig«tuª
 
h¶a_sig
;

38 
Sig«tuª
 
hue_sig
;

39 
Sig«tuª
 
ßtuøti⁄_sig
;

40 
Sig«tuª
 
lighäess_sig
;

41 
Sig«tuª
 
adju°_hue_sig
;

42 
Sig«tuª
 
lighãn_sig
;

43 
Sig«tuª
 
d¨kí_sig
;

44 
Sig«tuª
 
ßtuøã_sig
;

45 
Sig«tuª
 
deßtuøã_sig
;

46 
Sig«tuª
 
gøysˇÀ_sig
;

47 
Sig«tuª
 
com∂emít_sig
;

48 
Sig«tuª
 
övît_sig
;

49 
Sig«tuª
 
Æpha_sig
;

50 
Sig«tuª
 
›acôy_sig
;

51 
Sig«tuª
 
›acify_sig
;

52 
Sig«tuª
 
Áde_ö_sig
;

53 
Sig«tuª
 
å™•¨ítize_sig
;

54 
Sig«tuª
 
Áde_out_sig
;

55 
Sig«tuª
 
adju°_cﬁ‹_sig
;

56 
Sig«tuª
 
sˇÀ_cﬁ‹_sig
;

57 
Sig«tuª
 
ch™ge_cﬁ‹_sig
;

58 
Sig«tuª
 
õ_hex_°r_sig
;

59 
Sig«tuª
 
unquŸe_sig
;

60 
Sig«tuª
 
quŸe_sig
;

61 
Sig«tuª
 
°r_Àngth_sig
;

62 
Sig«tuª
 
°r_ö£π_sig
;

63 
Sig«tuª
 
°r_ödex_sig
;

64 
Sig«tuª
 
°r_¶i˚_sig
;

65 
Sig«tuª
 
to_uµî_ˇ£_sig
;

66 
Sig«tuª
 
to_lowî_ˇ£_sig
;

67 
Sig«tuª
 
≥r˚¡age_sig
;

68 
Sig«tuª
 
round_sig
;

69 
Sig«tuª
 
˚û_sig
;

70 
Sig«tuª
 
Êo‹_sig
;

71 
Sig«tuª
 
abs_sig
;

72 
Sig«tuª
 
mö_sig
;

73 
Sig«tuª
 
max_sig
;

74 
Sig«tuª
 
ö•e˘_sig
;

75 
Sig«tuª
 
øndom_sig
;

76 
Sig«tuª
 
Àngth_sig
;

77 
Sig«tuª
 
¡h_sig
;

78 
Sig«tuª
 
ödex_sig
;

79 
Sig«tuª
 
joö_sig
;

80 
Sig«tuª
 
≠≥nd_sig
;

81 
Sig«tuª
 
zù_sig
;

82 
Sig«tuª
 
li°_£∑øt‹_sig
;

83 
Sig«tuª
 
ty≥_of_sig
;

84 
Sig«tuª
 
unô_sig
;

85 
Sig«tuª
 
unôÀss_sig
;

86 
Sig«tuª
 
com∑øbÀ_sig
;

87 
Sig«tuª
 
v¨übÀ_exi°s_sig
;

88 
Sig«tuª
 
globÆ_v¨übÀ_exi°s_sig
;

89 
Sig«tuª
 
fun˘i⁄_exi°s_sig
;

90 
Sig«tuª
 
mixö_exi°s_sig
;

91 
Sig«tuª
 
„©uª_exi°s_sig
;

92 
Sig«tuª
 
ˇŒ_sig
;

93 
Sig«tuª
 
nŸ_sig
;

94 
Sig«tuª
 
if_sig
;

95 
Sig«tuª
 
image_uæ_sig
;

96 
Sig«tuª
 
m≠_gë_sig
;

97 
Sig«tuª
 
m≠_mîge_sig
;

98 
Sig«tuª
 
m≠_ªmove_sig
;

99 
Sig«tuª
 
m≠_keys_sig
;

100 
Sig«tuª
 
m≠_vÆues_sig
;

101 
Sig«tuª
 
m≠_has_key_sig
;

102 
Sig«tuª
 
keyw‹ds_sig
;

103 
Sig«tuª
 
£t_¡h_sig
;

104 
Sig«tuª
 
unique_id_sig
;

105 
Sig«tuª
 
£À˘‹_√°_sig
;

106 
Sig«tuª
 
£À˘‹_≠≥nd_sig
;

107 
Sig«tuª
 
£À˘‹_exãnd_sig
;

108 
Sig«tuª
 
£À˘‹_ª∂a˚_sig
;

109 
Sig«tuª
 
£À˘‹_unify_sig
;

110 
Sig«tuª
 
is_su≥r£À˘‹_sig
;

111 
Sig«tuª
 
sim∂e_£À˘‹s_sig
;

112 
Sig«tuª
 
£À˘‹_∑r£_sig
;

114 
BUILT_IN
(
rgb
);

115 
BUILT_IN
(
rgba_4
);

116 
BUILT_IN
(
rgba_2
);

117 
BUILT_IN
(
ªd
);

118 
BUILT_IN
(
gªí
);

119 
BUILT_IN
(
blue
);

120 
BUILT_IN
(
mix
);

121 
BUILT_IN
(
h¶
);

122 
BUILT_IN
(
h¶a
);

123 
BUILT_IN
(
hue
);

124 
BUILT_IN
(
ßtuøti⁄
);

125 
BUILT_IN
(
lighäess
);

126 
BUILT_IN
(
adju°_hue
);

127 
BUILT_IN
(
lighãn
);

128 
BUILT_IN
(
d¨kí
);

129 
BUILT_IN
(
ßtuøã
);

130 
BUILT_IN
(
deßtuøã
);

131 
BUILT_IN
(
gøysˇÀ
);

132 
BUILT_IN
(
com∂emít
);

133 
BUILT_IN
(
övît
);

134 
BUILT_IN
(
Æpha
);

135 
BUILT_IN
(
›acify
);

136 
BUILT_IN
(
å™•¨ítize
);

137 
BUILT_IN
(
adju°_cﬁ‹
);

138 
BUILT_IN
(
sˇÀ_cﬁ‹
);

139 
BUILT_IN
(
ch™ge_cﬁ‹
);

140 
BUILT_IN
(
õ_hex_°r
);

141 
BUILT_IN
(
ßss_unquŸe
);

142 
BUILT_IN
(
ßss_quŸe
);

143 
BUILT_IN
(
°r_Àngth
);

144 
BUILT_IN
(
°r_ö£π
);

145 
BUILT_IN
(
°r_ödex
);

146 
BUILT_IN
(
°r_¶i˚
);

147 
BUILT_IN
(
to_uµî_ˇ£
);

148 
BUILT_IN
(
to_lowî_ˇ£
);

149 
BUILT_IN
(
≥r˚¡age
);

150 
BUILT_IN
(
round
);

151 
BUILT_IN
(
˚û
);

152 
BUILT_IN
(
Êo‹
);

153 
BUILT_IN
(
abs
);

154 
BUILT_IN
(
mö
);

155 
BUILT_IN
(
max
);

156 
BUILT_IN
(
ö•e˘
);

157 
BUILT_IN
(
øndom
);

158 
BUILT_IN
(
Àngth
);

159 
BUILT_IN
(
¡h
);

160 
BUILT_IN
(
ödex
);

161 
BUILT_IN
(
joö
);

162 
BUILT_IN
(
≠≥nd
);

163 
BUILT_IN
(
zù
);

164 
BUILT_IN
(
li°_£∑øt‹
);

165 
BUILT_IN
(
ty≥_of
);

166 
BUILT_IN
(
unô
);

167 
BUILT_IN
(
unôÀss
);

168 
BUILT_IN
(
com∑øbÀ
);

169 
BUILT_IN
(
v¨übÀ_exi°s
);

170 
BUILT_IN
(
globÆ_v¨übÀ_exi°s
);

171 
BUILT_IN
(
fun˘i⁄_exi°s
);

172 
BUILT_IN
(
mixö_exi°s
);

173 
BUILT_IN
(
„©uª_exi°s
);

174 
BUILT_IN
(
ˇŒ
);

175 
BUILT_IN
(
ßss_nŸ
);

176 
BUILT_IN
(
ßss_if
);

177 
BUILT_IN
(
image_uæ
);

178 
BUILT_IN
(
m≠_gë
);

179 
BUILT_IN
(
m≠_mîge
);

180 
BUILT_IN
(
m≠_ªmove
);

181 
BUILT_IN
(
m≠_keys
);

182 
BUILT_IN
(
m≠_vÆues
);

183 
BUILT_IN
(
m≠_has_key
);

184 
BUILT_IN
(
keyw‹ds
);

185 
BUILT_IN
(
£t_¡h
);

186 
BUILT_IN
(
unique_id
);

187 
BUILT_IN
(
£À˘‹_√°
);

188 
BUILT_IN
(
£À˘‹_≠≥nd
);

189 
BUILT_IN
(
£À˘‹_exãnd
);

190 
BUILT_IN
(
£À˘‹_ª∂a˚
);

191 
BUILT_IN
(
£À˘‹_unify
);

192 
BUILT_IN
(
is_su≥r£À˘‹
);

193 
BUILT_IN
(
sim∂e_£À˘‹s
);

194 
BUILT_IN
(
£À˘‹_∑r£
);

	@node_modules/node-sass/src/libsass/src/inspect.cpp

1 
	~"ßss.hµ
"

2 
	~<cm©h
>

3 
	~<°rög
>

4 
	~<io°ªam
>

5 
	~<iom™ù
>

6 
	~<°döt.h
>

7 
	~<°döt.h
>

9 
	~"a°.hµ
"

10 
	~"ö•e˘.hµ
"

11 
	~"c⁄ãxt.hµ
"

12 
	~"li°ize.hµ
"

13 
	~"cﬁ‹_m≠s.hµ
"

14 
	~"utf8/checked.h
"

16 
«me•a˚
 
	gSass
 {

18 
	gIn•e˘
::
In•e˘
(
Emôãr
 
emi
)

19 : 
Emôãr
(
emi
)

21 
In•e˘
::~Inspect() { }

24 
In•e˘
::
›î©‹
()(
Block
* 
block
)

26 i‡(!
block
->
is_roŸ
()) {

27 
add_›í_m≠pög
(
block
);

28 
≠≥nd_sc›e_›íî
();

30 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 +
block
->
èbs
();

31 
size_t
 
	gi
 = 0, 
	gL
 = 
block
->
Àngth
(); i < L; ++i) {

32 (*
	gblock
)[
i
]->
≥rf‹m
(
this
);

34 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 -
block
->
èbs
();

35 i‡(!
	gblock
->
is_roŸ
()) {

36 
≠≥nd_sc›e_˛o£r
();

37 
add_˛o£_m≠pög
(
block
);

42 
	gIn•e˘
::
›î©‹
()(
RuÀ£t
* 
ruÀ£t
)

44 
ruÀ£t
->
£À˘‹
()->
≥rf‹m
(
this
);

45 
	gruÀ£t
->
block
()->
≥rf‹m
(
this
);

48 
	gIn•e˘
::
›î©‹
()(
Key‰ame_RuÀ
* 
ruÀ
)

50 i‡(
ruÀ
->
£À˘‹
()ËruÀ->£À˘‹()->
≥rf‹m
(
this
);

51 i‡(
	gruÀ
->
block
()ËruÀ->block()->
≥rf‹m
(
this
);

54 
	gIn•e˘
::
›î©‹
()(
Pr›£t
* 
¥›£t
)

56 
¥›£t
->
¥›îty_‰agmít
()->
≥rf‹m
(
this
);

57 
≠≥nd_cﬁ⁄_£∑øt‹
();

58 
	g¥›£t
->
block
()->
≥rf‹m
(
this
);

61 
	gIn•e˘
::
›î©‹
()(
BubbÀ
* 
bubbÀ
)

63 
≠≥nd_ödíèti⁄
();

64 
≠≥nd_tokí
("::BUBBLE", 
bubbÀ
);

65 
≠≥nd_sc›e_›íî
();

66 
	gbubbÀ
->
node
()->
≥rf‹m
(
this
);

67 
≠≥nd_sc›e_˛o£r
();

70 
	gIn•e˘
::
›î©‹
()(
Medü_Block
* 
medü_block
)

72 
≠≥nd_ödíèti⁄
();

73 
≠≥nd_tokí
("@medü", 
medü_block
);

74 
≠≥nd_m™d©‹y_•a˚
();

75 
	gö_medü_block
 = 
åue
;

76 
	gmedü_block
->
medü_quîõs
()->
≥rf‹m
(
this
);

77 
	gö_medü_block
 = 
Ál£
;

78 
	gmedü_block
->
block
()->
≥rf‹m
(
this
);

81 
	gIn•e˘
::
›î©‹
()(
Suµ‹ts_Block
* 
„©uª_block
)

83 
≠≥nd_ödíèti⁄
();

84 
≠≥nd_tokí
("@suµ‹ts", 
„©uª_block
);

85 
≠≥nd_m™d©‹y_•a˚
();

86 
	g„©uª_block
->
c⁄dôi⁄
()->
≥rf‹m
(
this
);

87 
	g„©uª_block
->
block
()->
≥rf‹m
(
this
);

90 
	gIn•e˘
::
›î©‹
()(
At_RoŸ_Block
* 
©_roŸ_block
)

92 
≠≥nd_ödíèti⁄
();

93 
≠≥nd_tokí
("@©-roŸ ", 
©_roŸ_block
);

94 
≠≥nd_m™d©‹y_•a˚
();

95 if(
	g©_roŸ_block
->
ex¥essi⁄
()Ë©_roŸ_block->ex¥essi⁄()->
≥rf‹m
(
this
);

96 
	g©_roŸ_block
->
block
()->
≥rf‹m
(
this
);

99 
	gIn•e˘
::
›î©‹
()(
Dúe˘ive
* 
©_ruÀ
)

101 
≠≥nd_ödíèti⁄
();

102 
≠≥nd_tokí
(
©_ruÀ
->
keyw‹d
(),át_rule);

103 i‡(
	g©_ruÀ
->
£À˘‹
()) {

104 
≠≥nd_m™d©‹y_•a˚
();

105 
boﬁ
 
	gwas_wøµed
 = 
ö_wøµed
;

106 
	gö_wøµed
 = 
åue
;

107 
	g©_ruÀ
->
£À˘‹
()->
≥rf‹m
(
this
);

108 
	gö_wøµed
 = 
was_wøµed
;

110 i‡(
	g©_ruÀ
->
vÆue
()) {

111 
≠≥nd_m™d©‹y_•a˚
();

112 
	g©_ruÀ
->
vÆue
()->
≥rf‹m
(
this
);

114 i‡(
	g©_ruÀ
->
block
()) {

115 
	g©_ruÀ
->
block
()->
≥rf‹m
(
this
);

118 
≠≥nd_dñimôî
();

122 
	gIn•e˘
::
›î©‹
()(
De˛¨©i⁄
* 
dec
)

124 i‡(
dec
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) ;

125 
boﬁ
 
	gwas_de˛
 = 
ö_de˛¨©i⁄
;

126 
	gö_de˛¨©i⁄
 = 
åue
;

127 i‡(
ouçut_°yÀ
(Ë=
NESTED
)

128 
ödíèti⁄
 +
dec
->
èbs
();

129 
≠≥nd_ödíèti⁄
();

130 
	gdec
->
¥›îty
()->
≥rf‹m
(
this
);

131 
≠≥nd_cﬁ⁄_£∑øt‹
();

133 i‡(
	gdec
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
SELECTOR
) {

134 
Mem‹y_M™agî
 
mem
;

135 
Li°ize
 
li°ize
(
mem
);

136 
	gdec
->
vÆue
()->
≥rf‹m
(&
li°ize
)->≥rf‹m(
this
);

138 
	gdec
->
vÆue
()->
≥rf‹m
(
this
);

141 i‡(
	gdec
->
is_imp‹è¡
()) {

142 
≠≥nd_›ti⁄Æ_•a˚
();

143 
≠≥nd_°rög
("!important");

145 
≠≥nd_dñimôî
();

146 i‡(
ouçut_°yÀ
(Ë=
NESTED
)

147 
ödíèti⁄
 -
dec
->
èbs
();

148 
	gö_de˛¨©i⁄
 = 
was_de˛
;

151 
	gIn•e˘
::
›î©‹
()(
Assignmít
* 
as¢
)

153 
≠≥nd_tokí
(
as¢
->
v¨übÀ
(),ássn);

154 
≠≥nd_cﬁ⁄_£∑øt‹
();

155 
	gas¢
->
vÆue
()->
≥rf‹m
(
this
);

156 i‡(
	gas¢
->
is_deÁu…
()) {

157 
≠≥nd_›ti⁄Æ_•a˚
();

158 
≠≥nd_°rög
("!default");

160 
≠≥nd_dñimôî
();

163 
	gIn•e˘
::
›î©‹
()(
Imp‹t
* 
imp‹t
)

165 i‡(!
imp‹t
->
uæs
().
em±y
()) {

166 
≠≥nd_tokí
("@imp‹t", 
imp‹t
);

167 
≠≥nd_m™d©‹y_•a˚
();

169 i‡(
Såög_QuŸed
* 
	g°rq
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
imp‹t
->
uæs
().
‰⁄t
())) {

170 
°rq
->
is_dñayed
(
Ál£
);

173 
	gimp‹t
->
uæs
().
‰⁄t
()->
≥rf‹m
(
this
);

174 i‡(
	gimp‹t
->
uæs
().
size
() == 1) {

175 i‡(
imp‹t
->
medü_quîõs
()) {

176 
≠≥nd_m™d©‹y_•a˚
();

177 
	gimp‹t
->
medü_quîõs
()->
≥rf‹m
(
this
);

180 
≠≥nd_dñimôî
();

181 
size_t
 
	gi
 = 1, 
	gS
 = 
imp‹t
->
uæs
().
size
(); i < S; ++i) {

182 
≠≥nd_m™d©‹y_löe„ed
();

183 
≠≥nd_tokí
("@imp‹t", 
imp‹t
);

184 
≠≥nd_m™d©‹y_•a˚
();

186 i‡(
Såög_QuŸed
* 
	g°rq
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
imp‹t
->
uæs
()[
i
])) {

187 
°rq
->
is_dñayed
(
Ál£
);

190 
	gimp‹t
->
uæs
()[
i
]->
≥rf‹m
(
this
);

191 i‡(
	gimp‹t
->
uæs
().
size
(Ë- 1 =
i
) {

192 i‡(
imp‹t
->
medü_quîõs
()) {

193 
≠≥nd_m™d©‹y_•a˚
();

194 
	gimp‹t
->
medü_quîõs
()->
≥rf‹m
(
this
);

197 
≠≥nd_dñimôî
();

202 
	gIn•e˘
::
›î©‹
()(
Imp‹t_Stub
* 
imp‹t
)

204 
≠≥nd_ödíèti⁄
();

205 
≠≥nd_tokí
("@imp‹t", 
imp‹t
);

206 
≠≥nd_m™d©‹y_•a˚
();

207 
≠≥nd_°rög
(
imp‹t
->
imp_∑th
());

208 
≠≥nd_dñimôî
();

211 
	gIn•e˘
::
›î©‹
()(
W¨nög
* 
w¨nög
)

213 
≠≥nd_ödíèti⁄
();

214 
≠≥nd_tokí
("@w¨n", 
w¨nög
);

215 
≠≥nd_m™d©‹y_•a˚
();

216 
	gw¨nög
->
mesßge
()->
≥rf‹m
(
this
);

217 
≠≥nd_dñimôî
();

220 
	gIn•e˘
::
›î©‹
()(
Eº‹
* 
îr‹
)

222 
≠≥nd_ödíèti⁄
();

223 
≠≥nd_tokí
("@îr‹", 
îr‹
);

224 
≠≥nd_m™d©‹y_•a˚
();

225 
	gîr‹
->
mesßge
()->
≥rf‹m
(
this
);

226 
≠≥nd_dñimôî
();

229 
	gIn•e˘
::
›î©‹
()(
Debug
* 
debug
)

231 
≠≥nd_ödíèti⁄
();

232 
≠≥nd_tokí
("@debug", 
debug
);

233 
≠≥nd_m™d©‹y_•a˚
();

234 
	gdebug
->
vÆue
()->
≥rf‹m
(
this
);

235 
≠≥nd_dñimôî
();

238 
	gIn•e˘
::
›î©‹
()(
Commít
* 
commít
)

240 
ö_commít
 = 
åue
;

241 
	gcommít
->
ãxt
()->
≥rf‹m
(
this
);

242 
	gö_commít
 = 
Ál£
;

245 
	gIn•e˘
::
›î©‹
()(
If
* 
c⁄d
)

247 
≠≥nd_ödíèti⁄
();

248 
≠≥nd_tokí
("@if", 
c⁄d
);

249 
≠≥nd_m™d©‹y_•a˚
();

250 
	gc⁄d
->
¥ediˇã
()->
≥rf‹m
(
this
);

251 
	gc⁄d
->
block
()->
≥rf‹m
(
this
);

252 i‡(
	gc⁄d
->
Æã∫©ive
()) {

253 
≠≥nd_›ti⁄Æ_löe„ed
();

254 
≠≥nd_ödíèti⁄
();

255 
≠≥nd_°rög
("else");

256 
	gc⁄d
->
Æã∫©ive
()->
≥rf‹m
(
this
);

260 
	gIn•e˘
::
›î©‹
()(
F‹
* 
lo›
)

262 
≠≥nd_ödíèti⁄
();

263 
≠≥nd_tokí
("@f‹", 
lo›
);

264 
≠≥nd_m™d©‹y_•a˚
();

265 
≠≥nd_°rög
(
lo›
->
v¨übÀ
());

266 
≠≥nd_°rög
(" from ");

267 
	glo›
->
lowî_bound
()->
≥rf‹m
(
this
);

268 
≠≥nd_°rög
(
lo›
->
is_ö˛usive
() ? "Åhrough " : "Åo ");

269 
	glo›
->
uµî_bound
()->
≥rf‹m
(
this
);

270 
	glo›
->
block
()->
≥rf‹m
(
this
);

273 
	gIn•e˘
::
›î©‹
()(
Each
* 
lo›
)

275 
≠≥nd_ödíèti⁄
();

276 
≠≥nd_tokí
("@óch", 
lo›
);

277 
≠≥nd_m™d©‹y_•a˚
();

278 
≠≥nd_°rög
(
lo›
->
v¨übÀs
()[0]);

279 
size_t
 
	gi
 = 1, 
	gL
 = 
lo›
->
v¨übÀs
().
size
(); i < L; ++i) {

280 
≠≥nd_comma_£∑øt‹
();

281 
≠≥nd_°rög
(
lo›
->
v¨übÀs
()[
i
]);

283 
≠≥nd_°rög
(" in ");

284 
	glo›
->
li°
()->
≥rf‹m
(
this
);

285 
	glo›
->
block
()->
≥rf‹m
(
this
);

288 
	gIn•e˘
::
›î©‹
()(
Whûe
* 
lo›
)

290 
≠≥nd_ödíèti⁄
();

291 
≠≥nd_tokí
("@whûe", 
lo›
);

292 
≠≥nd_m™d©‹y_•a˚
();

293 
	glo›
->
¥ediˇã
()->
≥rf‹m
(
this
);

294 
	glo›
->
block
()->
≥rf‹m
(
this
);

297 
	gIn•e˘
::
›î©‹
()(
Rëu∫
* 
ªt
)

299 
≠≥nd_ödíèti⁄
();

300 
≠≥nd_tokí
("@ªtu∫", 
ªt
);

301 
≠≥nd_m™d©‹y_•a˚
();

302 
	gªt
->
vÆue
()->
≥rf‹m
(
this
);

303 
≠≥nd_dñimôî
();

306 
	gIn•e˘
::
›î©‹
()(
Exãnsi⁄
* 
exãnd
)

308 
≠≥nd_ödíèti⁄
();

309 
≠≥nd_tokí
("@exãnd", 
exãnd
);

310 
≠≥nd_m™d©‹y_•a˚
();

311 
	gexãnd
->
£À˘‹
()->
≥rf‹m
(
this
);

312 
≠≥nd_dñimôî
();

315 
	gIn•e˘
::
›î©‹
()(
Deföôi⁄
* 
def
)

317 
≠≥nd_ödíèti⁄
();

318 i‡(
	gdef
->
ty≥
(Ë=
Deföôi⁄
::
MIXIN
) {

319 
≠≥nd_tokí
("@mixö", 
def
);

320 
≠≥nd_m™d©‹y_•a˚
();

322 
≠≥nd_tokí
("@fun˘i⁄", 
def
);

323 
≠≥nd_m™d©‹y_•a˚
();

325 
≠≥nd_°rög
(
def
->
«me
());

326 
	gdef
->
∑ømëîs
()->
≥rf‹m
(
this
);

327 
	gdef
->
block
()->
≥rf‹m
(
this
);

330 
	gIn•e˘
::
›î©‹
()(
Mixö_CÆl
* 
ˇŒ
)

332 
≠≥nd_ödíèti⁄
();

333 
≠≥nd_tokí
("@ö˛ude", 
ˇŒ
);

334 
≠≥nd_m™d©‹y_•a˚
();

335 
≠≥nd_°rög
(
ˇŒ
->
«me
());

336 i‡(
	gˇŒ
->
¨gumíts
()) {

337 
	gˇŒ
->
¨gumíts
()->
≥rf‹m
(
this
);

339 i‡(
	gˇŒ
->
block
()) {

340 
≠≥nd_›ti⁄Æ_•a˚
();

341 
	gˇŒ
->
block
()->
≥rf‹m
(
this
);

343 i‡(!
	gˇŒ
->
block
()Ë
≠≥nd_dñimôî
();

346 
	gIn•e˘
::
›î©‹
()(
C⁄ã¡
* 
c⁄ã¡
)

348 
≠≥nd_ödíèti⁄
();

349 
≠≥nd_tokí
("@c⁄ã¡", 
c⁄ã¡
);

350 
≠≥nd_dñimôî
();

353 
	gIn•e˘
::
›î©‹
()(
M≠
* 
m≠
)

355 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 && 
m≠
->
em±y
()) {

356 
≠≥nd_°rög
("()");

359 i‡(
	gm≠
->
em±y
()) ;

360 i‡(
	gm≠
->
is_övisibÀ
()) ;

361 
boﬁ
 
	gôems_ouçut
 = 
Ál£
;

362 
≠≥nd_°rög
("(");

363 autÿ
	gkey
 : 
m≠
->
keys
()) {

364 i‡(
ôems_ouçut
Ë
≠≥nd_comma_£∑øt‹
();

365 
	gkey
->
≥rf‹m
(
this
);

366 
≠≥nd_cﬁ⁄_£∑øt‹
();

367 
	gm≠
->
©
(
key
)->
≥rf‹m
(
this
);

368 
	gôems_ouçut
 = 
åue
;

370 
≠≥nd_°rög
(")");

373 
	gIn•e˘
::
›î©‹
()(
Li°
* 
li°
)

375 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 && 
li°
->
em±y
()) {

376 
≠≥nd_°rög
("()");

379 
	g°d
::
°rög
 
£p
(
li°
->
£∑øt‹
(Ë=
SASS_SPACE
 ? " " : ",");

380 i‡((
ouçut_°yÀ
(Ë!
COMPRESSED
Ë&& 
£p
 == ",") sep += " ";

381 i‡(
	gö_medü_block
 && 
	g£p
 !" "Ë
£p
 += " ";

382 i‡(
	gli°
->
em±y
()) ;

383 
boﬁ
 
	gôems_ouçut
 = 
Ál£
;

385 
boﬁ
 
	gwas_•a˚_¨øy
 = 
ö_•a˚_¨øy
;

386 
boﬁ
 
	gwas_comma_¨øy
 = 
ö_comma_¨øy
;

388 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 &&

389 
li°
->
Àngth
() == 1 &&

390 !
li°
->
‰om_£À˘‹
() &&

391 !
dy«mic_ˇ°
<
Li°
*>((*
li°
)[0]) &&

392 !
dy«mic_ˇ°
<
Li°
*>((*
li°
)[0]) &&

393 !
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>((*
li°
)[0])) {

394 
≠≥nd_°rög
("(");

396 i‡(!
	gö_de˛¨©i⁄
 && (
	gli°
->
£∑øt‹
(Ë=
SASS_HASH
 ||

397 (
li°
->
£∑øt‹
(Ë=
SASS_SPACE
 && 
ö_•a˚_¨øy
) ||

398 (
li°
->
£∑øt‹
(Ë=
SASS_COMMA
 && 
ö_comma_¨øy
)

400 
≠≥nd_°rög
("(");

403 i‡(
	gli°
->
£∑øt‹
(Ë=
SASS_SPACE
Ë
ö_•a˚_¨øy
 = 
åue
;

404 i‡(
	gli°
->
£∑øt‹
(Ë=
SASS_COMMA
Ë
ö_comma_¨øy
 = 
åue
;

406 
size_t
 
	gi
 = 0, 
	gL
 = 
li°
->
size
(); i < L; ++i) {

407 i‡(
	gli°
->
£∑øt‹
(Ë=
SASS_HASH
)

408 { 
£p
[0] = 
i
 % 2 ? ':' : ','; }

409 
Ex¥essi⁄
* 
	gli°_ôem
 = (*
li°
)[
i
];

410 i‡(
ouçut_°yÀ
(Ë!
TO_SASS
) {

411 i‡(
li°_ôem
->
is_övisibÀ
()) {

413 i‡(!
dy«mic_ˇ°
<
Såög_C⁄°™t
*>(
li°_ôem
)) {

418 i‡(
	gôems_ouçut
) {

419 
≠≥nd_°rög
(
£p
);

421 i‡(
	gôems_ouçut
 && 
	g£p
 != " ")

422 
≠≥nd_›ti⁄Æ_•a˚
();

423 
	gli°_ôem
->
≥rf‹m
(
this
);

424 
	gôems_ouçut
 = 
åue
;

427 
	gö_comma_¨øy
 = 
was_comma_¨øy
;

428 
	gö_•a˚_¨øy
 = 
was_•a˚_¨øy
;

430 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 &&

431 
li°
->
Àngth
() == 1 &&

432 !
li°
->
‰om_£À˘‹
() &&

433 !
dy«mic_ˇ°
<
Li°
*>((*
li°
)[0]) &&

434 !
dy«mic_ˇ°
<
Li°
*>((*
li°
)[0]) &&

435 !
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>((*
li°
)[0])) {

436 
≠≥nd_°rög
(",)");

438 i‡(!
	gö_de˛¨©i⁄
 && (
	gli°
->
£∑øt‹
(Ë=
SASS_HASH
 ||

439 (
li°
->
£∑øt‹
(Ë=
SASS_SPACE
 && 
ö_•a˚_¨øy
) ||

440 (
li°
->
£∑øt‹
(Ë=
SASS_COMMA
 && 
ö_comma_¨øy
)

442 
≠≥nd_°rög
(")");

447 
	gIn•e˘
::
›î©‹
()(
Bö¨y_Ex¥essi⁄
* 
ex¥
)

449 
ex¥
->
À·
()->
≥rf‹m
(
this
);

450 i‡–
	gö_medü_block
 ||

451 (
ouçut_°yÀ
(Ë=
INSPECT
) || (

452 
ex¥
->
›
().
ws_bef‹e


453 && (!
ex¥
->
is_öãΩﬁ™t
())

454 && (!
ex¥
->
is_dñayed
() ||

455 
ex¥
->
is_À·_öãΩﬁ™t
() ||

456 
ex¥
->
is_right_öãΩﬁ™t
()

459 )Ë
≠≥nd_°rög
(" ");

460 
	gex¥
->
ty≥
()) {

461 
	gSass_OP
::
AND
: 
≠≥nd_°rög
("&&"); ;

462 
	gSass_OP
::
OR
: 
≠≥nd_°rög
("||"); ;

463 
	gSass_OP
::
EQ
: 
≠≥nd_°rög
("=="); ;

464 
	gSass_OP
::
NEQ
: 
≠≥nd_°rög
("!="); ;

465 
	gSass_OP
::
GT
: 
≠≥nd_°rög
(">"); ;

466 
	gSass_OP
::
GTE
: 
≠≥nd_°rög
(">="); ;

467 
	gSass_OP
::
LT
: 
≠≥nd_°rög
("<"); ;

468 
	gSass_OP
::
LTE
: 
≠≥nd_°rög
("<="); ;

469 
	gSass_OP
::
ADD
: 
≠≥nd_°rög
("+"); ;

470 
	gSass_OP
::
SUB
: 
≠≥nd_°rög
("-"); ;

471 
	gSass_OP
::
MUL
: 
≠≥nd_°rög
("*"); ;

472 
	gSass_OP
::
DIV
: 
≠≥nd_°rög
("/"); ;

473 
	gSass_OP
::
MOD
: 
≠≥nd_°rög
("%"); ;

476 i‡–
	gö_medü_block
 ||

477 (
ouçut_°yÀ
(Ë=
INSPECT
) || (

478 
ex¥
->
›
().
ws_a·î


479 && (!
ex¥
->
is_öãΩﬁ™t
())

480 && (!
ex¥
->
is_dñayed
()

481 || 
ex¥
->
is_À·_öãΩﬁ™t
()

482 || 
ex¥
->
is_right_öãΩﬁ™t
()

484 )Ë
≠≥nd_°rög
(" ");

485 
	gex¥
->
right
()->
≥rf‹m
(
this
);

488 
	gIn•e˘
::
›î©‹
()(
U«ry_Ex¥essi⁄
* 
ex¥
)

490 i‡(
ex¥
->
ty≥
(Ë=
U«ry_Ex¥essi⁄
::
PLUS
Ë
≠≥nd_°rög
("+");

491 
≠≥nd_°rög
("-");

492 
	gex¥
->
›î™d
()->
≥rf‹m
(
this
);

495 
	gIn•e˘
::
›î©‹
()(
Fun˘i⁄_CÆl
* 
ˇŒ
)

497 
≠≥nd_tokí
(
ˇŒ
->
«me
(), call);

498 
	gˇŒ
->
¨gumíts
()->
≥rf‹m
(
this
);

501 
	gIn•e˘
::
›î©‹
()(
Fun˘i⁄_CÆl_Schema
* 
ˇŒ
)

503 
ˇŒ
->
«me
()->
≥rf‹m
(
this
);

504 
	gˇŒ
->
¨gumíts
()->
≥rf‹m
(
this
);

507 
	gIn•e˘
::
›î©‹
()(
V¨übÀ
* 
v¨
)

509 
≠≥nd_tokí
(
v¨
->
«me
(), var);

512 
	gIn•e˘
::
›î©‹
()(
TextuÆ
* 
txt
)

514 
≠≥nd_tokí
(
txt
->
vÆue
(),Åxt);

517 
	gIn•e˘
::
›î©‹
()(
Numbî
* 
n
)

520 
°d
::
°rög
 
ªs
;

531 
	g°d
::
°rög°ªam
 
ss
;

532 
	gss
.
¥ecisi⁄
(12);

533 
	gss
 << 
	gn
->
vÆue
();

536 i‡(
	gss
.
°r
().
föd_fú°_of
("e"Ë!
°d
::
°rög
::
≈os
) {

537 
ss
.
˛ór
(); 
	gss
.
°r
(
°d
::
°rög
());

538 
	gss
.
¥ecisi⁄
(
°d
::
max
(12, 
›t
.precision));

539 
	gss
 << 
	g°d
::
fixed
 << 
n
->
vÆue
();

542 
	g°d
::
°rög
 
tmp
 = 
ss
.
°r
();

543 
size_t
 
	gpos_poöt
 = 
tmp
.
föd_fú°_of
(".,");

544 
size_t
 
	gpos_‰a˘
 = 
tmp
.
föd_œ°_nŸ_of
("0");

545 
boﬁ
 
	gis_öt
 = 
pos_poöt
 =
pos_‰a˘
 ||

546 
pos_poöt
 =
°d
::
°rög
::
≈os
;

549 
	gss
.
˛ór
(); ss.
°r
(
°d
::
°rög
());

552 i‡(
	gis_öt
)

554 
	gss
.
¥ecisi⁄
(0);

555 
	gss
 << 
	g°d
::
fixed
 << 
n
->
vÆue
();

556 
	gªs
 = 
°d
::
°rög
(
ss
.
°r
());

562 i‡(
	gpos_‰a˘
 < 
	g›t
.
	g¥ecisi⁄
 + 
	gpos_poöt
)

563 { 
	gss
.
¥ecisi⁄
(()(
pos_‰a˘
 - 
pos_poöt
)); }

564 { 
	gss
.
¥ecisi⁄
(
›t
.precision); }

566 
	gss
 << 
	g°d
::
fixed
 << 
n
->
vÆue
();

567 
	gªs
 = 
°d
::
°rög
(
ss
.
°r
());

569 
size_t
 
	gpos
 = 
ªs
.
föd_œ°_nŸ_of
("0");

571 i‡(
	gpos
 =
°d
::
°rög
::
≈os
) {

572 
ªs
 = "0.0";

574 
boﬁ
 
	g©_dec_poöt
 = 
ªs
[
pos
] == '.' ||

575 
ªs
[
pos
] == ',';

577 i‡(
	g©_dec_poöt
Ë++ 
	gpos
;

578 
	gªs
.
ªsize
 (
pos
 + 1);

583 i‡(
	gªs
 ="0.0"Ë
ªs
 = "0";

584 i‡(
	gªs
 =""Ë
ªs
 = "0";

585 i‡(
	gªs
 ="-0"Ë
ªs
 = "0";

586 i‡(
	gªs
 ="-0.0"Ë
ªs
 = "0";

587 i‡(
	g›t
.
	gouçut_°yÀ
 =
COMPRESSED
)

590 
size_t
 
off
 = 
ªs
[0] == '-' ? 1 : 0;

592 i‡(
	gn
->
zîo
(Ë&& 
	gªs
[
off
] ='0' && 
ªs
[off+1] ='.'Ëªs.
îa£
(off, 1);

596 
	gªs
 +
n
->
unô
();

599 
≠≥nd_tokí
(
ªs
, 
n
);

603 
	gãm∂©e
 <
size_t
 
	gønge
>

604 
ˇp_ch™√l
(
c
) {

605 i‡(
	gc
 > 
	gønge
) Ñange;

606 i‡(
	gc
 < 0)  0;

607  
	gc
;

610 
	gIn•e˘
::
›î©‹
()(
Cﬁ‹
* 
c
)

613 
°d
::
°rög°ªam
 
ss
;

617 
	g°d
::
°rög
 
«me
 = 
c
->
di•
();

620 
	g°d
::
°rög
 
ªs_«me
 = 
«me
;

622 
	gr
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
c
->
r
()), 
›t
.
¥ecisi⁄
);

623 
	gg
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
c
->
g
()), 
›t
.
¥ecisi⁄
);

624 
	gb
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
c
->
b
()), 
›t
.
¥ecisi⁄
);

625 
	ga
 = 
ˇp_ch™√l
<1> (
c
->
a
());

628 i‡(
	g«me
 !"" && 
«me_to_cﬁ‹
(
«me
)) {

629 c⁄° 
Cﬁ‹
* 
n
 = 
«me_to_cﬁ‹
(
«me
);

630 
	gr
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
n
->
r
()), 
›t
.
¥ecisi⁄
);

631 
	gg
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
n
->
g
()), 
›t
.
¥ecisi⁄
);

632 
	gb
 = 
Sass
::
round
(
ˇp_ch™√l
<0xff>(
n
->
b
()), 
›t
.
¥ecisi⁄
);

633 
	ga
 = 
ˇp_ch™√l
<1> (
n
->
a
());

637 
	gnumvÆ
 = 
r
 * 0x10000 + 
g
 * 0x100 + 
b
;

638 i‡(
cﬁ‹_to_«me
(
numvÆ
))

639 
	gªs_«me
 = 
cﬁ‹_to_«me
(
numvÆ
);

642 
	g°d
::
°rög°ªam
 
hexÀt
;

643 
boﬁ
 
	gcom¥es£d
 = 
›t
.
ouçut_°yÀ
 =
COMPRESSED
;

644 
	ghexÀt
 << '#' << 
	g°d
::
£tw
(1Ë<< 
°d
::
£tfûl
('0');

646 i‡(
	gcom¥es£d
 && 
is_cﬁ‹_doubÀt
(
r
, 
g
, 
b
Ë&& 
	ga
 == 1) {

647 
hexÀt
 << 
°d
::
hex
 << std::
£tw
(1Ë<< (
°©ic_ˇ°
<>(
r
) >> 4);

648 
	ghexÀt
 << 
	g°d
::
hex
 << 
°d
::
£tw
(1Ë<< (
°©ic_ˇ°
<>(
g
) >> 4);

649 
	ghexÀt
 << 
	g°d
::
hex
 << 
°d
::
£tw
(1Ë<< (
°©ic_ˇ°
<>(
b
) >> 4);

651 
	ghexÀt
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
r
);

652 
	ghexÀt
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
g
);

653 
	ghexÀt
 << 
	g°d
::
hex
 << 
°d
::
£tw
(2Ë<< 
°©ic_ˇ°
<>(
b
);

656 i‡(
	gcom¥es£d
 && !
	gc
->
is_dñayed
()Ë
	g«me
 = "";

657 i‡(
	g›t
.
	gouçut_°yÀ
 =
INSPECT
 && 
a
 >= 1) {

658 
≠≥nd_tokí
(
hexÀt
.
°r
(), 
c
);

663 i‡(
	g«me
 != "") {

664 
ss
 << 
«me
;

666 i‡(
	gr
 =0 && 
g
 =0 && 
b
 =0 && 
a
 == 0) {

667 
ss
 << "transparent";

669 i‡(
	ga
 >= 1) {

670 i‡(
ªs_«me
 != "") {

671 i‡(
com¥es£d
 && 
hexÀt
.
°r
().
size
(Ë< 
ªs_«me
.size()) {

672 
ss
 << 
hexÀt
.
°r
();

674 
	gss
 << 
	gªs_«me
;

678 
	gss
 << 
	ghexÀt
.
°r
();

682 
	gss
 << "rgba(";

683 
	gss
 << 
	g°©ic_ˇ°
<>(
	gr
) << ",";

684 i‡(!
	gcom¥es£d
Ë
	gss
 << " ";

685 
	gss
 << 
	g°©ic_ˇ°
<>(
	gg
) << ",";

686 i‡(!
	gcom¥es£d
Ë
	gss
 << " ";

687 
	gss
 << 
	g°©ic_ˇ°
<>(
	gb
) << ",";

688 i‡(!
	gcom¥es£d
Ë
	gss
 << " ";

689 
	gss
 << 
	ga
 << ')';

692 
≠≥nd_tokí
(
ss
.
°r
(), 
c
);

696 
	gIn•e˘
::
›î©‹
()(
Boﬁón
* 
b
)

699 
≠≥nd_tokí
(
b
->
vÆue
() ? "true" : "false", b);

702 
	gIn•e˘
::
›î©‹
()(
Såög_Schema
* 
ss
)

706 
size_t
 
i
 = 0, 
	gL
 = 
ss
->
Àngth
(); 
	gi
 < L; ++i) {

707 i‡((*
	gss
)[
i
]->
is_öãΩﬁ™t
()Ë
≠≥nd_°rög
("#{");

708 (*
	gss
)[
i
]->
≥rf‹m
(
this
);

709 i‡((*
	gss
)[
i
]->
is_öãΩﬁ™t
()Ë
≠≥nd_°rög
("}");

713 
	gIn•e˘
::
›î©‹
()(
Såög_C⁄°™t
* 
s
)

715 
≠≥nd_tokí
(
s
->
vÆue
(), s);

718 
	gIn•e˘
::
›î©‹
()(
Såög_QuŸed
* 
s
)

720 i‡(c⁄° 
q
 = 
s
->
quŸe_m¨k
()) {

721 
≠≥nd_tokí
(
quŸe
(
s
->
vÆue
(), 
q
), s);

723 
≠≥nd_tokí
(
s
->
vÆue
(), s);

727 
	gIn•e˘
::
›î©‹
()(
Cu°om_Eº‹
* 
e
)

729 
≠≥nd_tokí
(
e
->
mesßge
(),É);

732 
	gIn•e˘
::
›î©‹
()(
Cu°om_W¨nög
* 
w
)

734 
≠≥nd_tokí
(
w
->
mesßge
(), w);

737 
	gIn•e˘
::
›î©‹
()(
Suµ‹ts_O≥øt‹
* 
so
)

740 i‡(
so
->
√eds_∑ªns
(so->
À·
())Ë
≠≥nd_°rög
("(");

741 
	gso
->
À·
()->
≥rf‹m
(
this
);

742 i‡(
	gso
->
√eds_∑ªns
(
so
->
À·
())Ë
≠≥nd_°rög
(")");

744 i‡(
	gso
->
›î™d
(Ë=
Suµ‹ts_O≥øt‹
::
AND
) {

745 
≠≥nd_m™d©‹y_•a˚
();

746 
≠≥nd_tokí
("™d", 
so
);

747 
≠≥nd_m™d©‹y_•a˚
();

748 } i‡(
	gso
->
›î™d
(Ë=
Suµ‹ts_O≥øt‹
::
OR
) {

749 
≠≥nd_m™d©‹y_•a˚
();

750 
≠≥nd_tokí
("‹", 
so
);

751 
≠≥nd_m™d©‹y_•a˚
();

754 i‡(
	gso
->
√eds_∑ªns
(
so
->
right
())Ë
≠≥nd_°rög
("(");

755 
	gso
->
right
()->
≥rf‹m
(
this
);

756 i‡(
	gso
->
√eds_∑ªns
(
so
->
right
())Ë
≠≥nd_°rög
(")");

759 
	gIn•e˘
::
›î©‹
()(
Suµ‹ts_Neg©i⁄
* 
¢
)

761 
≠≥nd_tokí
("nŸ", 
¢
);

762 
≠≥nd_m™d©‹y_•a˚
();

763 i‡(
	g¢
->
√eds_∑ªns
(
¢
->
c⁄dôi⁄
())Ë
≠≥nd_°rög
("(");

764 
	g¢
->
c⁄dôi⁄
()->
≥rf‹m
(
this
);

765 i‡(
	g¢
->
√eds_∑ªns
(
¢
->
c⁄dôi⁄
())Ë
≠≥nd_°rög
(")");

768 
	gIn•e˘
::
›î©‹
()(
Suµ‹ts_De˛¨©i⁄
* 
sd
)

770 
≠≥nd_°rög
("(");

771 
	gsd
->
„©uª
()->
≥rf‹m
(
this
);

772 
≠≥nd_°rög
(": ");

773 
	gsd
->
vÆue
()->
≥rf‹m
(
this
);

774 
≠≥nd_°rög
(")");

777 
	gIn•e˘
::
›î©‹
()(
Suµ‹ts_I¡îpﬁ©i⁄
* 
sd
)

779 
sd
->
vÆue
()->
≥rf‹m
(
this
);

782 
	gIn•e˘
::
›î©‹
()(
Medü_Quîy
* 
mq
)

784 
size_t
 
i
 = 0;

785 i‡(
	gmq
->
medü_ty≥
()) {

786 i‡(
	gmq
->
is_√g©ed
()Ë
≠≥nd_°rög
("not ");

787 i‡(
	gmq
->
is_ª°ri˘ed
()Ë
≠≥nd_°rög
("only ");

788 
	gmq
->
medü_ty≥
()->
≥rf‹m
(
this
);

791 (*
	gmq
)[
i
++]->
≥rf‹m
(
this
);

793 
size_t
 
	gL
 = 
mq
->
Àngth
(); 
	gi
 < L; ++i) {

794 
≠≥nd_°rög
("ánd ");

795 (*
	gmq
)[
i
]->
≥rf‹m
(
this
);

799 
	gIn•e˘
::
›î©‹
()(
Medü_Quîy_Ex¥essi⁄
* 
mqe
)

801 i‡(
mqe
->
is_öãΩﬁ©ed
()) {

802 
mqe
->
„©uª
()->
≥rf‹m
(
this
);

805 
≠≥nd_°rög
("(");

806 
	gmqe
->
„©uª
()->
≥rf‹m
(
this
);

807 i‡(
	gmqe
->
vÆue
()) {

808 
≠≥nd_°rög
(": ");

809 
	gmqe
->
vÆue
()->
≥rf‹m
(
this
);

811 
≠≥nd_°rög
(")");

815 
	gIn•e˘
::
›î©‹
()(
At_RoŸ_Quîy
* 
´
)

817 
≠≥nd_°rög
("(");

818 
	g´
->
„©uª
()->
≥rf‹m
(
this
);

819 i‡(
	g´
->
vÆue
()) {

820 
≠≥nd_cﬁ⁄_£∑øt‹
();

821 
	g´
->
vÆue
()->
≥rf‹m
(
this
);

823 
≠≥nd_°rög
(")");

826 
	gIn•e˘
::
›î©‹
()(
NuŒ
* 
n
)

829 
≠≥nd_tokí
("nuŒ", 
n
);

833 
	gIn•e˘
::
›î©‹
()(
P¨amëî
* 
p
)

835 
≠≥nd_tokí
(
p
->
«me
(),Ö);

836 i‡(
	gp
->
deÁu…_vÆue
()) {

837 
≠≥nd_cﬁ⁄_£∑øt‹
();

838 
	gp
->
deÁu…_vÆue
()->
≥rf‹m
(
this
);

840 i‡(
	gp
->
is_ª°_∑ømëî
()) {

841 
≠≥nd_°rög
("...");

845 
	gIn•e˘
::
›î©‹
()(
P¨amëîs
* 
p
)

847 
≠≥nd_°rög
("(");

848 i‡(!
	gp
->
em±y
()) {

849 (*
	gp
)[0]->
≥rf‹m
(
this
);

850 
size_t
 
	gi
 = 1, 
	gL
 = 
p
->
Àngth
(); i < L; ++i) {

851 
≠≥nd_comma_£∑øt‹
();

852 (*
	gp
)[
i
]->
≥rf‹m
(
this
);

855 
≠≥nd_°rög
(")");

858 
	gIn•e˘
::
›î©‹
()(
Argumít
* 
a
)

860 i‡(!
a
->
«me
().
em±y
()) {

861 
≠≥nd_tokí
(
a
->
«me
(),á);

862 
≠≥nd_cﬁ⁄_£∑øt‹
();

865 i‡(
	ga
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
) {

868 i‡(
	ga
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
) {

869 
Såög_C⁄°™t
* 
s
 = 
°©ic_ˇ°
<Såög_C⁄°™t*>(
a
->
vÆue
());

870 
	gs
->
≥rf‹m
(
this
);

871 } 
	ga
->
vÆue
()->
≥rf‹m
(
this
);

872 i‡(
	ga
->
is_ª°_¨gumít
()) {

873 
≠≥nd_°rög
("...");

877 
	gIn•e˘
::
›î©‹
()(
Argumíts
* 
a
)

879 
≠≥nd_°rög
("(");

880 i‡(!
	ga
->
em±y
()) {

881 (*
	ga
)[0]->
≥rf‹m
(
this
);

882 
size_t
 
	gi
 = 1, 
	gL
 = 
a
->
Àngth
(); i < L; ++i) {

883 
≠≥nd_°rög
(", ");

885 (*
	ga
)[
i
]->
≥rf‹m
(
this
);

888 
≠≥nd_°rög
(")");

891 
	gIn•e˘
::
›î©‹
()(
Sñe˘‹_Schema
* 
s
)

893 
s
->
c⁄ã¡s
()->
≥rf‹m
(
this
);

896 
	gIn•e˘
::
›î©‹
()(
P¨ít_Sñe˘‹
* 
p
)

898 
≠≥nd_°rög
("&");

901 
	gIn•e˘
::
›î©‹
()(
Sñe˘‹_Pœ˚hﬁdî
* 
s
)

903 
≠≥nd_tokí
(
s
->
«me
(), s);

904 i‡(
	gs
->
has_löe_bªak
()Ë
≠≥nd_›ti⁄Æ_löe„ed
();

905 i‡(
	gs
->
has_löe_bªak
()Ë
≠≥nd_ödíèti⁄
();

909 
	gIn•e˘
::
›î©‹
()(
Ty≥_Sñe˘‹
* 
s
)

911 
≠≥nd_tokí
(
s
->
ns_«me
(), s);

914 
	gIn•e˘
::
›î©‹
()(
Sñe˘‹_QuÆifõr
* 
s
)

916 
≠≥nd_tokí
(
s
->
ns_«me
(), s);

917 i‡(
	gs
->
has_löe_bªak
()Ë
≠≥nd_›ti⁄Æ_löe„ed
();

918 i‡(
	gs
->
has_löe_bªak
()Ë
≠≥nd_ödíèti⁄
();

921 
	gIn•e˘
::
›î©‹
()(
Aâribuã_Sñe˘‹
* 
s
)

923 
≠≥nd_°rög
("[");

924 
add_›í_m≠pög
(
s
);

925 
≠≥nd_tokí
(
s
->
ns_«me
(), s);

926 i‡(!
	gs
->
m©chî
().
em±y
()) {

927 
≠≥nd_°rög
(
s
->
m©chî
());

928 i‡(
	gs
->
vÆue
()) {

929 
	gs
->
vÆue
()->
≥rf‹m
(
this
);

932 
add_˛o£_m≠pög
(
s
);

933 
≠≥nd_°rög
("]");

936 
	gIn•e˘
::
›î©‹
()(
P£udo_Sñe˘‹
* 
s
)

938 
≠≥nd_tokí
(
s
->
ns_«me
(), s);

939 i‡(
	gs
->
ex¥essi⁄
()) {

940 
≠≥nd_°rög
("(");

941 
	gs
->
ex¥essi⁄
()->
≥rf‹m
(
this
);

942 
≠≥nd_°rög
(")");

946 
	gIn•e˘
::
›î©‹
()(
Wøµed_Sñe˘‹
* 
s
)

948 
boﬁ
 
was
 = 
ö_wøµed
;

949 
	gö_wøµed
 = 
åue
;

950 
≠≥nd_tokí
(
s
->
«me
(), s);

951 
≠≥nd_°rög
("(");

952 
boﬁ
 
	gwas_comma_¨øy
 = 
ö_comma_¨øy
;

953 
	gö_comma_¨øy
 = 
Ál£
;

954 
	gs
->
£À˘‹
()->
≥rf‹m
(
this
);

955 
	gö_comma_¨øy
 = 
was_comma_¨øy
;

956 
≠≥nd_°rög
(")");

957 
	gö_wøµed
 = 
was
;

960 
	gIn•e˘
::
›î©‹
()(
Compound_Sñe˘‹
* 
s
)

962 
size_t
 
i
 = 0, 
	gL
 = 
s
->
Àngth
(); 
	gi
 < L; ++i) {

963 (*
	gs
)[
i
]->
≥rf‹m
(
this
);

965 i‡(
	gs
->
has_löe_bªak
()) {

966 i‡(
ouçut_°yÀ
(Ë!
COMPACT
) {

967 
≠≥nd_›ti⁄Æ_löe„ed
();

972 
	gIn•e˘
::
›î©‹
()(
Com∂ex_Sñe˘‹
* 
c
)

974 
Compound_Sñe˘‹
* 
hód
 = 
c
->head();

975 
Com∂ex_Sñe˘‹
* 
	gèû
 = 
c
->
èû
();

976 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
comb
 = 
c
->
combö©‹
();

978 i‡(
	gcomb
 =
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
 && (!
hód
 || hód->
em±y
())) {

979 i‡(
èû
Ëèû->
≥rf‹m
(
this
);

983 i‡(
	gc
->
has_löe_„ed
()) {

984 i‡(!(
	gc
->
has_∑ª¡_ªf
())) {

985 
≠≥nd_›ti⁄Æ_löe„ed
();

986 
≠≥nd_ödíèti⁄
();

990 i‡(
	ghód
 && hód->
Àngth
(Ë!0Ë
hód
->
≥rf‹m
(
this
);

991 
boﬁ
 
	gis_em±y
 = !
hód
 || hód->
Àngth
(Ë=0 || hód->
is_em±y_ª„ªn˚
();

992 
boﬁ
 
	gis_èû
 = 
hód
 && !hód->
is_em±y_ª„ªn˚
(Ë&& 
èû
;

993 i‡(
ouçut_°yÀ
(Ë=
COMPRESSED
 && 
comb
 !
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
Ë
scheduÀd_•a˚
 = 0;

995 
	gcomb
) {

996 
	gCom∂ex_Sñe˘‹
::
ANCESTOR_OF
:

997 i‡(
is_èû
Ë
≠≥nd_m™d©‹y_•a˚
();

999 
	gCom∂ex_Sñe˘‹
::
PARENT_OF
:

1000 
≠≥nd_›ti⁄Æ_•a˚
();

1001 
≠≥nd_°rög
(">");

1002 
≠≥nd_›ti⁄Æ_•a˚
();

1004 
	gCom∂ex_Sñe˘‹
::
ADJACENT_TO
:

1005 
≠≥nd_›ti⁄Æ_•a˚
();

1006 
≠≥nd_°rög
("+");

1007 
≠≥nd_›ti⁄Æ_•a˚
();

1009 
	gCom∂ex_Sñe˘‹
::
REFERENCE
:

1010 
≠≥nd_m™d©‹y_•a˚
();

1011 
≠≥nd_°rög
("/");

1012 
	gc
->
ª„ªn˚
()->
≥rf‹m
(
this
);

1013 
≠≥nd_°rög
("/");

1014 
≠≥nd_m™d©‹y_•a˚
();

1016 
	gCom∂ex_Sñe˘‹
::
PRECEDES
:

1017 i‡(
is_em±y
Ë
≠≥nd_›ti⁄Æ_•a˚
();

1018 
≠≥nd_m™d©‹y_•a˚
();

1019 
≠≥nd_°rög
("~");

1020 i‡(
	gèû
Ë
≠≥nd_m™d©‹y_•a˚
();

1021 
≠≥nd_›ti⁄Æ_•a˚
();

1024 i‡(
	gèû
 && 
	gcomb
 !
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
) {

1025 i‡(
c
->
has_löe_bªak
()Ë
≠≥nd_›ti⁄Æ_löe„ed
();

1027 i‡(
	gèû
Ëèû->
≥rf‹m
(
this
);

1028 i‡(!
	gèû
 && 
	gc
->
has_löe_bªak
()) {

1029 i‡(
ouçut_°yÀ
(Ë=
COMPACT
) {

1030 
≠≥nd_m™d©‹y_•a˚
();

1035 
	gIn•e˘
::
›î©‹
()(
Sñe˘‹_Li°
* 
g
)

1038 i‡(
g
->
em±y
()) {

1039 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
) {

1040 
≠≥nd_tokí
("()", 
g
);

1046 
boﬁ
 
	gwas_comma_¨øy
 = 
ö_comma_¨øy
;

1048 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 && 
g
->
Àngth
() == 1 &&

1049 (!
dy«mic_ˇ°
<
Li°
*>((*
g
)[0]) &&

1050 !
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>((*
g
)[0]))) {

1051 
≠≥nd_°rög
("(");

1053 i‡(!
	gö_de˛¨©i⁄
 && 
	gö_comma_¨øy
) {

1054 
≠≥nd_°rög
("(");

1057 i‡(
	gö_de˛¨©i⁄
Ë
	gö_comma_¨øy
 = 
åue
;

1059 
size_t
 
	gi
 = 0, 
	gL
 = 
g
->
Àngth
(); i < L; ++i) {

1060 i‡(!
	gö_wøµed
 && 
	gi
 =0Ë
≠≥nd_ödíèti⁄
();

1061 i‡((*
	gg
)[
i
] == 0) ;

1062 
scheduÀ_m≠pög
((*
g
)[
i
]->
œ°
());

1064 (*
	gg
)[
i
]->
≥rf‹m
(
this
);

1066 i‡(
	gi
 < 
	gL
 - 1) {

1067 
	gscheduÀd_•a˚
 = 0;

1068 
≠≥nd_comma_£∑øt‹
();

1072 
	gö_comma_¨øy
 = 
was_comma_¨øy
;

1074 i‡(
ouçut_°yÀ
(Ë=
TO_SASS
 && 
g
->
Àngth
() == 1 &&

1075 (!
dy«mic_ˇ°
<
Li°
*>((*
g
)[0]) &&

1076 !
dy«mic_ˇ°
<
Sñe˘‹_Li°
*>((*
g
)[0]))) {

1077 
≠≥nd_°rög
(",)");

1079 i‡(!
	gö_de˛¨©i⁄
 && 
	gö_comma_¨øy
) {

1080 
≠≥nd_°rög
(")");

1085 
	gIn•e˘
::
ÁŒback_im∂
(
AST_Node
* 
n
)

	@node_modules/node-sass/src/libsass/src/inspect.hpp

1 #i‚de‡
SASS_INSPECT_H


2 
	#SASS_INSPECT_H


	)

4 
	~"posôi⁄.hµ
"

5 
	~"›î©i⁄.hµ
"

6 
	~"emôãr.hµ
"

8 
«me•a˚
 
	gSass
 {

9 
˛ass
 
	gC⁄ãxt
;

11 
˛ass
 
	gIn•e˘
 : 
public
 
O≥øti⁄_CRTP
<, In•e˘>,Öubli¯
	gEmôãr
 {

12 
	g¥Ÿe˘ed
:

14 
usög
 
O≥øti⁄_CRTP
<, 
	gIn•e˘
>::
›î©‹
();

16 
ÁŒback_im∂
(
AST_Node
* 
n
);

18 
	gpublic
:

20 
In•e˘
(
Emôãr
 
emi
);

21 
	gvútuÆ
 ~
In•e˘
();

24 
vútuÆ
 
›î©‹
()(
	gBlock
*);

25 
vútuÆ
 
›î©‹
()(
	gRuÀ£t
*);

26 
vútuÆ
 
›î©‹
()(
	gPr›£t
*);

27 
vútuÆ
 
›î©‹
()(
	gBubbÀ
*);

28 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_Block
*);

29 
vútuÆ
 
›î©‹
()(
	gMedü_Block
*);

30 
vútuÆ
 
›î©‹
()(
	gAt_RoŸ_Block
*);

31 
vútuÆ
 
›î©‹
()(
	gDúe˘ive
*);

32 
vútuÆ
 
›î©‹
()(
	gKey‰ame_RuÀ
*);

33 
vútuÆ
 
›î©‹
()(
	gDe˛¨©i⁄
*);

34 
vútuÆ
 
›î©‹
()(
	gAssignmít
*);

35 
vútuÆ
 
›î©‹
()(
	gImp‹t
*);

36 
vútuÆ
 
›î©‹
()(
	gImp‹t_Stub
*);

37 
vútuÆ
 
›î©‹
()(
	gW¨nög
*);

38 
vútuÆ
 
›î©‹
()(
	gEº‹
*);

39 
vútuÆ
 
›î©‹
()(
	gDebug
*);

40 
vútuÆ
 
›î©‹
()(
	gCommít
*);

41 
vútuÆ
 
›î©‹
()(
	gIf
*);

42 
vútuÆ
 
›î©‹
()(
	gF‹
*);

43 
vútuÆ
 
›î©‹
()(
	gEach
*);

44 
vútuÆ
 
›î©‹
()(
	gWhûe
*);

45 
vútuÆ
 
›î©‹
()(
	gRëu∫
*);

46 
vútuÆ
 
›î©‹
()(
	gExãnsi⁄
*);

47 
vútuÆ
 
›î©‹
()(
	gDeföôi⁄
*);

48 
vútuÆ
 
›î©‹
()(
	gMixö_CÆl
*);

49 
vútuÆ
 
›î©‹
()(
	gC⁄ã¡
*);

51 
vútuÆ
 
›î©‹
()(
	gM≠
*);

52 
vútuÆ
 
›î©‹
()(
	gLi°
*);

53 
vútuÆ
 
›î©‹
()(
	gBö¨y_Ex¥essi⁄
*);

54 
vútuÆ
 
›î©‹
()(
	gU«ry_Ex¥essi⁄
*);

55 
vútuÆ
 
›î©‹
()(
	gFun˘i⁄_CÆl
*);

56 
vútuÆ
 
›î©‹
()(
	gFun˘i⁄_CÆl_Schema
*);

59 
vútuÆ
 
›î©‹
()(
	gV¨übÀ
*);

60 
vútuÆ
 
›î©‹
()(
	gTextuÆ
*);

61 
vútuÆ
 
›î©‹
()(
	gNumbî
*);

62 
vútuÆ
 
›î©‹
()(
	gCﬁ‹
*);

63 
vútuÆ
 
›î©‹
()(
	gBoﬁón
*);

64 
vútuÆ
 
›î©‹
()(
	gSåög_Schema
*);

65 
vútuÆ
 
›î©‹
()(
	gSåög_C⁄°™t
*);

66 
vútuÆ
 
›î©‹
()(
	gSåög_QuŸed
*);

67 
vútuÆ
 
›î©‹
()(
	gCu°om_Eº‹
*);

68 
vútuÆ
 
›î©‹
()(
	gCu°om_W¨nög
*);

69 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_O≥øt‹
*);

70 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_Neg©i⁄
*);

71 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_De˛¨©i⁄
*);

72 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_I¡îpﬁ©i⁄
*);

73 
vútuÆ
 
›î©‹
()(
	gMedü_Quîy
*);

74 
vútuÆ
 
›î©‹
()(
	gMedü_Quîy_Ex¥essi⁄
*);

75 
vútuÆ
 
›î©‹
()(
	gAt_RoŸ_Quîy
*);

76 
vútuÆ
 
›î©‹
()(
	gNuŒ
*);

77 
vútuÆ
 
›î©‹
()(
P¨ít_Sñe˘‹
* 
	gp
);

79 
vútuÆ
 
›î©‹
()(
	gP¨amëî
*);

80 
vútuÆ
 
›î©‹
()(
	gP¨amëîs
*);

81 
vútuÆ
 
›î©‹
()(
	gArgumít
*);

82 
vútuÆ
 
›î©‹
()(
	gArgumíts
*);

84 
vútuÆ
 
›î©‹
()(
	gSñe˘‹_Schema
*);

85 
vútuÆ
 
›î©‹
()(
	gSñe˘‹_Pœ˚hﬁdî
*);

86 
vútuÆ
 
›î©‹
()(
	gTy≥_Sñe˘‹
*);

87 
vútuÆ
 
›î©‹
()(
	gSñe˘‹_QuÆifõr
*);

88 
vútuÆ
 
›î©‹
()(
	gAâribuã_Sñe˘‹
*);

89 
vútuÆ
 
›î©‹
()(
	gP£udo_Sñe˘‹
*);

90 
vútuÆ
 
›î©‹
()(
	gWøµed_Sñe˘‹
*);

91 
vútuÆ
 
›î©‹
()(
	gCompound_Sñe˘‹
*);

92 
vútuÆ
 
›î©‹
()(
	gCom∂ex_Sñe˘‹
*);

93 
vútuÆ
 
›î©‹
()(
	gSñe˘‹_Li°
*);

	@node_modules/node-sass/src/libsass/src/json.cpp

24 #ifde‡
_MSC_VER


25 
	#_CRT_SECURE_NO_WARNINGS


	)

26 
	#_CRT_NONSTDC_NO_DEPRECATE


	)

29 
	~"js⁄.hµ
"

33 
	~"utf8.h
"

35 
	~<as£π.h
>

36 
	~<°döt.h
>

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

41 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1900

42 
	~<°d¨g.h
>

43 #ifde‡
¢¥ötf


44 #unde‡
¢¥ötf


46 "C" 
¢¥ötf
(*, 
size_t
, const *, ...);

49 
	#out_of_mem‹y
() do { \

50 
	`Ârötf
(
°dîr
, "Out of memory.\n"); \

51 
	`exô
(
EXIT_FAILURE
); \

52 } 0)

	)

55 *
	$js⁄_°rdup
(c⁄° *
°r
)

57 *
ªt
 = (*Ë
	`mÆloc
(
	`°æí
(
°r
) + 1);

58 i‡(
ªt
 =
NULL
)

59 
	`out_of_mem‹y
();

60 
	`°r˝y
(
ªt
, 
°r
);

61  
ªt
;

62 
	}
}

68 *
	mcur
;

69 *
	míd
;

70 *
	m°¨t
;

71 } 
	tSB
;

73 
	$sb_öô
(
SB
 *
sb
)

75 
sb
->
°¨t
 = (*Ë
	`mÆloc
(17);

76 i‡(
sb
->
°¨t
 =
NULL
)

77 
	`out_of_mem‹y
();

78 
sb
->
cur
 = sb->
°¨t
;

79 
sb
->
íd
 = sb->
°¨t
 + 16;

80 
	}
}

83 
	#sb_√ed
(
sb
, 
√ed
) do { \

84 i‡((
sb
)->
íd
 - (sb)->
cur
 < (
√ed
)) \

85 
	`sb_grow
(
sb
, 
√ed
); \

86 } 0)

	)

88 
	$sb_grow
(
SB
 *
sb
, 
√ed
)

90 
size_t
 
Àngth
 = 
sb
->
cur
 - sb->
°¨t
;

91 
size_t
 
Æloc
 = 
sb
->
íd
 - sb->
°¨t
;

94 
Æloc
 *= 2;

95 } 
Æloc
 < 
Àngth
 + 
√ed
);

97 
sb
->
°¨t
 = (*Ë
	`ªÆloc
(sb->°¨t, 
Æloc
 + 1);

98 i‡(
sb
->
°¨t
 =
NULL
)

99 
	`out_of_mem‹y
();

100 
sb
->
cur
 = sb->
°¨t
 + 
Àngth
;

101 
sb
->
íd
 = sb->
°¨t
 + 
Æloc
;

102 
	}
}

104 
	$sb_put
(
SB
 *
sb
, c⁄° *
byãs
, 
cou¡
)

106 
	`sb_√ed
(
sb
, 
cou¡
);

107 
	`mem˝y
(
sb
->
cur
, 
byãs
, 
cou¡
);

108 
sb
->
cur
 +
cou¡
;

109 
	}
}

111 
	#sb_putc
(
sb
, 
c
) do { \

112 i‡((
sb
)->
cur
 >(sb)->
íd
) \

113 
	`sb_grow
(
sb
, 1); \

114 *(
sb
)->
cur
++ = (
c
); \

115 } 0)

	)

117 
	$sb_puts
(
SB
 *
sb
, c⁄° *
°r
)

119 
	`sb_put
(
sb
, 
°r
, ()
	`°æí
(str));

120 
	}
}

122 *
	$sb_föish
(
SB
 *
sb
)

124 *
sb
->
cur
 = 0;

125 
	`as£π
(
sb
->
°¨t
 <sb->
cur
 && 
	`°æí
(sb->°¨tË=(
size_t
)(sb->cur - sb->start));

126  
sb
->
°¨t
;

127 
	}
}

129 
	$sb_‰ì
(
SB
 *
sb
)

131 
	`‰ì
(
sb
->
°¨t
);

132 
	}
}

165 
	$utf8_vÆid©e_cz
(c⁄° *
s
)

167 
c
 = *
s
++;

169 i‡(
c
 <= 0x7F) {

171 } i‡(
c
 <= 0xC1) {

174 } i‡(
c
 <= 0xDF) {

176 i‡((()*
s
++ & 0xC0) != 0x80)

180 } i‡(
c
 <= 0xEF) {

182 i‡(
c
 =0xE0 && ()*
s
 < 0xA0)

186 i‡(
c
 =0xED && ()*
s
 > 0x9F)

190 i‡((()*
s
++ & 0xC0) != 0x80)

192 i‡((()*
s
++ & 0xC0) != 0x80)

196 } i‡(
c
 <= 0xF4) {

198 i‡(
c
 =0xF0 && ()*
s
 < 0x90)

202 i‡(
c
 =0xF4 && ()*
s
 > 0x8F)

206 i‡((()*
s
++ & 0xC0) != 0x80)

208 i‡((()*
s
++ & 0xC0) != 0x80)

210 i‡((()*
s
++ & 0xC0) != 0x80)

217 
	}
}

220 
boﬁ
 
	$utf8_vÆid©e
(c⁄° *
s
)

222 
Àn
;

224 ; *
s
 !0; s +
Àn
) {

225 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

226 i‡(
Àn
 == 0)

227  
Ál£
;

230  
åue
;

231 
	}
}

240 
	$utf8_ªad_ch¨
(c⁄° *
s
, 
uöt32_t
 *
out
)

242 c⁄° *
c
 = (c⁄° *Ë
s
;

244 
	`as£π
(
	`utf8_vÆid©e_cz
(
s
));

246 i‡(
c
[0] <= 0x7F) {

248 *
out
 = 
c
[0];

250 } i‡(
c
[0] <= 0xDF) {

252 *
out
 = ((
uöt32_t
)
c
[0] & 0x1F) << 6 |

253 ((
uöt32_t
)
c
[1] & 0x3F);

255 } i‡(
c
[0] <= 0xEF) {

257 *
out
 = ((
uöt32_t
)
c
[0] & 0xF) << 12 |

258 ((
uöt32_t
)
c
[1] & 0x3F) << 6 |

259 ((
uöt32_t
)
c
[2] & 0x3F);

263 *
out
 = ((
uöt32_t
)
c
[0] & 0x7) << 18 |

264 ((
uöt32_t
)
c
[1] & 0x3F) << 12 |

265 ((
uöt32_t
)
c
[2] & 0x3F) << 6 |

266 ((
uöt32_t
)
c
[3] & 0x3F);

269 
	}
}

279 
	$utf8_wrôe_ch¨
(
uöt32_t
 
unicode
, *
out
)

281 *
o
 = (*Ë
out
;

283 
	`as£π
(
unicode
 <= 0x10FFFF && !(unicode >= 0xD800 && unicode <= 0xDFFF));

285 i‡(
unicode
 <= 0x7F) {

287 *
o
++ = 
unicode
;

289 } i‡(
unicode
 <= 0x7FF) {

291 *
o
++ = 0xC0 | 
unicode
 >> 6;

292 *
o
++ = 0x80 | (
unicode
 & 0x3F);

294 } i‡(
unicode
 <= 0xFFFF) {

296 *
o
++ = 0xE0 | 
unicode
 >> 12;

297 *
o
++ = 0x80 | (
unicode
 >> 6 & 0x3F);

298 *
o
++ = 0x80 | (
unicode
 & 0x3F);

302 *
o
++ = 0xF0 | 
unicode
 >> 18;

303 *
o
++ = 0x80 | (
unicode
 >> 12 & 0x3F);

304 *
o
++ = 0x80 | (
unicode
 >> 6 & 0x3F);

305 *
o
++ = 0x80 | (
unicode
 & 0x3F);

308 
	}
}

316 
boﬁ
 
	$‰om_suºog©e_∑ú
(
uöt16_t
 
uc
, uöt16_à
lc
, 
uöt32_t
 *
unicode
)

318 i‡(
uc
 >0xD800 && u¯<0xDBFF && 
lc
 >= 0xDC00 &&Üc <= 0xDFFF) {

319 *
unicode
 = 0x10000 + ((((
uöt32_t
)
uc
 & 0x3FFË<< 10Ë| (
lc
 & 0x3FF));

320  
åue
;

322  
Ál£
;

324 
	}
}

331 
	$to_suºog©e_∑ú
(
uöt32_t
 
unicode
, 
uöt16_t
 *
uc
, uöt16_à*
lc
)

333 
uöt32_t
 
n
;

335 
	`as£π
(
unicode
 >= 0x10000 && unicode <= 0x10FFFF);

337 
n
 = 
unicode
 - 0x10000;

338 *
uc
 = ((
n
 >> 10) & 0x3FF) | 0xD800;

339 *
lc
 = (
n
 & 0x3FF) | 0xDC00;

340 
	}
}

342 
boﬁ
 
is_•a˚
 (c⁄° *
c
);

343 
boﬁ
 
is_digô
 (c⁄° *
c
);

344 
boﬁ
 
∑r£_vÆue
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

345 
boﬁ
 
∑r£_°rög
 (c⁄° **
•
, **
out
);

346 
boﬁ
 
∑r£_numbî
 (c⁄° **
•
, *
out
);

347 
boﬁ
 
∑r£_¨øy
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

348 
boﬁ
 
∑r£_obje˘
 (c⁄° **
•
, 
Js⁄Node
 **
out
);

349 
boﬁ
 
∑r£_hex16
 (c⁄° **
•
, 
uöt16_t
 *
out
);

351 
boﬁ
 
ex≥˘_lôîÆ
 (c⁄° **
•
, c⁄° *
°r
);

352 
skù_•a˚
 (c⁄° **
•
);

354 
emô_vÆue
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
);

355 
emô_vÆue_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
ödít_Àvñ
);

356 
emô_°rög
 (
SB
 *
out
, c⁄° *
°r
);

357 
emô_numbî
 (
SB
 *
out
, 
num
);

358 
emô_¨øy
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
);

359 
emô_¨øy_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
, c⁄° *
•a˚
, 
ödít_Àvñ
);

360 
emô_obje˘
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
);

361 
emô_obje˘_ödíãd
 (
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
, c⁄° *
•a˚
, 
ödít_Àvñ
);

363 
wrôe_hex16
(*
out
, 
uöt16_t
 
vÆ
);

365 
Js⁄Node
 *
mknode
(
Js⁄Tag
 
èg
);

366 
≠≥nd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
);

367 
¥ïíd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
);

368 
≠≥nd_membî
(
Js⁄Node
 *
obje˘
, *
key
, Js⁄Nodê*
vÆue
);

371 
boﬁ
 
èg_is_vÆid
(
èg
);

372 
boﬁ
 
numbî_is_vÆid
(c⁄° *
num
);

374 
Js⁄Node
 *
	$js⁄_decode
(c⁄° *
js⁄
)

376 c⁄° *
s
 = 
js⁄
;

377 
Js⁄Node
 *
ªt
;

379 
	`skù_•a˚
(&
s
);

380 i‡(!
	`∑r£_vÆue
(&
s
, &
ªt
))

381  
NULL
;

383 
	`skù_•a˚
(&
s
);

384 i‡(*
s
 != 0) {

385 
	`js⁄_dñëe
(
ªt
);

386  
NULL
;

389  
ªt
;

390 
	}
}

392 *
	$js⁄_ícode
(c⁄° 
Js⁄Node
 *
node
)

394  
	`js⁄_°rögify
(
node
, 
NULL
);

395 
	}
}

397 *
	$js⁄_ícode_°rög
(c⁄° *
°r
)

399 
SB
 
sb
;

400 
	`sb_öô
(&
sb
);

402 
	`emô_°rög
(&
sb
, 
°r
);

404  
	`sb_föish
(&
sb
);

405 
	}
}

407 *
	$js⁄_°rögify
(c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
)

409 
SB
 
sb
;

410 
	`sb_öô
(&
sb
);

412 i‡(
•a˚
 !
NULL
)

413 
	`emô_vÆue_ödíãd
(&
sb
, 
node
, 
•a˚
, 0);

415 
	`emô_vÆue
(&
sb
, 
node
);

417  
	`sb_föish
(&
sb
);

418 
	}
}

420 
	$js⁄_dñëe
(
Js⁄Node
 *
node
)

422 i‡(
node
 !
NULL
) {

423 
	`js⁄_ªmove_‰om_∑ª¡
(
node
);

425 
node
->
èg
) {

426 
JSON_STRING
:

427 
	`‰ì
(
node
->
°rög_
);

429 
JSON_ARRAY
:

430 
JSON_OBJECT
:

432 
Js⁄Node
 *
chûd
, *
√xt
;

433 
chûd
 = 
node
->
chûdªn
.
hód
; chûd !
NULL
; chûd = 
√xt
) {

434 
√xt
 = 
chûd
->next;

435 
	`js⁄_dñëe
(
chûd
);

442 
	`‰ì
(
node
);

444 
	}
}

446 
boﬁ
 
	$js⁄_vÆid©e
(c⁄° *
js⁄
)

448 c⁄° *
s
 = 
js⁄
;

450 
	`skù_•a˚
(&
s
);

451 i‡(!
	`∑r£_vÆue
(&
s
, 
NULL
))

452  
Ál£
;

454 
	`skù_•a˚
(&
s
);

455 i‡(*
s
 != 0)

456  
Ál£
;

458  
åue
;

459 
	}
}

461 
Js⁄Node
 *
	$js⁄_föd_ñemít
(
Js⁄Node
 *
¨øy
, 
ödex
)

463 
Js⁄Node
 *
ñemít
;

464 
i
 = 0;

466 i‡(
¨øy
 =
NULL
 ||áºay->
èg
 !
JSON_ARRAY
)

467  
NULL
;

469 
	`js⁄_f‹óch
(
ñemít
, 
¨øy
) {

470 i‡(
i
 =
ödex
)

471  
ñemít
;

472 
i
++;

475  
NULL
;

476 
	}
}

478 
Js⁄Node
 *
	$js⁄_föd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
«me
)

480 
Js⁄Node
 *
membî
;

482 i‡(
obje˘
 =
NULL
 || obje˘->
èg
 !
JSON_OBJECT
)

483  
NULL
;

485 
	`js⁄_f‹óch
(
membî
, 
obje˘
)

486 i‡(
	`°rcmp
(
membî
->
key
, 
«me
) == 0)

487  
membî
;

489  
NULL
;

490 
	}
}

492 
Js⁄Node
 *
	$js⁄_fú°_chûd
(c⁄° 
Js⁄Node
 *
node
)

494 i‡(
node
 !
NULL
 && (node->
èg
 =
JSON_ARRAY
 ||Çode->èg =
JSON_OBJECT
))

495  
node
->
chûdªn
.
hód
;

496  
NULL
;

497 
	}
}

499 
Js⁄Node
 *
	$mknode
(
Js⁄Tag
 
èg
)

501 
Js⁄Node
 *
ªt
 = (Js⁄Node*Ë
	`ˇŒoc
(1, (JsonNode));

502 i‡(
ªt
 =
NULL
)

503 
	`out_of_mem‹y
();

504 
ªt
->
èg
 =Åag;

505  
ªt
;

506 
	}
}

508 
Js⁄Node
 *
	$js⁄_mknuŒ
()

510  
	`mknode
(
JSON_NULL
);

511 
	}
}

513 
Js⁄Node
 *
	$js⁄_mkboﬁ
(
boﬁ
 
b
)

515 
Js⁄Node
 *
ªt
 = 
	`mknode
(
JSON_BOOL
);

516 
ªt
->
boﬁ_
 = 
b
;

517  
ªt
;

518 
	}
}

520 
Js⁄Node
 *
	$mk°rög
(*
s
)

522 
Js⁄Node
 *
ªt
 = 
	`mknode
(
JSON_STRING
);

523 
ªt
->
°rög_
 = 
s
;

524  
ªt
;

525 
	}
}

527 
Js⁄Node
 *
	$js⁄_mk°rög
(c⁄° *
s
)

529  
	`mk°rög
(
	`js⁄_°rdup
(
s
));

530 
	}
}

532 
Js⁄Node
 *
	$js⁄_mknumbî
(
n
)

534 
Js⁄Node
 *
node
 = 
	`mknode
(
JSON_NUMBER
);

535 
node
->
numbî_
 = 
n
;

536  
node
;

537 
	}
}

539 
Js⁄Node
 *
	$js⁄_mk¨øy
()

541  
	`mknode
(
JSON_ARRAY
);

542 
	}
}

544 
Js⁄Node
 *
	$js⁄_mkobje˘
()

546  
	`mknode
(
JSON_OBJECT
);

547 
	}
}

549 
	$≠≥nd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
)

551 i‡(
chûd
 !
NULL
 && 
∑ª¡
 != NULL) {

552 
chûd
->
∑ª¡
 =Öarent;

553 
chûd
->
¥ev
 = 
∑ª¡
->
chûdªn
.
èû
;

554 
chûd
->
√xt
 = 
NULL
;

556 i‡(
∑ª¡
->
chûdªn
.
èû
 !
NULL
)

557 
∑ª¡
->
chûdªn
.
èû
->
√xt
 = 
chûd
;

559 
∑ª¡
->
chûdªn
.
hód
 = 
chûd
;

560 
∑ª¡
->
chûdªn
.
èû
 = 
chûd
;

562 
	}
}

564 
	$¥ïíd_node
(
Js⁄Node
 *
∑ª¡
, Js⁄Nodê*
chûd
)

566 i‡(
chûd
 !
NULL
 && 
∑ª¡
 != NULL) {

567 
chûd
->
∑ª¡
 =Öarent;

568 
chûd
->
¥ev
 = 
NULL
;

569 
chûd
->
√xt
 = 
∑ª¡
->
chûdªn
.
hód
;

571 i‡(
∑ª¡
->
chûdªn
.
hód
 !
NULL
)

572 
∑ª¡
->
chûdªn
.
hód
->
¥ev
 = 
chûd
;

574 
∑ª¡
->
chûdªn
.
èû
 = 
chûd
;

575 
∑ª¡
->
chûdªn
.
hód
 = 
chûd
;

577 
	}
}

579 
	$≠≥nd_membî
(
Js⁄Node
 *
obje˘
, *
key
, Js⁄Nodê*
vÆue
)

581 i‡(
vÆue
 !
NULL
 && 
obje˘
 != NULL) {

582 
vÆue
->
key
 = key;

583 
	`≠≥nd_node
(
obje˘
, 
vÆue
);

585 
	}
}

587 
	$js⁄_≠≥nd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
)

589 i‡(
¨øy
 !
NULL
 && 
ñemít
 !=NULL) {

590 
	`as£π
(
¨øy
->
èg
 =
JSON_ARRAY
);

591 
	`as£π
(
ñemít
->
∑ª¡
 =
NULL
);

593 
	`≠≥nd_node
(
¨øy
, 
ñemít
);

595 
	}
}

597 
	$js⁄_¥ïíd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
)

599 
	`as£π
(
¨øy
->
èg
 =
JSON_ARRAY
);

600 
	`as£π
(
ñemít
->
∑ª¡
 =
NULL
);

602 
	`¥ïíd_node
(
¨øy
, 
ñemít
);

603 
	}
}

605 
	$js⁄_≠≥nd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
)

607 i‡(
obje˘
 !
NULL
 && 
key
 !NULL && 
vÆue
 != NULL) {

608 
	`as£π
(
obje˘
->
èg
 =
JSON_OBJECT
);

609 
	`as£π
(
vÆue
->
∑ª¡
 =
NULL
);

611 
	`≠≥nd_membî
(
obje˘
, 
	`js⁄_°rdup
(
key
), 
vÆue
);

613 
	}
}

615 
	$js⁄_¥ïíd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
)

617 i‡(
obje˘
 !
NULL
 && 
key
 !NULL && 
vÆue
 != NULL) {

618 
	`as£π
(
obje˘
->
èg
 =
JSON_OBJECT
);

619 
	`as£π
(
vÆue
->
∑ª¡
 =
NULL
);

621 
vÆue
->
key
 = 
	`js⁄_°rdup
(key);

622 
	`¥ïíd_node
(
obje˘
, 
vÆue
);

624 
	}
}

626 
	$js⁄_ªmove_‰om_∑ª¡
(
Js⁄Node
 *
node
)

628 i‡(
node
 !
NULL
) {

629 
Js⁄Node
 *
∑ª¡
 = 
node
->parent;

631 i‡(
∑ª¡
 !
NULL
) {

632 i‡(
node
->
¥ev
 !
NULL
)

633 
node
->
¥ev
->
√xt
 =Çode->next;

635 
∑ª¡
->
chûdªn
.
hód
 = 
node
->
√xt
;

637 i‡(
node
->
√xt
 !
NULL
)

638 
node
->
√xt
->
¥ev
 =Çode->prev;

640 
∑ª¡
->
chûdªn
.
èû
 = 
node
->
¥ev
;

642 
	`‰ì
(
node
->
key
);

644 
node
->
∑ª¡
 = 
NULL
;

645 
node
->
¥ev
 =Çode->
√xt
 = 
NULL
;

646 
node
->
key
 = 
NULL
;

649 
	}
}

651 
boﬁ
 
	$∑r£_vÆue
(c⁄° **
•
, 
Js⁄Node
 **
out
)

653 c⁄° *
s
 = *
•
;

655 *
s
) {

657 i‡(
	`ex≥˘_lôîÆ
(&
s
, "null")) {

658 i‡(
out
)

659 *
out
 = 
	`js⁄_mknuŒ
();

660 *
•
 = 
s
;

661  
åue
;

663  
Ál£
;

666 i‡(
	`ex≥˘_lôîÆ
(&
s
, "false")) {

667 i‡(
out
)

668 *
out
 = 
	`js⁄_mkboﬁ
(
Ál£
);

669 *
•
 = 
s
;

670  
åue
;

672  
Ál£
;

675 i‡(
	`ex≥˘_lôîÆ
(&
s
, "true")) {

676 i‡(
out
)

677 *
out
 = 
	`js⁄_mkboﬁ
(
åue
);

678 *
•
 = 
s
;

679  
åue
;

681  
Ál£
;

684 *
°r
 = 
NULL
;

685 i‡(
	`∑r£_°rög
(&
s
, 
out
 ? &
°r
 : 
NULL
)) {

686 i‡(
out
)

687 *
out
 = 
	`mk°rög
(
°r
);

688 *
•
 = 
s
;

689  
åue
;

691  
Ál£
;

695 i‡(
	`∑r£_¨øy
(&
s
, 
out
)) {

696 *
•
 = 
s
;

697  
åue
;

699  
Ál£
;

702 i‡(
	`∑r£_obje˘
(&
s
, 
out
)) {

703 *
•
 = 
s
;

704  
åue
;

706  
Ál£
;

709 
num
;

710 i‡(
	`∑r£_numbî
(&
s
, 
out
 ? &
num
 : 
NULL
)) {

711 i‡(
out
)

712 *
out
 = 
	`js⁄_mknumbî
(
num
);

713 *
•
 = 
s
;

714  
åue
;

716  
Ál£
;

719 
	}
}

721 
boﬁ
 
	$∑r£_¨øy
(c⁄° **
•
, 
Js⁄Node
 **
out
)

723 c⁄° *
s
 = *
•
;

724 
Js⁄Node
 *
ªt
 = 
out
 ? 
	`js⁄_mk¨øy
(Ë: 
NULL
;

725 
Js⁄Node
 *
ñemít
 = 
NULL
;

727 i‡(*
s
++ != '[')

728 
Áûuª
;

729 
	`skù_•a˚
(&
s
);

731 i‡(*
s
 == ']') {

732 
s
++;

733 
suc˚ss
;

737 i‡(!
	`∑r£_vÆue
(&
s
, 
out
 ? &
ñemít
 : 
NULL
))

738 
Áûuª
;

739 
	`skù_•a˚
(&
s
);

741 i‡(
out
)

742 
	`js⁄_≠≥nd_ñemít
(
ªt
, 
ñemít
);

744 i‡(*
s
 == ']') {

745 
s
++;

746 
suc˚ss
;

749 i‡(*
s
++ != ',')

750 
Áûuª
;

751 
	`skù_•a˚
(&
s
);

754 
suc˚ss
:

755 *
•
 = 
s
;

756 i‡(
out
)

757 *
out
 = 
ªt
;

758  
åue
;

760 
Áûuª
:

761 
	`js⁄_dñëe
(
ªt
);

762  
Ál£
;

763 
	}
}

765 
boﬁ
 
	$∑r£_obje˘
(c⁄° **
•
, 
Js⁄Node
 **
out
)

767 c⁄° *
s
 = *
•
;

768 
Js⁄Node
 *
ªt
 = 
out
 ? 
	`js⁄_mkobje˘
(Ë: 
NULL
;

769 *
key
 = 
NULL
;

770 
Js⁄Node
 *
vÆue
 = 
NULL
;

772 i‡(*
s
++ != '{')

773 
Áûuª
;

774 
	`skù_•a˚
(&
s
);

776 i‡(*
s
 == '}') {

777 
s
++;

778 
suc˚ss
;

782 i‡(!
	`∑r£_°rög
(&
s
, 
out
 ? &
key
 : 
NULL
))

783 
Áûuª
;

784 
	`skù_•a˚
(&
s
);

786 i‡(*
s
++ != ':')

787 
Áûuª_‰ì_key
;

788 
	`skù_•a˚
(&
s
);

790 i‡(!
	`∑r£_vÆue
(&
s
, 
out
 ? &
vÆue
 : 
NULL
))

791 
Áûuª_‰ì_key
;

792 
	`skù_•a˚
(&
s
);

794 i‡(
out
)

795 
	`≠≥nd_membî
(
ªt
, 
key
, 
vÆue
);

797 i‡(*
s
 == '}') {

798 
s
++;

799 
suc˚ss
;

802 i‡(*
s
++ != ',')

803 
Áûuª
;

804 
	`skù_•a˚
(&
s
);

807 
suc˚ss
:

808 *
•
 = 
s
;

809 i‡(
out
)

810 *
out
 = 
ªt
;

811  
åue
;

813 
Áûuª_‰ì_key
:

814 i‡(
out
)

815 
	`‰ì
(
key
);

816 
Áûuª
:

817 
	`js⁄_dñëe
(
ªt
);

818  
Ál£
;

819 
	}
}

821 
boﬁ
 
	$∑r£_°rög
(c⁄° **
•
, **
out
)

823 c⁄° *
s
 = *
•
;

824 
SB
 
sb
 = { 0, 0, 0 };

825 
throwaway_buf„r
[4];

827 *
b
;

829 i‡(*
s
++ != '"')

830  
Ál£
;

832 i‡(
out
) {

833 
	`sb_öô
(&
sb
);

834 
	`sb_√ed
(&
sb
, 4);

835 
b
 = 
sb
.
cur
;

837 
b
 = 
throwaway_buf„r
;

840 *
s
 != '"') {

841 
c
 = *
s
++;

844 i‡(
c
 == '\\') {

845 
c
 = *
s
++;

846 
c
) {

850 *
b
++ = 
c
;

853 *
b
++ = '\b';

856 *
b
++ = '\f';

859 *
b
++ = '\n';

862 *
b
++ = '\r';

865 *
b
++ = '\t';

869 
uöt16_t
 
uc
, 
lc
;

870 
uöt32_t
 
unicode
;

872 i‡(!
	`∑r£_hex16
(&
s
, &
uc
))

873 
Áûed
;

875 i‡(
uc
 >= 0xD800 && uc <= 0xDFFF) {

877 i‡(*
s
++ !'\\' || *s++ !'u' || !
	`∑r£_hex16
(&s, &
lc
))

878 
Áûed
;

879 i‡(!
	`‰om_suºog©e_∑ú
(
uc
, 
lc
, &
unicode
))

880 
Áûed
;

881 } i‡(
uc
 == 0) {

883 
Áûed
;

885 
unicode
 = 
uc
;

888 
b
 +
	`utf8_wrôe_ch¨
(
unicode
, b);

893 
Áûed
;

895 } i‡(
c
 <= 0x1F) {

897 
Áûed
;

900 
Àn
;

902 
s
--;

903 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

904 i‡(
Àn
 == 0)

905 
Áûed
;

907 
Àn
--)

908 *
b
++ = *
s
++;

915 i‡(
out
) {

916 
sb
.
cur
 = 
b
;

917 
	`sb_√ed
(&
sb
, 4);

918 
b
 = 
sb
.
cur
;

920 
b
 = 
throwaway_buf„r
;

923 
s
++;

925 i‡(
out
)

926 *
out
 = 
	`sb_föish
(&
sb
);

927 *
•
 = 
s
;

928  
åue
;

930 
Áûed
:

931 i‡(
out
)

932 
	`sb_‰ì
(&
sb
);

933  
Ál£
;

934 
	}
}

936 
boﬁ
 
	$is_•a˚
(c⁄° *
c
) {

937  ((*
c
) == '\t' || (*c) == '\n' || (*c) == '\r' || (*c) == ' ');

938 
	}
}

940 
boﬁ
 
	$is_digô
(c⁄° *
c
){

941  ((*
c
) >= '0' && (*c) <= '9');

942 
	}
}

954 
boﬁ
 
	$∑r£_numbî
(c⁄° **
•
, *
out
)

956 c⁄° *
s
 = *
•
;

959 i‡(*
s
 == '-')

960 
s
++;

963 i‡(*
s
 == '0') {

964 
s
++;

966 i‡(!
	`is_digô
(
s
))

967  
Ál£
;

969 
s
++;

970 } 
	`is_digô
(
s
));

974 i‡(*
s
 == '.') {

975 
s
++;

976 i‡(!
	`is_digô
(
s
))

977  
Ál£
;

979 
s
++;

980 } 
	`is_digô
(
s
));

984 i‡(*
s
 == 'E' || *s == 'e') {

985 
s
++;

986 i‡(*
s
 == '+' || *s == '-')

987 
s
++;

988 i‡(!
	`is_digô
(
s
))

989  
Ál£
;

991 
s
++;

992 } 
	`is_digô
(
s
));

995 i‡(
out
)

996 *
out
 = 
	`°πod
(*
•
, 
NULL
);

998 *
•
 = 
s
;

999  
åue
;

1000 
	}
}

1002 
	$skù_•a˚
(c⁄° **
•
)

1004 c⁄° *
s
 = *
•
;

1005 
	`is_•a˚
(
s
))

1006 
s
++;

1007 *
•
 = 
s
;

1008 
	}
}

1010 
	$emô_vÆue
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
)

1012 
	`as£π
(
	`èg_is_vÆid
(
node
->
èg
));

1013 
node
->
èg
) {

1014 
JSON_NULL
:

1015 
	`sb_puts
(
out
, "null");

1017 
JSON_BOOL
:

1018 
	`sb_puts
(
out
, 
node
->
boﬁ_
 ? "true" : "false");

1020 
JSON_STRING
:

1021 
	`emô_°rög
(
out
, 
node
->
°rög_
);

1023 
JSON_NUMBER
:

1024 
	`emô_numbî
(
out
, 
node
->
numbî_
);

1026 
JSON_ARRAY
:

1027 
	`emô_¨øy
(
out
, 
node
);

1029 
JSON_OBJECT
:

1030 
	`emô_obje˘
(
out
, 
node
);

1033 
	`as£π
(
Ál£
);

1035 
	}
}

1037 
	$emô_vÆue_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1039 
	`as£π
(
	`èg_is_vÆid
(
node
->
èg
));

1040 
node
->
èg
) {

1041 
JSON_NULL
:

1042 
	`sb_puts
(
out
, "null");

1044 
JSON_BOOL
:

1045 
	`sb_puts
(
out
, 
node
->
boﬁ_
 ? "true" : "false");

1047 
JSON_STRING
:

1048 
	`emô_°rög
(
out
, 
node
->
°rög_
);

1050 
JSON_NUMBER
:

1051 
	`emô_numbî
(
out
, 
node
->
numbî_
);

1053 
JSON_ARRAY
:

1054 
	`emô_¨øy_ödíãd
(
out
, 
node
, 
•a˚
, 
ödít_Àvñ
);

1056 
JSON_OBJECT
:

1057 
	`emô_obje˘_ödíãd
(
out
, 
node
, 
•a˚
, 
ödít_Àvñ
);

1060 
	`as£π
(
Ál£
);

1062 
	}
}

1064 
	$emô_¨øy
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
)

1066 c⁄° 
Js⁄Node
 *
ñemít
;

1068 
	`sb_putc
(
out
, '[');

1069 
	`js⁄_f‹óch
(
ñemít
, 
¨øy
) {

1070 
	`emô_vÆue
(
out
, 
ñemít
);

1071 i‡(
ñemít
->
√xt
 !
NULL
)

1072 
	`sb_putc
(
out
, ',');

1074 
	`sb_putc
(
out
, ']');

1075 
	}
}

1077 
	$emô_¨øy_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
¨øy
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1079 c⁄° 
Js⁄Node
 *
ñemít
 = 
¨øy
->
chûdªn
.
hód
;

1080 
i
;

1082 i‡(
ñemít
 =
NULL
) {

1083 
	`sb_puts
(
out
, "[]");

1087 
	`sb_puts
(
out
, "[\n");

1088 
ñemít
 !
NULL
) {

1089 
i
 = 0; i < 
ödít_Àvñ
 + 1; i++)

1090 
	`sb_puts
(
out
, 
•a˚
);

1091 
	`emô_vÆue_ödíãd
(
out
, 
ñemít
, 
•a˚
, 
ödít_Àvñ
 + 1);

1093 
ñemít
 =ÉÀmít->
√xt
;

1094 
	`sb_puts
(
out
, 
ñemít
 !
NULL
 ? ",\n" : "\n");

1096 
i
 = 0; i < 
ödít_Àvñ
; i++)

1097 
	`sb_puts
(
out
, 
•a˚
);

1098 
	`sb_putc
(
out
, ']');

1099 
	}
}

1101 
	$emô_obje˘
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
)

1103 c⁄° 
Js⁄Node
 *
membî
;

1105 
	`sb_putc
(
out
, '{');

1106 
	`js⁄_f‹óch
(
membî
, 
obje˘
) {

1107 
	`emô_°rög
(
out
, 
membî
->
key
);

1108 
	`sb_putc
(
out
, ':');

1109 
	`emô_vÆue
(
out
, 
membî
);

1110 i‡(
membî
->
√xt
 !
NULL
)

1111 
	`sb_putc
(
out
, ',');

1113 
	`sb_putc
(
out
, '}');

1114 
	}
}

1116 
	$emô_obje˘_ödíãd
(
SB
 *
out
, c⁄° 
Js⁄Node
 *
obje˘
, c⁄° *
•a˚
, 
ödít_Àvñ
)

1118 c⁄° 
Js⁄Node
 *
membî
 = 
obje˘
->
chûdªn
.
hód
;

1119 
i
;

1121 i‡(
membî
 =
NULL
) {

1122 
	`sb_puts
(
out
, "{}");

1126 
	`sb_puts
(
out
, "{\n");

1127 
membî
 !
NULL
) {

1128 
i
 = 0; i < 
ödít_Àvñ
 + 1; i++)

1129 
	`sb_puts
(
out
, 
•a˚
);

1130 
	`emô_°rög
(
out
, 
membî
->
key
);

1131 
	`sb_puts
(
out
, ": ");

1132 
	`emô_vÆue_ödíãd
(
out
, 
membî
, 
•a˚
, 
ödít_Àvñ
 + 1);

1134 
membî
 = membî->
√xt
;

1135 
	`sb_puts
(
out
, 
membî
 !
NULL
 ? ",\n" : "\n");

1137 
i
 = 0; i < 
ödít_Àvñ
; i++)

1138 
	`sb_puts
(
out
, 
•a˚
);

1139 
	`sb_putc
(
out
, '}');

1140 
	}
}

1142 
	$emô_°rög
(
SB
 *
out
, c⁄° *
°r
)

1144 
boﬁ
 
esˇ≥_unicode
 = 
Ál£
;

1145 c⁄° *
s
 = 
°r
;

1146 *
b
;

1149 #i‚de‡
NDEBUG


1150 i‡(!
	`utf8_vÆid©e
(
°r
)) {

1151 
throw
 
utf8
::
	`övÆid_utf8
(0);

1155 
	`as£π
(
	`utf8_vÆid©e
(
°r
));

1161 
	`sb_√ed
(
out
, 14);

1162 
b
 = 
out
->
cur
;

1164 *
b
++ = '"';

1165 *
s
 != 0) {

1166 
c
 = *
s
++;

1169 
c
) {

1171 *
b
++ = '\\';

1172 *
b
++ = '"';

1175 *
b
++ = '\\';

1176 *
b
++ = '\\';

1179 *
b
++ = '\\';

1180 *
b
++ = 'b';

1183 *
b
++ = '\\';

1184 *
b
++ = 'f';

1187 *
b
++ = '\\';

1188 *
b
++ = 'n';

1191 *
b
++ = '\\';

1192 *
b
++ = 'r';

1195 *
b
++ = '\\';

1196 *
b
++ = 't';

1199 
Àn
;

1201 
s
--;

1202 
Àn
 = 
	`utf8_vÆid©e_cz
(
s
);

1204 i‡(
Àn
 == 0) {

1213 
	`as£π
(
Ál£
);

1214 i‡(
esˇ≥_unicode
) {

1215 
	`°r˝y
(
b
, "\\uFFFD");

1216 
b
 += 6;

1218 *
b
++ = 0xEFu;

1219 *
b
++ = 0xBFu;

1220 *
b
++ = 0xBDu;

1222 
s
++;

1223 } i‡(
c
 < 0x1F || (¯>0x80 && 
esˇ≥_unicode
)) {

1225 
uöt32_t
 
unicode
;

1227 
s
 +
	`utf8_ªad_ch¨
(s, &
unicode
);

1229 i‡(
unicode
 <= 0xFFFF) {

1230 *
b
++ = '\\';

1231 *
b
++ = 'u';

1232 
b
 +
	`wrôe_hex16
(b, 
unicode
);

1235 
uöt16_t
 
uc
, 
lc
;

1236 
	`as£π
(
unicode
 <= 0x10FFFF);

1237 
	`to_suºog©e_∑ú
(
unicode
, &
uc
, &
lc
);

1238 *
b
++ = '\\';

1239 *
b
++ = 'u';

1240 
b
 +
	`wrôe_hex16
(b, 
uc
);

1241 *
b
++ = '\\';

1242 *
b
++ = 'u';

1243 
b
 +
	`wrôe_hex16
(b, 
lc
);

1247 
Àn
--)

1248 *
b
++ = *
s
++;

1259 
out
->
cur
 = 
b
;

1260 
	`sb_√ed
(
out
, 14);

1261 
b
 = 
out
->
cur
;

1263 *
b
++ = '"';

1265 
out
->
cur
 = 
b
;

1266 
	}
}

1268 
	$emô_numbî
(
SB
 *
out
, 
num
)

1276 
buf
[64];

1277 
	`•rötf
(
buf
, "%.16g", 
num
);

1279 i‡(
	`numbî_is_vÆid
(
buf
))

1280 
	`sb_puts
(
out
, 
buf
);

1282 
	`sb_puts
(
out
, "null");

1283 
	}
}

1285 
boﬁ
 
	$èg_is_vÆid
(
èg
)

1287  ( 
èg
 <
JSON_OBJECT
);

1288 
	}
}

1290 
boﬁ
 
	$numbî_is_vÆid
(c⁄° *
num
)

1292  (
	`∑r£_numbî
(&
num
, 
NULL
) && *num == '\0');

1293 
	}
}

1295 
boﬁ
 
	$ex≥˘_lôîÆ
(c⁄° **
•
, c⁄° *
°r
)

1297 c⁄° *
s
 = *
•
;

1299 *
°r
 != '\0')

1300 i‡(*
s
++ !*
°r
++)

1301  
Ál£
;

1303 *
•
 = 
s
;

1304  
åue
;

1305 
	}
}

1311 
boﬁ
 
	$∑r£_hex16
(c⁄° **
•
, 
uöt16_t
 *
out
)

1313 c⁄° *
s
 = *
•
;

1314 
uöt16_t
 
ªt
 = 0;

1315 
uöt16_t
 
i
;

1316 
uöt16_t
 
tmp
;

1317 
c
;

1319 
i
 = 0; i < 4; i++) {

1320 
c
 = *
s
++;

1321 i‡(
c
 >= '0' && c <= '9')

1322 
tmp
 = 
c
 - '0';

1323 i‡(
c
 >= 'A' && c <= 'F')

1324 
tmp
 = 
c
 - 'A' + 10;

1325 i‡(
c
 >= 'a' && c <= 'f')

1326 
tmp
 = 
c
 - 'a' + 10;

1328  
Ál£
;

1330 
ªt
 <<= 4;

1331 
ªt
 +
tmp
;

1334 i‡(
out
)

1335 *
out
 = 
ªt
;

1336 *
•
 = 
s
;

1337  
åue
;

1338 
	}
}

1344 
	$wrôe_hex16
(*
out
, 
uöt16_t
 
vÆ
)

1346 c⁄° *
hex
 = "0123456789ABCDEF";

1348 *
out
++ = 
hex
[(
vÆ
 >> 12) & 0xF];

1349 *
out
++ = 
hex
[(
vÆ
 >> 8) & 0xF];

1350 *
out
++ = 
hex
[(
vÆ
 >> 4) & 0xF];

1351 *
out
++ = 
hex
[ 
vÆ
 & 0xF];

1354 
	}
}

1356 
boﬁ
 
	$js⁄_check
(c⁄° 
Js⁄Node
 *
node
, 
îrmsg
[256])

1358 
	#¥obÀm
(...) do { \

1359 i‡(
îrmsg
 !
NULL
) \

1360 
	`¢¥ötf
(
îrmsg
, 256, 
__VA_ARGS__
); \

1361  
Ál£
; \

1362 } 0)

	)

1364 i‡(
node
->
key
 !
NULL
 && !
	`utf8_vÆid©e
(node->key))

1365 
	`¥obÀm
("key contains invalid UTF-8");

1367 i‡(!
	`èg_is_vÆid
(
node
->
èg
))

1368 
	`¥obÀm
("èg i†övÆid (%u)", 
node
->
èg
);

1370 i‡(
node
->
èg
 =
JSON_BOOL
) {

1371 i‡(
node
->
boﬁ_
 !
Ál£
 &&Çode->boﬁ_ !
åue
)

1372 
	`¥obÀm
("boﬁ_ i†√ôhî fÆ£ (%dËn‹Åruê(%d)", ()
Ál£
, ()
åue
);

1373 } i‡(
node
->
èg
 =
JSON_STRING
) {

1374 i‡(
node
->
°rög_
 =
NULL
)

1375 
	`¥obÀm
("string_ is NULL");

1376 i‡(!
	`utf8_vÆid©e
(
node
->
°rög_
))

1377 
	`¥obÀm
("string_ contains invalid UTF-8");

1378 } i‡(
node
->
èg
 =
JSON_ARRAY
 ||Çode->èg =
JSON_OBJECT
) {

1379 
Js⁄Node
 *
hód
 = 
node
->
chûdªn
.head;

1380 
Js⁄Node
 *
èû
 = 
node
->
chûdªn
.tail;

1382 i‡(
hód
 =
NULL
 || 
èû
 == NULL) {

1383 i‡(
hód
 !
NULL
)

1384 
	`¥obÀm
("tail is NULL, but head isÇot");

1385 i‡(
èû
 !
NULL
)

1386 
	`¥obÀm
("head is NULL, butÅail isÇot");

1388 
Js⁄Node
 *
chûd
;

1389 
Js⁄Node
 *
œ°
 = 
NULL
;

1391 i‡(
hód
->
¥ev
 !
NULL
)

1392 
	`¥obÀm
("First child'sÖrevÖointer isÇot NULL");

1394 
chûd
 = 
hód
; chûd !
NULL
; 
œ°
 = chûd, chûd = chûd->
√xt
) {

1395 i‡(
chûd
 =
node
)

1396 
	`¥obÀm
("node is its own child");

1397 i‡(
chûd
->
√xt
 == child)

1398 
	`¥obÀm
("child->next == child (cycle)");

1399 i‡(
chûd
->
√xt
 =
hód
)

1400 
	`¥obÀm
("child->next == head (cycle)");

1402 i‡(
chûd
->
∑ª¡
 !
node
)

1403 
	`¥obÀm
("child doesÇotÖoint backÅoÖarent");

1404 i‡(
chûd
->
√xt
 !
NULL
 && chûd->√xt->
¥ev
 != child)

1405 
	`¥obÀm
("child->next doesÇotÖoint backÅo child");

1407 i‡(
node
->
èg
 =
JSON_ARRAY
 && 
chûd
->
key
 !
NULL
)

1408 
	`¥obÀm
("ArrayÉlement's key isÇot NULL");

1409 i‡(
node
->
èg
 =
JSON_OBJECT
 && 
chûd
->
key
 =
NULL
)

1410 
	`¥obÀm
("Object member's key is NULL");

1412 i‡(!
	`js⁄_check
(
chûd
, 
îrmsg
))

1413  
Ál£
;

1416 i‡(
œ°
 !
èû
)

1417 
	`¥obÀm
("tail doesÇot matchÖointer found by startingát headánd followingÇextÜinks");

1421  
åue
;

1423 #unde‡
¥obÀm


1424 
	}
}

	@node_modules/node-sass/src/libsass/src/json.hpp

24 #i‚de‡
CCAN_JSON_H


25 
	#CCAN_JSON_H


	)

27 
	~<°dboﬁ.h
>

28 
	~<°ddef.h
>

31 
	mJSON_NULL
,

32 
	mJSON_BOOL
,

33 
	mJSON_STRING
,

34 
	mJSON_NUMBER
,

35 
	mJSON_ARRAY
,

36 
	mJSON_OBJECT
,

37 } 
	tJs⁄Tag
;

39 
Js⁄Node
 
	tJs⁄Node
;

41 
	sJs⁄Node


44 
Js⁄Node
 *
	m∑ª¡
;

45 
Js⁄Node
 *
	m¥ev
, *
	m√xt
;

48 *
	mkey
;

50 
Js⁄Tag
 
	mèg
;

53 
boﬁ
 
	mboﬁ_
;

56 *
	m°rög_
;

59 
	mnumbî_
;

64 
Js⁄Node
 *
	mhód
, *
	mèû
;

65 } 
	mchûdªn
;

71 
Js⁄Node
 *
js⁄_decode
 (c⁄° *
js⁄
);

72 *
js⁄_ícode
 (c⁄° 
Js⁄Node
 *
node
);

73 *
js⁄_ícode_°rög
 (c⁄° *
°r
);

74 *
js⁄_°rögify
 (c⁄° 
Js⁄Node
 *
node
, c⁄° *
•a˚
);

75 
js⁄_dñëe
 (
Js⁄Node
 *
node
);

77 
boﬁ
 
js⁄_vÆid©e
 (c⁄° *
js⁄
);

81 
Js⁄Node
 *
js⁄_föd_ñemít
 (Js⁄Nodê*
¨øy
, 
ödex
);

82 
Js⁄Node
 *
js⁄_föd_membî
 (Js⁄Nodê*
obje˘
, c⁄° *
key
);

84 
Js⁄Node
 *
js⁄_fú°_chûd
 (c⁄° Js⁄Nodê*
node
);

86 
	#js⁄_f‹óch
(
i
, 
obje˘_‹_¨øy
) \

87 (
i
Ë
	`js⁄_fú°_chûd
(
obje˘_‹_¨øy
); \

88 (
i
Ë!
NULL
; \

89 (
i
Ë(i)->
√xt
)

	)

93 
Js⁄Node
 *
js⁄_mknuŒ
();

94 
Js⁄Node
 *
js⁄_mkboﬁ
(
boﬁ
 
b
);

95 
Js⁄Node
 *
js⁄_mk°rög
(c⁄° *
s
);

96 
Js⁄Node
 *
js⁄_mknumbî
(
n
);

97 
Js⁄Node
 *
js⁄_mk¨øy
();

98 
Js⁄Node
 *
js⁄_mkobje˘
();

100 
js⁄_≠≥nd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
);

101 
js⁄_¥ïíd_ñemít
(
Js⁄Node
 *
¨øy
, Js⁄Nodê*
ñemít
);

102 
js⁄_≠≥nd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
);

103 
js⁄_¥ïíd_membî
(
Js⁄Node
 *
obje˘
, c⁄° *
key
, Js⁄Nodê*
vÆue
);

105 
js⁄_ªmove_‰om_∑ª¡
(
Js⁄Node
 *
node
);

115 
boﬁ
 
js⁄_check
(c⁄° 
Js⁄Node
 *
node
, 
îrmsg
[256]);

	@node_modules/node-sass/src/libsass/src/kwd_arg_macros.hpp

1 #i‚de‡
SASS_KWD_ARG_MACROS_H


2 
	#SASS_KWD_ARG_MACROS_H


	)

15 
	#KWD_ARG_SET
(
£t_«me
Ë
˛ass
 
	)
set_name

17 
	#KWD_ARG
(
£t_«me
, 
ty≥
, 
«me
) \

18 
¥iv©e
: \

19 
ty≥
 
«me
##
_
; \

20 
public
: \

21 
£t_«me
& 
	`«me
(
ty≥
 
«me
##
__
) { \

22 
«me
##
_
 =Çame##
__
; \

23  *
this
; \

25 
ty≥
 
	`«me
(Ë{  
«me
##
_
; } \

26 
¥iv©e
:

	)

	@node_modules/node-sass/src/libsass/src/lexer.cpp

1 
	~"ßss.hµ
"

2 
	~<c˘y≥
>

3 
	~<c°ddef
>

4 
	~<io°ªam
>

5 
	~<iom™ù
>

6 
	~"Àxî.hµ
"

7 
	~"c⁄°™ts.hµ
"

10 
«me•a˚
 
	gSass
 {

11 
usög
 
«me•a˚
 
	gC⁄°™ts
;

13 
«me•a˚
 
	gPªÀxî
 {

20 c⁄° * 
kwd_©
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'@'>(
	g§c
); }

21 c⁄° * 
kwd_dŸ
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'.'>(
	g§c
); }

22 c⁄° * 
kwd_comma
(c⁄° * 
§c
Ë{  
	gexa˘ly
<','>(
	g§c
); };

23 c⁄° * 
kwd_cﬁ⁄
(c⁄° * 
§c
Ë{  
	gexa˘ly
<':'>(
	g§c
); };

24 c⁄° * 
kwd_°¨
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'*'>(
	g§c
); };

25 c⁄° * 
kwd_∂us
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'+'>(
	g§c
); };

26 c⁄° * 
kwd_möus
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'-'>(
	g§c
); };

27 c⁄° * 
kwd_¶ash
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'/'>(
	g§c
); };

35 
boﬁ
 
is_Æpha
(c⁄° & 
chr
)

37  (
	gchr
 - 'A') <= 'Z' - 'A' ||

38 (
chr
 - 'a') <= 'z' - 'a';

41 
boﬁ
 
is_•a˚
(c⁄° & 
chr
)

44  
	gchr
 =' ' || (
chr
 - '\t') <= '\r' - '\t';

47 
boﬁ
 
is_digô
(c⁄° & 
chr
)

50  (
	gchr
 - '0') <= '9' - '0';

53 
boﬁ
 
is_xdigô
(c⁄° & 
chr
)

56  (
	gchr
 - '0') <= '9' - '0' ||

57 (
chr
 - 'a') <= 'f' - 'a' ||

58 (
chr
 - 'A') <= 'F' - 'A';

61 
boﬁ
 
is_pun˘
(c⁄° & 
chr
)

64  
	gchr
 == '.';

67 
boﬁ
 
is_Ænum
(c⁄° & 
chr
)

69  
is_Æpha
(
chr
Ë|| 
is_digô
(chr);

73 
boﬁ
 
is_unicode
(c⁄° & 
chr
)

76  (
	gchr
) > 127;

81 
boﬁ
 
is_n⁄ascii
(c⁄° & 
chr
)

84 ((
	gchr
) > 127 && (chr) < 55296) ||

85 ((
	gchr
) > 57343 && (chr) < 65534) ||

86 ((
	gchr
) > 65535 && (chr) < 1114111)

92 
boﬁ
 
is_uri_ch¨a˘î
(c⁄° & 
chr
)

94  ((
	gchr
) > 41 && (chr) < 127) ||

95 (
	gchr
Ë=':' || (
chr
) == '/';

100 
boﬁ
 
is_esˇ∑bÀ_ch¨a˘î
(c⁄° & 
chr
)

102  (
	gchr
) > 31 && (chr) < 127;

106 
boﬁ
 
is_ch¨a˘î
(c⁄° & 
chr
)

109  
is_Ænum
(
chr
Ë|| 
is_unicode
(chrË|| 
	gchr
 == '-';

117 c⁄° * 
•a˚
(c⁄° * 
§c
Ë{  
is_•a˚
(*§cË? 
	g§c
 + 1 : 0; }

118 c⁄° * 
Æpha
(c⁄° * 
§c
Ë{  
is_Æpha
(*§cË? 
	g§c
 + 1 : 0; }

119 c⁄° * 
unicode
(c⁄° * 
§c
Ë{  
is_unicode
(*§cË? 
	g§c
 + 1 : 0; }

120 c⁄° * 
n⁄ascii
(c⁄° * 
§c
Ë{  
is_n⁄ascii
(*§cË? 
	g§c
 + 1 : 0; }

121 c⁄° * 
digô
(c⁄° * 
§c
Ë{  
is_digô
(*§cË? 
	g§c
 + 1 : 0; }

122 c⁄° * 
xdigô
(c⁄° * 
§c
Ë{  
is_xdigô
(*§cË? 
	g§c
 + 1 : 0; }

123 c⁄° * 
Ænum
(c⁄° * 
§c
Ë{  
is_Ænum
(*§cË? 
	g§c
 + 1 : 0; }

124 c⁄° * 
pun˘
(c⁄° * 
§c
Ë{  
is_pun˘
(*§cË? 
	g§c
 + 1 : 0; }

125 c⁄° * 
hyphí
(c⁄° * 
§c
Ë{  *
	g§c
 && *src == '-' ? src + 1 : 0; }

126 c⁄° * 
ch¨a˘î
(c⁄° * 
§c
Ë{  
is_ch¨a˘î
(*§cË? 
	g§c
 + 1 : 0; }

127 c⁄° * 
uri_ch¨a˘î
(c⁄° * 
§c
Ë{  
is_uri_ch¨a˘î
(*§cË? 
	g§c
 + 1 : 0; }

128 c⁄° * 
esˇ∑bÀ_ch¨a˘î
(c⁄° * 
§c
Ë{  
is_esˇ∑bÀ_ch¨a˘î
(*§cË? 
	g§c
 + 1 : 0; }

131 c⁄° * 
•a˚s
(c⁄° * 
§c
Ë{  
	g⁄e_∂us
<
	g•a˚
>(
	g§c
); }

132 c⁄° * 
digôs
(c⁄° * 
§c
Ë{  
	g⁄e_∂us
<
	gdigô
>(
	g§c
); }

133 c⁄° * 
hyphís
(c⁄° * 
§c
Ë{  
	g⁄e_∂us
<
	ghyphí
>(
	g§c
); }

136 c⁄° * 
no_•a˚s
(c⁄° * 
§c
Ë{  
	g√g©e
< 
	g•a˚
 >(
	g§c
); }

137 c⁄° * 
›ti⁄Æ_•a˚s
(c⁄° * 
§c
Ë{  
	gzîo_∂us
< 
	g•a˚
 >(
	g§c
); }

140 c⁄° * 
™y_ch¨
(c⁄° * 
§c
Ë{  *
	g§c
 ? src + 1 : src; }

143 c⁄° * 
w‹d_bound¨y
(c⁄° * 
§c
Ë{  
is_ch¨a˘î
(*§cË|| *
	g§c
 == '#' ? 0 : src; }

146 c⁄° * 
ª_löebªak
(c⁄° * 
§c
)

149 i‡(*
	g§c
 =0 || *
§c
 == '\n')  src + 1;

151 i‡(*
	g§c
 ='\r'Ë *(
§c
 + 1) == '\n' ? src + 2 : src + 1;

158 c⁄° * 
íd_of_löe
(c⁄° * 
§c
)

161  *
	g§c
 =0 || *
§c
 == '\n' || *src == '\r' ? src : 0;

166 c⁄° * 
íd_of_fûe
(c⁄° * 
§c
)

169  *
	g§c
 =0 ? 
§c
 : 0;

	@node_modules/node-sass/src/libsass/src/lexer.hpp

1 #i‚de‡
SASS_LEXER_H


2 
	#SASS_LEXER_H


	)

4 
	~<c°rög
>

6 
«me•a˚
 
	gSass
 {

7 
«me•a˚
 
	gPªÀxî
 {

14 c⁄° * 
kwd_©
(c⁄° * 
§c
);

15 c⁄° * 
kwd_dŸ
(c⁄° * 
§c
);

16 c⁄° * 
kwd_comma
(c⁄° * 
§c
);

17 c⁄° * 
kwd_cﬁ⁄
(c⁄° * 
§c
);

18 c⁄° * 
kwd_°¨
(c⁄° * 
§c
);

19 c⁄° * 
kwd_∂us
(c⁄° * 
§c
);

20 c⁄° * 
kwd_möus
(c⁄° * 
§c
);

21 c⁄° * 
kwd_¶ash
(c⁄° * 
§c
);

28 
boﬁ
 
is_•a˚
(c⁄° & 
§c
);

29 
boﬁ
 
is_Æpha
(c⁄° & 
§c
);

30 
boﬁ
 
is_pun˘
(c⁄° & 
§c
);

31 
boﬁ
 
is_digô
(c⁄° & 
§c
);

32 
boﬁ
 
is_Ænum
(c⁄° & 
§c
);

33 
boﬁ
 
is_xdigô
(c⁄° & 
§c
);

34 
boﬁ
 
is_unicode
(c⁄° & 
§c
);

35 
boﬁ
 
is_n⁄ascii
(c⁄° & 
§c
);

36 
boﬁ
 
is_ch¨a˘î
(c⁄° & 
§c
);

37 
boﬁ
 
is_uri_ch¨a˘î
(c⁄° & 
§c
);

38 
boﬁ
 
esˇ∑bÀ_ch¨a˘î
(c⁄° & 
§c
);

41 c⁄° * 
•a˚
(c⁄° * 
§c
);

42 c⁄° * 
Æpha
(c⁄° * 
§c
);

43 c⁄° * 
digô
(c⁄° * 
§c
);

44 c⁄° * 
xdigô
(c⁄° * 
§c
);

45 c⁄° * 
Ænum
(c⁄° * 
§c
);

46 c⁄° * 
pun˘
(c⁄° * 
§c
);

47 c⁄° * 
hyphí
(c⁄° * 
§c
);

48 c⁄° * 
unicode
(c⁄° * 
§c
);

49 c⁄° * 
n⁄ascii
(c⁄° * 
§c
);

50 c⁄° * 
ch¨a˘î
(c⁄° * 
§c
);

51 c⁄° * 
uri_ch¨a˘î
(c⁄° * 
§c
);

52 c⁄° * 
esˇ∑bÀ_ch¨a˘î
(c⁄° * 
§c
);

55 c⁄° * 
•a˚s
(c⁄° * 
§c
);

56 c⁄° * 
digôs
(c⁄° * 
§c
);

57 c⁄° * 
hyphís
(c⁄° * 
§c
);

60 c⁄° * 
no_•a˚s
(c⁄° * 
§c
);

61 c⁄° * 
›ti⁄Æ_•a˚s
(c⁄° * 
§c
);

64 c⁄° * 
™y_ch¨
(c⁄° * 
§c
);

68 c⁄° * 
w‹d_bound¨y
(c⁄° * 
§c
);

71 c⁄° * 
ª_löebªak
(c⁄° * 
§c
);

75 c⁄° * 
íd_of_löe
(c⁄° * 
§c
);

78 c⁄° * 
íd_of_fûe
(c⁄° * 
§c
);

82 c⁄° * (*
	t¥ñexî
)(const *);

90 
	gãm∂©e
 <
	gchr
>

91 c⁄° * 
exa˘ly
(c⁄° * 
§c
) {

92  *
	g§c
 =
chr
 ? 
§c
 + 1 : 0;

97 
	gãm∂©e
 <c⁄° * 
	g°r
>

98 c⁄° * 
exa˘ly
(c⁄° * 
§c
) {

99 i‡(
	g°r
 == 0)  0;

100 c⁄° * 
	g¥e
 = 
°r
;

101 i‡(
	g§c
 == 0)  0;

104 *
	g¥e
 && *
	g§c
 =*
¥e
) {

105 ++
§c
, ++
¥e
;

108  *
	g¥e
 =0 ? 
§c
 : 0;

115 
	gãm∂©e
 <c⁄° * 
	g°r
>

116 c⁄° * 
ö£nsôive
(c⁄° * 
§c
) {

117 i‡(
	g°r
 == 0)  0;

118 c⁄° * 
	g¥e
 = 
°r
;

119 i‡(
	g§c
 == 0)  0;

122 *
	g¥e
 && (*
	g§c
 =*
¥e
 || *
§c
+32 == *pre)) {

123 ++
§c
, ++
¥e
;

126  *
	g¥e
 =0 ? 
§c
 : 0;

131 
	gãm∂©e
 <c⁄° * 
	gch¨_˛ass
>

132 c⁄° * 
˛ass_ch¨
(c⁄° * 
§c
) {

133 c⁄° * 
	gcc
 = 
ch¨_˛ass
;

134 *
	gcc
 && *
	g§c
 !*
cc
) ++cc;

135  *
	gcc
 ? 
	g§c
 + 1 : 0;

140 
	gãm∂©e
 <c⁄° * 
	gch¨_˛ass
>

141 c⁄° * 
˛ass_ch¨s
(c⁄° * 
§c
) {

142 c⁄° * 
	gp
 = 
§c
;

143 
	g˛ass_ch¨
<
	gch¨_˛ass
>(
	gp
)) ++p;

144  
	gp
 =
§c
 ? 0 : 
p
;

149 
	gãm∂©e
 <c⁄° * 
	g√g_ch¨_˛ass
>

150 c⁄° * 
√g_˛ass_ch¨
(c⁄° * 
§c
) {

151 i‡(*
	g§c
 == 0)  0;

152 c⁄° * 
	gcc
 = 
√g_ch¨_˛ass
;

153 *
	gcc
 && *
	g§c
 !*
cc
) ++cc;

154  *
	gcc
 ? 0 : 
§c
 + 1;

159 
	gãm∂©e
 <c⁄° * 
	g√g_ch¨_˛ass
>

160 c⁄° * 
√g_˛ass_ch¨s
(c⁄° * 
§c
) {

161 c⁄° * 
	gp
 = 
§c
;

162 
	g√g_˛ass_ch¨
<
	g√g_ch¨_˛ass
>(
	gp
)) ++p;

163  
	gp
 =
§c
 ? 0 : 
p
;

168 
	gãm∂©e
 <c⁄° 
	gchr
>

169 c⁄° * 
™y_ch¨_but
(c⁄° * 
§c
) {

170  (*
	g§c
 && *§¯!
chr
Ë? 
§c
 + 1 : 0;

176 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

177 c⁄° * 
√g©e
(c⁄° * 
§c
) {

178  
mx
(
§c
) ? 0 : src;

185 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

186 c⁄° * 
lookahód
(c⁄° * 
§c
) {

187  
mx
(
§c
Ë? 
	g§c
 : 0;

193 
	gãm∂©e
 <c⁄° 
¥ñexî
 
	gmx
>

194 c⁄° * 
Æã∫©ives
(c⁄° * 
§c
) {

195 c⁄° * 
	gr¶t
;

196 i‡((
	gr¶t
 = 
mx
(
§c
))Ë 
r¶t
;

199 
	gãm∂©e
 <c⁄° 
¥ñexî
 
	gmx1
, c⁄°ÖªÀxî 
	gmx2
, c⁄° 
	g¥ñexî
... 
	gmxs
>

200 c⁄° * 
Æã∫©ives
(c⁄° * 
§c
) {

201 c⁄° * 
	gr¶t
;

202 i‡((
	gr¶t
 = 
mx1
(
§c
))Ë 
r¶t
;

203  
	gÆã∫©ives
<
	gmx2
, 
	gmxs
...>(
	g§c
);

209 
	gãm∂©e
 <c⁄° 
¥ñexî
 
	gmx1
>

210 c⁄° * 
£quí˚
(c⁄° * 
§c
) {

211 c⁄° * 
	gr¶t
 = 
§c
;

212 i‡(!(
	gr¶t
 = 
mx1
(
r¶t
)))  0;

213  
	gr¶t
;

215 
	gãm∂©e
 <c⁄° 
¥ñexî
 
	gmx1
, c⁄°ÖªÀxî 
	gmx2
, c⁄° 
	g¥ñexî
... 
	gmxs
>

216 c⁄° * 
£quí˚
(c⁄° * 
§c
) {

217 c⁄° * 
	gr¶t
 = 
§c
;

218 i‡(!(
	gr¶t
 = 
mx1
(
r¶t
)))  0;

219  
	g£quí˚
<
	gmx2
, 
	gmxs
...>(
	gr¶t
);

225 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

226 c⁄° * 
›ti⁄Æ
(c⁄° * 
§c
) {

227 c⁄° * 
	gp
 = 
mx
(
§c
);

228  
	gp
 ?Ö : 
§c
;

233 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

234 c⁄° * 
zîo_∂us
(c⁄° * 
§c
) {

235 c⁄° * 
	gp
 = 
mx
(
§c
);

236 
	gp
Ë
	g§c
 = 
p
,Ö = 
mx
(
§c
);

237  
	g§c
;

242 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

243 c⁄° * 
⁄e_∂us
(c⁄° * 
§c
) {

244 c⁄° * 
	gp
 = 
mx
(
§c
);

245 i‡(!
	gp
)  0;

246 
	gp
Ë
	g§c
 = 
p
,Ö = 
mx
(
§c
);

247  
	g§c
;

253 
	gãm∂©e
 <
¥ñexî
 
	gmx
,ÖªÀxî 
	gdñim
>

254 c⁄° * 
n⁄_gªedy
(c⁄° * 
§c
) {

255 !
dñim
(
§c
)) {

256 c⁄° * 
	gp
 = 
mx
(
§c
);

257 i‡(
	gp
 =
§c
)  0;

258 i‡(
	gp
 == 0)  0;

259 
	g§c
 = 
p
;

261  
	g§c
;

270 
	gãm∂©e
 <c⁄° * 
	g°r
>

271 c⁄° * 
keyw‹d
(c⁄° * 
§c
) {

272  
	g£quí˚
 <

273 
	gö£nsôive
 < 
	g°r
 >,

274 
	gw‹d_bound¨y


275 >(
	g§c
);

280 
	gãm∂©e
 <c⁄° * 
	g°r
>

281 c⁄° * 
w‹d
(c⁄° * 
§c
) {

282  
	g£quí˚
 <

283 
	gexa˘ly
 < 
	g°r
 >,

284 
	gw‹d_bound¨y


285 >(
	g§c
);

288 
	gãm∂©e
 <
	gchr
>

289 c⁄° * 
loo£ly
(c⁄° * 
§c
) {

290  
	g£quí˚
 <

291 
	g›ti⁄Æ_•a˚s
,

292 
	gexa˘ly
 < 
	gchr
 >

293 >(
	g§c
);

295 
	gãm∂©e
 <c⁄° * 
	g°r
>

296 c⁄° * 
loo£ly
(c⁄° * 
§c
) {

297  
	g£quí˚
 <

298 
	g›ti⁄Æ_•a˚s
,

299 
	gexa˘ly
 < 
	g°r
 >

300 >(
	g§c
);

	@node_modules/node-sass/src/libsass/src/listize.cpp

1 
	~"ßss.hµ
"

2 
	~<io°ªam
>

3 
	~<ty≥öfo
>

4 
	~<°rög
>

6 
	~"li°ize.hµ
"

7 
	~"c⁄ãxt.hµ
"

8 
	~"backåa˚.hµ
"

9 
	~"îr‹_h™dlög.hµ
"

11 
«me•a˚
 
	gSass
 {

13 
	gLi°ize
::
Li°ize
(
Mem‹y_M™agî
& 
mem
)

14 : 
mem
(mem)

17 
Ex¥essi⁄
* 
Li°ize
::
›î©‹
()(
Sñe˘‹_Li°
* 
£l
)

19 
Li°
* 
l
 = 
SASS_MEMORY_NEW
(
mem
, Li°, 
£l
->
p°©e
(), sñ->
Àngth
(), 
SASS_COMMA
);

20 
	gl
->
‰om_£À˘‹
(
åue
);

21 
size_t
 
	gi
 = 0, 
	gL
 = 
£l
->
Àngth
(); i < L; ++i) {

22 i‡(!(*
	g£l
)[
i
]) ;

23 *
	gl
 << (*
	g£l
)[
i
]->
≥rf‹m
(
this
);

25 i‡(
	gl
->
Àngth
()) Ü;

26  
SASS_MEMORY_NEW
(
mem
, 
NuŒ
, 
l
->
p°©e
());

29 
Ex¥essi⁄
* 
	gLi°ize
::
›î©‹
()(
Compound_Sñe˘‹
* 
£l
)

31 
°d
::
°rög
 
°r
;

32 
size_t
 
	gi
 = 0, 
	gL
 = 
£l
->
Àngth
(); i < L; ++i) {

33 
Ex¥essi⁄
* 
	ge
 = (*
£l
)[
i
]->
≥rf‹m
(
this
);

34 i‡(
	ge
Ë
	g°r
 +
e
->
to_°rög
();

36  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
£l
->
p°©e
(), 
°r
);

39 
Ex¥essi⁄
* 
	gLi°ize
::
›î©‹
()(
Com∂ex_Sñe˘‹
* 
£l
)

41 
Li°
* 
l
 = 
SASS_MEMORY_NEW
(
mem
, Li°, 
£l
->
p°©e
(), 2);

42 
	gl
->
‰om_£À˘‹
(
åue
);

43 
Compound_Sñe˘‹
* 
	ghód
 = 
£l
->
hód
();

44 i‡(
	ghód
 && !hód->
is_em±y_ª„ªn˚
())

46 
Ex¥essi⁄
* 
	ghh
 = 
hód
->
≥rf‹m
(
this
);

47 i‡(
	ghh
Ë*
	gl
 << hh;

50 
	g°d
::
°rög
 
ª„ªn˚
 = ! 
£l
->reference() ? ""

51 : 
£l
->
ª„ªn˚
()->
to_°rög
();

52 
	g£l
->
combö©‹
())

54 
	gCom∂ex_Sñe˘‹
::
PARENT_OF
:

55 *
l
 << 
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
£l
->
p°©e
(), ">");

57 
	gCom∂ex_Sñe˘‹
::
ADJACENT_TO
:

58 *
l
 << 
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
£l
->
p°©e
(), "+");

60 
	gCom∂ex_Sñe˘‹
::
REFERENCE
:

61 *
l
 << 
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
£l
->
p°©e
(), "/" + 
ª„ªn˚
 + "/");

63 
	gCom∂ex_Sñe˘‹
::
PRECEDES
:

64 *
l
 << 
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
, 
£l
->
p°©e
(), "~");

66 
	gCom∂ex_Sñe˘‹
::
ANCESTOR_OF
:

70 
Com∂ex_Sñe˘‹
* 
	gèû
 = 
£l
->
èû
();

71 i‡(
	gèû
)

73 
Ex¥essi⁄
* 
	gâ
 = 
èû
->
≥rf‹m
(
this
);

74 i‡(
	gâ
 &&Åt->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
)

75 { *
l
 +
°©ic_ˇ°
<
Li°
*>(
â
); }

76 i‡(
	gâ
Ë*
	gl
 << 
	g°©ic_ˇ°
<
	gLi°
*>(tt);

78 i‡(
	gl
->
Àngth
() == 0)  0;

79  
	gl
;

82 
Ex¥essi⁄
* 
	gLi°ize
::
ÁŒback_im∂
(
AST_Node
* 
n
)

84  
dy«mic_ˇ°
<
Ex¥essi⁄
*>(
n
);

	@node_modules/node-sass/src/libsass/src/listize.hpp

1 #i‚de‡
SASS_LISTIZE_H


2 
	#SASS_LISTIZE_H


	)

4 
	~<ve˘‹
>

5 
	~<io°ªam
>

7 
	~"a°.hµ
"

8 
	~"c⁄ãxt.hµ
"

9 
	~"›î©i⁄.hµ
"

10 
	~"ívú⁄mít.hµ
"

12 
«me•a˚
 
	gSass
 {

14 
	gEnvú⁄mít
<
	tAST_Node
*> 
	tEnv
;

15 
	gBackåa˚
;

17 
˛ass
 
	gLi°ize
 : 
public
 
O≥øti⁄_CRTP
<
Ex¥essi⁄
*, Listize> {

19 
	gMem‹y_M™agî
& 
	gmem
;

21 
Ex¥essi⁄
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

23 
	gpublic
:

24 
Li°ize
(
Mem‹y_M™agî
&);

25 ~
Li°ize
() { }

27 
Ex¥essi⁄
* 
›î©‹
()(
	gSñe˘‹_Li°
*);

28 
Ex¥essi⁄
* 
›î©‹
()(
	gCom∂ex_Sñe˘‹
*);

29 
Ex¥essi⁄
* 
›î©‹
()(
	gCompound_Sñe˘‹
*);

31 
	gãm∂©e
 <
ty≥«me
 
	gU
>

32 
Ex¥essi⁄
* 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

	@node_modules/node-sass/src/libsass/src/mapping.hpp

1 #i‚de‡
SASS_MAPPING_H


2 
	#SASS_MAPPING_H


	)

4 
	~"posôi⁄.hµ
"

6 
«me•a˚
 
	gSass
 {

8 
	sM≠pög
 {

9 
Posôi⁄
 
	g‹igöÆ_posôi⁄
;

10 
Posôi⁄
 
	ggíî©ed_posôi⁄
;

12 
M≠pög
(c⁄° 
Posôi⁄
& 
‹igöÆ_posôi⁄
, c⁄° Posôi⁄& 
gíî©ed_posôi⁄
)

13 : 
‹igöÆ_posôi⁄
(‹igöÆ_posôi⁄), 
gíî©ed_posôi⁄
(generated_position) { }

	@node_modules/node-sass/src/libsass/src/memory_manager.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"mem‹y_m™agî.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
	gMem‹y_M™agî
::
Mem‹y_M™agî
(
size_t
 
size
)

8 : 
nodes
(
°d
::
ve˘‹
<
Mem‹y_Obje˘
*>())

10 
size_t
 
öô
 = 
size
;

11 i‡(
	göô
 < 8) init = 8;

13 
	gnodes
.
ª£rve
(
öô
);

16 
	gMem‹y_M™agî
::~
Mem‹y_M™agî
()

20 
size_t
 
i
 = 0, 
	gS
 = 
nodes
.
size
(); 
	gi
 < S; ++i) {

21 
dóŒoˇã
(
nodes
[
i
]);

24 
	gnodes
.
˛ór
();

27 
Mem‹y_Obje˘
* 
	gMem‹y_M™agî
::
add
(Mem‹y_Obje˘* 
≈
)

31 
≈
->
ªfcou¡
 = 1;

32  
	g≈
;

35 
boﬁ
 
	gMem‹y_M™agî
::
has
(
Mem‹y_Obje˘
* 
≈
)

38  
föd
(
nodes
.
begö
(),Çodes.
íd
(), 
≈
) !=Çodes.end();

41 
Mem‹y_Obje˘
* 
	gMem‹y_M™agî
::
Æloˇã
(
size_t
 
size
)

44 * 
hóp
 = 
mÆloc
(
size
);

46 (
	g°©ic_ˇ°
<
	gMem‹y_Obje˘
*>(
	ghóp
))->
	gªfcou¡
 = 0;

48 
	gnodes
.
push_back
(
°©ic_ˇ°
<
Mem‹y_Obje˘
*>(
hóp
));

50  
	g°©ic_ˇ°
<
	gMem‹y_Obje˘
*>(
	ghóp
);

53 
	gMem‹y_M™agî
::
dóŒoˇã
(
Mem‹y_Obje˘
* 
≈
)

56 i‡(
≈
->
ªfcou¡
Ë≈->~
Mem‹y_Obje˘
();

58 
‰ì
(
≈
);

61 
	gMem‹y_M™agî
::
ªmove
(
Mem‹y_Obje˘
* 
≈
)

64 
nodes
.
îa£
(
föd
“odes.
begö
(),Çodes.
íd
(), 
≈
));

68 
	gMem‹y_M™agî
::
de°roy
(
Mem‹y_Obje˘
* 
≈
)

71 
ªmove
(
≈
);

73 
dóŒoˇã
(
≈
);

	@node_modules/node-sass/src/libsass/src/memory_manager.hpp

1 #i‚de‡
SASS_MEMORY_MANAGER_H


2 
	#SASS_MEMORY_MANAGER_H


	)

4 
	~<ve˘‹
>

6 
«me•a˚
 
	gSass
 {

8 ˛as†
	cMem‹y_Obje˘
 {

9 
‰õnd
 
˛ass
 
	gMem‹y_M™agî
;

10 
	gªfcou¡
;

11 
	gpublic
:

12 
Mem‹y_Obje˘
(Ë{ 
ªfcou¡
 = 0; };

13 
	gvútuÆ
 ~
Mem‹y_Obje˘
() {};

23 ˛as†
	cMem‹y_M™agî
 {

24 
	g°d
::
ve˘‹
<
Mem‹y_Obje˘
*> 
nodes
;

26 
	gpublic
:

27 
Mem‹y_M™agî
(
size_t
 
size
 = 0);

28 ~
Mem‹y_M™agî
();

30 
boﬁ
 
has
(
Mem‹y_Obje˘
* 
≈
);

31 
Mem‹y_Obje˘
* 
Æloˇã
(
size_t
 
size
);

32 
dóŒoˇã
(
Mem‹y_Obje˘
* 
≈
);

33 
ªmove
(
Mem‹y_Obje˘
* 
≈
);

34 
de°roy
(
Mem‹y_Obje˘
* 
≈
);

35 
Mem‹y_Obje˘
* 
add
(Mem‹y_Obje˘* 
≈
);

45 
	#SASS_MEMORY_NEW
(
mgr
, 
Cœss
, ...) \

46 (
°©ic_ˇ°
<
Cœss
*>(
mgr
.
	`add
(
	`√w
 (mgr.
	`Æloˇã
((Cœss))Ë
	`Cœss
(
__VA_ARGS__
)))) \

47 

	)

	@node_modules/node-sass/src/libsass/src/node.cpp

1 
	~"ßss.hµ
"

2 
	~<ve˘‹
>

4 
	~"node.hµ
"

5 
	~"c⁄ãxt.hµ
"

6 
	~"∑r£r.hµ
"

8 
«me•a˚
 
	gSass
 {

11 
Node
 
	gNode
::
¸óãCombö©‹
(c⁄° 
Com∂ex_Sñe˘‹
::
Combö©‹
& 
combö©‹
) {

12 
NodeDequePå
 
nuŒ
;

13  
Node
(
COMBINATOR
, 
combö©‹
, 
NULL
 , 
nuŒ
 );

17 
Node
 
	gNode
::
¸óãSñe˘‹
(
Com∂ex_Sñe˘‹
* 
pSñe˘‹
, 
C⁄ãxt
& 
˘x
) {

18 
NodeDequePå
 
	gnuŒ
;

20 
Com∂ex_Sñe˘‹
* 
	gpSåù≥d
 = 
pSñe˘‹
->
˛⁄e
(
˘x
);

21 
	gpSåù≥d
->
èû
(
NULL
);

22 
	gpSåù≥d
->
combö©‹
(
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
);

24 
Node
 
n
(
SELECTOR
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
, 
pSåù≥d
, 
nuŒ
 );

25 i‡(
	gpSñe˘‹
Ë
	gn
.
	ggŸ_löe_„ed
 = 
pSñe˘‹
->
has_löe_„ed
();

26  
	gn
;

30 
Node
 
	gNode
::
¸óãCﬁÀ˘i⁄
() {

31 
NodeDequePå
 
pEm±yCﬁÀ˘i⁄
 = 
°d
::
make_sh¨ed
<
NodeDeque
>();

32  
Node
(
COLLECTION
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
, 
NULL
 , 
pEm±yCﬁÀ˘i⁄
);

36 
Node
 
	gNode
::
¸óãCﬁÀ˘i⁄
(c⁄° 
NodeDeque
& 
vÆues
) {

37 
NodeDequePå
 
pShÆlowC›õdCﬁÀ˘i⁄
 = 
°d
::
make_sh¨ed
<
NodeDeque
>(
vÆues
);

38  
Node
(
COLLECTION
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
, 
NULL
 , 
pShÆlowC›õdCﬁÀ˘i⁄
);

42 
Node
 
	gNode
::
¸óãNû
() {

43 
NodeDequePå
 
nuŒ
;

44  
Node
(
NIL
, 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
, 
NULL
 , 
nuŒ
 );

48 
	gNode
::
Node
(c⁄° 
TYPE
& 
ty≥
, 
Com∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
, Com∂ex_Sñe˘‹* 
pSñe˘‹
, 
NodeDequePå
& 
pCﬁÀ˘i⁄
)

49 : 
gŸ_löe_„ed
(
Ál£
), 
mTy≥
(
ty≥
), 
mCombö©‹
(
combö©‹
), 
mpSñe˘‹
(
pSñe˘‹
), 
mpCﬁÀ˘i⁄
(
pCﬁÀ˘i⁄
)

50 { i‡(
	gpSñe˘‹
Ë
	ggŸ_löe_„ed
 = 
pSñe˘‹
->
has_löe_„ed
(); }

53 
Node
 
	gNode
::
˛⁄e
(
C⁄ãxt
& 
˘x
) const {

54 
NodeDequePå
 
pNewCﬁÀ˘i⁄
 = 
°d
::
make_sh¨ed
<
NodeDeque
>();

55 i‡(
	gmpCﬁÀ˘i⁄
) {

56 
	gNodeDeque
::
ôî©‹
 
ôî
 = 
mpCﬁÀ˘i⁄
->
begö
(), 
	gôîEnd
 = mpCﬁÀ˘i⁄->
íd
(); 
	gôî
 !
ôîEnd
; iter++) {

57 
	gNode
& 
	gtoCl⁄e
 = *
ôî
;

58 
	gpNewCﬁÀ˘i⁄
->
push_back
(
toCl⁄e
.
˛⁄e
(
˘x
));

62 
Node
 
n
(
mTy≥
, 
mCombö©‹
, 
mpSñe˘‹
 ? mpSñe˘‹->
˛⁄e
(
˘x
Ë: 
NULL
, 
pNewCﬁÀ˘i⁄
);

63 
	gn
.
	ggŸ_löe_„ed
 = 
gŸ_löe_„ed
;

64  
	gn
;

68 
boﬁ
 
	gNode
::
c⁄èös
(c⁄° 
Node
& 
pŸítülChûd
, boﬁ 
sim∂eSñe˘‹OrdîDïídít
) const {

69 
boﬁ
 
	gfound
 = 
Ál£
;

71 
	gNodeDeque
::
ôî©‹
 
ôî
 = 
mpCﬁÀ˘i⁄
->
begö
(), 
	gôîEnd
 = mpCﬁÀ˘i⁄->
íd
(); 
	gôî
 !
ôîEnd
; iter++) {

72 
	gNode
& 
	gtoTe°
 = *
ôî
;

74 i‡(
nodesEquÆ
(
toTe°
, 
pŸítülChûd
, 
sim∂eSñe˘‹OrdîDïídít
)) {

75 
	gfound
 = 
åue
;

80  
	gfound
;

84 
boﬁ
 
	gNode
::
›î©‹
==(c⁄° 
Node
& 
rhs
) const {

85  
nodesEquÆ
(*
this
, 
rhs
, 
åue
 );

89 
boﬁ
 
nodesEquÆ
(c⁄° 
Node
& 
lhs
, c⁄° Node& 
rhs
, boﬁ 
sim∂eSñe˘‹OrdîDïídít
) {

90 i‡(
	glhs
.
ty≥
(Ë!
rhs
.type()) {

91  
Ál£
;

94 i‡(
	glhs
.
isCombö©‹
()) {

96  
	glhs
.
combö©‹
(Ë=
rhs
.combinator();

98 } i‡(
	glhs
.
isNû
()) {

100  
	gåue
;

102 } i‡(
	glhs
.
isSñe˘‹
()){

104  
£À˘‹s_equÆ
(*
lhs
.
£À˘‹
(), *
rhs
.£À˘‹(), 
sim∂eSñe˘‹OrdîDïídít
);

106 } i‡(
	glhs
.
isCﬁÀ˘i⁄
()) {

108 i‡(
	glhs
.
cﬁÀ˘i⁄
()->
size
(Ë!
rhs
.collection()->size()) {

109  
Ál£
;

112 
	gNodeDeque
::
ôî©‹
 
lhsIãr
 = 
lhs
.
cﬁÀ˘i⁄
()->
begö
(), 
	glhsIãrEnd
 =Ühs.cﬁÀ˘i⁄()->
íd
(),

113 
	grhsIãr
 = 
rhs
.
cﬁÀ˘i⁄
()->
begö
(); 
	glhsIãr
 !
lhsIãrEnd
;ÜhsIter++,ÑhsIter++) {

115 i‡(!
nodesEquÆ
(*
lhsIãr
, *
rhsIãr
, 
sim∂eSñe˘‹OrdîDïídít
)) {

116  
	gÁl£
;

121  
	gåue
;

126 
	gthrow
 "Comparing unknownÇodeÅypes. AÇewÅype wasÖrobablyáddedándÅhis method wasn't implemented for it.";

130 
	gNode
::
∂us
(
Node
& 
rhs
) {

131 i‡(!
this
->
isCﬁÀ˘i⁄
(Ë|| !
rhs
.isCollection()) {

132 
throw
 "BothÅhe currentÇodeándÑhs must be collections.";

134 
	gthis
->
cﬁÀ˘i⁄
()->
ö£π
(
this
->cﬁÀ˘i⁄()->
íd
(), 
rhs
.cﬁÀ˘i⁄()->
begö
(),Ñhs.collection()->end());

137 #ifde‡
DEBUG


138 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, c⁄° 
	gNode
& 
	gnode
) {

140 i‡(
	gnode
.
isCombö©‹
()) {

142 
	gnode
.
combö©‹
()) {

143 
	gCom∂ex_Sñe˘‹
::
ANCESTOR_OF
: 
os
 << "\" \""; ;

144 
	gCom∂ex_Sñe˘‹
::
PARENT_OF
: 
os
 << "\">\""; ;

145 
	gCom∂ex_Sñe˘‹
::
PRECEDES
: 
os
 << "\"~\""; ;

146 
	gCom∂ex_Sñe˘‹
::
ADJACENT_TO
: 
os
 << "\"+\""; ;

147 
	gCom∂ex_Sñe˘‹
::
REFERENCE
: 
os
 << "\"/\""; ;

150 } i‡(
	gnode
.
isNû
()) {

152 
	gos
 << "nil";

154 } i‡(
	gnode
.
isSñe˘‹
()){

156 
	gos
 << 
	gnode
.
£À˘‹
()->
hód
()->
to_°rög
();

158 } i‡(
	gnode
.
isCﬁÀ˘i⁄
()) {

160 
	gos
 << "[";

162 
	gNodeDeque
::
ôî©‹
 
ôî
 = 
node
.
cﬁÀ˘i⁄
()->
begö
(), 
	gôîBegö
 =Çode.cﬁÀ˘i⁄()->begö(), 
	gôîEnd
 =Çode.cﬁÀ˘i⁄()->
íd
(); 
	gôî
 !
ôîEnd
; iter++) {

163 i‡(
	gôî
 !
ôîBegö
) {

164 
os
 << ", ";

167 
	gos
 << (*
	gôî
);

170 
	gos
 << "]";

174  
	gos
;

180 
Node
 
com∂exSñe˘‹ToNode
(
Com∂ex_Sñe˘‹
* 
pToC⁄vît
, 
C⁄ãxt
& 
˘x
) {

181 i‡(
	gpToC⁄vît
 =
NULL
) {

182  
Node
::
¸óãNû
();

184 
Node
 
	gnode
 = Node::
¸óãCﬁÀ˘i⁄
();

185 
	gnode
.
	ggŸ_löe_„ed
 = 
pToC⁄vît
->
has_löe_„ed
();

186 
boﬁ
 
	ghas_lf
 = 
pToC⁄vît
->
has_löe_„ed
();

189 i‡(
	gpToC⁄vît
->
hód
(Ë&&ÖToC⁄vît->hód()->
has_∑ª¡_ªf
()) {

190 
Com∂ex_Sñe˘‹
* 
	gèû
 = 
pToC⁄vît
->
èû
();

191 i‡(
	gèû
Ëèû->
has_löe_„ed
(
pToC⁄vît
->has_line_feed());

192 
	gpToC⁄vît
 = 
èû
;

195 
	gpToC⁄vît
) {

197 
boﬁ
 
	gem±y_∑ª¡_ªf
 = 
pToC⁄vît
->
hód
(Ë&&ÖToC⁄vît->hód()->
is_em±y_ª„ªn˚
();

199 i‡(
	gpToC⁄vît
->
hód
(Ë=
NULL
 || 
em±y_∑ª¡_ªf
) {

203 i‡(
pToC⁄vît
->
hód
(Ë!
NULL
 && !
em±y_∑ª¡_ªf
) {

204 
node
.
cﬁÀ˘i⁄
()->
push_back
(
Node
::
¸óãSñe˘‹
(
pToC⁄vît
, 
˘x
));

205 i‡(
	ghas_lf
Ë
	gnode
.
cﬁÀ˘i⁄
()->
back
().
	ggŸ_löe_„ed
 = 
has_lf
;

206 
	ghas_lf
 = 
Ál£
;

209 i‡(
	gpToC⁄vît
->
combö©‹
(Ë!
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
) {

210 
node
.
cﬁÀ˘i⁄
()->
push_back
(
Node
::
¸óãCombö©‹
(
pToC⁄vît
->
combö©‹
()));

211 i‡(
	ghas_lf
Ë
	gnode
.
cﬁÀ˘i⁄
()->
back
().
	ggŸ_löe_„ed
 = 
has_lf
;

212 
	ghas_lf
 = 
Ál£
;

215 i‡(
	gpToC⁄vît
 && 
	gem±y_∑ª¡_ªf
 &&ÖToC⁄vît->
èû
()) {

219 
	gpToC⁄vît
 = 
pToC⁄vît
->
èû
();

222  
	gnode
;

226 
Com∂ex_Sñe˘‹
* 
nodeToCom∂exSñe˘‹
(c⁄° 
Node
& 
toC⁄vît
, 
C⁄ãxt
& 
˘x
) {

227 i‡(
	gtoC⁄vît
.
isNû
()) {

228  
	gNULL
;

232 i‡(!
	gtoC⁄vît
.
isCﬁÀ˘i⁄
()) {

233 
	gthrow
 "TheÇodeÅo convertÅoá Complex_Selector* must beá collectionÅype orÇil.";

237 
	gNodeDeque
& 
	gchûdNodes
 = *
toC⁄vît
.
cﬁÀ˘i⁄
();

239 
	g°d
::
°rög
 
noP©h
("");

240 
Posôi⁄
 
noPosôi⁄
(-1, -1, -1);

241 
Com∂ex_Sñe˘‹
* 
	gpFú°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, 
P¨£rSèã
("[NODE]"), Com∂ex_Sñe˘‹::
ANCESTOR_OF
, 
NULL
, NULL);

243 
Com∂ex_Sñe˘‹
* 
	gpCuºít
 = 
pFú°
;

245 i‡(
	gtoC⁄vît
.
isSñe˘‹
()Ë
	gpFú°
->
has_löe_„ed
(
toC⁄vît
.
gŸ_löe_„ed
);

246 i‡(
	gtoC⁄vît
.
isCombö©‹
()Ë
	gpFú°
->
has_löe_„ed
(
toC⁄vît
.
gŸ_löe_„ed
);

248 
	gNodeDeque
::
ôî©‹
 
chûdIãr
 = 
chûdNodes
.
begö
(), 
	gchûdIãrEnd
 = chûdNodes.
íd
(); 
	gchûdIãr
 !
chûdIãrEnd
; childIter++) {

250 
	gNode
& 
	gchûd
 = *
chûdIãr
;

252 i‡(
	gchûd
.
isSñe˘‹
()) {

253 
	gpCuºít
->
èû
(
chûd
.
£À˘‹
()->
˛⁄e
(
˘x
));

255 
	gpCuºít
 = 
pCuºít
->
èû
();

256 } i‡(
	gchûd
.
isCombö©‹
()) {

257 
	gpCuºít
->
combö©‹
(
chûd
.combinator());

258 i‡(
	gchûd
.
	ggŸ_löe_„ed
Ë
	gpCuºít
->
has_löe_„ed
(
chûd
.
gŸ_löe_„ed
);

261 i‡(
	gchûdIãr
+1 !
chûdIãrEnd
) {

262 
Node
& 
√xtNode
 = *(
chûdIãr
+1);

263 i‡(
	g√xtNode
.
isCombö©‹
()) {

264 
	gpCuºít
->
èû
(
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Com∂ex_Sñe˘‹
, 
P¨£rSèã
("[NODE]"), Com∂ex_Sñe˘‹::
ANCESTOR_OF
, 
NULL
, NULL));

265 i‡(
	g√xtNode
.
	ggŸ_löe_„ed
Ë
	gpCuºít
->
èû
()->
has_löe_„ed
(
√xtNode
.
gŸ_löe_„ed
);

266 
	gpCuºít
 = 
pCuºít
->
èû
();

270 
	gthrow
 "TheÇodeÅo convert's children must be only combinators or selectors.";

275 
Compound_Sñe˘‹
* 
	gÁkeHód
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
P¨£rSèã
("[NODE]"), 1);

276 
P¨ít_Sñe˘‹
* 
	g£À˘‹Ref
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, P¨ít_Sñe˘‹, 
P¨£rSèã
("[NODE]"));

277 
	gÁkeHód
->
ñemíts
().
push_back
(
£À˘‹Ref
);

278 i‡(
	gtoC⁄vît
.
	ggŸ_löe_„ed
Ë
	gpFú°
->
has_löe_„ed
(
toC⁄vît
.
gŸ_löe_„ed
);

280 
	gpFú°
->
hód
(
ÁkeHód
);

281  
	gpFú°
;

286 
Node
 
	gNode
::
«iveTrim
(Node& 
£q£s
, 
C⁄ãxt
& 
˘x
) {

288 
	g°d
::
ve˘‹
<
Node
*> 
ªs
;

289 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*> 
known
;

291 
	gNodeDeque
::
ªvî£_ôî©‹
 
£q£sIãr
 = 
£q£s
.
cﬁÀ˘i⁄
()->
rbegö
(),

292 
	g£q£sIãrEnd
 = 
£q£s
.
cﬁÀ˘i⁄
()->
ªnd
();

294 ; 
	g£q£sIãr
 !
£q£sIãrEnd
; ++seqsesIter)

296 
	gNode
& 
	g£qs1
 = *
£q£sIãr
;

297 if–
	g£qs1
.
isSñe˘‹
() ) {

298 
Com∂ex_Sñe˘‹
* 
	g£l
 = 
£qs1
.
£À˘‹
();

299 
	g°d
::
ve˘‹
<
Com∂ex_Sñe˘‹
*>::
ôî©‹
 
ô
;

300 
boﬁ
 
	gfound
 = 
Ál£
;

301 
	gô
 = 
known
.
begö
(); ià!known.
íd
(); ++it) {

302 i‡(**
	gô
 =*
£l
Ë{ 
found
 = 
åue
; ; }

304 if–!
	gfound
 ) {

305 
	gknown
.
push_back
(
£qs1
.
£À˘‹
());

306 
	gªs
.
push_back
(&
£qs1
);

309 
	gªs
.
push_back
(&
£qs1
);

313 
Node
 
	gªsu…
 = Node::
¸óãCﬁÀ˘i⁄
();

315 
size_t
 
	gi
 = 
ªs
.
size
(Ë- 1; i !
°d
::
°rög
::
≈os
; --i) {

316 
	gªsu…
.
cﬁÀ˘i⁄
()->
push_back
(*
ªs
[
i
]);

319  
	gªsu…
;

	@node_modules/node-sass/src/libsass/src/node.hpp

1 #i‚de‡
SASS_NODE_H


2 
	#SASS_NODE_H


	)

4 
	~<deque
>

5 
	~<mem‹y
>

7 
	~"a°.hµ
"

10 
«me•a˚
 
	gSass
 {

15 
˛ass
 
	gC⁄ãxt
;

33 
˛ass
 
	gNode
;

34 
	g°d
::
	tdeque
<
	tNode
> 
	tNodeDeque
;

35 
	g°d
::
	tsh¨ed_±r
<
	tNodeDeque
> 
	tNodeDequePå
;

37 ˛as†
	cNode
 {

38 
	gpublic
:

39 
	eTYPE
 {

40 
SELECTOR
,

41 
	gCOMBINATOR
,

42 
	gCOLLECTION
,

43 
	gNIL


46 
TYPE
 
ty≥
(Ëc⁄° {  
	gmTy≥
; }

47 
boﬁ
 
isCombö©‹
(Ëc⁄° {  
	gmTy≥
 =
COMBINATOR
; }

48 
boﬁ
 
isSñe˘‹
(Ëc⁄° {  
	gmTy≥
 =
SELECTOR
; }

49 
boﬁ
 
isCﬁÀ˘i⁄
(Ëc⁄° {  
	gmTy≥
 =
COLLECTION
; }

50 
boﬁ
 
isNû
(Ëc⁄° {  
	gmTy≥
 =
NIL
; }

51 
boﬁ
 
	ggŸ_löe_„ed
;

53 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
(Ëc⁄° {  
mCombö©‹
; }

55 
Com∂ex_Sñe˘‹
* 
£À˘‹
(Ë{  
	gmpSñe˘‹
; }

56 c⁄° 
Com∂ex_Sñe˘‹
* 
£À˘‹
(Ëc⁄° {  
	gmpSñe˘‹
; }

58 
NodeDequePå
 
cﬁÀ˘i⁄
(Ë{  
	gmpCﬁÀ˘i⁄
; }

59 c⁄° 
NodeDequePå
 
cﬁÀ˘i⁄
(Ëc⁄° {  
	gmpCﬁÀ˘i⁄
; }

61 
Node
 
¸óãCombö©‹
(c⁄° 
Com∂ex_Sñe˘‹
::
Combö©‹
& 
combö©‹
);

64 
Node
 
¸óãSñe˘‹
(
Com∂ex_Sñe˘‹
* 
pSñe˘‹
, 
C⁄ãxt
& 
˘x
);

66 
Node
 
¸óãCﬁÀ˘i⁄
();

67 
Node
 
¸óãCﬁÀ˘i⁄
(c⁄° 
NodeDeque
& 
vÆues
);

69 
Node
 
¸óãNû
();

70 
Node
 
«iveTrim
(Node& 
£q£s
, 
C⁄ãxt
& 
˘x
);

72 
Node
 
˛⁄e
(
C⁄ãxt
& 
˘x
) const;

74 
boﬁ
 
	g›î©‹
==(c⁄° 
Node
& 
rhs
) const;

75 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Node
& 
rhs
Ëc⁄° {  !(*
this
 ==Ñhs); }

89 
∂us
(
Node
& 
rhs
);

94 
boﬁ
 
c⁄èös
(c⁄° 
Node
& 
pŸítülChûd
, boﬁ 
sim∂eSñe˘‹OrdîDïídít
) const;

96 
	g¥iv©e
:

100 
Node
(c⁄° 
TYPE
& 
ty≥
, 
Com∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
, Com∂ex_Sñe˘‹* 
pSñe˘‹
, 
NodeDequePå
& 
pCﬁÀ˘i⁄
);

102 
TYPE
 
	gmTy≥
;

105 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
mCombö©‹
;

106 
Com∂ex_Sñe˘‹
* 
	gmpSñe˘‹
;

107 
NodeDequePå
 
	gmpCﬁÀ˘i⁄
;

110 #ifde‡
DEBUG


111 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
, c⁄° 
	gNode
& 
	gnode
);

113 
Node
 
com∂exSñe˘‹ToNode
(
Com∂ex_Sñe˘‹
* 
pToC⁄vît
, 
C⁄ãxt
& 
˘x
);

114 
Com∂ex_Sñe˘‹
* 
nodeToCom∂exSñe˘‹
(c⁄° 
Node
& 
toC⁄vît
, 
C⁄ãxt
& 
˘x
);

116 
boﬁ
 
nodesEquÆ
(c⁄° 
Node
& 
⁄e
, c⁄° Node& 
two
, boﬁ 
sim∂eSñe˘‹OrdîDïídít
);

	@node_modules/node-sass/src/libsass/src/operation.hpp

1 #i‚de‡
SASS_OPERATION_H


2 
	#SASS_OPERATION_H


	)

4 
	~"a°_fwd_de˛.hµ
"

6 
«me•a˚
 
	gSass
 {

8 
	gãm∂©e
<
ty≥«me
 
	gT
>

9 ˛as†
	cO≥øti⁄
 {

10 
	gpublic
:

11 
vútuÆ
 
T
 
›î©‹
()(
AST_Node
* 
x
) = 0;

12 
	gvútuÆ
 ~
O≥øti⁄
() { }

14 
vútuÆ
 
T
 
›î©‹
()(
Block
* 
	gx
) = 0;

15 
vútuÆ
 
T
 
›î©‹
()(
RuÀ£t
* 
	gx
) = 0;

16 
vútuÆ
 
T
 
›î©‹
()(
Pr›£t
* 
	gx
) = 0;

17 
vútuÆ
 
T
 
›î©‹
()(
BubbÀ
* 
	gx
) = 0;

18 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_Block
* 
	gx
) = 0;

19 
vútuÆ
 
T
 
›î©‹
()(
Medü_Block
* 
	gx
) = 0;

20 
vútuÆ
 
T
 
›î©‹
()(
At_RoŸ_Block
* 
	gx
) = 0;

21 
vútuÆ
 
T
 
›î©‹
()(
Dúe˘ive
* 
	gx
) = 0;

22 
vútuÆ
 
T
 
›î©‹
()(
Key‰ame_RuÀ
* 
	gx
) = 0;

23 
vútuÆ
 
T
 
›î©‹
()(
De˛¨©i⁄
* 
	gx
) = 0;

24 
vútuÆ
 
T
 
›î©‹
()(
Assignmít
* 
	gx
) = 0;

25 
vútuÆ
 
T
 
›î©‹
()(
Imp‹t
* 
	gx
) = 0;

26 
vútuÆ
 
T
 
›î©‹
()(
Imp‹t_Stub
* 
	gx
) = 0;

27 
vútuÆ
 
T
 
›î©‹
()(
W¨nög
* 
	gx
) = 0;

28 
vútuÆ
 
T
 
›î©‹
()(
Eº‹
* 
	gx
) = 0;

29 
vútuÆ
 
T
 
›î©‹
()(
Debug
* 
	gx
) = 0;

30 
vútuÆ
 
T
 
›î©‹
()(
Commít
* 
	gx
) = 0;

31 
vútuÆ
 
T
 
›î©‹
()(
If
* 
	gx
) = 0;

32 
vútuÆ
 
T
 
›î©‹
()(
F‹
* 
	gx
) = 0;

33 
vútuÆ
 
T
 
›î©‹
()(
Each
* 
	gx
) = 0;

34 
vútuÆ
 
T
 
›î©‹
()(
Whûe
* 
	gx
) = 0;

35 
vútuÆ
 
T
 
›î©‹
()(
Rëu∫
* 
	gx
) = 0;

36 
vútuÆ
 
T
 
›î©‹
()(
C⁄ã¡
* 
	gx
) = 0;

37 
vútuÆ
 
T
 
›î©‹
()(
Exãnsi⁄
* 
	gx
) = 0;

38 
vútuÆ
 
T
 
›î©‹
()(
Deföôi⁄
* 
	gx
) = 0;

39 
vútuÆ
 
T
 
›î©‹
()(
Mixö_CÆl
* 
	gx
) = 0;

41 
vútuÆ
 
T
 
›î©‹
()(
Li°
* 
	gx
) = 0;

42 
vútuÆ
 
T
 
›î©‹
()(
M≠
* 
	gx
) = 0;

43 
vútuÆ
 
T
 
›î©‹
()(
Bö¨y_Ex¥essi⁄
* 
	gx
) = 0;

44 
vútuÆ
 
T
 
›î©‹
()(
U«ry_Ex¥essi⁄
* 
	gx
) = 0;

45 
vútuÆ
 
T
 
›î©‹
()(
Fun˘i⁄_CÆl
* 
	gx
) = 0;

46 
vútuÆ
 
T
 
›î©‹
()(
Fun˘i⁄_CÆl_Schema
* 
	gx
) = 0;

47 
vútuÆ
 
T
 
›î©‹
()(
Cu°om_W¨nög
* 
	gx
) = 0;

48 
vútuÆ
 
T
 
›î©‹
()(
Cu°om_Eº‹
* 
	gx
) = 0;

49 
vútuÆ
 
T
 
›î©‹
()(
V¨übÀ
* 
	gx
) = 0;

50 
vútuÆ
 
T
 
›î©‹
()(
TextuÆ
* 
	gx
) = 0;

51 
vútuÆ
 
T
 
›î©‹
()(
Numbî
* 
	gx
) = 0;

52 
vútuÆ
 
T
 
›î©‹
()(
Cﬁ‹
* 
	gx
) = 0;

53 
vútuÆ
 
T
 
›î©‹
()(
Boﬁón
* 
	gx
) = 0;

54 
vútuÆ
 
T
 
›î©‹
()(
Såög_Schema
* 
	gx
) = 0;

55 
vútuÆ
 
T
 
›î©‹
()(
Såög_QuŸed
* 
	gx
) = 0;

56 
vútuÆ
 
T
 
›î©‹
()(
Såög_C⁄°™t
* 
	gx
) = 0;

57 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_C⁄dôi⁄
* 
	gx
) = 0;

58 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_O≥øt‹
* 
	gx
) = 0;

59 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_Neg©i⁄
* 
	gx
) = 0;

60 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_De˛¨©i⁄
* 
	gx
) = 0;

61 
vútuÆ
 
T
 
›î©‹
()(
Suµ‹ts_I¡îpﬁ©i⁄
* 
	gx
) = 0;

62 
vútuÆ
 
T
 
›î©‹
()(
Medü_Quîy
* 
	gx
) = 0;

63 
vútuÆ
 
T
 
›î©‹
()(
Medü_Quîy_Ex¥essi⁄
* 
	gx
) = 0;

64 
vútuÆ
 
T
 
›î©‹
()(
At_RoŸ_Quîy
* 
	gx
) = 0;

65 
vútuÆ
 
T
 
›î©‹
()(
NuŒ
* 
	gx
) = 0;

66 
vútuÆ
 
T
 
›î©‹
()(
P¨ít_Sñe˘‹
* 
	gx
) = 0;

68 
vútuÆ
 
T
 
›î©‹
()(
P¨amëî
* 
	gx
) = 0;

69 
vútuÆ
 
T
 
›î©‹
()(
P¨amëîs
* 
	gx
) = 0;

70 
vútuÆ
 
T
 
›î©‹
()(
Argumít
* 
	gx
) = 0;

71 
vútuÆ
 
T
 
›î©‹
()(
Argumíts
* 
	gx
) = 0;

73 
vútuÆ
 
T
 
›î©‹
()(
Sñe˘‹_Schema
* 
	gx
) = 0;

74 
vútuÆ
 
T
 
›î©‹
()(
Sñe˘‹_Pœ˚hﬁdî
* 
	gx
) = 0;

75 
vútuÆ
 
T
 
›î©‹
()(
Ty≥_Sñe˘‹
* 
	gx
) = 0;

76 
vútuÆ
 
T
 
›î©‹
()(
Sñe˘‹_QuÆifõr
* 
	gx
) = 0;

77 
vútuÆ
 
T
 
›î©‹
()(
Aâribuã_Sñe˘‹
* 
	gx
) = 0;

78 
vútuÆ
 
T
 
›î©‹
()(
P£udo_Sñe˘‹
* 
	gx
) = 0;

79 
vútuÆ
 
T
 
›î©‹
()(
Wøµed_Sñe˘‹
* 
	gx
) = 0;

80 
vútuÆ
 
T
 
›î©‹
()(
Compound_Sñe˘‹
* 
	gx
) = 0;

81 
vútuÆ
 
T
 
›î©‹
()(
Com∂ex_Sñe˘‹
* 
	gx
) = 0;

82 
vútuÆ
 
T
 
›î©‹
()(
Sñe˘‹_Li°
* 
	gx
) = 0;

84 
	gãm∂©e
 <
ty≥«me
 
	gU
>

85 
T
 
ÁŒback
(
U
 
x
) {  T(); }

88 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gD
>

89 
˛ass
 
	gO≥øti⁄_CRTP
 : 
public
 
O≥øti⁄
<
T
> {

90 
public
:

91 
D
& 
im∂
(Ë{  
°©ic_ˇ°
<D&>(*
this
); }

92 
	gpublic
:

93 
T
 
›î©‹
()(
AST_Node
* 
x
Ë{  
°©ic_ˇ°
<
D
*>(
this
)->
ÁŒback
(x); }

95 
T
 
›î©‹
()(
Block
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

96 
T
 
›î©‹
()(
RuÀ£t
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

97 
T
 
›î©‹
()(
Pr›£t
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

98 
T
 
›î©‹
()(
BubbÀ
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

99 
T
 
›î©‹
()(
Suµ‹ts_Block
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

100 
T
 
›î©‹
()(
Medü_Block
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

101 
T
 
›î©‹
()(
At_RoŸ_Block
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

102 
T
 
›î©‹
()(
Dúe˘ive
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

103 
T
 
›î©‹
()(
Key‰ame_RuÀ
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

104 
T
 
›î©‹
()(
De˛¨©i⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

105 
T
 
›î©‹
()(
Assignmít
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

106 
T
 
›î©‹
()(
Imp‹t
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

107 
T
 
›î©‹
()(
Imp‹t_Stub
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

108 
T
 
›î©‹
()(
W¨nög
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

109 
T
 
›î©‹
()(
Eº‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

110 
T
 
›î©‹
()(
Debug
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

111 
T
 
›î©‹
()(
Commít
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

112 
T
 
›î©‹
()(
If
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

113 
T
 
›î©‹
()(
F‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

114 
T
 
›î©‹
()(
Each
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

115 
T
 
›î©‹
()(
Whûe
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

116 
T
 
›î©‹
()(
Rëu∫
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

117 
T
 
›î©‹
()(
C⁄ã¡
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

118 
T
 
›î©‹
()(
Exãnsi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

119 
T
 
›î©‹
()(
Deföôi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

120 
T
 
›î©‹
()(
Mixö_CÆl
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

122 
T
 
›î©‹
()(
Li°
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

123 
T
 
›î©‹
()(
M≠
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

124 
T
 
›î©‹
()(
Bö¨y_Ex¥essi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

125 
T
 
›î©‹
()(
U«ry_Ex¥essi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

126 
T
 
›î©‹
()(
Fun˘i⁄_CÆl
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

127 
T
 
›î©‹
()(
Fun˘i⁄_CÆl_Schema
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

128 
T
 
›î©‹
()(
Cu°om_W¨nög
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

129 
T
 
›î©‹
()(
Cu°om_Eº‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

130 
T
 
›î©‹
()(
V¨übÀ
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

131 
T
 
›î©‹
()(
TextuÆ
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

132 
T
 
›î©‹
()(
Numbî
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

133 
T
 
›î©‹
()(
Cﬁ‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

134 
T
 
›î©‹
()(
Boﬁón
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

135 
T
 
›î©‹
()(
Såög_Schema
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

136 
T
 
›î©‹
()(
Såög_C⁄°™t
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

137 
T
 
›î©‹
()(
Såög_QuŸed
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

138 
T
 
›î©‹
()(
Suµ‹ts_C⁄dôi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

139 
T
 
›î©‹
()(
Suµ‹ts_O≥øt‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

140 
T
 
›î©‹
()(
Suµ‹ts_Neg©i⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

141 
T
 
›î©‹
()(
Suµ‹ts_De˛¨©i⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

142 
T
 
›î©‹
()(
Suµ‹ts_I¡îpﬁ©i⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

143 
T
 
›î©‹
()(
Medü_Quîy
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

144 
T
 
›î©‹
()(
Medü_Quîy_Ex¥essi⁄
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

145 
T
 
›î©‹
()(
At_RoŸ_Quîy
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

146 
T
 
›î©‹
()(
NuŒ
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

147 
T
 
›î©‹
()(
P¨ít_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

149 
T
 
›î©‹
()(
P¨amëî
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

150 
T
 
›î©‹
()(
P¨amëîs
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

151 
T
 
›î©‹
()(
Argumít
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

152 
T
 
›î©‹
()(
Argumíts
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

154 
T
 
›î©‹
()(
Sñe˘‹_Schema
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

155 
T
 
›î©‹
()(
Sñe˘‹_Pœ˚hﬁdî
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

156 
T
 
›î©‹
()(
Ty≥_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

157 
T
 
›î©‹
()(
Sñe˘‹_QuÆifõr
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

158 
T
 
›î©‹
()(
Aâribuã_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

159 
T
 
›î©‹
()(
P£udo_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

160 
T
 
›î©‹
()(
Wøµed_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

161 
T
 
›î©‹
()(
Compound_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

162 
T
 
›î©‹
()(
Com∂ex_Sñe˘‹
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

163 
T
 
›î©‹
()(
Sñe˘‹_Li°
* 
	gx
Ë{  
	g°©ic_ˇ°
<
	gD
*>(
	gthis
)->
ÁŒback
(
x
); }

165 
	gãm∂©e
 <
ty≥«me
 
	gU
>

166 
T
 
ÁŒback
(
U
 
x
) {  T(); }

	@node_modules/node-sass/src/libsass/src/output.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"ouçut.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
	gOuçut
::
Ouçut
(
Sass_Ouçut_O±i⁄s
& 
›t
)

8 : 
In•e˘
(
Emôãr
(
›t
)),

9 
ch¨£t
(""),

10 
t›_nodes
(0)

13 
	gOuçut
::~
Ouçut
() { }

15 
Ouçut
::
ÁŒback_im∂
(
AST_Node
* 
n
)

17  
n
->
≥rf‹m
(
this
);

20 
	gOuçut
::
›î©‹
()(
Numbî
* 
n
)

23 
°d
::
°rög
 
ªs
 = 
n
->
to_°rög
(
›t
);

26 i‡(!
	gn
->
is_vÆid_css_unô
()) {

27 
throw
 
	gEx˚±i⁄
::
InvÆidVÆue
(*
n
);

30 
≠≥nd_tokí
(
ªs
, 
n
);

33 
	gOuçut
::
›î©‹
()(
Imp‹t
* 
imp
)

35 
t›_nodes
.
push_back
(
imp
);

38 
	gOuçut
::
›î©‹
()(
M≠
* 
m
)

40 
°d
::
°rög
 
dbg
(
m
->
to_°rög
(
›t
));

41 
îr‹
(
dbg
 + " i¢'à®vÆid CSS vÆue.", 
m
->
p°©e
());

44 
OuçutBuf„r
 
	gOuçut
::
gë_buf„r
()

47 
Emôãr
 
emôãr
(
›t
);

48 
In•e˘
 
ö•e˘
(
emôãr
);

50 
size_t
 
	gsize_nodes
 = 
t›_nodes
.
size
();

51 
size_t
 
	gi
 = 0; i < 
	gsize_nodes
; i++) {

52 
	gt›_nodes
[
i
]->
≥rf‹m
(&
ö•e˘
);

53 
	gö•e˘
.
≠≥nd_m™d©‹y_löe„ed
();

58 
	gö•e˘
.
föÆize
(
wbuf
.
buf„r
.
size
() == 0);

60 
¥ïíd_ouçut
(
ö•e˘
.
ouçut
());

62 i‡(!
íds_wôh
(
wbuf
.
buf„r
, 
›t
.
löe„ed
)) {

64 i‡(!
	gwbuf
.
	gbuf„r
.
em±y
()Ë
≠≥nd_°rög
(
›t
.
löe„ed
);

68 c⁄° & 
	gchr
 : 
wbuf
.
buf„r
) {

71 i‡(
°©ic_ˇ°
<>(
chr
) < 128) ;

73 i‡(
ouçut_°yÀ
(Ë!
COMPRESSED
)

74 
ch¨£t
 = "@charset \"UTF-8\";"

75 + 
°d
::
°rög
(
›t
.
löe„ed
);

76 
	gch¨£t
 = "\xEF\xBB\xBF";

82 i‡(!
	gch¨£t
.
em±y
()Ë
¥ïíd_°rög
(
ch¨£t
);

84  
	gwbuf
;

88 
	gOuçut
::
›î©‹
()(
Commít
* 
c
)

90 
°d
::
°rög
 
txt
 = 
c
->
ãxt
()->
to_°rög
(
›t
);

92 
boﬁ
 
	gimp‹è¡
 = 
c
->
is_imp‹è¡
();

93 i‡(
ouçut_°yÀ
(Ë!
COMPRESSED
 || 
imp‹è¡
) {

94 i‡(
buf„r
().
size
() == 0) {

95 
t›_nodes
.
push_back
(
c
);

97 
	gö_commít
 = 
åue
;

98 
≠≥nd_ödíèti⁄
();

99 
	gc
->
ãxt
()->
≥rf‹m
(
this
);

100 
	gö_commít
 = 
Ál£
;

101 i‡(
	gödíèti⁄
 == 0) {

102 
≠≥nd_m™d©‹y_löe„ed
();

104 
≠≥nd_›ti⁄Æ_löe„ed
();

110 
	gOuçut
::
›î©‹
()(
RuÀ£t
* 
r
)

112 
Sñe˘‹
* 
s
 = 
r
->
£À˘‹
();

113 
Block
* 
	gb
 = 
r
->
block
();

114 
boﬁ
 
	gde˛s
 = 
Ál£
;

117 i‡(!
	gUtû
::
isPröèbÀ
(
r
, 
ouçut_°yÀ
())) {

118 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

119 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

120 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
)) {

121 
	g°m
->
≥rf‹m
(
this
);

127 i‡(
	gb
->
has_n⁄_hoi°abÀ
()) {

128 
	gde˛s
 = 
åue
;

129 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 +
r
->
èbs
();

130 i‡(
	g›t
.
	gsour˚_commíts
) {

131 
	g°d
::
°rög°ªam
 
ss
;

132 
≠≥nd_ödíèti⁄
();

133 
	gss
 << "/*Üöê" << 
	gr
->
p°©e
().
	glöe
 + 1 << ", " <<Ñ->p°©e().
	g∑th
 << " */";

134 
≠≥nd_°rög
(
ss
.
°r
());

135 
≠≥nd_›ti⁄Æ_löe„ed
();

137 
	gs
->
≥rf‹m
(
this
);

138 
≠≥nd_sc›e_›íî
(
b
);

139 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

140 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

141 
boﬁ
 
	gbPrötEx¥essi⁄
 = 
åue
;

143 i‡(
ty≥id
(*
°m
Ë=ty≥id(
De˛¨©i⁄
)) {

144 
De˛¨©i⁄
* 
dec
 = 
°©ic_ˇ°
<De˛¨©i⁄*>(
°m
);

145 i‡(
	gdec
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
) {

146 
Såög_C⁄°™t
* 
vÆC⁄°
 = 
°©ic_ˇ°
<Såög_C⁄°™t*>(
dec
->
vÆue
());

147 
	g°d
::
°rög
 
vÆ
(
vÆC⁄°
->
vÆue
());

148 i‡◊utÿ
	gq°r
 = 
dy«mic_ˇ°
<
Såög_QuŸed
*>(
vÆC⁄°
)) {

149 i‡(!
q°r
->
quŸe_m¨k
(Ë&& 
vÆ
.
em±y
()) {

150 
bPrötEx¥essi⁄
 = 
Ál£
;

154 i‡(
	gdec
->
vÆue
()->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
) {

155 
Li°
* 
li°
 = 
°©ic_ˇ°
<Li°*>(
dec
->
vÆue
());

156 
boﬁ
 
	gÆl_övisibÀ
 = 
åue
;

157 
size_t
 
	gli°_i
 = 0, 
	gli°_L
 = 
li°
->
Àngth
();Üist_i <Üist_L; ++list_i) {

158 
Ex¥essi⁄
* 
	gôem
 = (*
li°
)[
li°_i
];

159 i‡(!
	gôem
->
is_övisibÀ
()Ë
	gÆl_övisibÀ
 = 
Ál£
;

161 i‡(
	gÆl_övisibÀ
Ë
	gbPrötEx¥essi⁄
 = 
Ál£
;

165 i‡(!
	g°m
->
is_hoi°abÀ
(Ë&& 
	gbPrötEx¥essi⁄
) {

166 
	g°m
->
≥rf‹m
(
this
);

169 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 -
r
->
èbs
();

170 
≠≥nd_sc›e_˛o£r
(
b
);

173 i‡(
	gb
->
has_hoi°abÀ
()) {

174 i‡(
	gde˛s
Ë++
	gödíèti⁄
;

175 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

176 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

177 i‡(
	g°m
->
is_hoi°abÀ
()) {

178 
	g°m
->
≥rf‹m
(
this
);

181 i‡(
	gde˛s
Ë--
	gödíèti⁄
;

185 
	gOuçut
::
›î©‹
()(
Key‰ame_RuÀ
* 
r
)

187 
Block
* 
b
 = 
r
->
block
();

188 
Sñe˘‹
* 
	gv
 = 
r
->
£À˘‹
();

190 i‡(
	gv
) {

191 
	gv
->
≥rf‹m
(
this
);

194 i‡(!
	gb
) {

195 
≠≥nd_cﬁ⁄_£∑øt‹
();

199 
≠≥nd_sc›e_›íî
();

200 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

201 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

202 i‡(!
	g°m
->
is_hoi°abÀ
()) {

203 
	g°m
->
≥rf‹m
(
this
);

204 i‡(
	gi
 < 
	gL
 - 1Ë
≠≥nd_•ecül_löe„ed
();

208 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

209 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

210 i‡(
	g°m
->
is_hoi°abÀ
()) {

211 
	g°m
->
≥rf‹m
(
this
);

215 
≠≥nd_sc›e_˛o£r
();

218 
	gOuçut
::
›î©‹
()(
Suµ‹ts_Block
* 
f
)

220 i‡(
f
->
is_övisibÀ
()) ;

222 
Suµ‹ts_C⁄dôi⁄
* 
	gc
 = 
f
->
c⁄dôi⁄
();

223 
Block
* 
	gb
 = 
f
->
block
();

226 i‡(!
	gUtû
::
isPröèbÀ
(
f
, 
ouçut_°yÀ
())) {

227 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

228 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

229 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
)) {

230 
	g°m
->
≥rf‹m
(
this
);

236 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 +
f
->
èbs
();

237 
≠≥nd_ödíèti⁄
();

238 
≠≥nd_tokí
("@suµ‹ts", 
f
);

239 
≠≥nd_m™d©‹y_•a˚
();

240 
	gc
->
≥rf‹m
(
this
);

241 
≠≥nd_sc›e_›íî
();

243 i‡(
	gb
->
has_n⁄_hoi°abÀ
()) {

245 
≠≥nd_sc›e_›íî
();

247 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

248 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

249 i‡(!
	g°m
->
is_hoi°abÀ
()) {

250 
	g°m
->
≥rf‹m
(
this
);

254 
≠≥nd_sc›e_˛o£r
();

256 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

257 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

258 i‡(
	g°m
->
is_hoi°abÀ
()) {

259 
	g°m
->
≥rf‹m
(
this
);

265 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

266 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

267 
	g°m
->
≥rf‹m
(
this
);

268 i‡(
	gi
 < 
	gL
 - 1Ë
≠≥nd_•ecül_löe„ed
();

272 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 -
f
->
èbs
();

274 
≠≥nd_sc›e_˛o£r
();

278 
	gOuçut
::
›î©‹
()(
Medü_Block
* 
m
)

280 i‡(
m
->
is_övisibÀ
()) ;

282 
Li°
* 
	gq
 = 
m
->
medü_quîõs
();

283 
Block
* 
	gb
 = 
m
->
block
();

286 i‡(!
	gUtû
::
isPröèbÀ
(
m
, 
ouçut_°yÀ
())) {

287 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

288 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

289 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
)) {

290 
	g°m
->
≥rf‹m
(
this
);

295 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 +
m
->
èbs
();

296 
≠≥nd_ödíèti⁄
();

297 
≠≥nd_tokí
("@medü", 
m
);

298 
≠≥nd_m™d©‹y_•a˚
();

299 
	gö_medü_block
 = 
åue
;

300 
	gq
->
≥rf‹m
(
this
);

301 
	gö_medü_block
 = 
Ál£
;

302 
≠≥nd_sc›e_›íî
();

304 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

305 i‡((*
	gb
)[
i
]Ë(*b)[i]->
≥rf‹m
(
this
);

306 i‡(
	gi
 < 
	gL
 - 1Ë
≠≥nd_•ecül_löe„ed
();

309 i‡(
ouçut_°yÀ
(Ë=
NESTED
Ë
ödíèti⁄
 -
m
->
èbs
();

310 
≠≥nd_sc›e_˛o£r
();

313 
	gOuçut
::
›î©‹
()(
Dúe˘ive
* 
a
)

315 
°d
::
°rög
 
kwd
 = 
a
->
keyw‹d
();

316 
Sñe˘‹
* 
	gs
 = 
a
->
£À˘‹
();

317 
Ex¥essi⁄
* 
	gv
 = 
a
->
vÆue
();

318 
Block
* 
	gb
 = 
a
->
block
();

320 
≠≥nd_ödíèti⁄
();

321 
≠≥nd_tokí
(
kwd
, 
a
);

322 i‡(
	gs
) {

323 
≠≥nd_m™d©‹y_•a˚
();

324 
	gö_wøµed
 = 
åue
;

325 
	gs
->
≥rf‹m
(
this
);

326 
	gö_wøµed
 = 
Ál£
;

328 i‡(
	gv
) {

329 
≠≥nd_m™d©‹y_•a˚
();

331 
≠≥nd_tokí
(
v
->
to_°rög
( ), v);

333 i‡(!
	gb
) {

334 
≠≥nd_dñimôî
();

338 i‡(
	gb
->
is_övisibÀ
(Ë|| b->
Àngth
() == 0) {

339 
≠≥nd_›ti⁄Æ_•a˚
();

340  
≠≥nd_°rög
("{}");

343 
≠≥nd_sc›e_›íî
();

345 
boﬁ
 
	gf‹m©
 = 
kwd
 != "@font-face";;

347 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

348 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

349 i‡(!
	g°m
->
is_hoi°abÀ
()) {

350 
	g°m
->
≥rf‹m
(
this
);

351 i‡(
	gi
 < 
	gL
 - 1 && 
	gf‹m©
Ë
≠≥nd_•ecül_löe„ed
();

355 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

356 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

357 i‡(
	g°m
->
is_hoi°abÀ
()) {

358 
	g°m
->
≥rf‹m
(
this
);

359 i‡(
	gi
 < 
	gL
 - 1 && 
	gf‹m©
Ë
≠≥nd_•ecül_löe„ed
();

363 
≠≥nd_sc›e_˛o£r
();

366 
	gOuçut
::
›î©‹
()(
Såög_QuŸed
* 
s
)

368 i‡(
s
->
quŸe_m¨k
()) {

369 
≠≥nd_tokí
(
quŸe
(
s
->
vÆue
(), s->
quŸe_m¨k
()), s);

370 } i‡(!
	gö_commít
) {

371 
≠≥nd_tokí
(
°rög_to_ouçut
(
s
->
vÆue
()), s);

373 
≠≥nd_tokí
(
s
->
vÆue
(), s);

377 
	gOuçut
::
›î©‹
()(
Såög_C⁄°™t
* 
s
)

379 
°d
::
°rög
 
vÆue
(
s
->value());

380 i‡(
	gs
->
ˇn_com¥ess_whôe•a˚
(Ë&& 
ouçut_°yÀ
(Ë=
COMPRESSED
) {

381 
vÆue
.
îa£
(
°d
::
ªmove_if
(vÆue.
begö
(), vÆue.
íd
(), ::
is•a˚
), value.end());

383 i‡(!
	gö_commít
) {

384 
≠≥nd_tokí
(
°rög_to_ouçut
(
vÆue
), 
s
);

386 
≠≥nd_tokí
(
vÆue
, 
s
);

	@node_modules/node-sass/src/libsass/src/output.hpp

1 #i‚de‡
SASS_OUTPUT_H


2 
	#SASS_OUTPUT_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

7 
	~"utû.hµ
"

8 
	~"ö•e˘.hµ
"

9 
	~"›î©i⁄.hµ
"

11 
«me•a˚
 
	gSass
 {

12 
˛ass
 
	gC⁄ãxt
;

15 
ölöe
 
boﬁ
 
íds_wôh
(
°d
::
°rög
 c⁄° & 
vÆue
, std::°rög c⁄° & 
ídög
)

17 i‡(
ídög
.
size
(Ë> 
vÆue
.size()Ë 
Ál£
;

18  
	g°d
::
equÆ
(
ídög
.
rbegö
(),Éndög.
ªnd
(), 
vÆue
.rbegin());

21 ˛as†
	cOuçut
 : 
public
 
In•e˘
 {

22 
¥Ÿe˘ed
:

23 
usög
 
In•e˘
::
›î©‹
();

25 
	gpublic
:

26 
Ouçut
(
Sass_Ouçut_O±i⁄s
& 
›t
);

27 
	gvútuÆ
 ~
Ouçut
();

29 
	g¥Ÿe˘ed
:

30 
°d
::
°rög
 
ch¨£t
;

31 
	g°d
::
ve˘‹
<
AST_Node
*> 
t›_nodes
;

33 
	gpublic
:

34 
OuçutBuf„r
 
gë_buf„r
();

36 
vútuÆ
 
›î©‹
()(
	gM≠
*);

37 
vútuÆ
 
›î©‹
()(
	gRuÀ£t
*);

39 
vútuÆ
 
›î©‹
()(
	gSuµ‹ts_Block
*);

40 
vútuÆ
 
›î©‹
()(
	gMedü_Block
*);

41 
vútuÆ
 
›î©‹
()(
	gDúe˘ive
*);

42 
vútuÆ
 
›î©‹
()(
	gKey‰ame_RuÀ
*);

43 
vútuÆ
 
›î©‹
()(
	gImp‹t
*);

44 
vútuÆ
 
›î©‹
()(
	gCommít
*);

45 
vútuÆ
 
›î©‹
()(
	gNumbî
*);

46 
vútuÆ
 
›î©‹
()(
	gSåög_QuŸed
*);

47 
vútuÆ
 
›î©‹
()(
	gSåög_C⁄°™t
*);

49 
ÁŒback_im∂
(
AST_Node
* 
n
);

	@node_modules/node-sass/src/libsass/src/parser.cpp

1 
	~"ßss.hµ
"

2 
	~<c°dlib
>

3 
	~<io°ªam
>

4 
	~<ve˘‹
>

5 
	~"∑r£r.hµ
"

6 
	~"fûe.hµ
"

7 
	~"ö•e˘.hµ
"

8 
	~"c⁄°™ts.hµ
"

9 
	~"utû.hµ
"

10 
	~"¥ñexî.hµ
"

11 
	~"cﬁ‹_m≠s.hµ
"

12 
	~"ßss/fun˘i⁄s.h
"

13 
	~"îr‹_h™dlög.hµ
"

15 
	~<ty≥öfo
>

16 
	~<tu∂e
>

18 
«me•a˚
 
	gSass
 {

19 
usög
 
«me•a˚
 
	gC⁄°™ts
;

20 
usög
 
«me•a˚
 
	gPªÀxî
;

22 
P¨£r
 
	gP¨£r
::
‰om_c_°r
(c⁄° * 
beg
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
, c⁄° * 
sour˚
)

24 
P¨£r
 
p
(
˘x
, 
p°©e
);

25 
	gp
.
	gsour˚
 = 
sour˚
 ? sour˚ : 
beg
;

26 
	gp
.
	gposôi⁄
 = 
beg
 ? beg : 
p
.
sour˚
;

27 
	gp
.
	gíd
 = 
p
.
posôi⁄
 + 
°æí
(p.position);

28 
Block
* 
	groŸ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
p°©e
);

29 
	gp
.
	gblock_°ack
.
push_back
(
roŸ
);

30 
	groŸ
->
is_roŸ
(
åue
);

31  
	gp
;

34 
P¨£r
 
	gP¨£r
::
‰om_c_°r
(c⁄° * 
beg
, c⁄° * 
íd
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
, c⁄° * 
sour˚
)

36 
P¨£r
 
p
(
˘x
, 
p°©e
);

37 
	gp
.
	gsour˚
 = 
sour˚
 ? sour˚ : 
beg
;

38 
	gp
.
	gposôi⁄
 = 
beg
 ? beg : 
p
.
sour˚
;

39 
	gp
.
	gíd
 = 
íd
 ?Énd : 
p
.
posôi⁄
 + 
°æí
(p.position);

40 
Block
* 
	groŸ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
p°©e
);

41 
	gp
.
	gblock_°ack
.
push_back
(
roŸ
);

42 
	groŸ
->
is_roŸ
(
åue
);

43  
	gp
;

46 
Sñe˘‹_Li°
* 
	gP¨£r
::
∑r£_£À˘‹
(c⁄° * 
beg
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
, c⁄° * 
sour˚
)

48 
P¨£r
 
	gp
 = P¨£r::
‰om_c_°r
(
beg
, 
˘x
, 
p°©e
, 
sour˚
);

51  
	gp
.
∑r£_£À˘‹_li°
(
Ál£
);

54 
boﬁ
 
	gP¨£r
::
≥ek_√wlöe
(c⁄° * 
°¨t
)

56  
≥ek_löe„ed
(
°¨t
 ? sèπ : 
posôi⁄
)

57 && ! 
≥ek_css
<
exa˘ly
<'{'>>(
°¨t
);

60 
P¨£r
 
	gP¨£r
::
‰om_tokí
(
Tokí
 
t
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
, c⁄° * 
sour˚
)

62 
P¨£r
 
p
(
˘x
, 
p°©e
);

63 
	gp
.
	gsour˚
 = 
sour˚
 ? sour˚ : 
t
.
begö
;

64 
	gp
.
	gposôi⁄
 = 
t
.
begö
 ?Å.begö : 
p
.
sour˚
;

65 
	gp
.
	gíd
 = 
t
.
íd
 ?Å.íd : 
p
.
posôi⁄
 + 
°æí
(p.position);

66 
Block
* 
	groŸ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
p°©e
);

67 
	gp
.
	gblock_°ack
.
push_back
(
roŸ
);

68 
	groŸ
->
is_roŸ
(
åue
);

69  
	gp
;

73 
Block
* 
	gP¨£r
::
∑r£
()

75 
boﬁ
 
is_roŸ
 = 
Ál£
;

76 
Block
* 
	groŸ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
p°©e
, 0, 
åue
);

77 
ªad_bom
();

80 i‡(
	g˘x
.
	gªsour˚s
.
size
() == 1) {

81 
is_roŸ
 = 
åue
;

82 
	g˘x
.
≠∂y_cu°om_hódîs
(
roŸ
, 
∑th
, 
p°©e
);

85 
	gblock_°ack
.
push_back
(
roŸ
);

86  
∑r£_block_nodes
(
is_roŸ
);

87 
	gblock_°ack
.
p›_back
();

90 
	groŸ
->
upd©e_p°©e
(
p°©e
);

92 i‡(
	gposôi⁄
 !
íd
) {

93 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected selector orát-rule, was ");

96  
	groŸ
;

103 
Block
* 
	gP¨£r
::
∑r£_css_block
(
boﬁ
 
is_roŸ
)

110 i‡(!
Àx_css
 < 
exa˘ly
<'{'> >()) {

111 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"{\", was ");

114 
Block
* 
	gblock
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Block, 
p°©e
, 0, 
is_roŸ
);

115 
	gblock_°ack
.
push_back
(
block
);

117 i‡(!
∑r£_block_nodes
()Ë
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"}\", was ");;

119 i‡(!
	gÀx_css
 < 
	gexa˘ly
<'}'> >()) {

120 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"}\", was ");

124 
	gblock
->
upd©e_p°©e
(
p°©e
);

129 
	gblock_°ack
.
p›_back
();

131  
	gblock
;

137 
Block
* 
	gP¨£r
::
∑r£_block
(
boﬁ
 
is_roŸ
)

139 
LOCAL_FLAG
(
ö_©_roŸ
, 
is_roŸ
);

140  
∑r£_css_block
(
is_roŸ
);

145 
boﬁ
 
	gP¨£r
::
∑r£_block_nodes
(boﬁ 
is_roŸ
)

149 
posôi⁄
 < 
íd
) {

152 
∑r£_block_commíts
();

153 
	gÀx
 < 
	gcss_whôe•a˚
 >();

155 i‡(
	gÀx
 < 
	gexa˘ly
<';'> >()) ;

156 i‡(
	g≥ek
 < 
	gíd_of_fûe
 >()Ë 
	gåue
;

157 i‡(
	g≥ek
 < 
	gexa˘ly
<'}'> >()Ë 
	gåue
;

159 i‡(
∑r£_block_node
(
is_roŸ
)) ;

161 
∑r£_block_commíts
();

163 i‡(
	gÀx_css
 < 
	gexa˘ly
<';'> >()) ;

164 i‡(
	g≥ek_css
 < 
	gíd_of_fûe
 >()Ë 
	gåue
;

165 i‡(
	g≥ek_css
 < 
	gexa˘ly
<'}'> >()Ë 
	gåue
;

168  
	gÁl£
;

171  
	gåue
;

176 
boﬁ
 
	gP¨£r
::
∑r£_block_node
(boﬁ 
is_roŸ
) {

178 
Block
* 
block
 = 
block_°ack
.
back
();

180 
∑r£_block_commíts
();

184 
	gÀx
 < 
	gcss_whôe•a˚
 >();

186 
Lookahód
 
	glookahód_ªsu…
;

191 i‡(
	gÀx
 < 
	gv¨übÀ
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_assignmít
(); }

192 i‡(
	gÀx
 < 
	gkwd_îr
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_îr‹
(); }

193 i‡(
	gÀx
 < 
	gkwd_dbg
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_debug
(); }

194 i‡(
	gÀx
 < 
	gkwd_w¨n
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_w¨nög
(); }

195 i‡(
	gÀx
 < 
	gkwd_if_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_if_dúe˘ive
(); }

196 i‡(
	gÀx
 < 
	gkwd_f‹_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_f‹_dúe˘ive
(); }

197 i‡(
	gÀx
 < 
	gkwd_óch_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_óch_dúe˘ive
(); }

198 i‡(
	gÀx
 < 
	gkwd_whûe_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_whûe_dúe˘ive
(); }

199 i‡(
	gÀx
 < 
	gkwd_ªtu∫_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_ªtu∫_dúe˘ive
(); }

202 i‡(
	g°ack
.
back
(Ë=
Sc›e
::
Fun˘i⁄
) {

203 
îr‹
("Fun˘i⁄†ˇ¿⁄ly c⁄èö v¨übÀ de˛¨©i⁄†™d c⁄åﬁ dúe˘ives.", 
p°©e
);

207 i‡(
	gÀx
 < 
	gkwd_imp‹t
 >(
	gåue
)) {

208 
Sc›e
 
	g∑ª¡
 = 
°ack
.
em±y
(Ë? Sc›e::
RuÀs
 : sèck.
back
();

209 i‡(
	g∑ª¡
 !
Sc›e
::
Fun˘i⁄
 && 
∑ª¡
 !Sc›e::
RoŸ
 &&Ö¨íà!Sc›e::
RuÀs
 &&Ö¨íà!Sc›e::
Medü
) {

210 i‡(! 
≥ek_css
< 
uri_¥efix
 >(
posôi⁄
)) {

211 
îr‹
("Imp‹àdúe˘ive†mayÇŸ bêu£d wôhö c⁄åﬁ dúe˘ive†‹ mixös.", 
p°©e
);

214 
Imp‹t
* 
	gimp
 = 
∑r£_imp‹t
();

216 i‡(!
	gimp
->
uæs
().
em±y
()Ë(*
	gblock
) << imp;

218 
size_t
 
	gi
 = 0, 
	gS
 = 
imp
->
öcs
().
size
(); i < S; ++i) {

219 (*
	gblock
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Imp‹t_Stub
, 
p°©e
, 
imp
->
öcs
()[
i
]);

223 i‡(
	gÀx
 < 
	gkwd_exãnd
 >(
	gåue
)) {

224 i‡(
	gblock
->
is_roŸ
()) {

225 
îr‹
("Exãnd dúe˘ive†may o∆y bêu£d wôhöÑuÀs.", 
p°©e
);

228 
Lookahód
 
	glookahód
 = 
lookahód_f‹_ö˛ude
(
posôi⁄
);

229 i‡(!
	glookahód
.
	gfound
Ë
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected selector, was ");

230 
Sñe˘‹
* 
	gèrgë
;

231 i‡(
	glookahód
.
	ghas_öãΩﬁ™ts
Ë
	gèrgë
 = 
∑r£_£À˘‹_schema
(
lookahód
.
found
);

232 
	gèrgë
 = 
∑r£_£À˘‹_li°
(
åue
);

233 (*
	gblock
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Exãnsi⁄
, 
p°©e
, 
èrgë
);

237 i‡(!(
	glookahód_ªsu…
 = 
lookahód_f‹_£À˘‹
(
posôi⁄
)).
îr‹
)

238 { (*
block
Ë<< 
∑r£_ruÀ£t
(
lookahód_ªsu…
, 
is_roŸ
); }

241 i‡(
	gÀx
 < 
	gkwd_medü
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_medü_block
(); }

242 i‡(
	gÀx
 < 
	gkwd_©_roŸ
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_©_roŸ_block
(); }

243 i‡(
	gÀx
 < 
	gkwd_ö˛ude_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_ö˛ude_dúe˘ive
(); }

244 i‡(
	gÀx
 < 
	gkwd_c⁄ã¡_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_c⁄ã¡_dúe˘ive
(); }

245 i‡(
	gÀx
 < 
	gkwd_suµ‹ts_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_suµ‹ts_dúe˘ive
(); }

246 i‡(
	gÀx
 < 
	gkwd_mixö
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_deföôi⁄
(
Deföôi⁄
::
MIXIN
); }

247 i‡(
	gÀx
 < 
	gkwd_fun˘i⁄
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_deföôi⁄
(
Deföôi⁄
::
FUNCTION
); }

250 i‡(
	gÀx
< 
	gkwd_ch¨£t_dúe˘ive
 >(
	gåue
)Ë{ 
∑r£_ch¨£t_dúe˘ive
(); }

253 i‡(
	gÀx
< 
	gª_•ecül_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_•ecül_dúe˘ive
(); }

254 i‡(
	gÀx
< 
	gª_¥efixed_dúe˘ive
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_¥efixed_dúe˘ive
(); }

255 i‡(
	gÀx
< 
	g©_keyw‹d
 >(
	gåue
)Ë{ (*
	gblock
Ë<< 
∑r£_dúe˘ive
(); }

257 i‡(
	gblock
->
is_roŸ
()) {

258 
	gÀx
< 
	gcss_whôe•a˚
 >();

259 i‡(
	gposôi⁄
 >
íd
Ë 
åue
;

260 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected 1 selector orát-rule, was ");

267 
De˛¨©i⁄
* 
	gde˛
 = 
∑r£_de˛¨©i⁄
();

268 
	gde˛
->
èbs
(
ödíèti⁄
);

269 (*
	gblock
Ë<< 
	gde˛
;

271 i‡(
	g≥ek
< 
	gexa˘ly
<'{'> >()) {

272 i‡(
	gde˛
->
is_ödíãd
()Ë++ 
	gödíèti⁄
;

274 
	g°ack
.
push_back
(
Sc›e
::
Pr›îtõs
);

275 (*
	gblock
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Pr›£t
, 
p°©e
, 
de˛
->
¥›îty
(), 
∑r£_block
());

276 
	g°ack
.
p›_back
();

277 i‡(
	gde˛
->
is_ödíãd
()Ë-- 
	gödíèti⁄
;

281  
	gåue
;

286 
Imp‹t
* 
	gP¨£r
::
∑r£_imp‹t
()

288 
Imp‹t
* 
imp
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Imp‹t, 
p°©e
);

289 
	g°d
::
ve˘‹
<
°d
::
∑ú
<°d::
°rög
,
	gFun˘i⁄_CÆl
*>> 
	gto_imp‹t
;

290 
boﬁ
 
	gfú°
 = 
åue
;

292 
	gÀx
< 
	gblock_commít
 >());

293 i‡(
	gÀx
< 
	gquŸed_°rög
 >()) {

294 
	gto_imp‹t
.
push_back
(
°d
::
∑ú
<°d::
°rög
,
Fun˘i⁄_CÆl
*>(°d::°rög(
Àxed
), 0));

296 i‡(
	gÀx
< 
	guri_¥efix
 >()) {

297 
Argumíts
* 
	g¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
p°©e
);

298 
Fun˘i⁄_CÆl
* 
	gªsu…
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Fun˘i⁄_CÆl, 
p°©e
, "uæ", 
¨gs
);

300 i‡(
	gÀx
< 
	gquŸed_°rög
 >()) {

301 
Ex¥essi⁄
* 
	gthe_uæ
 = 
∑r£_°rög
();

302 *
	g¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
the_uæ
->
p°©e
(),Åhe_url);

304 i‡(
Såög
* 
	gthe_uæ
 = 
∑r£_uæ_fun˘i⁄_¨gumít
()) {

305 *
¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
the_uæ
->
p°©e
(),Åhe_url);

307 i‡(
	g≥ek
 < 
	gskù_ovî_sc›es
 < 
	gexa˘ly
 < '(' >,Éxa˘ly < ')' > > >(
	gposôi⁄
)) {

308 
Ex¥essi⁄
* 
	gthe_uæ
 = 
∑r£_li°
();

309 *
	g¨gs
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
the_uæ
->
p°©e
(),Åhe_url);

312 
îr‹
("mÆf‹med URL", 
p°©e
);

314 i‡(!
	gÀx
< 
	gexa˘ly
<')'> >()Ë
îr‹
("URI i†missög ')'", 
p°©e
);

315 
	gto_imp‹t
.
push_back
(
°d
::
∑ú
<°d::
°rög
, 
Fun˘i⁄_CÆl
*>("", 
ªsu…
));

318 i‡(
	gfú°
Ë
îr‹
("@imp‹àdúe˘ivêªquúe†®uæ o∏quŸedÖ©h", 
p°©e
);

319 
îr‹
("ex≥˘ögánŸhî uæ o∏quŸedÖ©h i¿@imp‹àli°", 
p°©e
);

321 
	gfú°
 = 
Ál£
;

322 } 
	gÀx_css
< 
	gexa˘ly
<','> >());

324 i‡(!
	g≥ek_css
<
	gÆã∫©ives
<
	gexa˘ly
<';'>,
	gíd_of_fûe
>>()) {

325 
Li°
* 
	gmedü_quîõs
 = 
∑r£_medü_quîõs
();

326 
	gimp
->
medü_quîõs
(media_queries);

329 autÿ
	gloˇti⁄
 : 
to_imp‹t
) {

330 i‡(
loˇti⁄
.
£c⁄d
) {

331 
imp
->
uæs
().
push_back
(
loˇti⁄
.
£c⁄d
);

332 } i‡(!
	g˘x
.
ˇŒ_imp‹ãrs
(
unquŸe
(
loˇti⁄
.
fú°
), 
∑th
, 
p°©e
, 
imp
)) {

333 
	g˘x
.
imp‹t_uæ
(
imp
, 
loˇti⁄
.
fú°
, 
∑th
);

337  
	gimp
;

340 
Deföôi⁄
* 
	gP¨£r
::
∑r£_deföôi⁄
(Deföôi⁄::
Ty≥
 
which_ty≥
)

342 
Sc›e
 
∑ª¡
 = 
°ack
.
em±y
(Ë? Sc›e::
RuÀs
 : sèck.
back
();

343 i‡(
	g∑ª¡
 !
Sc›e
::
RoŸ
 && 
∑ª¡
 !Sc›e::
RuÀs
 &&Ö¨íà!Sc›e::
Fun˘i⁄
) {

344 i‡(
which_ty≥
 =
Deföôi⁄
::
FUNCTION
) {

345 
îr‹
("Fun˘i⁄†mayÇŸ bêdeföed wôhö c⁄åﬁ dúe˘ive†‹ othî mixös.", 
p°©e
);

347 
îr‹
("Mixö†mayÇŸ bêdeföed wôhö c⁄åﬁ dúe˘ive†‹ othî mixös.", 
p°©e
);

351 
	g°d
::
°rög
 
which_°r
(
Àxed
);

352 i‡(!
	gÀx
< 
	gidítifõr
 >()Ë
îr‹
("övÆidÇamêö " + 
which_°r
 + " deföôi⁄", 
p°©e
);

353 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

354 i‡(
	gwhich_ty≥
 =
Deföôi⁄
::
FUNCTION
 && (
«me
 == "and" ||Çame == "or" ||Çame == "not"))

355 { 
îr‹
("InvÆid fun˘i⁄Çamê\"" + 
«me
 + "\".", 
p°©e
); }

356 
P¨£rSèã
 
	gsour˚_posôi⁄_of_def
 = 
p°©e
;

357 
P¨amëîs
* 
	g∑øms
 = 
∑r£_∑ømëîs
();

358 i‡(
	gwhich_ty≥
 =
Deföôi⁄
::
MIXIN
Ë
°ack
.
push_back
(
Sc›e
::
Mixö
);

359 
	g°ack
.
push_back
(
Sc›e
::
Fun˘i⁄
);

360 
Block
* 
	gbody
 = 
∑r£_block
();

361 
	g°ack
.
p›_back
();

362 
Deföôi⁄
* 
	gdef
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Deföôi⁄, 
sour˚_posôi⁄_of_def
, 
«me
, 
∑øms
, 
body
, 
which_ty≥
);

363  
	gdef
;

366 
P¨amëîs
* 
	gP¨£r
::
∑r£_∑ømëîs
()

368 
°d
::
°rög
 
«me
(
Àxed
);

369 
Posôi⁄
 
	gposôi⁄
 = 
a·î_tokí
;

370 
P¨amëîs
* 
	g∑øms
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, P¨amëîs, 
p°©e
);

371 i‡(
	gÀx_css
< 
	gexa˘ly
<'('> >()) {

373 i‡(!
	g≥ek_css
< 
	gexa˘ly
<')'> >()) {

374 dÿ(*
	g∑øms
Ë<< 
∑r£_∑ømëî
();

375 
	gÀx_css
< 
	gexa˘ly
<','> >());

377 i‡(!
	gÀx_css
< 
	gexa˘ly
<')'> >()Ë
îr‹
("ex≥˘edá v¨übÀÇamê”.g. $xË‹ ')' f‹Åhê∑ømëîÜi° f‹ " + 
«me
, 
posôi⁄
);

379  
	g∑øms
;

382 
P¨amëî
* 
	gP¨£r
::
∑r£_∑ømëî
()

384 
Àx
< 
Æã∫©ives
 < 
•a˚s
, 
	gblock_commít
 > >());

385 
	gÀx
 < 
	gv¨übÀ
 >();

386 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

387 
P¨£rSèã
 
	gpos
 = 
p°©e
;

388 
Ex¥essi⁄
* 
	gvÆ
 = 0;

389 
boﬁ
 
	gis_ª°
 = 
Ál£
;

390 
	gÀx
< 
	gÆã∫©ives
 < 
	g•a˚s
, 
	gblock_commít
 > >());

391 i‡(
	gÀx
< 
	gexa˘ly
<':'> >()) {

392 
	gÀx
< 
	gblock_commít
 >());

393 
	gvÆ
 = 
∑r£_•a˚_li°
();

394 
	gvÆ
->
is_dñayed
(
Ál£
);

396 i‡(
	gÀx
< 
	gexa˘ly
< 
	gñlùsis
 > >()) {

397 
	gis_ª°
 = 
åue
;

399 
P¨amëî
* 
	gp
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, P¨amëî, 
pos
, 
«me
, 
vÆ
, 
is_ª°
);

400  
	gp
;

403 
Argumíts
* 
	gP¨£r
::
∑r£_¨gumíts
()

405 
°d
::
°rög
 
«me
(
Àxed
);

406 
Posôi⁄
 
	gposôi⁄
 = 
a·î_tokí
;

407 
Argumíts
* 
	g¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
p°©e
);

408 i‡(
	gÀx_css
< 
	gexa˘ly
<'('> >()) {

410 i‡(!
	g≥ek_css
< 
	gexa˘ly
<')'> >()) {

411 dÿ(*
	g¨gs
Ë<< 
∑r£_¨gumít
();

412 
	gÀx_css
< 
	gexa˘ly
<','> >());

414 i‡(!
	gÀx_css
< 
	gexa˘ly
<')'> >()Ë
îr‹
("ex≥˘edá v¨übÀÇamê”.g. $xË‹ ')' f‹Åhê∑ømëîÜi° f‹ " + 
«me
, 
posôi⁄
);

416  
	g¨gs
;

419 
Argumít
* 
	gP¨£r
::
∑r£_¨gumít
()

421 i‡(
≥ek_css
< 
£quí˚
 < 
exa˘ly
< 
hash_lbø˚
 >, 
	gexa˘ly
< 
	grbø˚
 > > >()) {

422 
	gposôi⁄
 += 2;

423 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

426 
Argumít
* 
	g¨g
;

427 i‡(
	g≥ek_css
< 
	g£quí˚
 < 
	gv¨übÀ
, 
	g›ti⁄Æ_css_commíts
, 
	gexa˘ly
<':'> > >()) {

428 
	gÀx_css
< 
	gv¨übÀ
 >();

429 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

430 
P¨£rSèã
 
	gp
 = 
p°©e
;

431 
	gÀx_css
< 
	gexa˘ly
<':'> >();

432 
Ex¥essi⁄
* 
	gvÆ
 = 
∑r£_•a˚_li°
();

433 
	gvÆ
->
is_dñayed
(
Ál£
);

434 
	g¨g
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
p
, 
vÆ
, 
«me
);

437 
boﬁ
 
	gis_¨gli°
 = 
Ál£
;

438 
boﬁ
 
	gis_keyw‹d
 = 
Ál£
;

439 
Ex¥essi⁄
* 
	gvÆ
 = 
∑r£_•a˚_li°
();

440 
	gvÆ
->
is_dñayed
(
Ál£
);

441 
Li°
* 
	gl
 = 
dy«mic_ˇ°
<Li°*>(
vÆ
);

442 i‡(
	gÀx_css
< 
	gexa˘ly
< 
	gñlùsis
 > >()) {

443 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
 || (

444 (
l
 !
NULL
 &&Ü->
£∑øt‹
(Ë=
SASS_HASH
)

445 )Ë
is_keyw‹d
 = 
åue
;

446 
	gis_¨gli°
 = 
åue
;

448 
	g¨g
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Argumít
, 
p°©e
, 
vÆ
, "", 
is_¨gli°
, 
is_keyw‹d
);

450  
	g¨g
;

453 
Assignmít
* 
	gP¨£r
::
∑r£_assignmít
()

455 
°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

456 
P¨£rSèã
 
	gv¨_sour˚_posôi⁄
 = 
p°©e
;

457 i‡(!
	gÀx
< 
	gexa˘ly
<':'> >()Ë
îr‹
("ex≥˘ed ':'á·î " + 
«me
 + " i¿assignmíà°©emít", 
p°©e
);

458 
Ex¥essi⁄
* 
	gvÆ
;

459 
Lookahód
 
	glookahód
 = 
lookahód_f‹_vÆue
(
posôi⁄
);

460 i‡(
	glookahód
.
	ghas_öãΩﬁ™ts
 &&Üookahód.
	gfound
) {

461 
	gvÆ
 = 
∑r£_vÆue_schema
(
lookahód
.
found
);

463 
	gvÆ
 = 
∑r£_li°
();

465 
	gvÆ
->
is_dñayed
(
Ál£
);

466 
boﬁ
 
	gis_deÁu…
 = 
Ál£
;

467 
boﬁ
 
	gis_globÆ
 = 
Ál£
;

468 
	g≥ek
< 
	gÆã∫©ives
 < 
	gdeÁu…_Êag
, 
	gglobÆ_Êag
 > >()) {

469 i‡(
	gÀx
< 
	gdeÁu…_Êag
 >()Ë
	gis_deÁu…
 = 
åue
;

470 i‡(
	gÀx
< 
	gglobÆ_Êag
 >()Ë
	gis_globÆ
 = 
åue
;

472 
Assignmít
* 
	gv¨
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Assignmít, 
v¨_sour˚_posôi⁄
, 
«me
, 
vÆ
, 
is_deÁu…
, 
is_globÆ
);

473  
	gv¨
;

477 
RuÀ£t
* 
	gP¨£r
::
∑r£_ruÀ£t
(
Lookahód
 
lookahód
, 
boﬁ
 
is_roŸ
)

480 
	gÀx
 < 
	g›ti⁄Æ_css_whôe•a˚
 >(
	gÁl£
, 
	gåue
);

482 
RuÀ£t
* 
	gruÀ£t
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, RuÀ£t, 
p°©e
);

484 i‡(
	glookahód
.
	g∑rßbÀ
Ë
	gruÀ£t
->
£À˘‹
(
∑r£_£À˘‹_li°
(
is_roŸ
));

485 
	gruÀ£t
->
£À˘‹
(
∑r£_£À˘‹_schema
(
lookahód
.
found
));

487 
	g°ack
.
push_back
(
Sc›e
::
RuÀs
);

488 
	gruÀ£t
->
block
(
∑r£_block
());

489 
	g°ack
.
p›_back
();

491 
	gruÀ£t
->
upd©e_p°©e
(
p°©e
);

494 
	gruÀ£t
->
is_roŸ
(is_root);

496  
	gruÀ£t
;

502 
Sñe˘‹_Schema
* 
	gP¨£r
::
∑r£_£À˘‹_schema
(c⁄° * 
íd_of_£À˘‹
)

505 
Àx
< 
›ti⁄Æ_•a˚s
 >();

506 c⁄° * 
	gi
 = 
posôi⁄
;

508 
Såög_Schema
* 
	gschema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

510 
Sñe˘‹_Schema
* 
	g£À˘‹_schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Schema, 
p°©e
, 
schema
);

511 
	g£À˘‹_schema
->
medü_block
(
œ°_medü_block
);

514 
	gi
 < 
	gíd_of_£À˘‹
) {

516 i‡(c⁄° * 
	gp
 = 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gi
, 
	gíd_of_£À˘‹
)) {

518 i‡(
	gi
 < 
	gp
Ë(*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
p
));

520 i‡(
	g≥ek
 < 
	g£quí˚
 < 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<
	grbø˚
> > >(
	gp
+2)Ë{ 
	gposôi⁄
 = 
p
+2;

521 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

524 c⁄° * 
	gj
 = 
skù_ovî_sc›es
< 
exa˘ly
<
hash_lbø˚
>, 
	gexa˘ly
<
	grbø˚
> >(
	gp
 + 2, 
	gíd_of_£À˘‹
);

526 
Ex¥essi⁄
* 
	göãΩﬁ™t
 = 
P¨£r
::
‰om_c_°r
(
p
+2, 
j
, 
˘x
, 
p°©e
).
∑r£_li°
();

528 
	göãΩﬁ™t
->
is_öãΩﬁ™t
(
åue
);

531 (*
	gschema
Ë<< 
	göãΩﬁ™t
;

533 
	gi
 = 
j
;

539 i‡(
	gi
 < 
	gíd_of_£À˘‹
Ë(*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
íd_of_£À˘‹
));

541 
	gi
 = 
íd_of_£À˘‹
;

547 
	gposôi⁄
 = 
i
;

550 
	g£À˘‹_schema
->
upd©e_p°©e
(
p°©e
);

553  
	g£À˘‹_schema
;

557 
	gP¨£r
::
∑r£_ch¨£t_dúe˘ive
()

559 
Àx
 <

560 
£quí˚
 <

561 
quŸed_°rög
,

562 
	g›ti⁄Æ_•a˚s
,

563 
	gexa˘ly
 <';'>

569 
Mixö_CÆl
* 
	gP¨£r
::
∑r£_ö˛ude_dúe˘ive
()

572 
Àx_idítifõr
();

574 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

576 
Mixö_CÆl
* 
	gˇŒ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Mixö_CÆl, 
p°©e
, 
«me
, 0, 0);

578 
	gˇŒ
->
¨gumíts
(
∑r£_¨gumíts
());

580 i‡(
	g≥ek
 < 
	gexa˘ly
 <'{'> >()) {

581 
	gˇŒ
->
block
(
∑r£_block
());

584  
	gˇŒ
;

590 
Sñe˘‹_Li°
* 
	gP¨£r
::
∑r£_£À˘‹_li°
(
boﬁ
 
ö_roŸ
)

592 
boﬁ
 
ªlo›
 = 
åue
;

593 
boﬁ
 
	ghad_löe„ed
 = 
Ál£
;

594 
Com∂ex_Sñe˘‹
* 
	g£l
 = 0;

595 
Sñe˘‹_Li°
* 
	ggroup
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
p°©e
);

596 
	ggroup
->
medü_block
(
œ°_medü_block
);

599 
	gªlo›
 = 
Ál£
;

601 
	ghad_löe„ed
 = 
had_löe„ed
 || 
≥ek_√wlöe
();

603 i‡(
	g≥ek_css
< 
	g˛ass_ch¨
 < 
	g£À˘‹_li°_dñims
 > >())

608 
	g£l
 = 
∑r£_com∂ex_£À˘‹
(
ö_roŸ
);

610 i‡(!
	g£l
Ë 
	ggroup
;

612 
	g£l
->
has_löe_„ed
(
had_löe„ed
);

614 
	ghad_löe„ed
 = 
Ál£
;

616 
	g≥ek_css
< 
	gexa˘ly
<','> >())

618 
	gÀx
< 
	gcss_commíts
 >(
	gÁl£
);

620 
	gªlo›
 = 
Àx
< 
exa˘ly
<','> >() != 0;

622 
	ghad_löe„ed
 = 
had_löe„ed
 || 
≥ek_√wlöe
();

625 (*
	ggroup
Ë<< 
	g£l
;

627 
	gªlo›
);

628 
	gÀx_css
< 
	gkwd_›ti⁄Æ
 >()) {

629 
	ggroup
->
is_›ti⁄Æ
(
åue
);

632 
	ggroup
->
upd©e_p°©e
(
p°©e
);

633 i‡(
	g£l
Ë£l->
œ°
()->
has_löe_bªak
(
Ál£
);

634  
	ggroup
;

642 
Com∂ex_Sñe˘‹
* 
	gP¨£r
::
∑r£_com∂ex_£À˘‹
(
boﬁ
 
ö_roŸ
)

645 
Såög
* 
ª„ªn˚
 = 0;

646 
	gÀx
 < 
	gblock_commít
 >();

648 
Compound_Sñe˘‹
* 
	glhs
 = 0;

650 i‡(!
	g≥ek_css
< 
	g˛ass_ch¨
 < 
	g£À˘‹_combö©‹_›s
 > >()) {

652 
	glhs
 = 
∑r£_compound_£À˘‹
();

656 i‡(
	g≥ek
 < 
	gíd_of_fûe
 >())  0;

659 
	gCom∂ex_Sñe˘‹
::
Combö©‹
 
combö©‹
;

660 i‡(
	gÀx
< 
	gexa˘ly
<'+'> >()Ë
	gcombö©‹
 = 
Com∂ex_Sñe˘‹
::
ADJACENT_TO
;

661 i‡(
	gÀx
< 
	gexa˘ly
<'~'> >()Ë
	gcombö©‹
 = 
Com∂ex_Sñe˘‹
::
PRECEDES
;

662 i‡(
	gÀx
< 
	gexa˘ly
<'>'> >()Ë
	gcombö©‹
 = 
Com∂ex_Sñe˘‹
::
PARENT_OF
;

663 i‡(
	gÀx
< 
	g£quí˚
 < 
	gexa˘ly
<'/'>, 
	g√g©e
 <Éxactly < '*' > > > >()) {

665 
	gcombö©‹
 = 
Com∂ex_Sñe˘‹
::
REFERENCE
;

666 i‡(!
	gÀx
 < 
	gª_ª„ªn˚_combö©‹
 >())  0;

667 
	gª„ªn˚
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

668 i‡(!
	gÀx
 < 
	gexa˘ly
 < '/' > >())  0;

670 
	gcombö©‹
 = 
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
;

672 i‡(!
	glhs
 && 
	gcombö©‹
 =
Com∂ex_Sñe˘‹
::
ANCESTOR_OF
)  0;

677 
Com∂ex_Sñe˘‹
* 
	g£l
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Com∂ex_Sñe˘‹, 
p°©e
, 
combö©‹
, 
lhs
);

678 
	g£l
->
medü_block
(
œ°_medü_block
);

680 i‡(
	gcombö©‹
 =
Com∂ex_Sñe˘‹
::
REFERENCE
Ë
£l
->
ª„ªn˚
(reference);

682 
	g£l
->
has_löe_bªak
(
≥ek_√wlöe
());

686 i‡(!
	g≥ek_css
< 
	g˛ass_ch¨
 < 
	gcom∂ex_£À˘‹_dñims
 > >()) {

688 
	g£l
->
èû
(
∑r£_com∂ex_£À˘‹
(
åue
));

689 i‡(
	g£l
->
èû
()) {

692 i‡(
	g£l
->
èû
()->
has_∂a˚hﬁdî
()Ë£l->has_∂a˚hﬁdî(
åue
);

698 i‡(!
	g£l
->
has_∑ª¡_ªf
(Ë&& !
	gö_©_roŸ
 && !
	gö_roŸ
) {

700 
P¨ít_Sñe˘‹
* 
	g∑ª¡
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, P¨ít_Sñe˘‹, 
p°©e
);

701 
	g∑ª¡
->
medü_block
(
œ°_medü_block
);

702 
Compound_Sñe˘‹
* 
	ghód
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
p°©e
);

703 
	ghód
->
medü_block
(
œ°_medü_block
);

705 (*
	ghód
Ë<< 
	g∑ª¡
;

707 i‡(!
	g£l
->
hód
()) { sel->head(head); }

710 
	g£l
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Com∂ex_Sñe˘‹
, 
p°©e
, Com∂ex_Sñe˘‹::
ANCESTOR_OF
, 
hód
, 
£l
);

711 
	g£l
->
medü_block
(
œ°_medü_block
);

718  
	g£l
;

725 
Compound_Sñe˘‹
* 
	gP¨£r
::
∑r£_compound_£À˘‹
()

728 
Compound_Sñe˘‹
* 
£q
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Compound_Sñe˘‹, 
p°©e
);

729 
	g£q
->
medü_block
(
œ°_medü_block
);

732 
	gÀx
< 
	gcss_whôe•a˚
 >();

735 
	gåue
)

738 
	gÀx
< 
	gdñimôed_by
< 
	g¶ash_°¨
, 
	g°¨_¶ash
, 
	gÁl£
 > >(false);

740 i‡(
	gm©ch
 < 
	gª_p£udo_£À˘‹
 >())

742 (*
	g£q
Ë<< 
∑r£_sim∂e_£À˘‹
();

745 i‡(
	gÀx
< 
	gexa˘ly
<'&'> >(
	gÁl£
))

748 
	g£q
->
has_∑ª¡_ª„ªn˚
(
åue
);

749 (*
	g£q
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
P¨ít_Sñe˘‹
, 
p°©e
);

752 i‡(
	g£q
->
Àngth
() > 1) {

753 
P¨£rSèã
 
°©e
(
p°©e
);

754 
Sim∂e_Sñe˘‹
* 
	gcur
 = (*
£q
)[£q->
Àngth
()-1];

755 
Sim∂e_Sñe˘‹
* 
	g¥ev
 = (*
£q
)[£q->
Àngth
()-2];

756 
	g°d
::
°rög
 
£l
(
¥ev
->
to_°rög
({ 
NESTED
, 5 }));

757 
	g°d
::
°rög
 
found
(
cur
->
to_°rög
({ 
NESTED
, 5 }));

758 i‡(
	gÀx
 < 
	gidítifõr
 >()Ë{ 
	gfound
 +
°d
::
°rög
(
Àxed
); }

759 
îr‹
("InvÆid CSSá·î \"" + 
£l
 + "\":Éx≥˘ed \"{\", wa†\"" + 
found
 + "\"\n\n"

760 "\"" + 
found
 + "\" may o∆y bêu£dáàthêbegönög o‡®compound sñe˘‹.", 
°©e
);

764 i‡(
	gÀx
< 
	gª_ty≥_£À˘‹
 >(
	gÁl£
))

766 (*
	g£q
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Ty≥_Sñe˘‹
, 
p°©e
, 
Àxed
);

769 i‡(
	g≥ek
< 
	g•a˚s
 >()) ;

770 i‡(
	g≥ek
< 
	gíd_of_fûe
 >()) { ; }

771 i‡(
	g≥ek_css
 < 
	g˛ass_ch¨
 < 
	g£À˘‹_combö©‹_›s
 > >()) ;

772 i‡(
	g≥ek_css
 < 
	g˛ass_ch¨
 < 
	gcom∂ex_£À˘‹_dñims
 > >()) ;

775 
Sim∂e_Sñe˘‹
* 
	g£l
 = 
∑r£_sim∂e_£À˘‹
();

776 i‡(!
	g£l
)  0;

777 (*
	g£q
Ë<< 
	g£l
;

781 i‡(
	g£q
 && !
	g≥ek_css
<
	gexa˘ly
<'{'>>()) {

782 
	g£q
->
has_löe_bªak
(
≥ek_√wlöe
());

786  
	g£q
;

791 
Sim∂e_Sñe˘‹
* 
	gP¨£r
::
∑r£_sim∂e_£À˘‹
()

793 
Àx
 < 
css_commíts
 >(
Ál£
);

794 i‡(
	gÀx
< 
	gÆã∫©ives
 < 
	gid_«me
, 
	g˛ass_«me
 > >()) {

795  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Sñe˘‹_QuÆifõr
, 
p°©e
, 
Àxed
);

797 i‡(
	gÀx
< 
	gquŸed_°rög
 >()) {

798  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Ty≥_Sñe˘‹
, 
p°©e
, 
unquŸe
(
Àxed
));

800 i‡(
	gÀx
< 
	gÆã∫©ives
 < 
	gv¨übÀ
, 
	gnumbî
, 
	g°©ic_ª„ªn˚_combö©‹
 > >()) {

801  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Ty≥_Sñe˘‹
, 
p°©e
, 
Àxed
);

803 i‡(
	g≥ek
< 
	gp£udo_nŸ
 >()) {

804  
∑r£_√g©ed_£À˘‹
();

806 i‡(
	g≥ek
< 
	gª_p£udo_£À˘‹
 >()) {

807  
∑r£_p£udo_£À˘‹
();

809 i‡(
	g≥ek
< 
	gexa˘ly
<':'> >()) {

810  
∑r£_p£udo_£À˘‹
();

812 i‡(
	gÀx
 < 
	gexa˘ly
<'['> >()) {

813  
∑r£_©åibuã_£À˘‹
();

815 i‡(
	gÀx
< 
	g∂a˚hﬁdî
 >()) {

816 
Sñe˘‹_Pœ˚hﬁdî
* 
	g£l
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Pœ˚hﬁdî, 
p°©e
, 
Àxed
);

817 
	g£l
->
medü_block
(
œ°_medü_block
);

818  
	g£l
;

824 
Wøµed_Sñe˘‹
* 
	gP¨£r
::
∑r£_√g©ed_£À˘‹
()

826 
Àx
< 
p£udo_nŸ
 >();

827 
	g°d
::
°rög
 
«me
(
Àxed
);

828 
P¨£rSèã
 
	gnsour˚_posôi⁄
 = 
p°©e
;

829 
Sñe˘‹
* 
	g√g©ed
 = 
∑r£_£À˘‹_li°
(
åue
);

830 i‡(!
	gÀx
< 
	gexa˘ly
<')'> >()) {

831 
îr‹
("√g©ed sñe˘‹ i†missög ')'", 
p°©e
);

833 
	g«me
.
îa£
(
«me
.
size
() - 1);

834  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Wøµed_Sñe˘‹
, 
nsour˚_posôi⁄
, 
«me
, 
√g©ed
);

839 
Sim∂e_Sñe˘‹
* 
	gP¨£r
::
∑r£_p£udo_£À˘‹
() {

840 i‡(
Àx
< 
£quí˚
<

841 
›ti⁄Æ
 < 
p£udo_¥efix
 >,

845 
	g£quí˚
< 
	gidítifõr
, 
	g›ti⁄Æ
 < 
	gblock_commít
 >, 
	gexa˘ly
<'('> >

849 
	g°d
::
°rög
 
«me
(
Àxed
);

850 
	g«me
.
îa£
(
«me
.
size
() - 1);

851 
P¨£rSèã
 
	gp
 = 
p°©e
;

855 i‡(
	g≥ek_css
 <

856 
	g£quí˚
 <

857 
	gÆã∫©ives
 <

858 
	g°©ic_vÆue
,

859 
	gböomül


861 
	g›ti⁄Æ_css_whôe•a˚
,

862 
	gexa˘ly
<')'>

866 
	gÀx_css
< 
	gÆã∫©ives
 < 
	g°©ic_vÆue
, 
	gböomül
 > >();

867 
Såög_C⁄°™t
* 
	gex¥
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_C⁄°™t, 
p°©e
, 
Àxed
);

868 i‡(
	gex¥
 && 
	gÀx_css
< 
	gexa˘ly
<')'> >()) {

869 
	gex¥
->
ˇn_com¥ess_whôe•a˚
(
åue
);

870  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
P£udo_Sñe˘‹
, 
p
, 
«me
, 
ex¥
);

873 i‡(
Sñe˘‹
* 
	gwøµed
 = 
∑r£_£À˘‹_li°
(
åue
)) {

874 i‡(
wøµed
 && 
Àx_css
< 
exa˘ly
<')'> >()) {

875  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Wøµed_Sñe˘‹
, 
p
, 
«me
, 
wøµed
);

882 i‡(
	gÀx
 < 
	g£quí˚
< 
	g›ti⁄Æ
 < 
	gp£udo_¥efix
 >, 
	gidítifõr
 > >()) {

883  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
P£udo_Sñe˘‹
, 
p°©e
, 
Àxed
);

885 if(
	gÀx
 < 
	gp£udo_¥efix
 >()) {

886 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÖseudoclass orÖseudoelement, was ");

889 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \")\", was ");

895 
Aâribuã_Sñe˘‹
* 
	gP¨£r
::
∑r£_©åibuã_£À˘‹
()

897 
P¨£rSèã
 
p
 = 
p°©e
;

898 i‡(!
	gÀx_css
< 
	g©åibuã_«me
 >()Ë
îr‹
("övÆidáâribuãÇamêöáâribuã sñe˘‹", 
p°©e
);

899 
	g°d
::
°rög
 
«me
(
Àxed
);

900 i‡(
	gÀx_css
< 
	gÆã∫©ives
 < 
	gexa˘ly
<']'>,Éxa˘ly<'/'> > >()Ë 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Aâribuã_Sñe˘‹
, 
p
, 
«me
, "", 0);

901 i‡(!
	gÀx_css
< 
	gÆã∫©ives
< 
	gexa˘_m©ch
, 
	g˛ass_m©ch
, 
	gdash_m©ch
,

902 
	g¥efix_m©ch
, 
	gsuffix_m©ch
, 
	gsub°rög_m©ch
 > >()) {

903 
îr‹
("övÆid o≥øt‹ i¿©åibuã sñe˘‹ f‹ " + 
«me
, 
p°©e
);

905 
	g°d
::
°rög
 
m©chî
(
Àxed
);

907 
Såög
* 
	gvÆue
 = 0;

908 i‡(
	gÀx_css
< 
	gidítifõr
 >()) {

909 
	gvÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p
, 
Àxed
);

911 i‡(
	gÀx_css
< 
	gquŸed_°rög
 >()) {

912 
	gvÆue
 = 
∑r£_öãΩﬁ©ed_chunk
(
Àxed
, 
åue
);

915 
îr‹
("ex≥˘edá såög c⁄°™à‹ idítifõ∏öáâribuã sñe˘‹ f‹ " + 
«me
, 
p°©e
);

918 i‡(!
	gÀx_css
< 
	gÆã∫©ives
 < 
	gexa˘ly
<']'>,Éxa˘ly<'/'> > >()Ë
îr‹
("u¡îmö©edáâribuã sñe˘‹ f‹ " + 
«me
, 
p°©e
);

919  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Aâribuã_Sñe˘‹
, 
p
, 
«me
, 
m©chî
, 
vÆue
);

923 
	gP¨£r
::
∑r£_block_commíts
()

925 
Block
* 
block
 = 
block_°ack
.
back
();

926 
	gÀx
< 
	gblock_commít
 >()) {

927 
boﬁ
 
	gis_imp‹è¡
 = 
Àxed
.
begö
[2] == '!';

929 
Såög
* 
	gc⁄ã¡s
 = 
∑r£_öãΩﬁ©ed_chunk
(
Àxed
, 
åue
);

930 (*
	gblock
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Commít
, 
p°©e
, 
c⁄ã¡s
, 
is_imp‹è¡
);

934 
De˛¨©i⁄
* 
	gP¨£r
::
∑r£_de˛¨©i⁄
() {

935 
Såög
* 
¥›
 = 0;

936 i‡(
	gÀx
< 
	g£quí˚
< 
	g›ti⁄Æ
< 
	gexa˘ly
<'*'> >, 
	gidítifõr_schema
 > >()) {

937 
	g¥›
 = 
∑r£_idítifõr_schema
();

939 i‡(
	gÀx
< 
	g£quí˚
< 
	g›ti⁄Æ
< 
	gexa˘ly
<'*'> >, 
	gidítifõr
, 
	gzîo_∂us
< 
	gblock_commít
 > > >()) {

940 
	g¥›
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

941 
	g¥›
->
is_dñayed
(
åue
);

944 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"}\", was ");

946 
boﬁ
 
	gis_ödíãd
 = 
åue
;

947 c⁄° 
	g°d
::
°rög
 
¥›îty
(
Àxed
);

948 i‡(!
	gÀx_css
< 
	g⁄e_∂us
< 
	gexa˘ly
<':'> > >()Ë
îr‹
("¥›îty \"" + 
¥›îty
 + "\" mu° bêfﬁlowed byá ':'", 
p°©e
);

949 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

950 i‡(
	g≥ek_css
< 
	gexa˘ly
<';'> >()Ë
îr‹
("°yÀ de˛¨©i⁄ mu° c⁄èöá vÆue", 
p°©e
);

951 i‡(
	g≥ek_css
< 
	gexa˘ly
<'{'> >()Ë
	gis_ödíãd
 = 
Ál£
;

952 i‡(
	g≥ek_css
< 
	g°©ic_vÆue
 >()) {

953  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
De˛¨©i⁄
, 
¥›
->
p°©e
(),Ör›, 
∑r£_°©ic_vÆue
() );

956 
Ex¥essi⁄
* 
	gvÆue
;

957 
Lookahód
 
	glookahód
 = 
lookahód_f‹_vÆue
(
posôi⁄
);

958 i‡(
	glookahód
.
	gfound
) {

959 i‡(
	glookahód
.
	ghas_öãΩﬁ™ts
) {

960 
	gvÆue
 = 
∑r£_vÆue_schema
(
lookahód
.
found
);

962 
	gvÆue
 = 
∑r£_li°
();

966 
	gvÆue
 = 
∑r£_li°
();

967 i‡(
Li°
* 
	gli°
 = 
dy«mic_ˇ°
<Li°*>(
vÆue
)) {

968 i‡(
li°
->
Àngth
(Ë=0 && !
≥ek
< 
exa˘ly
 <'{'> >()) {

969 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

973 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

974 autÿ
	gde˛
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
De˛¨©i⁄
, 
¥›
->
p°©e
(),Ör›, 
vÆue
 );

975 
	gde˛
->
is_ödíãd
(is_indented);

976  
	gde˛
;

981 
boﬁ
 
	gP¨£r
::
∑r£_numbî_¥efix
()

983 
boﬁ
 
posôive
 = 
åue
;

984 
	gåue
) {

985 i‡(
	gÀx
 < 
	gblock_commít
 >()) ;

986 i‡(
	gÀx
 < 
	gnumbî_¥efix
 >()) ;

987 i‡(
	gÀx
 < 
	gexa˘ly
 < '-' > >()) {

988 
	gposôive
 = !
posôive
;

993  
	gposôive
;

996 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_m≠
()

998 
Ex¥essi⁄
* 
key
 = 
∑r£_li°
();

999 
Li°
* 
	gm≠
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 0, 
SASS_HASH
);

1000 i‡(
Såög_QuŸed
* 
	g°r
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
key
)) {

1001 i‡(!
°r
->
quŸe_m¨k
(Ë&& !°r->
is_dñayed
()) {

1002 i‡(c⁄° 
Cﬁ‹
* 
cﬁ
 = 
«me_to_cﬁ‹
(
°r
->
vÆue
())) {

1003 
Cﬁ‹
* 
c
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Cﬁ‹, *
cﬁ
);

1004 
	gc
->
p°©e
(
°r
->pstate());

1005 
	gc
->
di•
(
°r
->
vÆue
());

1006 
	gkey
 = 
c
;

1012 i‡(!
	gÀx_css
< 
	gexa˘ly
<':'> >())

1013 {  
	gkey
; }

1015 
Ex¥essi⁄
* 
	gvÆue
 = 
∑r£_•a˚_li°
();

1017 (*
	gm≠
Ë<< 
	gkey
 << 
	gvÆue
;

1019 
	gÀx_css
< 
	gexa˘ly
<','> >())

1022 i‡(
	g≥ek_css
< 
	gexa˘ly
<')'> >(
	gposôi⁄
))

1025 
Ex¥essi⁄
* 
	gkey
 = 
∑r£_li°
();

1026 i‡(
Såög_QuŸed
* 
	g°r
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
key
)) {

1027 i‡(!
°r
->
quŸe_m¨k
(Ë&& !°r->
is_dñayed
()) {

1028 i‡(c⁄° 
Cﬁ‹
* 
cﬁ
 = 
«me_to_cﬁ‹
(
°r
->
vÆue
())) {

1029 
Cﬁ‹
* 
c
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Cﬁ‹, *
cﬁ
);

1030 
	gc
->
p°©e
(
°r
->pstate());

1031 
	gc
->
di•
(
°r
->
vÆue
());

1032 
	gkey
 = 
c
;

1037 i‡(!(
	gÀx
< 
	gexa˘ly
<':'> >()))

1038 { 
îr‹
("övÆid sy¡ax", 
p°©e
); }

1040 
Ex¥essi⁄
* 
	gvÆue
 = 
∑r£_•a˚_li°
();

1042 (*
	gm≠
Ë<< 
	gkey
 << 
	gvÆue
;

1045 
P¨£rSèã
 
	gps
 = 
m≠
->
p°©e
();

1046 
	gps
.
	goff£t
 = 
p°©e
 - 
ps
 +Ö°©e.
off£t
;

1047 
	gm≠
->
p°©e
(
ps
);

1049  
	gm≠
;

1055 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_li°
()

1058  
∑r£_comma_li°
();

1062 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_comma_li°
()

1066 i‡(
≥ek_css
< 
Æã∫©ives
 <

1068 
exa˘ly
<';'>,

1069 
	gexa˘ly
<'}'>,

1070 
	gexa˘ly
<'{'>,

1071 
	gexa˘ly
<')'>,

1072 
	gexa˘ly
<':'>,

1073 
	gíd_of_fûe
,

1074 
	gexa˘ly
<
	gñlùsis
>,

1075 
	gdeÁu…_Êag
,

1076 
	gglobÆ_Êag


1077 > >(
	gposôi⁄
))

1078 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Li°
, 
p°©e
, 0); }

1081 
Ex¥essi⁄
* 
	gli°
 = 
∑r£_•a˚_li°
();

1083 i‡(!
	g≥ek_css
< 
	gexa˘ly
<','> >(
	gposôi⁄
)Ë 
	gli°
;

1086 
Li°
* 
	gcomma_li°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 2, 
SASS_COMMA
);

1088 (*
	gcomma_li°
Ë<< 
	gli°
;

1090 
	gÀx_css
< 
	gexa˘ly
<','> >())

1093 i‡(
	g≥ek_css
< 
	gÆã∫©ives
 <

1094 
	gexa˘ly
<';'>,

1095 
	gexa˘ly
<'}'>,

1096 
	gexa˘ly
<'{'>,

1097 
	gexa˘ly
<')'>,

1098 
	gexa˘ly
<':'>,

1099 
	gíd_of_fûe
,

1100 
	gexa˘ly
<
	gñlùsis
>,

1101 
	gdeÁu…_Êag
,

1102 
	gglobÆ_Êag


1103 > >(
	gposôi⁄
)

1106 (*
	gcomma_li°
Ë<< 
∑r£_•a˚_li°
();

1109  
	gcomma_li°
;

1114 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_•a˚_li°
()

1116 
Ex¥essi⁄
* 
disj1
 = 
∑r£_disjun˘i⁄
();

1118 i‡(
	g≥ek_css
< 
	gÆã∫©ives
 <

1120 
	gexa˘ly
<';'>,

1121 
	gexa˘ly
<'}'>,

1122 
	gexa˘ly
<'{'>,

1123 
	gexa˘ly
<')'>,

1124 
	gexa˘ly
<','>,

1125 
	gexa˘ly
<':'>,

1126 
	gíd_of_fûe
,

1127 
	gexa˘ly
<
	gñlùsis
>,

1128 
	gdeÁu…_Êag
,

1129 
	gglobÆ_Êag


1130 > >(
	gposôi⁄
)

1131 Ë{  
	gdisj1
; }

1133 
Li°
* 
	g•a˚_li°
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 2, 
SASS_SPACE
);

1134 (*
	g•a˚_li°
Ë<< 
	gdisj1
;

1136 !(
	g≥ek_css
< 
	gÆã∫©ives
 <

1138 
	gexa˘ly
<';'>,

1139 
	gexa˘ly
<'}'>,

1140 
	gexa˘ly
<'{'>,

1141 
	gexa˘ly
<')'>,

1142 
	gexa˘ly
<','>,

1143 
	gexa˘ly
<':'>,

1144 
	gíd_of_fûe
,

1145 
	gexa˘ly
<
	gñlùsis
>,

1146 
	gdeÁu…_Êag
,

1147 
	gglobÆ_Êag


1148 > >(
	gposôi⁄
)Ë&& 
	g≥ek_css
< 
	g›ti⁄Æ_css_whôe•a˚
 >(Ë!
íd


1151 (*
•a˚_li°
Ë<< 
∑r£_disjun˘i⁄
();

1154  
	g•a˚_li°
;

1159 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_disjun˘i⁄
()

1162 
Ex¥essi⁄
* 
c⁄j
 = 
∑r£_c⁄jun˘i⁄
();

1164 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
›î™ds
;

1165 
	gÀx_css
< 
	gkwd_‹
 >())

1166 
	g›î™ds
.
push_back
(
∑r£_c⁄jun˘i⁄
());

1168 i‡(
	g›î™ds
.
size
(Ë=0Ë 
c⁄j
;

1170  
fﬁd_›î™ds
(
c⁄j
, 
›î™ds
, { 
Sass_OP
::
OR
 });

1175 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_c⁄jun˘i⁄
()

1178 
Ex¥essi⁄
* 
ªl
 = 
∑r£_ªœti⁄
();

1180 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
›î™ds
;

1181 
	gÀx_css
< 
	gkwd_™d
 >())

1182 
	g›î™ds
.
push_back
(
∑r£_ªœti⁄
());

1184 i‡(
	g›î™ds
.
size
(Ë=0Ë 
ªl
;

1186  
fﬁd_›î™ds
(
ªl
, 
›î™ds
, { 
Sass_OP
::
AND
 });

1191 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_ªœti⁄
()

1194 
Ex¥essi⁄
* 
lhs
 = 
∑r£_ex¥essi⁄
();

1195 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
›î™ds
;

1196 
	g°d
::
ve˘‹
<
O≥ønd
> 
›î©‹s
;

1198 
	g≥ek
< 
	gÆã∫©ives
 <

1199 
	gkwd_eq
,

1200 
	gkwd_√q
,

1201 
	gkwd_gã
,

1202 
	gkwd_gt
,

1203 
	gkwd_…e
,

1204 
	gkwd_…


1205 > >(
	gposôi⁄
))

1208 
boﬁ
 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1210 
Sass_OP
 
	g›


1211 
Àx
<
kwd_eq
>(Ë? 
Sass_OP
::
EQ


1212 : 
Àx
<
kwd_√q
>(Ë? 
Sass_OP
::
NEQ


1213 : 
Àx
<
kwd_gã
>(Ë? 
Sass_OP
::
GTE


1214 : 
Àx
<
kwd_…e
>(Ë? 
Sass_OP
::
LTE


1215 : 
Àx
<
kwd_gt
>(Ë? 
Sass_OP
::
GT


1216 : 
Àx
<
kwd_…
>(Ë? 
Sass_OP
::
LT


1218 : 
Sass_OP
::
EQ
;

1220 
boﬁ
 
	gright_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1221 
	g›î©‹s
.
push_back
({ 
›
, 
À·_ws
, 
right_ws
 });

1222 
	g›î™ds
.
push_back
(
∑r£_ex¥essi⁄
());

1223 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1226  
fﬁd_›î™ds
(
lhs
, 
›î™ds
, 
›î©‹s
);

1235 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_ex¥essi⁄
()

1240 
Ex¥essi⁄
* 
lhs
 = 
∑r£_›î©‹s
();

1242 i‡(!(
	g≥ek_css
< 
	gexa˘ly
<'+'> >(
	gposôi⁄
) ||

1244 (
	g≥ek
< 
	gno_•a˚s
 >(
	gposôi⁄
Ë&&Öìk< 
	g£quí˚
< 
	g√g©e
< 
	gunsig√d_numbî
 >, 
	gexa˘ly
<'-'>,Çeg©e< 
	g•a˚
 > > >(position)) ||

1245 (
	g≥ek
< 
	g£quí˚
< 
	g√g©e
< 
	gunsig√d_numbî
 >, 
	gexa˘ly
<'-'>,Çeg©e< unsig√d_numbî > > >(
	gposôi⁄
))) ||

1246 
	g≥ek
< 
	g£quí˚
 < 
	gzîo_∂us
 < 
	gexa˘ly
 <'-' > >, 
	gidítifõr
 > >(
	gposôi⁄
))

1247 {  
	glhs
; }

1249 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
›î™ds
;

1250 
	g°d
::
ve˘‹
<
O≥ønd
> 
›î©‹s
;

1251 
boﬁ
 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1253 
	gÀx_css
< 
	gexa˘ly
<'+'> >() ||

1256 ! 
	g≥ek_css
< 
	g£quí˚
 < 
	gzîo_∂us
 < 
	gexa˘ly
 <'-' > >, 
	gidítifõr
 > >(
	gposôi⁄
)

1257 && 
	gÀx_css
< 
	g£quí˚
< 
	g√g©e
< 
	gdigô
 >, 
	gexa˘ly
<'-'> > >()

1263 
boﬁ
 
	gright_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1264 
	g›î©‹s
.
push_back
({ 
Àxed
.
to_°rög
(Ë="+" ? 
Sass_OP
::
ADD
 : Sass_OP::
SUB
, 
À·_ws
, 
right_ws
 });

1265 
	g›î™ds
.
push_back
(
∑r£_›î©‹s
());

1266 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >(Ë!
NULL
;

1269 i‡(
	g›î™ds
.
size
(Ë=0Ë 
lhs
;

1270  
fﬁd_›î™ds
(
lhs
, 
›î™ds
, 
›î©‹s
);

1274 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_›î©‹s
()

1276 
Ex¥essi⁄
* 
Á˘‹
 = 
∑r£_Á˘‹
();

1278 
	g°d
::
ve˘‹
<
Ex¥essi⁄
*> 
›î™ds
;

1279 
	g°d
::
ve˘‹
<
O≥ønd
> 
›î©‹s
;

1281 c⁄° * 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >();

1282 
	gÀx_css
< 
	g˛ass_ch¨
< 
	g°©ic_›s
 > >()) {

1283 c⁄° * 
	gright_ws
 = 
≥ek
 < 
css_commíts
 >();

1284 *
	gÀxed
.
	gbegö
) {

1285 '*': 
›î©‹s
.
push_back
({ 
Sass_OP
::
MUL
, 
À·_ws
 !0, 
right_ws
 != 0 }); ;

1286 '/': 
›î©‹s
.
push_back
({ 
Sass_OP
::
DIV
, 
À·_ws
 !0, 
right_ws
 != 0 }); ;

1287 '%': 
›î©‹s
.
push_back
({ 
Sass_OP
::
MOD
, 
À·_ws
 !0, 
right_ws
 != 0 }); ;

1288 : 
throw
 
°d
::
ru¡ime_îr‹
("unknown static opÖarsed"); ;

1290 
	g›î™ds
.
push_back
(
∑r£_Á˘‹
());

1291 
	gÀ·_ws
 = 
≥ek
 < 
css_commíts
 >();

1294  
fﬁd_›î™ds
(
Á˘‹
, 
›î™ds
, 
›î©‹s
);

1301 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_Á˘‹
()

1303 
Àx
 < 
css_commíts
 >(
Ál£
);

1304 i‡(
	gÀx_css
< 
	gexa˘ly
<'('> >()) {

1306 
Ex¥essi⁄
* 
	gvÆue
 = 
∑r£_m≠
();

1308 i‡(!
	gÀx_css
< 
	gexa˘ly
<')'> >()Ë
îr‹
("un˛o£dÖ¨íthesis", 
p°©e
);

1311 i‡(
	gvÆue
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
) {

1314 } i‡(
ty≥id
(*
vÆue
Ë=ty≥id(
Bö¨y_Ex¥essi⁄
)) {

1315 
Bö¨y_Ex¥essi⁄
* 
b
 = 
°©ic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
vÆue
);

1316 i‡(
	gb
 && b->
ty≥
(Ë=
Sass_OP
::
DIV
Ë
b
->
£t_dñayed
(
Ál£
);

1318  
	gvÆue
;

1324 i‡(
	g≥ek
< 
	gõ_¥›îty
 >()) {

1325  
∑r£_õ_¥›îty
();

1327 i‡(
	g≥ek
< 
	gõ_keyw‹d_¨g
 >()) {

1328  
∑r£_õ_keyw‹d_¨g
();

1330 i‡(
	g≥ek
< 
	g£quí˚
 < 
	gˇlc_‚_ˇŒ
, 
	gexa˘ly
 <'('> > >()) {

1331  
∑r£_ˇlc_fun˘i⁄
();

1333 i‡(
	gÀx
 < 
	gfun˘i⁄Æ_schema
 >()) {

1334  
∑r£_fun˘i⁄_ˇŒ_schema
();

1336 i‡(
	gÀx
< 
	gidítifõr_schema
 >()) {

1337 
Såög
* 
	g°rög
 = 
∑r£_idítifõr_schema
();

1338 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
°rög
)) {

1339 i‡(
Àx
 < 
exa˘ly
 < '(' > >()) {

1340 *
schema
 << 
∑r£_li°
();

1341 
	gÀx
 < 
	gexa˘ly
 < ')' > >();

1344  
	g°rög
;

1346 i‡(
	g≥ek
< 
	g£quí˚
< 
	guri_¥efix
, 
	gW
, 
	gªÆ_uri_vÆue
 > >()) {

1347  
∑r£_uæ_fun˘i⁄_°rög
();

1349 i‡(
	g≥ek
< 
	gª_fun˘i⁄Æ
 >()) {

1350  
∑r£_fun˘i⁄_ˇŒ
();

1352 i‡(
	gÀx
< 
	gexa˘ly
<'+'> >()) {

1353  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
U«ry_Ex¥essi⁄
, 
p°©e
, U«ry_Ex¥essi⁄::
PLUS
, 
∑r£_Á˘‹
());

1355 i‡(
	gÀx
< 
	gexa˘ly
<'-'> >()) {

1356  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
U«ry_Ex¥essi⁄
, 
p°©e
, U«ry_Ex¥essi⁄::
MINUS
, 
∑r£_Á˘‹
());

1358 i‡(
	gÀx
< 
	g£quí˚
< 
	gkwd_nŸ
 > >()) {

1359  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
U«ry_Ex¥essi⁄
, 
p°©e
, U«ry_Ex¥essi⁄::
NOT
, 
∑r£_Á˘‹
());

1361 i‡(
	g≥ek
 < 
	g£quí˚
 < 
	g⁄e_∂us
 < 
	gÆã∫©ives
 < 
	gcss_whôe•a˚
, 
	gexa˘ly
<'-'>,Éxa˘ly<'+'> > >, 
	gnumbî
 > >()) {

1362 i‡(
∑r£_numbî_¥efix
()Ë 
∑r£_vÆue
();

1363  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
U«ry_Ex¥essi⁄
, 
p°©e
, U«ry_Ex¥essi⁄::
MINUS
, 
∑r£_vÆue
());

1366  
∑r£_vÆue
();

1371 
Ex¥essi⁄
* 
	gP¨£r
::
∑r£_vÆue
()

1373 
Àx
< 
css_commíts
 >(
Ál£
);

1374 i‡(
	gÀx
< 
	gam≥rßnd
 >())

1376  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
P¨ít_Sñe˘‹
, 
p°©e
); }

1378 i‡(
	gÀx
< 
	gkwd_imp‹è¡
 >())

1379 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, "!important"); }

1382 i‡(
	gÀx
< 
	g£quí˚
 < 
	g≥r˚¡age
, 
	glookahód
 < 
	gnumbî
 > > >())

1383 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
PERCENTAGE
, 
Àxed
); }

1385 i‡(
	gÀx
< 
	g£quí˚
 < 
	gnumbî
, 
	glookahód
< sequí˚ < 
	g›
,Çumber > > > >())

1386 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
NUMBER
, 
Àxed
); }

1389 i‡(
	gÀx
< 
	g£quí˚
 < 
	gquŸed_°rög
, 
	glookahód
 < 
	gexa˘ly
 <'-'> > > >())

1390 {  
∑r£_°rög
(); }

1392 i‡(c⁄° * 
	g°›
 = 
≥ek
< 
vÆue_schema
 >())

1393 {  
∑r£_vÆue_schema
(
°›
); }

1396 i‡(
	gÀx
< 
	gquŸed_°rög
 >())

1397 {  
∑r£_°rög
(); }

1399 i‡(
	gÀx
< 
	gkwd_åue
 >())

1400 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
åue
); }

1402 i‡(
	gÀx
< 
	gkwd_Ál£
 >())

1403 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Boﬁón
, 
p°©e
, 
Ál£
); }

1405 i‡(
	gÀx
< 
	gkwd_nuŒ
 >())

1406 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
NuŒ
, 
p°©e
); }

1408 i‡(
	gÀx
< 
	gidítifõr
 >()) {

1409  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1412 i‡(
	gÀx
< 
	g≥r˚¡age
 >())

1413 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
PERCENTAGE
, 
Àxed
); }

1416 i‡(
	gÀx
< 
	g£quí˚
 < 
	gÆã∫©ives
< 
	ghex
, 
	ghex0
 >, 
	g√g©e
 < 
	gexa˘ly
<'-'> > > >())

1417 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
HEX
, 
Àxed
); }

1419 i‡(
	gÀx
< 
	g£quí˚
 < 
	gexa˘ly
 <'#'>, 
	gidítifõr
 > >())

1420 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
Àxed
); }

1424 i‡(
	gÀx
< 
	g£quí˚
< 
	gdimísi⁄
, 
	g›ti⁄Æ
< sequí˚< 
	gexa˘ly
<'-'>, 
	glookahód
< 
	gÆã∫©ives
 < 
	g•a˚
 > > > > > >())

1425 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
DIMENSION
, 
Àxed
); }

1427 i‡(
	gÀx
< 
	g£quí˚
< 
	g°©ic_comp⁄ít
, 
	g⁄e_∂us
< 
	g°ri˘_idítifõr
 > > >())

1428 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
); }

1430 i‡(
	gÀx
< 
	gnumbî
 >())

1431 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
NUMBER
, 
Àxed
); }

1433 i‡(
	gÀx
< 
	gv¨übÀ
 >())

1434 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
V¨übÀ
, 
p°©e
, 
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
)); }

1437 i‡(
	gÀx
< 
	g£quí˚
< 
	gexa˘ly
<'%'>, 
	g›ti⁄Æ
< 
	g≥r˚¡age
 > > >())

1438 {  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
); }

1440 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1448 
Såög
* 
	gP¨£r
::
∑r£_öãΩﬁ©ed_chunk
(
Tokí
 
chunk
, 
boﬁ
 
c⁄°™t
)

1450 c⁄° * 
	gi
 = 
chunk
.
begö
;

1452 c⁄° * 
	gp
 = 
c⁄°™t
 ? 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
> >(
i
, 
	gchunk
.
	gíd
) :

1453 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gi
, 
	gchunk
.
	gíd
);

1455 i‡(!
	gp
) {

1456 
Såög_QuŸed
* 
	g°r_quŸed
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_QuŸed, 
p°©e
, 
°d
::
°rög
(
i
, 
chunk
.
íd
));

1457 i‡(!
	gc⁄°™t
 && 
	g°r_quŸed
->
quŸe_m¨k
()) str_quoted->quote_mark('*');

1458 
	g°r_quŸed
->
is_dñayed
(
åue
);

1459  
	g°r_quŸed
;

1462 
Såög_Schema
* 
	gschema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

1463 
	gschema
->
is_öãΩﬁ™t
(
åue
);

1464 
	gi
 < 
	gchunk
.
	gíd
) {

1465 
	gp
 = 
c⁄°™t
 ? 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
> >(
i
, 
	gchunk
.
	gíd
) :

1466 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gi
, 
	gchunk
.
	gíd
);

1467 i‡(
	gp
) {

1468 i‡(
	gi
 < 
	gp
) {

1470 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
p
));

1474 i‡(
	g≥ek
 < 
	g£quí˚
 < 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<
	grbø˚
> > >(
	gp
+2)Ë{ 
	gposôi⁄
 = 
p
+2;

1475 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1477 c⁄° * 
	gj
 = 
skù_ovî_sc›es
< 
exa˘ly
<
hash_lbø˚
>, 
	gexa˘ly
<
	grbø˚
> >(
	gp
 + 2, 
	gchunk
.
	gíd
);

1478 i‡(
	gj
) { --j;

1480 
Ex¥essi⁄
* 
	göãΩ_node
 = 
P¨£r
::
‰om_tokí
(
Tokí
(
p
+2, 
j
), 
˘x
, 
p°©e
, 
sour˚
).
∑r£_li°
();

1481 
	göãΩ_node
->
is_öãΩﬁ™t
(
åue
);

1482 (*
	gschema
Ë<< 
	göãΩ_node
;

1483 
	gi
 = 
j
;

1487 
îr‹
("u¡îmö©ed i¡îpﬁ™àösidê°rög c⁄°™à" + 
chunk
.
to_°rög
(), 
p°©e
);

1492 i‡(
	gi
 < 
	gchunk
.
	gíd
Ë(*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
chunk
.
íd
));

1495 ++ 
	gi
;

1498  
	gschema
;

1501 
Såög_C⁄°™t
* 
	gP¨£r
::
∑r£_°©ic_ex¥essi⁄
()

1503 i‡(
≥ek
< 
£quí˚
< 
numbî
, 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<'/'>, o±i⁄Æ_•a˚s, 
	gnumbî
 > >()) {

1504  
∑r£_°©ic_vÆue
();

1509 
Såög_C⁄°™t
* 
	gP¨£r
::
∑r£_°©ic_vÆue
()

1511 
Àx
< 
°©ic_vÆue
 >();

1512 
Tokí
 
°r
(
Àxed
);

1513 --
	g°r
.
	gíd
;

1514 --
	gposôi⁄
;

1516 
Såög_C⁄°™t
* 
	g°r_node
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_C⁄°™t, 
p°©e
, 
°r
.
time_w•a˚
());

1517 
	g°r_node
->
is_dñayed
(
åue
);

1518  
	g°r_node
;

1521 
Såög
* 
	gP¨£r
::
∑r£_°rög
()

1523  
∑r£_öãΩﬁ©ed_chunk
(
Tokí
(
Àxed
));

1526 
Såög
* 
	gP¨£r
::
∑r£_õ_¥›îty
()

1528 
Àx
< 
õ_¥›îty
 >();

1529 
Tokí
 
°r
(
Àxed
);

1530 c⁄° * 
	gi
 = 
°r
.
begö
;

1532 c⁄° * 
	gp
 = 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	g°r
.
	gbegö
, så.
	gíd
);

1533 i‡(!
	gp
) {

1534  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
°d
::
°rög
(
°r
.
begö
, så.
íd
));

1537 
Såög_Schema
* 
	gschema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

1538 
	gi
 < 
	g°r
.
	gíd
) {

1539 
	gp
 = 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gi
, 
	g°r
.
	gíd
);

1540 i‡(
	gp
) {

1541 i‡(
	gi
 < 
	gp
) {

1542 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
p
));

1544 i‡(
	g≥ek
 < 
	g£quí˚
 < 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<
	grbø˚
> > >(
	gp
+2)Ë{ 
	gposôi⁄
 = 
p
+2;

1545 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1547 c⁄° * 
	gj
 = 
skù_ovî_sc›es
< 
exa˘ly
<
hash_lbø˚
>, 
	gexa˘ly
<
	grbø˚
> >(
	gp
+2, 
	g°r
.
	gíd
);

1548 i‡(
	gj
) {

1550 
Ex¥essi⁄
* 
	göãΩ_node
 = 
P¨£r
::
‰om_tokí
(
Tokí
(
p
+2, 
j
), 
˘x
, 
p°©e
, 
sour˚
).
∑r£_li°
();

1551 
	göãΩ_node
->
is_öãΩﬁ™t
(
åue
);

1552 (*
	gschema
Ë<< 
	göãΩ_node
;

1553 
	gi
 = 
j
;

1557 
îr‹
("u¡îmö©ed i¡îpﬁ™àösidêIE fun˘i⁄ " + 
°r
.
to_°rög
(), 
p°©e
);

1561 i‡(
	gi
 < 
	g°r
.
	gíd
) {

1562 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
i
, 
°r
.
íd
));

1567  
	gschema
;

1570 
Såög
* 
	gP¨£r
::
∑r£_õ_keyw‹d_¨g
()

1572 
Såög_Schema
* 
kwd_¨g
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
, 3);

1573 i‡(
	gÀx
< 
	gv¨übÀ
 >()) {

1574 *
	gkwd_¨g
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
V¨übÀ
, 
p°©e
, 
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

1576 
	gÀx
< 
	gÆã∫©ives
< 
	gidítifõr_schema
, 
	gidítifõr
 > >();

1577 *
	gkwd_¨g
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1579 
	gÀx
< 
	gexa˘ly
<'='> >();

1580 *
	gkwd_¨g
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1581 i‡(
	g≥ek
< 
	gv¨übÀ
 >()Ë*
	gkwd_¨g
 << 
∑r£_li°
();

1582 i‡(
	gÀx
< 
	gnumbî
 >()Ë*
	gkwd_¨g
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
NUMBER
, 
Utû
::
n‹mÆize_decimÆs
(
Àxed
));

1583 i‡(
	g≥ek
 < 
	gõ_keyw‹d_¨g_vÆue
 >()Ë{ *
	gkwd_¨g
 << 
∑r£_li°
(); }

1584  
	gkwd_¨g
;

1587 
Såög_Schema
* 
	gP¨£r
::
∑r£_vÆue_schema
(c⁄° * 
°›
)

1590 
Såög_Schema
* 
schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

1592 i‡(
	g≥ek
<
	gexa˘ly
<'}'>>()) {

1593 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1596 c⁄° * 
	ge
 = 0;

1597 c⁄° * 
	gì
 = 
íd
;

1598 
	gíd
 = 
°›
;

1599 
size_t
 
	gnum_ôems
 = 0;

1600 
boﬁ
 
	g√ed_•a˚
 = 
Ál£
;

1601 
	gposôi⁄
 < 
	g°›
) {

1603 i‡(
	gÀx
< 
	g•a˚s
 >(Ë&& 
	gnum_ôems
) {

1604 
	g√ed_•a˚
 = 
åue
;

1606 i‡(
	g√ed_•a˚
) {

1607 
	g√ed_•a˚
 = 
Ál£
;

1610 i‡((
	ge
 = 
≥ek
< 
ª_fun˘i⁄Æ
 >()Ë&& 
e
 < 
°›
) {

1611 (*
schema
Ë<< 
∑r£_fun˘i⁄_ˇŒ
();

1614 i‡(
	gÀx
< 
	gexa˘ly
 < 
	ghash_lbø˚
 > >()) {

1616 i‡(
	g≥ek
< 
	gexa˘ly
< 
	grbø˚
 > >()) {

1617 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1619 
Ex¥essi⁄
* 
	gex
 = 0;

1620 i‡(
	gÀx
< 
	gª_°©ic_ex¥essi⁄
 >()) {

1621 
	gex
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1623 
	gex
 = 
∑r£_li°
();

1625 
	gex
->
is_öãΩﬁ™t
(
åue
);

1626 (*
	gschema
Ë<< 
	gex
;

1628 
	gÀx
 < 
	gexa˘ly
 < 
	grbø˚
 > >();

1632 i‡(
	gÀx
< 
	gÆã∫©ives
 < 
	gexa˘ly
<'%'>,Éxactly < '-' >,Éxactly < '+' > > >()) {

1633 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1636 i‡(
	gÀx
< 
	gquŸed_°rög
 >()) {

1640 (*
	gschema
Ë<< 
∑r£_°rög
();

1641 i‡((*
	gposôi⁄
 ='"' || *
posôi⁄
 ='\''Ë|| 
≥ek
 < 
Æã∫©ives
 < 
Æpha
 > >()) {

1644 i‡(
≥ek
 < 
exa˘ly
 < '-' > >()) ;

1646 i‡(
	gÀx
< 
	g£quí˚
 < 
	gidítifõr
 > >()) {

1647 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

1648 i‡((*
	gposôi⁄
 ='"' || *
posôi⁄
 ='\''Ë|| 
≥ek
 < 
Æã∫©ives
 < 
Æpha
 > >()) {

1653 i‡(
	gÀx
< 
	gv¨übÀ
 >()) {

1654 
	g°d
::
°rög
 
«me
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

1655 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
V¨übÀ
, 
p°©e
, 
«me
);

1658 i‡(
	gÀx
< 
	g≥r˚¡age
 >()) {

1659 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
PERCENTAGE
, 
Àxed
);

1662 i‡(
	gÀx
< 
	gdimísi⁄
 >()) {

1663 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
DIMENSION
, 
Àxed
);

1666 i‡(
	gÀx
< 
	gnumbî
 >()) {

1667 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
NUMBER
, 
Àxed
);

1670 i‡(
	gÀx
< 
	g£quí˚
 < 
	ghex
, 
	g√g©e
 < 
	gexa˘ly
 < '-' > > > >()) {

1671 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
TextuÆ
, 
p°©e
, TextuÆ::
HEX
, 
Àxed
);

1673 i‡(
	gÀx
< 
	g£quí˚
 < 
	gexa˘ly
 <'#'>, 
	gidítifõr
 > >()) {

1674 (*
	gschema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_QuŸed
, 
p°©e
, 
Àxed
);

1677 i‡(
	g≥ek
< 
	g∑ª¡he£_sc›e
 >()) {

1678 (*
	gschema
Ë<< 
∑r£_Á˘‹
();

1683 ++
	gnum_ôems
;

1685 i‡(
	gposôi⁄
 !
°›
) {

1686 (*
schema
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
posôi⁄
, 
°›
));

1687 
	gposôi⁄
 = 
°›
;

1689 
	gíd
 = 
ì
;

1690  
	gschema
;

1695 
Såög
* 
	gP¨£r
::
∑r£_idítifõr_schema
()

1697 
Tokí
 
id
(
Àxed
);

1698 c⁄° * 
	gi
 = 
id
.
begö
;

1700 c⁄° * 
	gp
 = 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gid
.
	gbegö
, id.
	gíd
);

1701 i‡(!
	gp
) {

1702  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
°d
::
°rög
(
id
.
begö
, id.
íd
));

1705 
Såög_Schema
* 
	gschema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

1706 
	gi
 < 
	gid
.
	gíd
) {

1707 
	gp
 = 
föd_fú°_ö_öãrvÆ
< 
exa˘ly
<
hash_lbø˚
>, 
	gblock_commít
 >(
	gi
, 
	gid
.
	gíd
);

1708 i‡(
	gp
) {

1709 i‡(
	gi
 < 
	gp
) {

1711 c⁄° * 
	go
 = 
posôi⁄
; 
	gposôi⁄
 = 
i
;

1712 *
	gschema
 << 
∑r£_vÆue_schema
(
p
);

1713 
	gposôi⁄
 = 
o
;

1717 i‡(
	g≥ek
 < 
	g£quí˚
 < 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<
	grbø˚
> > >(
	gp
+2)Ë{ 
	gposôi⁄
 = 
p
;

1718 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was ");

1720 c⁄° * 
	gj
 = 
skù_ovî_sc›es
< 
exa˘ly
<
hash_lbø˚
>, 
	gexa˘ly
<
	grbø˚
> >(
	gp
+2, 
	gid
.
	gíd
);

1721 i‡(
	gj
) {

1723 
Ex¥essi⁄
* 
	göãΩ_node
 = 
P¨£r
::
‰om_tokí
(
Tokí
(
p
+2, 
j
), 
˘x
, 
p°©e
, 
sour˚
).
∑r£_li°
();

1724 
	göãΩ_node
->
is_öãΩﬁ™t
(
åue
);

1725 (*
	gschema
Ë<< 
	göãΩ_node
;

1727 
	gi
 = 
j
;

1731 
îr‹
("u¡îmö©ed i¡îpﬁ™àösidêöãΩﬁ©ed idítifõ∏" + 
id
.
to_°rög
(), 
p°©e
);

1735 i‡(
	gi
 < 
	gíd
) {

1736 c⁄° * 
	go
 = 
posôi⁄
; 
	gposôi⁄
 = 
i
;

1737 *
	gschema
 << 
∑r£_vÆue_schema
(
id
.
íd
);

1738 
	gposôi⁄
 = 
o
;

1743  
	gschema
;

1747 
Fun˘i⁄_CÆl
* 
	gP¨£r
::
∑r£_ˇlc_fun˘i⁄
()

1749 
Àx
< 
idítifõr
 >();

1750 
	g°d
::
°rög
 
«me
(
Àxed
);

1751 
P¨£rSèã
 
	gˇŒ_pos
 = 
p°©e
;

1752 
	gÀx
< 
	gexa˘ly
<'('> >();

1753 
P¨£rSèã
 
	g¨g_pos
 = 
p°©e
;

1754 c⁄° * 
	g¨g_beg
 = 
posôi⁄
;

1755 
∑r£_li°
();

1756 c⁄° * 
	g¨g_íd
 = 
posôi⁄
;

1757 
	gÀx
< 
	gskù_ovî_sc›es
 <

1758 
	gexa˘ly
 < '(' >,

1759 
	gexa˘ly
 < ')' >

1762 
Argumít
* 
	g¨g
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumít, 
¨g_pos
, 
∑r£_öãΩﬁ©ed_chunk
(
Tokí
(
¨g_beg
, 
¨g_íd
)));

1763 
Argumíts
* 
	g¨gs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Argumíts, 
¨g_pos
);

1764 *
	g¨gs
 << 
	g¨g
;

1765  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Fun˘i⁄_CÆl
, 
ˇŒ_pos
, 
«me
, 
¨gs
);

1768 
Såög
* 
	gP¨£r
::
∑r£_uæ_fun˘i⁄_°rög
()

1770 
°d
::
°rög
 
¥efix
("");

1771 i‡(
	gÀx
< 
	guri_¥efix
 >()) {

1772 
	g¥efix
 = 
°d
::
°rög
(
Àxed
);

1775 
	gÀx
 < 
	g›ti⁄Æ_•a˚s
 >();

1776 
Såög
* 
	guæ_°rög
 = 
∑r£_uæ_fun˘i⁄_¨gumít
();

1778 
	g°d
::
°rög
 
suffix
("");

1779 i‡(
	gÀx
< 
	gªÆ_uri_suffix
 >()) {

1780 
	gsuffix
 = 
°d
::
°rög
(
Àxed
);

1783 
	g°d
::
°rög
 
uri
("");

1784 i‡(
	guæ_°rög
) {

1785 
	guri
 = 
uæ_°rög
->
to_°rög
({ 
NESTED
, 5 });

1788 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
uæ_°rög
)) {

1789 
Såög_Schema
* 
ªs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

1790 (*
	gªs
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
¥efix
);

1791 (*
	gªs
Ë+
schema
;

1792 (*
	gªs
Ë<< 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
suffix
);

1793  
	gªs
;

1795 
	g°d
::
°rög
 
ªs
 = 
¥efix
 + 
uri
 + 
suffix
;

1796  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
ªs
);

1800 
Såög
* 
	gP¨£r
::
∑r£_uæ_fun˘i⁄_¨gumít
()

1802 c⁄° * 
p
 = 
posôi⁄
;

1804 
	g°d
::
°rög
 
uri
("");

1805 i‡(
	gÀx
< 
	gªÆ_uri_vÆue
 >(
	gÁl£
)) {

1806 
	guri
 = 
Àxed
.
to_°rög
();

1809 i‡(
	g≥ek
< 
	gexa˘ly
< 
	ghash_lbø˚
 > >()) {

1810 c⁄° * 
	gµ
 = 
posôi⁄
;

1812 
	gµ
 && 
	g≥ek
< 
	gexa˘ly
< 
	ghash_lbø˚
 > >(pp)) {

1813 
	gµ
 = 
£quí˚
< 
öãΩﬁ™t
, 
	gªÆ_uri_vÆue
 >(pp);

1815 
	gposôi⁄
 = 
µ
;

1816  
∑r£_öãΩﬁ©ed_chunk
(
Tokí
(
p
, 
posôi⁄
));

1818 i‡(
	guri
 != "") {

1819 
°d
::
°rög
 
ªs
 = 
Utû
::
πrim
(
uri
);

1820  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
ªs
);

1826 
Fun˘i⁄_CÆl
* 
	gP¨£r
::
∑r£_fun˘i⁄_ˇŒ
()

1828 
Àx
< 
idítifõr
 >();

1829 
	g°d
::
°rög
 
«me
(
Àxed
);

1831 
P¨£rSèã
 
	gˇŒ_pos
 = 
p°©e
;

1832 
Argumíts
* 
	g¨gs
 = 
∑r£_¨gumíts
();

1833  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Fun˘i⁄_CÆl
, 
ˇŒ_pos
, 
«me
, 
¨gs
);

1836 
Fun˘i⁄_CÆl_Schema
* 
	gP¨£r
::
∑r£_fun˘i⁄_ˇŒ_schema
()

1838 
Såög
* 
«me
 = 
∑r£_idítifõr_schema
();

1839 
P¨£rSèã
 
	gsour˚_posôi⁄_of_ˇŒ
 = 
p°©e
;

1841 
Fun˘i⁄_CÆl_Schema
* 
	gthe_ˇŒ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Fun˘i⁄_CÆl_Schema, 
sour˚_posôi⁄_of_ˇŒ
, 
«me
, 
∑r£_¨gumíts
());

1842  
	gthe_ˇŒ
;

1845 
C⁄ã¡
* 
	gP¨£r
::
∑r£_c⁄ã¡_dúe˘ive
()

1847 
boﬁ
 
missög_mixö_∑ª¡
 = 
åue
;

1848 autÿ
	g∑ª¡
 : 
°ack
) {

1849 i‡(
∑ª¡
 =
Sc›e
::
Mixö
) {

1850 
missög_mixö_∑ª¡
 = 
Ál£
;

1854 i‡(
	gmissög_mixö_∑ª¡
) {

1855 
îr‹
("@c⁄ã¡ may o∆y bêu£d wôhöá mixö", 
p°©e
);

1857  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
C⁄ã¡
, 
p°©e
);

1860 
If
* 
	gP¨£r
::
∑r£_if_dúe˘ive
(
boﬁ
 
ñ£_if
)

1862 
°ack
.
push_back
(
Sc›e
::
C⁄åﬁ
);

1863 
P¨£rSèã
 
	gif_sour˚_posôi⁄
 = 
p°©e
;

1864 
Ex¥essi⁄
* 
	g¥ediˇã
 = 
∑r£_li°
();

1865 
	g¥ediˇã
->
is_dñayed
(
Ál£
);

1866 
Block
* 
	gblock
 = 
∑r£_block
();

1867 
Block
* 
	gÆã∫©ive
 = 0;

1871 i‡(
	gÀx_css
< 
	gñ£if_dúe˘ive
 >()) {

1872 
	gÆã∫©ive
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Block
, 
p°©e
);

1873 (*
	gÆã∫©ive
Ë<< 
∑r£_if_dúe˘ive
(
åue
);

1875 i‡(
	gÀx_css
< 
	gkwd_ñ£_dúe˘ive
 >()) {

1876 
	gÆã∫©ive
 = 
∑r£_block
();

1878 
	g°ack
.
p›_back
();

1879  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
If
, 
if_sour˚_posôi⁄
, 
¥ediˇã
, 
block
, 
Æã∫©ive
);

1882 
F‹
* 
	gP¨£r
::
∑r£_f‹_dúe˘ive
()

1884 
°ack
.
push_back
(
Sc›e
::
C⁄åﬁ
);

1885 
P¨£rSèã
 
	gf‹_sour˚_posôi⁄
 = 
p°©e
;

1886 
Àx_v¨übÀ
();

1887 
	g°d
::
°rög
 
v¨
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

1888 i‡(!
	gÀx
< 
	gkwd_‰om
 >()Ë
îr‹
("ex≥˘ed '‰om' keyw‹d i¿@f‹ dúe˘ive", 
p°©e
);

1889 
Ex¥essi⁄
* 
	glowî_bound
 = 
∑r£_ex¥essi⁄
();

1890 
	glowî_bound
->
is_dñayed
(
Ál£
);

1891 
boﬁ
 
	gö˛usive
 = 
Ál£
;

1892 i‡(
	gÀx
< 
	gkwd_through
 >()Ë
	gö˛usive
 = 
åue
;

1893 i‡(
	gÀx
< 
	gkwd_to
 >()Ë
	gö˛usive
 = 
Ál£
;

1894 
îr‹
("ex≥˘ed 'through' o∏'to' keyw‹d i¿@f‹ dúe˘ive", 
p°©e
);

1895 
Ex¥essi⁄
* 
	guµî_bound
 = 
∑r£_ex¥essi⁄
();

1896 
	guµî_bound
->
is_dñayed
(
Ál£
);

1897 
Block
* 
	gbody
 = 
∑r£_block
();

1898 
	g°ack
.
p›_back
();

1899  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
F‹
, 
f‹_sour˚_posôi⁄
, 
v¨
, 
lowî_bound
, 
uµî_bound
, 
body
, 
ö˛usive
);

1903 
Tokí
 
	gP¨£r
::
Àx_v¨übÀ
()

1906 i‡(!
≥ek
< 
exa˘ly
 <'$'> >()) {

1907 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"$\", was ");

1910 i‡(!
	gÀx
< 
	g£quí˚
 < 
	gexa˘ly
 <'$'>, 
	gidítifõr
 > >()) {

1911 
	gÀx
< 
	gexa˘ly
 <'$'> >();

1912 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected identifier, was ");

1915  
	gtokí
;

1918 
Tokí
 
	gP¨£r
::
Àx_idítifõr
()

1921 i‡(!
Àx
< 
idítifõr
 >()) {

1922 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected identifier, was ");

1925  
	gtokí
;

1928 
Each
* 
	gP¨£r
::
∑r£_óch_dúe˘ive
()

1930 
°ack
.
push_back
(
Sc›e
::
C⁄åﬁ
);

1931 
P¨£rSèã
 
	góch_sour˚_posôi⁄
 = 
p°©e
;

1932 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
v¨s
;

1933 
Àx_v¨übÀ
();

1934 
	gv¨s
.
push_back
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

1935 
	gÀx
< 
	gexa˘ly
<','> >()) {

1936 i‡(!
	gÀx
< 
	gv¨übÀ
 >()Ë
îr‹
("@óch dúe˘ivêªquúe†™ iãøti⁄ v¨übÀ", 
p°©e
);

1937 
	gv¨s
.
push_back
(
Utû
::
n‹mÆize_undîsc‹es
(
Àxed
));

1939 i‡(!
	gÀx
< 
	gkwd_ö
 >()Ë
îr‹
("ex≥˘ed 'ö' keyw‹d i¿@óch dúe˘ive", 
p°©e
);

1940 
Ex¥essi⁄
* 
	gli°
 = 
∑r£_li°
();

1941 
	gli°
->
is_dñayed
(
Ál£
);

1942 i‡(
	gli°
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
) {

1943 
Li°
* 
l
 = 
°©ic_ˇ°
<Li°*>(
li°
);

1944 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

1945 (*
	gl
)[
i
]->
is_dñayed
(
Ál£
);

1948 
Block
* 
	gbody
 = 
∑r£_block
();

1949 
	g°ack
.
p›_back
();

1950  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Each
, 
óch_sour˚_posôi⁄
, 
v¨s
, 
li°
, 
body
);

1954 
Whûe
* 
	gP¨£r
::
∑r£_whûe_dúe˘ive
()

1956 
°ack
.
push_back
(
Sc›e
::
C⁄åﬁ
);

1958 
Whûe
* 
	gˇŒ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Whûe, 
p°©e
, 0, 0);

1960 
Ex¥essi⁄
* 
	g¥ediˇã
 = 
∑r£_li°
();

1961 
	g¥ediˇã
->
is_dñayed
(
Ál£
);

1962 
	gˇŒ
->
¥ediˇã
(predicate);

1964 
	gˇŒ
->
block
(
∑r£_block
());

1966 
	g°ack
.
p›_back
();

1968  
	gˇŒ
;

1972 
Medü_Block
* 
	gP¨£r
::
∑r£_medü_block
()

1974 
°ack
.
push_back
(
Sc›e
::
Medü
);

1975 
Medü_Block
* 
	gmedü_block
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Medü_Block, 
p°©e
, 0, 0);

1976 
	gmedü_block
->
medü_quîõs
(
∑r£_medü_quîõs
());

1978 
Medü_Block
* 
	g¥ev_medü_block
 = 
œ°_medü_block
;

1979 
	gœ°_medü_block
 = 
medü_block
;

1980 
	gmedü_block
->
block
(
∑r£_css_block
());

1981 
	gœ°_medü_block
 = 
¥ev_medü_block
;

1982 
	g°ack
.
p›_back
();

1983  
	gmedü_block
;

1986 
Li°
* 
	gP¨£r
::
∑r£_medü_quîõs
()

1988 
Li°
* 
medü_quîõs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
p°©e
, 0, 
SASS_COMMA
);

1989 i‡(!
	g≥ek_css
 < 
	gexa˘ly
 <'{'> >()Ë(*
	gmedü_quîõs
Ë<< 
∑r£_medü_quîy
();

1990 
	gÀx_css
 < 
	gexa˘ly
 <','> >()Ë(*
	gmedü_quîõs
Ë<< 
∑r£_medü_quîy
();

1991  
	gmedü_quîõs
;

1995 
Medü_Quîy
* 
	gP¨£r
::
∑r£_medü_quîy
()

1997 
Medü_Quîy
* 
medü_quîy
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Medü_Quîy, 
p°©e
);

1999 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2000 i‡(
	gÀx
 < 
	gkwd_nŸ
 >()Ë
	gmedü_quîy
->
is_√g©ed
(
åue
);

2001 i‡(
	gÀx
 < 
	gkwd_⁄ly
 >()Ë
	gmedü_quîy
->
is_ª°ri˘ed
(
åue
);

2003 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2004 i‡(
	gÀx
 < 
	gidítifõr_schema
 >()Ë
	gmedü_quîy
->
medü_ty≥
(
∑r£_idítifõr_schema
());

2005 i‡(
	gÀx
 < 
	gidítifõr
 >()Ë
	gmedü_quîy
->
medü_ty≥
(
∑r£_öãΩﬁ©ed_chunk
(
Àxed
));

2006 (*
	gmedü_quîy
Ë<< 
∑r£_medü_ex¥essi⁄
();

2008 
	gÀx_css
 < 
	gkwd_™d
 >()Ë(*
	gmedü_quîy
Ë<< 
∑r£_medü_ex¥essi⁄
();

2009 i‡(
	gÀx
 < 
	gidítifõr_schema
 >()) {

2010 
Såög_Schema
* 
	gschema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

2011 *
	gschema
 << 
	gmedü_quîy
->
medü_ty≥
();

2012 *
	gschema
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, " ");

2013 *
	gschema
 << 
∑r£_idítifõr_schema
();

2014 
	gmedü_quîy
->
medü_ty≥
(
schema
);

2016 
	gÀx_css
 < 
	gkwd_™d
 >()Ë(*
	gmedü_quîy
Ë<< 
∑r£_medü_ex¥essi⁄
();

2017  
	gmedü_quîy
;

2020 
Medü_Quîy_Ex¥essi⁄
* 
	gP¨£r
::
∑r£_medü_ex¥essi⁄
()

2022 i‡(
Àx
 < 
idítifõr_schema
 >()) {

2023 
Såög
* 
ss
 = 
∑r£_idítifõr_schema
();

2024  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Medü_Quîy_Ex¥essi⁄
, 
p°©e
, 
ss
, 0, 
åue
);

2026 i‡(!
	gÀx_css
< 
	gexa˘ly
<'('> >()) {

2027 
îr‹
("medü quîyÉx¥essi⁄ mu° begö wôh '('", 
p°©e
);

2029 
Ex¥essi⁄
* 
	g„©uª
 = 0;

2030 i‡(
	g≥ek_css
< 
	gexa˘ly
<')'> >()) {

2031 
îr‹
("medü fótuªÑequúed i¿medü quîyÉx¥essi⁄", 
p°©e
);

2033 
	g„©uª
 = 
∑r£_ex¥essi⁄
();

2034 
Ex¥essi⁄
* 
	gex¥essi⁄
 = 0;

2035 i‡(
	gÀx_css
< 
	gexa˘ly
<':'> >()) {

2036 
	gex¥essi⁄
 = 
∑r£_li°
();

2038 i‡(!
	gÀx_css
< 
	gexa˘ly
<')'> >()) {

2039 
îr‹
("un˛o£dÖ¨íthesi†ö medü quîyÉx¥essi⁄", 
p°©e
);

2041  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Medü_Quîy_Ex¥essi⁄
, 
„©uª
->
p°©e
(), fótuª, 
ex¥essi⁄
);

2046 
Suµ‹ts_Block
* 
	gP¨£r
::
∑r£_suµ‹ts_dúe˘ive
()

2048 
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
 = 
∑r£_suµ‹ts_c⁄dôi⁄
();

2050 
Suµ‹ts_Block
* 
	gquîy
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Suµ‹ts_Block, 
p°©e
, 
c⁄d
);

2053 
	gquîy
->
block
(
∑r£_block
());

2055  
	gquîy
;

2060 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_c⁄dôi⁄
()

2062 
Àx
 < 
css_whôe•a˚
 >();

2063 
Suµ‹ts_C⁄dôi⁄
* 
	gc⁄d
 = 
∑r£_suµ‹ts_√g©i⁄
();

2064 i‡(!
	gc⁄d
Ëc⁄d = 
∑r£_suµ‹ts_›î©‹
();

2065 i‡(!
	gc⁄d
Ëc⁄d = 
∑r£_suµ‹ts_öãΩﬁ©i⁄
();

2066  
	gc⁄d
;

2069 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_√g©i⁄
()

2071 i‡(!
Àx
 < 
kwd_nŸ
 >())  0;

2073 
Suµ‹ts_C⁄dôi⁄
* 
	gc⁄d
 = 
∑r£_suµ‹ts_c⁄dôi⁄_ö_∑ªns
();

2074  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Suµ‹ts_Neg©i⁄
, 
p°©e
, 
c⁄d
);

2077 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_›î©‹
()

2079 
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
 = 
∑r£_suµ‹ts_c⁄dôi⁄_ö_∑ªns
();

2080 i‡(!
	gc⁄d
)  0;

2082 
	gåue
) {

2083 
	gSuµ‹ts_O≥øt‹
::
O≥ønd
 
›
 = 
Suµ‹ts_O≥øt‹
::
OR
;

2084 i‡(
	gÀx
 < 
	gkwd_™d
 >()Ë{ 
	g›
 = 
Suµ‹ts_O≥øt‹
::
AND
; }

2085 if(!
	gÀx
 < 
	gkwd_‹
 >()) { ; }

2087 
	gÀx
 < 
	gcss_whôe•a˚
 >();

2088 
Suµ‹ts_C⁄dôi⁄
* 
	gright
 = 
∑r£_suµ‹ts_c⁄dôi⁄_ö_∑ªns
();

2091 
	gc⁄d
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Suµ‹ts_O≥øt‹
, 
p°©e
, 
c⁄d
, 
right
, 
›
);

2093  
	gc⁄d
;

2096 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_öãΩﬁ©i⁄
()

2098 i‡(!
Àx
 < 
öãΩﬁ™t
 >())  0;

2100 
Såög
* 
	göãΩ
 = 
∑r£_öãΩﬁ©ed_chunk
(
Àxed
);

2101 i‡(!
	göãΩ
)  0;

2103  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Suµ‹ts_I¡îpﬁ©i⁄
, 
p°©e
, 
öãΩ
);

2108 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_de˛¨©i⁄
()

2110 
Suµ‹ts_C⁄dôi⁄
* 
c⁄d
 = 0;

2112 
De˛¨©i⁄
* 
	gde˛¨©i⁄
 = 
∑r£_de˛¨©i⁄
();

2113 i‡(!
	gde˛¨©i⁄
Ë
îr‹
("@suµ‹t†c⁄dôi⁄Éx≥˘ed de˛¨©i⁄", 
p°©e
);

2114 
	gc⁄d
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Suµ‹ts_De˛¨©i⁄
,

2115 
de˛¨©i⁄
->
p°©e
(),

2116 
de˛¨©i⁄
->
¥›îty
(),

2117 
de˛¨©i⁄
->
vÆue
());

2119  
	gc⁄d
;

2122 
Suµ‹ts_C⁄dôi⁄
* 
	gP¨£r
::
∑r£_suµ‹ts_c⁄dôi⁄_ö_∑ªns
()

2124 
Suµ‹ts_C⁄dôi⁄
* 
öãΩ
 = 
∑r£_suµ‹ts_öãΩﬁ©i⁄
();

2125 i‡(
	göãΩ
 !0Ë 
öãΩ
;

2127 i‡(!
	gÀx
 < 
	gexa˘ly
 <'('> >())  0;

2128 
	gÀx
 < 
	gcss_whôe•a˚
 >();

2130 
Suµ‹ts_C⁄dôi⁄
* 
	gc⁄d
 = 
∑r£_suµ‹ts_c⁄dôi⁄
();

2131 i‡(
	gc⁄d
 != 0) {

2132 i‡(!
Àx
 < 
exa˘ly
 <')'> >()Ë
îr‹
("un˛o£dÖ¨íthesi†ö @suµ‹t†de˛¨©i⁄", 
p°©e
);

2134 
	gc⁄d
 = 
∑r£_suµ‹ts_de˛¨©i⁄
();

2135 i‡(!
	gÀx
 < 
	gexa˘ly
 <')'> >()Ë
îr‹
("un˛o£dÖ¨íthesi†ö @suµ‹t†de˛¨©i⁄", 
p°©e
);

2137 
	gÀx
 < 
	gcss_whôe•a˚
 >();

2138  
	gc⁄d
;

2141 
At_RoŸ_Block
* 
	gP¨£r
::
∑r£_©_roŸ_block
()

2143 
P¨£rSèã
 
©_sour˚_posôi⁄
 = 
p°©e
;

2144 
Block
* 
	gbody
 = 0;

2145 
At_RoŸ_Quîy
* 
	gex¥
 = 0;

2146 
Lookahód
 
	glookahód_ªsu…
;

2147 
LOCAL_FLAG
(
ö_©_roŸ
, 
åue
);

2148 i‡(
	gÀx_css
< 
	gexa˘ly
<'('> >()) {

2149 
	gex¥
 = 
∑r£_©_roŸ_quîy
();

2151 i‡(
	g≥ek_css
 < 
	gexa˘ly
<'{'> >()) {

2152 
	gÀx
 <
	g›ti⁄Æ_•a˚s
>();

2153 
	gbody
 = 
∑r£_block
(
åue
);

2155 i‡((
	glookahód_ªsu…
 = 
lookahód_f‹_£À˘‹
(
posôi⁄
)).
found
) {

2156 
RuÀ£t
* 
r
 = 
∑r£_ruÀ£t
(
lookahód_ªsu…
, 
Ál£
);

2157 
	gbody
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Block
, 
r
->
p°©e
(), 1, 
åue
);

2158 *
	gbody
 << 
	gr
;

2160 
At_RoŸ_Block
* 
	g©_roŸ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, At_RoŸ_Block, 
©_sour˚_posôi⁄
, 
body
);

2161 i‡(
	gex¥
Ë
	g©_roŸ
->
ex¥essi⁄
(
ex¥
);

2162  
	g©_roŸ
;

2165 
At_RoŸ_Quîy
* 
	gP¨£r
::
∑r£_©_roŸ_quîy
()

2167 i‡(
≥ek
< 
exa˘ly
<')'> >()Ë
îr‹
("©-roŸ fótuªÑequúed i¿©-roŸÉx¥essi⁄", 
p°©e
);

2169 i‡(!
	g≥ek
< 
	gÆã∫©ives
< 
	gkwd_wôh_dúe˘ive
, 
	gkwd_wôhout_dúe˘ive
 > >()) {

2170 
css_îr‹
("Invalid CSS", "áfter ", ":Éxpected \"with\" or \"without\", was ");

2173 
Ex¥essi⁄
* 
	g„©uª
 = 
∑r£_li°
();

2174 i‡(!
	gÀx_css
< 
	gexa˘ly
<':'> >()Ë
îr‹
("°yÀ de˛¨©i⁄ mu° c⁄èöá vÆue", 
p°©e
);

2175 
Ex¥essi⁄
* 
	gex¥essi⁄
 = 
∑r£_li°
();

2176 
Li°
* 
	gvÆue
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Li°, 
„©uª
->
p°©e
(), 1);

2178 i‡(
	gex¥essi⁄
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
) {

2179 
vÆue
 = 
°©ic_ˇ°
<
Li°
*>(
ex¥essi⁄
);

2181 *
	gvÆue
 << 
	gex¥essi⁄
;

2183 
At_RoŸ_Quîy
* 
	gc⁄d
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, At_Root_Query,

2184 
vÆue
->
p°©e
(),

2185 
„©uª
,

2186 
vÆue
);

2187 i‡(!
	gÀx_css
< 
	gexa˘ly
<')'> >()Ë
îr‹
("un˛o£dÖ¨íthesi†ö @©-roŸÉx¥essi⁄", 
p°©e
);

2188  
	gc⁄d
;

2191 
Dúe˘ive
* 
	gP¨£r
::
∑r£_•ecül_dúe˘ive
()

2193 
°d
::
°rög
 
kwd
(
Àxed
);

2195 i‡(
	gÀxed
 ="@ñ£"Ë
îr‹
("InvÆid CSS: @ñ£ mu° comêa·î @if", 
p°©e
);

2197 
Dúe˘ive
* 
	g©_ruÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Dúe˘ive, 
p°©e
, 
kwd
);

2198 
Lookahód
 
	glookahód
 = 
lookahód_f‹_ö˛ude
(
posôi⁄
);

2199 i‡(
	glookahód
.
	gfound
 && !lookahód.
	ghas_öãΩﬁ™ts
) {

2200 
	g©_ruÀ
->
£À˘‹
(
∑r£_£À˘‹_li°
(
åue
));

2203 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2205 i‡(
	gÀx
 < 
	g°©ic_¥›îty
 >()) {

2206 
	g©_ruÀ
->
vÆue
(
∑r£_öãΩﬁ©ed_chunk
(
Tokí
(
Àxed
)));

2207 } i‡(!(
	g≥ek
 < 
	gÆã∫©ives
 < 
	gexa˘ly
<'{'>,Éxactly<'}'>,Éxactly<';'> > >())) {

2208 
	g©_ruÀ
->
vÆue
(
∑r£_li°
());

2211 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2213 i‡(
	g≥ek
< 
	gexa˘ly
<'{'> >()) {

2214 
	g©_ruÀ
->
block
(
∑r£_block
());

2217  
	g©_ruÀ
;

2220 
Dúe˘ive
* 
	gP¨£r
::
∑r£_¥efixed_dúe˘ive
()

2222 
°d
::
°rög
 
kwd
(
Àxed
);

2224 i‡(
	gÀxed
 ="@ñ£"Ë
îr‹
("InvÆid CSS: @ñ£ mu° comêa·î @if", 
p°©e
);

2226 
Dúe˘ive
* 
	g©_ruÀ
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Dúe˘ive, 
p°©e
, 
kwd
);

2227 
Lookahód
 
	glookahód
 = 
lookahód_f‹_ö˛ude
(
posôi⁄
);

2228 i‡(
	glookahód
.
	gfound
 && !lookahód.
	ghas_öãΩﬁ™ts
) {

2229 
	g©_ruÀ
->
£À˘‹
(
∑r£_£À˘‹_li°
(
åue
));

2232 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2234 i‡(
	gÀx
 < 
	g°©ic_¥›îty
 >()) {

2235 
	g©_ruÀ
->
vÆue
(
∑r£_öãΩﬁ©ed_chunk
(
Tokí
(
Àxed
)));

2236 } i‡(!(
	g≥ek
 < 
	gÆã∫©ives
 < 
	gexa˘ly
<'{'>,Éxactly<'}'>,Éxactly<';'> > >())) {

2237 
	g©_ruÀ
->
vÆue
(
∑r£_li°
());

2240 
	gÀx
 < 
	gcss_commíts
 >(
	gÁl£
);

2242 i‡(
	g≥ek
< 
	gexa˘ly
<'{'> >()) {

2243 
	g©_ruÀ
->
block
(
∑r£_block
());

2246  
	g©_ruÀ
;

2250 
Dúe˘ive
* 
	gP¨£r
::
∑r£_dúe˘ive
()

2252 
Dúe˘ive
* 
dúe˘ive
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Dúe˘ive, 
p°©e
, 
Àxed
);

2253 
Ex¥essi⁄
* 
	gvÆ
 = 
∑r£_Æmo°_™y_vÆue
();

2257 
	gdúe˘ive
->
vÆue
(
vÆ
);

2258 i‡(
	g≥ek
< 
	gexa˘ly
<'{'> >()) {

2259 
	gdúe˘ive
->
block
(
∑r£_block
());

2260 } i‡(!
	gvÆ
) {

2261 
css_îr‹
("most def");

2263  
	gdúe˘ive
;

2266 
Ex¥essi⁄
* 
	gP¨£r
::
Àx_öãΩﬁ©i⁄
()

2268 i‡(
Àx
 < 
öãΩﬁ™t
 >(
åue
Ë!
NULL
) {

2269  
∑r£_öãΩﬁ©ed_chunk
(
Àxed
, 
åue
);

2274 
Ex¥essi⁄
* 
	gP¨£r
::
Àx_öãΩ_uri
()

2277  
Àx_öãΩ
< 
ª_°rög_uri_›í
, 
	gª_°rög_uri_˛o£
 >();

2280 
Ex¥essi⁄
* 
	gP¨£r
::
Àx_öãΩ_°rög
()

2282 
Ex¥essi⁄
* 
rv
 = 0;

2283 i‡((
	grv
 = 
Àx_öãΩ
< 
ª_°rög_doubÀ_›í
, 
	gª_°rög_doubÀ_˛o£
 >()Ë!
NULL
Ë 
rv
;

2284 i‡((
	grv
 = 
Àx_öãΩ
< 
ª_°rög_sögÀ_›í
, 
	gª_°rög_sögÀ_˛o£
 >()Ë!
NULL
Ë 
rv
;

2285  
	grv
;

2288 
Ex¥essi⁄
* 
	gP¨£r
::
Àx_Æmo°_™y_vÆue_ch¨s
()

2290 c⁄° * 
m©ch
 =

2291 
Àx
 <

2292 
⁄e_∂us
 <

2293 
Æã∫©ives
 <

2294 
£quí˚
 <

2295 
exa˘ly
 <'\\'>,

2296 
	g™y_ch¨


2298 
	g£quí˚
 <

2299 
	g√g©e
 <

2300 
	g£quí˚
 <

2301 
	gexa˘ly
 < 
	guæ_kwd
 >,

2302 
	gexa˘ly
 <'('>

2305 
	g√g_˛ass_ch¨
 <

2306 
	gÆmo°_™y_vÆue_˛ass


2309 
	g£quí˚
 <

2310 
	gexa˘ly
 <'/'>,

2311 
	g√g©e
 <

2312 
	gÆã∫©ives
 <

2313 
	gexa˘ly
 <'/'>,

2314 
	gexa˘ly
 <'*'>

2318 
	g£quí˚
 <

2319 
	gexa˘ly
 <'\\'>,

2320 
	gexa˘ly
 <'#'>,

2321 
	g√g©e
 <

2322 
	gexa˘ly
 <'{'>

2325 
	g£quí˚
 <

2326 
	gexa˘ly
 <'!'>,

2327 
	g√g©e
 <

2328 
	gÆpha


2333 >(
	gÁl£
);

2334 i‡(
	gm©ch
) {

2336  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

2338  
	gNULL
;

2341 
Ex¥essi⁄
* 
	gP¨£r
::
Àx_Æmo°_™y_vÆue_tokí
()

2343 
Ex¥essi⁄
* 
rv
 = 0;

2344 i‡(*
	gposôi⁄
 == 0)  0;

2345 i‡((
	grv
 = 
Àx_Æmo°_™y_vÆue_ch¨s
()Ë!
NULL
Ë 
rv
;

2348 i‡((
	grv
 = 
Àx_öãΩ_°rög
()Ë!
NULL
Ë 
rv
;

2349 i‡((
	grv
 = 
Àx_öãΩ_uri
()Ë!
NULL
Ë 
rv
;

2350 i‡((
	grv
 = 
Àx_öãΩﬁ©i⁄
()Ë!
NULL
Ë 
rv
;

2351  
	grv
;

2354 
Såög_Schema
* 
	gP¨£r
::
∑r£_Æmo°_™y_vÆue
()

2357 
Såög_Schema
* 
schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

2358 i‡(*
	gposôi⁄
 == 0)  0;

2359 
	gÀx
 < 
	g•a˚s
 >(
	gÁl£
);

2360 
Ex¥essi⁄
* 
	gtokí
 = 
Àx_Æmo°_™y_vÆue_tokí
();

2361 i‡(!
	gtokí
)  0;

2363 *
	gschema
 << 
	gtokí
;

2364 i‡(*
	gposôi⁄
 == 0) {

2365 
schema
->
πrim
();

2366  
	gschema
;

2369 (
	gtokí
 = 
Àx_Æmo°_™y_vÆue_tokí
())) {

2370 *
schema
 << 
tokí
;

2373 
	gÀx
 < 
	gcss_whôe•a˚
 >();

2375 
	gschema
->
πrim
();

2377  
	gschema
;

2380 
W¨nög
* 
	gP¨£r
::
∑r£_w¨nög
()

2382 i‡(
°ack
.
back
(Ë!
Sc›e
::
RoŸ
 &&

2383 
°ack
.
back
(Ë!
Sc›e
::
Fun˘i⁄
 &&

2384 
°ack
.
back
(Ë!
Sc›e
::
Mixö
 &&

2385 
°ack
.
back
(Ë!
Sc›e
::
C⁄åﬁ
 &&

2386 
°ack
.
back
(Ë!
Sc›e
::
RuÀs
) {

2387 
îr‹
("IŒegÆÇe°ög: O∆yÖr›îtõ†may bê√°ed bíóthÖr›îtõs.", 
p°©e
);

2389  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
W¨nög
, 
p°©e
, 
∑r£_li°
());

2392 
Eº‹
* 
	gP¨£r
::
∑r£_îr‹
()

2394 i‡(
°ack
.
back
(Ë!
Sc›e
::
RoŸ
 &&

2395 
°ack
.
back
(Ë!
Sc›e
::
Fun˘i⁄
 &&

2396 
°ack
.
back
(Ë!
Sc›e
::
Mixö
 &&

2397 
°ack
.
back
(Ë!
Sc›e
::
C⁄åﬁ
 &&

2398 
°ack
.
back
(Ë!
Sc›e
::
RuÀs
) {

2399 
îr‹
("IŒegÆÇe°ög: O∆yÖr›îtõ†may bê√°ed bíóthÖr›îtõs.", 
p°©e
);

2401  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Eº‹
, 
p°©e
, 
∑r£_li°
());

2404 
Debug
* 
	gP¨£r
::
∑r£_debug
()

2406 i‡(
°ack
.
back
(Ë!
Sc›e
::
RoŸ
 &&

2407 
°ack
.
back
(Ë!
Sc›e
::
Fun˘i⁄
 &&

2408 
°ack
.
back
(Ë!
Sc›e
::
Mixö
 &&

2409 
°ack
.
back
(Ë!
Sc›e
::
C⁄åﬁ
 &&

2410 
°ack
.
back
(Ë!
Sc›e
::
RuÀs
) {

2411 
îr‹
("IŒegÆÇe°ög: O∆yÖr›îtõ†may bê√°ed bíóthÖr›îtõs.", 
p°©e
);

2413  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Debug
, 
p°©e
, 
∑r£_li°
());

2416 
Rëu∫
* 
	gP¨£r
::
∑r£_ªtu∫_dúe˘ive
()

2419 i‡(
≥ek_css
 < 
Æã∫©ives
 < 
exa˘ly
 < ';' >, 
	gexa˘ly
 < '}' >, 
	gíd_of_fûe
 > >())

2420 { 
css_îr‹
("Invalid CSS", "áfter ", ":ÉxpectedÉxpression (e.g. 1px, bold), was "); }

2421  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Rëu∫
, 
p°©e
, 
∑r£_li°
());

2424 
Lookahód
 
	gP¨£r
::
lookahód_f‹_£À˘‹
(c⁄° * 
°¨t
)

2427 
Lookahód
 
rv
 = Lookahead();

2429 c⁄° * 
	gp
 = 
°¨t
 ? sèπ : 
posôi⁄
;

2431 
	grv
.
	gîr‹
 = 
p
;

2432 i‡(c⁄° * 
	gq
 =

2433 
≥ek
 <

2434 
ª_£À˘‹_li°


2435 >(
p
)

2437 
p
 < 
q
) {

2439 i‡(*
p
 == '#' && *(p+1) == '{') {

2440 
rv
.
has_öãΩﬁ™ts
 = 
åue
;

2441 
	gp
 = 
q
; ;

2443 ++ 
	gp
;

2449 
	grv
.
	gîr‹
 = 
q
;

2450 
	grv
.
	gposôi⁄
 = 
q
;

2453 i‡(
	g≥ek
 < 
	gexa˘ly
<'{'> >(
	gq
)Ë
	grv
.
	gfound
 = 
q
;

2454 i‡(
	g≥ek
 < 
	gexa˘ly
<'('> >(
	gq
)Ë
	grv
.
	gfound
 = 
q
;

2457 i‡(
	grv
.
	gfound
 || *
	gp
 =0Ë
rv
.
îr‹
 = 0;

2460 
	grv
.
	g∑rßbÀ
 = ! 
rv
.
has_öãΩﬁ™ts
;

2463  
	grv
;

2470 
Lookahód
 
	gP¨£r
::
lookahód_f‹_ö˛ude
(c⁄° * 
°¨t
)

2473 
Lookahód
 
rv
 = 
lookahód_f‹_£À˘‹
(
°¨t
);

2475 i‡(c⁄° * 
	gp
 = 
rv
.
posôi⁄
) {

2477 i‡(
≥ek
 < 
exa˘ly
<';'> >(
p
)Ë
rv
.
found
 =Ö;

2478 i‡(
	g≥ek
 < 
	gexa˘ly
<'}'> >(
	gp
)Ë
	grv
.
	gfound
 = 
p
;

2481  
	grv
;

2489 
Lookahód
 
	gP¨£r
::
lookahód_f‹_vÆue
(c⁄° * 
°¨t
)

2492 
Lookahód
 
rv
 = Lookahead();

2494 c⁄° * 
	gp
 = 
°¨t
 ? sèπ : 
posôi⁄
;

2496 i‡(c⁄° * 
	gq
 =

2497 
≥ek
 <

2498 
n⁄_gªedy
 <

2499 
Æã∫©ives
 <

2501 
block_commít
,

2503 
	g£quí˚
 <

2504 
	göãΩﬁ™t
,

2505 
	g›ti⁄Æ
 <

2506 
	gquŸed_°rög


2509 
	gidítifõr
,

2510 
	gv¨übÀ
,

2512 
	g£quí˚
 <

2513 
	g∑ª¡he£_sc›e
,

2514 
	göãΩﬁ™t
,

2515 
	g›ti⁄Æ
 <

2516 
	gquŸed_°rög


2520 
	g£quí˚
 <

2522 
	gÆã∫©ives
 <

2523 
	gexa˘ly
<'{'>,

2524 
	gexa˘ly
<'}'>,

2525 
	gexa˘ly
<';'>

2529 >(
	gp
)

2531 i‡(
	gp
 =
q
Ë 
rv
;

2532 
	gp
 < 
	gq
) {

2534 i‡(*
	gp
 ='#' && *(
p
+1) == '{') {

2535 
rv
.
has_öãΩﬁ™ts
 = 
åue
;

2536 
	gp
 = 
q
; ;

2538 ++ 
	gp
;

2542 
	grv
.
	gposôi⁄
 = 
q
;

2545 i‡(
	g≥ek
 < 
	gexa˘ly
<'{'> >(
	gq
)Ë
	grv
.
	gfound
 = 
q
;

2546 i‡(
	g≥ek
 < 
	gexa˘ly
<';'> >(
	gq
)Ë
	grv
.
	gfound
 = 
q
;

2547 i‡(
	g≥ek
 < 
	gexa˘ly
<'}'> >(
	gq
)Ë
	grv
.
	gfound
 = 
q
;

2551  
	grv
;

2555 
	gP¨£r
::
ªad_bom
()

2557 
size_t
 
skù
 = 0;

2558 
	g°d
::
°rög
 
ícodög
;

2559 
boﬁ
 
	gutf_8
 = 
Ál£
;

2560 (Ë
	gsour˚
[0]) {

2562 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_8_bom
, 3);

2563 
	gícodög
 = "UTF-8";

2564 
	gutf_8
 = 
åue
;

2567 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_16_bom_be
, 2);

2568 
	gícodög
 = "UTF-16 (bigÉndian)";

2571 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_16_bom_À
, 2);

2572 
	gskù
 +(
skù
 ? 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_32_bom_À
, 4) : 0);

2573 
	gícodög
 = (
skù
 == 2 ? "UTF-16 (littleÉndian)" : "UTF-32 (littleÉndian)");

2576 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_32_bom_be
, 4);

2577 
	gícodög
 = "UTF-32 (bigÉndian)";

2580 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_7_bom_1
, 4)

2581 | 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_7_bom_2
, 4)

2582 | 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_7_bom_3
, 4)

2583 | 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_7_bom_4
, 4)

2584 | 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_7_bom_5
, 5);

2585 
	gícodög
 = "UTF-7";

2588 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_1_bom
, 3);

2589 
	gícodög
 = "UTF-1";

2592 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
utf_ebcdic_bom
, 4);

2593 
	gícodög
 = "UTF-EBCDIC";

2596 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
scsu_bom
, 3);

2597 
	gícodög
 = "SCSU";

2600 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
bocu_1_bom
, 3);

2601 
	gícodög
 = "BOCU-1";

2604 
skù
 = 
check_bom_ch¨s
(
sour˚
, 
íd
, 
gb_18030_bom
, 4);

2605 
	gícodög
 = "GB-18030";

2608 i‡(
	gskù
 > 0 && !
	gutf_8
Ë
îr‹
("⁄ly UTF-8 documít†¨êcuºíéy suµ‹ãd; you∏documíà≠≥¨†tÿbê" + 
ícodög
, 
p°©e
);

2609 
	gposôi⁄
 +
skù
;

2612 
size_t
 
check_bom_ch¨s
(c⁄° * 
§c
, c⁄° *
íd
, c⁄° * 
bom
, size_à
Àn
)

2614 
size_t
 
	gskù
 = 0;

2615 i‡(
	g§c
 + 
	gÀn
 > 
	gíd
)  0;

2616 
size_t
 
	gi
 = 0; i < 
	gÀn
; ++i, ++
	gskù
) {

2617 i‡((Ë
	g§c
[
i
] !
bom
[i])  0;

2619  
	gskù
;

2623 
Ex¥essi⁄
* 
	gP¨£r
::
fﬁd_›î™ds
(Ex¥essi⁄* 
ba£
, 
°d
::
ve˘‹
<Ex¥essi⁄*>& 
›î™ds
, 
O≥ønd
 
›
)

2625 
size_t
 
	gi
 = 0, 
	gS
 = 
›î™ds
.
size
(); i < S; ++i) {

2626 
	gba£
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
p°©e
, 
›
, 
ba£
, 
›î™ds
[
i
]);

2627 
Bö¨y_Ex¥essi⁄
* 
	gb
 = 
°©ic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
ba£
);

2628 i‡(
	g›
.
	g›î™d
 =
Sass_OP
::
DIV
 && 
b
->
À·
()->
is_dñayed
(Ë&& b->
right
()->is_delayed()) {

2629 
ba£
->
is_dñayed
(
åue
);

2631 i‡(
	gb
 && b->
›
().
	g›î™d
 !
Sass_OP
::
DIV
) {

2632 
b
->
À·
()->
is_dñayed
(
Ál£
);

2633 
	gb
->
right
()->
is_dñayed
(
Ál£
);

2636  
	gba£
;

2639 
Ex¥essi⁄
* 
	gP¨£r
::
fﬁd_›î™ds
(Ex¥essi⁄* 
ba£
, 
°d
::
ve˘‹
<Ex¥essi⁄*>& 
›î™ds
, std::ve˘‹<
O≥ønd
>& 
›s
, 
size_t
 
i
)

2642 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
ba£
)) {

2644 i‡(
schema
->
has_öãΩﬁ™ts
()) {

2645 i‡(
i
 + 1 < 
›î™ds
.
size
() && (

2646 (
›s
[0].
›î™d
 =
Sass_OP
::
EQ
)

2647 || (
›s
[0].
›î™d
 =
Sass_OP
::
ADD
)

2648 || (
›s
[0].
›î™d
 =
Sass_OP
::
DIV
)

2649 || (
›s
[0].
›î™d
 =
Sass_OP
::
MUL
)

2650 || (
›s
[0].
›î™d
 =
Sass_OP
::
NEQ
)

2651 || (
›s
[0].
›î™d
 =
Sass_OP
::
LT
)

2652 || (
›s
[0].
›î™d
 =
Sass_OP
::
GT
)

2653 || (
›s
[0].
›î™d
 =
Sass_OP
::
LTE
)

2654 || (
›s
[0].
›î™d
 =
Sass_OP
::
GTE
)

2656 
Ex¥essi⁄
* 
rhs
 = 
fﬁd_›î™ds
(
›î™ds
[0], o≥ønds, 
›s
, 1);

2657 
	grhs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[0], 
schema
, 
rhs
);

2658 
	grhs
->
£t_dñayed
(
Ál£
);

2659 
	grhs
->
is_dñayed
(
åue
);

2660  
	grhs
;

2666 
size_t
 
	gS
 = 
›î™ds
.
size
(); 
	gi
 < S; ++i) {

2667 i‡(
Såög_Schema
* 
	gschema
 = 
dy«mic_ˇ°
<Såög_Schema*>(
›î™ds
[
i
])) {

2668 i‡(
schema
->
has_öãΩﬁ™ts
()) {

2669 i‡(
i
 + 1 < 
S
) {

2670 
Ex¥essi⁄
* 
rhs
 = 
fﬁd_›î™ds
(
›î™ds
[
i
+1], o≥ønds, 
›s
, i + 2);

2671 
	grhs
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[
i
], 
schema
, 
rhs
);

2672 
	gba£
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[
i
], ba£, 
rhs
);

2673 
	grhs
->
is_dñayed
(
åue
);

2674 
	gba£
->
is_dñayed
(
åue
);

2675  
	gba£
;

2677 
	gba£
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[
i
], ba£, 
›î™ds
[i]);

2678 i‡(
	g›s
[
i
].
	g›î™d
 !
Sass_OP
::
DIV
Ë
ba£
->
is_dñayed
(
åue
);

2679  
	gba£
;

2681 
	gba£
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[
i
], ba£, 
›î™ds
[i]);

2684 
	gba£
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Bö¨y_Ex¥essi⁄
, 
ba£
->
p°©e
(), 
›s
[
i
], ba£, 
›î™ds
[i]);

2686 
Bö¨y_Ex¥essi⁄
* 
	gb
 = 
°©ic_ˇ°
<Bö¨y_Ex¥essi⁄*>(
ba£
);

2687 i‡(
	gb
 && 
	g›s
[
i
].
	g›î™d
 =
Sass_OP
::
DIV
 && 
b
->
À·
()->
is_dñayed
(Ë&& b->
right
()->is_delayed()) {

2688 
ba£
->
is_dñayed
(
åue
);

2690 i‡(
	gb
) {

2691 
	gb
->
À·
()->
is_dñayed
(
Ál£
);

2692 
	gb
->
right
()->
is_dñayed
(
Ál£
);

2696  
	gba£
;

2699 
	gP¨£r
::
îr‹
(
°d
::
°rög
 
msg
, 
Posôi⁄
 
pos
)

2701 
throw
 
	gEx˚±i⁄
::
InvÆidSass
(
P¨£rSèã
(
∑th
, 
sour˚
, 
pos
.
löe
 ?Öo†: 
bef‹e_tokí
, 
Off£t
(0, 0)), 
msg
);

2705 
	gP¨£r
::
css_îr‹
(c⁄° 
°d
::
°rög
& 
msg
, c⁄° std::°rög& 
¥efix
, c⁄° std::°rög& 
middÀ
)

2707 
max_Àn
 = 18;

2708 c⁄° * 
	gíd
 = 
this
->
íd
;

2709 *
	gíd
 !0Ë++ 
íd
;

2710 c⁄° * 
	gpos
 = 
≥ek
 < 
›ti⁄Æ_•a˚s
 >();

2712 c⁄° * 
œ°_pos
(
pos
);

2713 i‡(
	gœ°_pos
 > 
	gsour˚
) {

2714 
	gutf8
::
¥i‹
(
œ°_pos
, 
sour˚
);

2717 
	gœ°_pos
 > 
	gsour˚
 &&Üa°_po†< 
	gíd
) {

2718 i‡(!
	gPªÀxî
::
is_•a˚
(*
œ°_pos
)) ;

2719 
	gutf8
::
¥i‹
(
œ°_pos
, 
sour˚
);

2722 
boﬁ
 
	gñlùsis_À·
 = 
Ál£
;

2723 c⁄° * 
pos_À·
(
œ°_pos
);

2724 c⁄° * 
íd_À·
(
œ°_pos
);

2726 
	gutf8
::
√xt
(
pos_À·
, 
íd
);

2727 
	gutf8
::
√xt
(
íd_À·
, 
íd
);

2728 
	gpos_À·
 > 
	gsour˚
) {

2729 i‡(
	gutf8
::
di°™˚
(
pos_À·
, 
íd_À·
Ë>
max_Àn
) {

2730 
utf8
::
¥i‹
(
pos_À·
, 
sour˚
);

2731 
	gñlùsis_À·
 = *(
pos_À·
) != '\n' &&

2732 *(
pos_À·
) != '\r';

2733 
	gutf8
::
√xt
(
pos_À·
, 
íd
);

2737 c⁄° * 
	g¥ev
 = 
pos_À·
;

2738 
	gutf8
::
¥i‹
(
¥ev
, 
sour˚
);

2739 i‡(*
	g¥ev
 == '\r') ;

2740 i‡(*
	g¥ev
 == '\n') ;

2741 
	gpos_À·
 = 
¥ev
;

2743 i‡(
	gpos_À·
 < 
	gsour˚
) {

2744 
	gpos_À·
 = 
sour˚
;

2747 
boﬁ
 
	gñlùsis_right
 = 
Ál£
;

2748 c⁄° * 
íd_right
(
pos
);

2749 c⁄° * 
pos_right
(
pos
);

2750 
	gíd_right
 < 
	gíd
) {

2751 i‡(
	gutf8
::
di°™˚
(
pos_right
, 
íd_right
Ë> 
	gmax_Àn
) {

2752 
	gñlùsis_À·
 = *(
pos_right
) != '\n' &&

2753 *(
pos_right
) != '\r';

2756 i‡(*
	gíd_right
 == '\r') ;

2757 i‡(*
	gíd_right
 == '\n') ;

2758 
	gutf8
::
√xt
(
íd_right
, 
íd
);

2762 
	g°d
::
°rög
 
À·
(
pos_À·
, 
íd_À·
);

2763 
	g°d
::
°rög
 
right
(
pos_right
, 
íd_right
);

2764 
size_t
 
	gÀ·_subpos
 = 
À·
.
size
() > 15 ?Üeft.size() - 15 : 0;

2765 
size_t
 
	gright_subpos
 = 
right
.
size
() > 15 ?Ñight.size() - 15 : 0;

2766 i‡(
	gÀ·_subpos
 && 
	gñlùsis_À·
Ë
	gÀ·
 = 
ñlùsis
 + 
À·
.
sub°r
(
À·_subpos
);

2767 i‡(
	gright_subpos
 && 
	gñlùsis_right
Ë
	gright
 = 
right
.
sub°r
(
right_subpos
Ë+ 
ñlùsis
;

2769 
îr‹
(
msg
 + 
¥efix
 + 
quŸe
(
À·
Ë+ 
middÀ
 + quŸe(
right
), 
p°©e
);

	@node_modules/node-sass/src/libsass/src/parser.hpp

1 #i‚de‡
SASS_PARSER_H


2 
	#SASS_PARSER_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

7 
	~"a°.hµ
"

8 
	~"posôi⁄.hµ
"

9 
	~"c⁄ãxt.hµ
"

10 
	~"posôi⁄.hµ
"

11 
	~"¥ñexî.hµ
"

13 
	sLookahód
 {

14 c⁄° * 
	mfound
;

15 c⁄° * 
	mîr‹
;

16 c⁄° * 
	mposôi⁄
;

17 
boﬁ
 
	m∑rßbÀ
;

18 
boﬁ
 
	mhas_öãΩﬁ™ts
;

21 
«me•a˚
 
	gSass
 {

23 ˛as†
	cP¨£r
 : 
public
 
P¨£rSèã
 {

24 
public
:

26 
	eSc›e
 { 
RoŸ
, 
	gMixö
, 
	gFun˘i⁄
, 
	gMedü
, 
	gC⁄åﬁ
, 
	gPr›îtõs
, 
	gRuÀs
 };

28 
	gC⁄ãxt
& 
	g˘x
;

29 
	g°d
::
ve˘‹
<
Block
*> 
block_°ack
;

30 
	g°d
::
ve˘‹
<
Sc›e
> 
°ack
;

31 
Medü_Block
* 
	gœ°_medü_block
;

32 c⁄° * 
	gsour˚
;

33 c⁄° * 
	gposôi⁄
;

34 c⁄° * 
	gíd
;

35 
Posôi⁄
 
	gbef‹e_tokí
;

36 
Posôi⁄
 
	ga·î_tokí
;

37 
P¨£rSèã
 
	gp°©e
;

38 
	gödíèti⁄
;

41 
Tokí
 
	gÀxed
;

42 
boﬁ
 
	gö_©_roŸ
;

44 
P¨£r
(
C⁄ãxt
& 
˘x
, c⁄° 
P¨£rSèã
& 
p°©e
)

45 : 
P¨£rSèã
(
p°©e
), 
˘x
(˘x), 
block_°ack
(0), 
°ack
(0), 
œ°_medü_block
(0),

46 
sour˚
(0), 
posôi⁄
(0), 
íd
(0), 
bef‹e_tokí
(
p°©e
), 
a·î_tokí
’°©e),Ö°©e’°©e), 
ödíèti⁄
(0)

47 { 
	gö_©_roŸ
 = 
Ál£
; 
	g°ack
.
push_back
(
Sc›e
::
RoŸ
); }

50 
P¨£r
 
‰om_c_°r
(c⁄° * 
§c
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
 = P¨£rSèã("[CSTRING]"), c⁄° * 
sour˚
 = 0);

51 
P¨£r
 
‰om_c_°r
(c⁄° * 
beg
, c⁄° * 
íd
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
 = P¨£rSèã("[CSTRING]"), c⁄° * 
sour˚
 = 0);

52 
P¨£r
 
‰om_tokí
(
Tokí
 
t
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
 = P¨£rSèã("[TOKEN]"), c⁄° * 
sour˚
 = 0);

54 
Sñe˘‹_Li°
* 
∑r£_£À˘‹
(c⁄° * 
§c
, 
C⁄ãxt
& 
˘x
, 
P¨£rSèã
 
p°©e
 = P¨£rSèã("[SELECTOR]"), c⁄° * 
sour˚
 = 0);

56 #ifde‡
__˛™g__


63 #¥agm®
˛™g
 
dügno°ic
 
push


64 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wtautological-compare"

69 
boﬁ
 
≥ek_√wlöe
(c⁄° * 
°¨t
 = 0);

72 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

73 c⁄° * 
¢ók
(c⁄° * 
°¨t
 = 0)

75 
usög
 
«me•a˚
 
PªÀxî
;

78 c⁄° * 
	gô_posôi⁄
 = 
°¨t
 ? sèπ : 
posôi⁄
;

81 i‡(
	gmx
 =
•a˚s
 ||

82 
mx
 =
no_•a˚s
 ||

83 
mx
 =
css_commíts
 ||

84 
mx
 =
css_whôe•a˚
 ||

85 
mx
 =
›ti⁄Æ_•a˚s
 ||

86 
mx
 =
›ti⁄Æ_css_commíts
 ||

87 
mx
 =
›ti⁄Æ_css_whôe•a˚


89  
ô_posôi⁄
;

93 c⁄° * 
	gpos
 = 
›ti⁄Æ_css_whôe•a˚
(
ô_posôi⁄
);

95  
	gpos
 ?Öo†: 
ô_posôi⁄
;

101 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

102 c⁄° * 
m©ch
(c⁄° * 
°¨t
 = 0)

105  
mx
(
posôi⁄
);

110 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

111 c⁄° * 
≥ek
(c⁄° * 
°¨t
 = 0)

116 c⁄° * 
ô_bef‹e_tokí
 = 
¢ók
 < 
mx
 >(
°¨t
);

119 c⁄° * 
	gm©ch
 = 
mx
(
ô_bef‹e_tokí
);

122  
	gm©ch
 <
íd
 ? 
m©ch
 : 0;

132 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

133 c⁄° * 
Àx
(
boﬁ
 
œzy
 = 
åue
, boﬁ 
f‹˚
 = 
Ál£
)

136 i‡(*
posôi⁄
 == 0)  0;

141 c⁄° * 
	gô_bef‹e_tokí
 = 
posôi⁄
;

145 i‡(
	gœzy
Ë
	gô_bef‹e_tokí
 = 
¢ók
 < 
mx
 >(
posôi⁄
);

148 c⁄° * 
	gô_a·î_tokí
 = 
mx
(
ô_bef‹e_tokí
);

151 i‡(
	gô_a·î_tokí
 > 
	gíd
)  0;

154 i‡(
	gf‹˚
 =
Ál£
) {

156 i‡(
ô_a·î_tokí
 == 0)  0;

158 i‡(
	gô_a·î_tokí
 =
ô_bef‹e_tokí
)  0;

162 
	gÀxed
 = 
Tokí
(
posôi⁄
, 
ô_bef‹e_tokí
, 
ô_a·î_tokí
);

165 
	gbef‹e_tokí
 = 
a·î_tokí
.
add
(
posôi⁄
, 
ô_bef‹e_tokí
);

168 
	ga·î_tokí
.
add
(
ô_bef‹e_tokí
, 
ô_a·î_tokí
);

171 
	gp°©e
 = 
P¨£rSèã
(
∑th
, 
sour˚
, 
Àxed
, 
bef‹e_tokí
, 
a·î_tokí
 - before_token);

174  
	gposôi⁄
 = 
ô_a·î_tokí
;

181 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

182 c⁄° * 
Àx_css
()

185 
Tokí
 
¥ev
 = 
Àxed
;

187 c⁄° * 
	gﬁdpos
 = 
posôi⁄
;

188 
Posôi⁄
 
	gbt
 = 
bef‹e_tokí
;

189 
Posôi⁄
 
	g©
 = 
a·î_tokí
;

190 
P¨£rSèã
 
	g›
 = 
p°©e
;

193 
	gÀx
 < 
	gPªÀxî
::
css_commíts
 >();

195 c⁄° * 
	gpos
 = 
Àx
< 
mx
 >();

197 i‡(
	gpos
 == 0) {

198 
p°©e
 = 
›
;

199 
	gÀxed
 = 
¥ev
;

200 
	gposôi⁄
 = 
ﬁdpos
;

201 
	ga·î_tokí
 = 
©
;

202 
	gbef‹e_tokí
 = 
bt
;

205  
	gpos
;

209 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
mx
>

210 c⁄° * 
≥ek_css
(c⁄° * 
°¨t
 = 0)

213  
≥ek
< 
mx
 >’ìk < 
PªÀxî
::
css_commíts
 >(
°¨t
));

216 #ifde‡
__˛™g__


218 #¥agm®
˛™g
 
dügno°ic
 
p›


222 
îr‹
(
°d
::
°rög
 
msg
, 
Posôi⁄
 
pos
);

225 
css_îr‹
(c⁄° 
°d
::
°rög
& 
msg
,

226 c⁄° 
°d
::
°rög
& 
¥efix
 = "áfter ",

227 c⁄° 
°d
::
°rög
& 
middÀ
 = ", was: ");

228 
ªad_bom
();

230 
Block
* 
∑r£
();

231 
Imp‹t
* 
∑r£_imp‹t
();

232 
Deföôi⁄
* 
∑r£_deföôi⁄
(Deföôi⁄::
Ty≥
 
which_ty≥
);

233 
P¨amëîs
* 
∑r£_∑ømëîs
();

234 
P¨amëî
* 
∑r£_∑ømëî
();

235 
Mixö_CÆl
* 
∑r£_ö˛ude_dúe˘ive
();

236 
Argumíts
* 
∑r£_¨gumíts
();

237 
Argumít
* 
∑r£_¨gumít
();

238 
Assignmít
* 
∑r£_assignmít
();

240 
RuÀ£t
* 
∑r£_ruÀ£t
(
Lookahód
 
lookahód
, 
boﬁ
 
is_roŸ
 = 
Ál£
);

241 
Sñe˘‹_Schema
* 
∑r£_£À˘‹_schema
(c⁄° * 
íd_of_£À˘‹
);

242 
Sñe˘‹_Li°
* 
∑r£_£À˘‹_li°
(
boﬁ
 
©_roŸ
 = 
Ál£
);

243 
Com∂ex_Sñe˘‹
* 
∑r£_com∂ex_£À˘‹
(
boﬁ
 
ö_roŸ
 = 
åue
);

244 
Compound_Sñe˘‹
* 
∑r£_compound_£À˘‹
();

245 
Sim∂e_Sñe˘‹
* 
∑r£_sim∂e_£À˘‹
();

246 
Wøµed_Sñe˘‹
* 
∑r£_√g©ed_£À˘‹
();

247 
Sim∂e_Sñe˘‹
* 
∑r£_p£udo_£À˘‹
();

248 
Aâribuã_Sñe˘‹
* 
∑r£_©åibuã_£À˘‹
();

249 
Block
* 
∑r£_block
(
boﬁ
 
is_roŸ
 = 
Ál£
);

250 
Block
* 
∑r£_css_block
(
boﬁ
 
is_roŸ
 = 
Ál£
);

251 
boﬁ
 
∑r£_block_nodes
(boﬁ 
is_roŸ
 = 
Ál£
);

252 
boﬁ
 
∑r£_block_node
(boﬁ 
is_roŸ
 = 
Ál£
);

254 
boﬁ
 
∑r£_numbî_¥efix
();

255 
De˛¨©i⁄
* 
∑r£_de˛¨©i⁄
();

256 
Ex¥essi⁄
* 
∑r£_m≠_vÆue
();

257 
Ex¥essi⁄
* 
∑r£_m≠
();

258 
Ex¥essi⁄
* 
∑r£_li°
();

259 
Ex¥essi⁄
* 
∑r£_comma_li°
();

260 
Ex¥essi⁄
* 
∑r£_•a˚_li°
();

261 
Ex¥essi⁄
* 
∑r£_disjun˘i⁄
();

262 
Ex¥essi⁄
* 
∑r£_c⁄jun˘i⁄
();

263 
Ex¥essi⁄
* 
∑r£_ªœti⁄
();

264 
Ex¥essi⁄
* 
∑r£_ex¥essi⁄
();

265 
Ex¥essi⁄
* 
∑r£_›î©‹s
();

266 
Ex¥essi⁄
* 
∑r£_Á˘‹
();

267 
Ex¥essi⁄
* 
∑r£_vÆue2
();

268 
Ex¥essi⁄
* 
∑r£_vÆue
();

269 
Fun˘i⁄_CÆl
* 
∑r£_ˇlc_fun˘i⁄
();

270 
Fun˘i⁄_CÆl
* 
∑r£_fun˘i⁄_ˇŒ
();

271 
Fun˘i⁄_CÆl_Schema
* 
∑r£_fun˘i⁄_ˇŒ_schema
();

272 
Såög
* 
∑r£_uæ_fun˘i⁄_°rög
();

273 
Såög
* 
∑r£_uæ_fun˘i⁄_¨gumít
();

274 
Såög
* 
∑r£_öãΩﬁ©ed_chunk
(
Tokí
, 
boﬁ
 
c⁄°™t
 = 
Ál£
);

275 
Såög
* 
∑r£_°rög
();

276 
Såög_C⁄°™t
* 
∑r£_°©ic_ex¥essi⁄
();

278 
Såög_C⁄°™t
* 
∑r£_°©ic_vÆue
();

279 
Såög
* 
∑r£_õ_¥›îty
();

280 
Såög
* 
∑r£_õ_keyw‹d_¨g
();

281 
Såög_Schema
* 
∑r£_vÆue_schema
(c⁄° * 
°›
);

282 
Såög
* 
∑r£_idítifõr_schema
();

284 
If
* 
∑r£_if_dúe˘ive
(
boﬁ
 
ñ£_if
 = 
Ál£
);

285 
F‹
* 
∑r£_f‹_dúe˘ive
();

286 
Each
* 
∑r£_óch_dúe˘ive
();

287 
Whûe
* 
∑r£_whûe_dúe˘ive
();

288 
Rëu∫
* 
∑r£_ªtu∫_dúe˘ive
();

289 
C⁄ã¡
* 
∑r£_c⁄ã¡_dúe˘ive
();

290 
∑r£_ch¨£t_dúe˘ive
();

291 
Medü_Block
* 
∑r£_medü_block
();

292 
Li°
* 
∑r£_medü_quîõs
();

293 
Medü_Quîy
* 
∑r£_medü_quîy
();

294 
Medü_Quîy_Ex¥essi⁄
* 
∑r£_medü_ex¥essi⁄
();

295 
Suµ‹ts_Block
* 
∑r£_suµ‹ts_dúe˘ive
();

296 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_c⁄dôi⁄
();

297 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_√g©i⁄
();

298 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_›î©‹
();

299 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_öãΩﬁ©i⁄
();

300 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_de˛¨©i⁄
();

301 
Suµ‹ts_C⁄dôi⁄
* 
∑r£_suµ‹ts_c⁄dôi⁄_ö_∑ªns
();

302 
At_RoŸ_Block
* 
∑r£_©_roŸ_block
();

303 
At_RoŸ_Quîy
* 
∑r£_©_roŸ_quîy
();

304 
Såög_Schema
* 
∑r£_Æmo°_™y_vÆue
();

305 
Dúe˘ive
* 
∑r£_•ecül_dúe˘ive
();

306 
Dúe˘ive
* 
∑r£_¥efixed_dúe˘ive
();

307 
Dúe˘ive
* 
∑r£_dúe˘ive
();

308 
W¨nög
* 
∑r£_w¨nög
();

309 
Eº‹
* 
∑r£_îr‹
();

310 
Debug
* 
∑r£_debug
();

313 
Ex¥essi⁄
* 
Àx_Æmo°_™y_vÆue_tokí
();

314 
Ex¥essi⁄
* 
Àx_Æmo°_™y_vÆue_ch¨s
();

315 
Ex¥essi⁄
* 
Àx_öãΩ_°rög
();

316 
Ex¥essi⁄
* 
Àx_öãΩ_uri
();

317 
Ex¥essi⁄
* 
Àx_öãΩﬁ©i⁄
();

320 
Tokí
 
Àx_v¨übÀ
();

321 
Tokí
 
Àx_idítifõr
();

323 
∑r£_block_commíts
();

325 
Lookahód
 
lookahód_f‹_vÆue
(c⁄° * 
°¨t
 = 0);

326 
Lookahód
 
lookahód_f‹_£À˘‹
(c⁄° * 
°¨t
 = 0);

327 
Lookahód
 
lookahód_f‹_ö˛ude
(c⁄° * 
°¨t
 = 0);

329 
Ex¥essi⁄
* 
fﬁd_›î™ds
(Ex¥essi⁄* 
ba£
, 
°d
::
ve˘‹
<Ex¥essi⁄*>& 
›î™ds
, 
O≥ønd
 
›
);

330 
Ex¥essi⁄
* 
fﬁd_›î™ds
(Ex¥essi⁄* 
ba£
, 
°d
::
ve˘‹
<Ex¥essi⁄*>& 
›î™ds
, std::ve˘‹<
O≥ønd
>& 
›s
, 
size_t
 
i
 = 0);

332 
throw_sy¡ax_îr‹
(
°d
::
°rög
 
mesßge
, 
size_t
 
 
 = 0);

333 
throw_ªad_îr‹
(
°d
::
°rög
 
mesßge
, 
size_t
 
 
 = 0);

336 
	gãm∂©e
 <
	gPªÀxî
::
¥ñexî
 
›í
, PªÀxî::¥ñexî 
˛o£
>

337 
Ex¥essi⁄
* 
Àx_öãΩ
()

339 i‡(
Àx
 < 
›í
 >(
Ál£
)) {

340 
Såög_Schema
* 
schema
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Såög_Schema, 
p°©e
);

342 *
	gschema
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

343 i‡(
	gposôi⁄
[0] ='#' && 
posôi⁄
[1] == '{') {

344 
Ex¥essi⁄
* 
ô∂
 = 
Àx_öãΩﬁ©i⁄
();

345 i‡(
	gô∂
Ë*
	gschema
 << itpl;

346 
	gÀx
 < 
	g˛o£
 >(
	gÁl£
)) {

348 *
	gschema
 << 
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

349 i‡(
	gposôi⁄
[0] ='#' && 
posôi⁄
[1] == '{') {

350 
Ex¥essi⁄
* 
ô∂
 = 
Àx_öãΩﬁ©i⁄
();

351 i‡(
	gô∂
Ë*
	gschema
 << itpl;

353  
	gschema
;

357  
SASS_MEMORY_NEW
(
˘x
.
mem
, 
Såög_C⁄°™t
, 
p°©e
, 
Àxed
);

364 
size_t
 
check_bom_ch¨s
(c⁄° * 
§c
, c⁄° *
íd
, c⁄° * 
bom
, size_à
Àn
);

	@node_modules/node-sass/src/libsass/src/paths.hpp

1 #i‚de‡
SASS_PATHS_H


2 
	#SASS_PATHS_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

6 
	~<s°ªam
>

9 
	gãm∂©e
<
ty≥«me
 
	gT
>

10 
	g°d
::
°rög
 
ve˘‹_to_°rög
(
°d
::
ve˘‹
<
T
> 
v
)

12 
°d
::
°rög°ªam
 
buf„r
;

13 
	gbuf„r
 << "[";

15 i‡(!
	gv
.
em±y
())

16 { 
	gbuf„r
 << 
	gv
[0]; }

18 { 
	gbuf„r
 << "]"; }

20 i‡(
	gv
.
size
() == 1)

21 { 
buf„r
 << "]"; }

24 
size_t
 
	gi
 = 1, 
	gS
 = 
v
.
size
(); i < S; ++iË
	gbuf„r
 << ", " << 
	gv
[
i
];

25 
	gbuf„r
 << "]";

28  
	gbuf„r
.
°r
();

31 
«me•a˚
 
	gSass
 {

34 
	gãm∂©e
<
ty≥«me
 
	gT
>

35 
	g°d
::
ve˘‹
<
°d
::ve˘‹<
T
> > 
∑ths
(°d::ve˘‹<°d::ve˘‹<T> > 
°øè
, 
size_t
 
‰om_íd
 = 0)

37 i‡(
°øè
.
em±y
()) {

38  
°d
::
ve˘‹
<°d::ve˘‹<
T
> >();

41 
size_t
 
	gíd
 = 
°øè
.
size
(Ë- 
‰om_íd
;

42 i‡(
	gíd
 <= 1) {

43 
°d
::
ve˘‹
<°d::ve˘‹<
T
> > 
°¨tög_poöts
;

44 
	g°¨tög_poöts
.
ª£rve
(
°øè
[0].
size
());

45 
size_t
 
	gi
 = 0, 
	gS
 = 
°øè
[0].
size
(); i < S; ++i) {

46 
	g°d
::
ve˘‹
<
T
> 
°¨tög_poöt
;

47 
	g°¨tög_poöt
.
push_back
(
°øè
[0][
i
]);

48 
	g°¨tög_poöts
.
push_back
(
°¨tög_poöt
);

50  
	g°¨tög_poöts
;

53 
	g°d
::
ve˘‹
<
°d
::ve˘‹<
T
> > 
up_to_hîe
 = 
∑ths
(
°øè
, 
‰om_íd
 + 1);

54 
	g°d
::
ve˘‹
<
T
> 
hîe
 = 
°øè
[
íd
-1];

56 
	g°d
::
ve˘‹
<
°d
::ve˘‹<
T
> > 
bønches
;

57 
	gbønches
.
ª£rve
(
up_to_hîe
.
size
(Ë* 
hîe
.size());

58 
size_t
 
	gi
 = 0, 
	gS1
 = 
up_to_hîe
.
size
(); i < S1; ++i) {

59 
size_t
 
	gj
 = 0, 
	gS2
 = 
hîe
.
size
(); j < S2; ++j) {

60 
	g°d
::
ve˘‹
<
T
> 
bønch
 = 
up_to_hîe
[
i
];

61 
	gbønch
.
push_back
(
hîe
[
j
]);

62 
	gbønches
.
push_back
(
bønch
);

66  
	gbønches
;

	@node_modules/node-sass/src/libsass/src/plugins.cpp

1 #ifde‡
_WIN32


2 
	~<wödows.h
>

4 
	~<sys/ty≥s.h
>

5 
	~<dúít.h
>

6 
	~<î∫o.h
>

7 
	~<dlf˙.h
>

10 
	~"ßss.hµ
"

11 
	~<io°ªam
>

12 
	~"ouçut.hµ
"

13 
	~"∂ugös.hµ
"

15 
«me•a˚
 
	gSass
 {

17 
	gPlugös
::
Plugös
() { }

18 
Plugös
::~Plugins() { }

23 
ölöe
 
boﬁ
 
com∑tibûôy
(c⁄° * 
theú_vîsi⁄
)

27 c⁄° * 
our_vîsi⁄
 = 
libßss_vîsi⁄
();

28 i‡(!
°rcmp
(
theú_vîsi⁄
, "[«]")Ë 
	gÁl£
;

29 i‡(!
°rcmp
(
our_vîsi⁄
, "[«]")Ë 
	gÁl£
;

32 
size_t
 
	gpos
 = 
°d
::
°rög
(
our_vîsi⁄
).
föd
('.', 0);

33 i‡(
	gpos
 !
°d
::
°rög
::
≈os
Ë
pos
 = std::°rög(
our_vîsi⁄
).
föd
('.',Öos + 1);

36 i‡(
	gpos
 =
°d
::
°rög
::
≈os
Ë{  
°rcmp
(
theú_vîsi⁄
, 
our_vîsi⁄
) ? 0 : 1; }

38 {  
°∫cmp
(
theú_vîsi⁄
, 
our_vîsi⁄
, 
pos
) ? 0 : 1; }

43 
boﬁ
 
	gPlugös
::
lﬂd_∂ugö
 (c⁄° 
°d
::
°rög
& 
∑th
)

46 c⁄° * (*
	t__∂ugö_vîsi⁄__
)();

47 
Sass_Fun˘i⁄_Li°
 (*
	t__∂ugö_lﬂd_‚s__
)();

48 
Sass_Imp‹ãr_Li°
 (*
	t__∂ugö_lﬂd_imps__
)();

50 i‡(
LOAD_LIB
(
∂ugö
, 
∑th
))

53 i‡(
LOAD_LIB_FN
(
__∂ugö_vîsi⁄__
, 
∂ugö_vîsi⁄
, "libsass_get_version"))

56 i‡(!
com∑tibûôy
(
∂ugö_vîsi⁄
())Ë 
	gÁl£
;

58 i‡(
LOAD_LIB_FN
(
__∂ugö_lﬂd_‚s__
, 
∂ugö_lﬂd_fun˘i⁄s
, "libsass_load_functions"))

60 
Sass_Fun˘i⁄_Li°
 
	g‚s
 = 
∂ugö_lﬂd_fun˘i⁄s
();

61 
	g‚s
 && *‚sË{ 
	gfun˘i⁄s
.
push_back
(*
‚s
); ++ fns; }

64 i‡(
LOAD_LIB_FN
(
__∂ugö_lﬂd_imps__
, 
∂ugö_lﬂd_imp‹ãrs
, "libsass_load_importers"))

66 
Sass_Imp‹ãr_Li°
 
	gimps
 = 
∂ugö_lﬂd_imp‹ãrs
();

67 
	gimps
 && *impsË{ 
	gimp‹ãrs
.
push_back
(*
imps
); ++ imps; }

70 i‡(
LOAD_LIB_FN
(
__∂ugö_lﬂd_imps__
, 
∂ugö_lﬂd_hódîs
, "libsass_load_headers"))

72 
Sass_Imp‹ãr_Li°
 
	gimps
 = 
∂ugö_lﬂd_hódîs
();

73 
	gimps
 && *impsË{ 
	ghódîs
.
push_back
(*
imps
); ++ imps; }

76  
	gåue
;

81 
	g°d
::
˚º
 << "ÁûedÜﬂdög 'libßss_suµ‹t' i¿<" << 
∑th
 << ">" << 
°d
::
ídl
;

82 i‡(c⁄° * 
	gdlsym_îr‹
 = 
dÀº‹
()Ë
°d
::
˚º
 << 
dlsym_îr‹
 << std::
ídl
;

83 
CLOSE_LIB
(
∂ugö
);

89 
	g°d
::
˚º
 << "ÁûedÜﬂdögÖlugö <" << 
∑th
 << ">" << 
°d
::
ídl
;

90 i‡(c⁄° * 
	gdl›í_îr‹
 = 
dÀº‹
()Ë
°d
::
˚º
 << 
dl›í_îr‹
 << std::
ídl
;

93  
	gÁl£
;

97 
size_t
 
	gPlugös
::
lﬂd_∂ugös
(c⁄° 
°d
::
°rög
& 
∑th
)

101 
size_t
 
lﬂded
 = 0;

103 #ifde‡
_WIN32


105 
	gåy


109 
WIN32_FIND_DATAW
 
	gd©a
;

111 
	g°d
::
°rög
 
glob§ch
(
∑th
 + "*.dll");

113 
	g°d
::
w°rög
 
wglob§ch
(
UTF_8
::
c⁄vît_to_utf16
(
glob§ch
));

114 
HANDLE
 
	ghFûe
 = 
FödFú°FûeW
(
wglob§ch
.
c_°r
(), &
d©a
);

117 i‡(
	ghFûe
 =
INVALID_HANDLE_VALUE
)  -1;

120 
	gåue
)

122 
	gåy


125 
	g°d
::
°rög
 
íåy
 = 
UTF_8
::
c⁄vît_‰om_utf16
(
d©a
.
cFûeName
);

127 i‡(!
íds_wôh
(
íåy
, ".dll")) ;

129 i‡(
lﬂd_∂ugö
(
∑th
 + 
íåy
)Ë++ 
	glﬂded
;

131 i‡(
GëLa°Eº‹
(Ë=
ERROR_NO_MORE_FILES
) ;

133 i‡(!
FödNextFûeW
(
hFûe
, &
d©a
)) ;

135 
ˇtch
 (...)

139 
	g°d
::
˚º
 << "fûíamêöÖlugöÖ©h ha†övÆid utf8?" << 
°d
::
ídl
;

143 
ˇtch
 (
utf8
::
övÆid_utf8
)

147 
°d
::
˚º
 << "∂ugöÖ©h c⁄èö†övÆid utf8" << std::
ídl
;

152 
DIR
 *
	gdp
;

153 
dúít
 *
	gdúp
;

154 if((
	gdp
 = 
›ídú
(
∑th
.
c_°r
())Ë=
NULL
)  -1;

155 (
	gdúp
 = 
ªaddú
(
dp
)Ë!
NULL
) {

156 i‡(!
íds_wôh
(
dúp
->
d_«me
, ".so")) ;

157 i‡(
lﬂd_∂ugö
(
∑th
 + 
dúp
->
d_«me
)Ë++ 
	glﬂded
;

159 
˛o£dú
(
dp
);

162  
	glﬂded
;

	@node_modules/node-sass/src/libsass/src/plugins.hpp

1 #i‚de‡
SASS_PLUGINS_H


2 
	#SASS_PLUGINS_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

6 
	~"utf8_°rög.hµ
"

7 
	~"ßss/fun˘i⁄s.h
"

9 #ifde‡
_WIN32


11 
	#LOAD_LIB
(
v¨
, 
∑th
Ë
HMODULE
 v¨ = 
	`LﬂdLibøryW
(
UTF_8
::
	`c⁄vît_to_utf16
’©h).
	`c_°r
())

	)

12 
	#LOAD_LIB_WCHR
(
v¨
, 
∑th_wide_°r
Ë
HMODULE
 v¨ = 
	`LﬂdLibøryW
’©h_wide_°r.
	`c_°r
())

	)

13 
	#LOAD_LIB_FN
(
ty≥
, 
v¨
, 
«me
Ëty≥ v¨ = (ty≥Ë
	`GëProcAddªss
(
∂ugö
,Çame)

	)

14 
	#CLOSE_LIB
(
v¨
Ë
	`FªeLibøry
(v¨)

	)

16 #i‚de‡
dÀº‹


17 
	#dÀº‹
(Ë0

	)

22 
	#LOAD_LIB
(
v¨
, 
∑th
Ë* v¨ = 
	`dl›í
’©h.
	`c_°r
(), 
RTLD_LAZY
)

	)

23 
	#LOAD_LIB_FN
(
ty≥
, 
v¨
, 
«me
Ëty≥ v¨ = (ty≥Ë
	`dlsym
(
∂ugö
,Çame)

	)

24 
	#CLOSE_LIB
(
v¨
Ë
	`dl˛o£
(v¨)

	)

28 
«me•a˚
 
	gSass
 {

31 ˛as†
	cPlugös
 {

33 
	gpublic
:

34 
Plugös
();

35 ~
Plugös
();

37 
	gpublic
:

39 
boﬁ
 
lﬂd_∂ugö
(c⁄° 
°d
::
°rög
& 
∑th
);

41 
size_t
 
lﬂd_∂ugös
(c⁄° 
°d
::
°rög
& 
∑th
);

43 
	gpublic
:

44 c⁄° 
°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
gë_hódîs
(Ë{  
hódîs
; }

45 c⁄° 
	g°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
gë_imp‹ãrs
(Ë{  
imp‹ãrs
; }

46 c⁄° 
	g°d
::
ve˘‹
<
Sass_Fun˘i⁄_E¡ry
> 
gë_fun˘i⁄s
(Ë{  
fun˘i⁄s
; }

48 
	g¥iv©e
:

49 
°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
hódîs
;

50 
	g°d
::
ve˘‹
<
Sass_Imp‹ãr_E¡ry
> 
imp‹ãrs
;

51 
	g°d
::
ve˘‹
<
Sass_Fun˘i⁄_E¡ry
> 
fun˘i⁄s
;

	@node_modules/node-sass/src/libsass/src/position.cpp

1 
	~"ßss.hµ
"

2 
	~"posôi⁄.hµ
"

4 
«me•a˚
 
	gSass
 {

7 
	gOff£t
::
Off£t
(c⁄° * 
°rög
)

8 : 
löe
(0), 
cﬁumn
(0)

10 *
	gthis
 = 
öc
(
°rög
, såög + 
°æí
(string));

13 
	gOff£t
::
Off£t
(c⁄° 
°d
::
°rög
& 
ãxt
)

14 : 
löe
(0), 
cﬁumn
(0)

16 *
	gthis
 = 
öc
(
ãxt
.
c_°r
(),Åext.c_°r(Ë+Åext.
size
());

19 
	gOff£t
::
Off£t
(c⁄° 
size_t
 
löe
, c⁄° size_à
cﬁumn
)

20 : 
löe
÷öe), 
cﬁumn
(column) { }

23 
Off£t
 
	gOff£t
::
öô
(c⁄° * 
beg
, c⁄° * 
íd
)

25 
Off£t
 
off£t
(0, 0);

26 i‡(
	gíd
 == 0) {

27 
íd
 +
°æí
(
beg
);

29 
	goff£t
.
add
(
beg
, 
íd
);

30  
	goff£t
;

36 
Off£t
 
	gOff£t
::
add
(c⁄° * 
begö
, c⁄° * 
íd
)

38 i‡(
	gíd
 =0Ë *
this
;

39 
	gbegö
 < 
	gíd
 && *begin) {

40 i‡(*
	gbegö
 == '\n') {

41 ++ 
löe
;

43 
	gcﬁumn
 = 0;

45 ++ 
	gcﬁumn
;

47 ++
	gbegö
;

49  *
	gthis
;

54 
Off£t
 
	gOff£t
::
öc
(c⁄° * 
begö
, c⁄° * 
íd
) const

56 
Off£t
 
off£t
(
löe
, 
cﬁumn
);

57 
	goff£t
.
add
(
begö
, 
íd
);

58  
	goff£t
;

61 
boﬁ
 
	gOff£t
::
›î©‹
=(c⁄° 
Off£t
 &
pos
) const

63  
löe
 =
pos
.löê&& 
cﬁumn
 ==Öos.column;

66 
boﬁ
 
	gOff£t
::
›î©‹
!(c⁄° 
Off£t
 &
pos
) const

68  
löe
 !
pos
.löê|| 
cﬁumn
 !=Öos.column;

71 
	gOff£t
::
›î©‹
+(c⁄° 
Off£t
 &
off
)

73 *
this
 = 
Off£t
(
löe
 + 
off
.löe, off.löê> 0 ? off.
cﬁumn
 : column + off.column);

76 
Off£t
 
	gOff£t
::
›î©‹
+ (c⁄° Off£à&
off
) const

78  
Off£t
(
löe
 + 
off
.löe, off.löê> 0 ? off.
cﬁumn
 : column + off.column);

81 
Off£t
 
	gOff£t
::
›î©‹
- (c⁄° Off£à&
off
) const

83  
Off£t
(
löe
 - 
off
.löe, off.löê=löê? 
cﬁumn
 - off.column : column);

86 
	gPosôi⁄
::
Posôi⁄
(c⁄° 
size_t
 
fûe
)

87 : 
Off£t
(0, 0), 
fûe
(file) { }

89 
	gPosôi⁄
::
Posôi⁄
(c⁄° 
size_t
 
fûe
, c⁄° 
Off£t
& 
off£t
)

90 : 
Off£t
(
off£t
), 
fûe
(file) { }

92 
	gPosôi⁄
::
Posôi⁄
(c⁄° 
size_t
 
löe
, c⁄° size_à
cﬁumn
)

93 : 
Off£t
(
löe
, 
cﬁumn
), 
fûe
(-1) { }

95 
	gPosôi⁄
::
Posôi⁄
(c⁄° 
size_t
 
fûe
, c⁄° size_à
löe
, c⁄° size_à
cﬁumn
)

96 : 
Off£t
(
löe
, 
cﬁumn
), 
fûe
(file) { }

99 
	gP¨£rSèã
::
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
, c⁄° 
size_t
 
fûe
)

100 : 
Posôi⁄
(
fûe
, 0, 0), 
∑th
’©h), 
§c
(§c), 
off£t
(0, 0), 
tokí
() { }

102 
	gP¨£rSèã
::
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
, c⁄° 
Posôi⁄
& 
posôi⁄
, 
Off£t
 
off£t
)

103 : 
Posôi⁄
(
posôi⁄
), 
∑th
’©h), 
§c
(§c), 
off£t
(off£t), 
tokí
() { }

105 
	gP¨£rSèã
::
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
, c⁄° 
Tokí
& 
tokí
, c⁄° 
Posôi⁄
& 
posôi⁄
, 
Off£t
 
off£t
)

106 : 
Posôi⁄
(
posôi⁄
), 
∑th
’©h), 
§c
(§c), 
off£t
(off£t), 
tokí
(token) { }

108 
Posôi⁄
 
	gPosôi⁄
::
add
(c⁄° * 
begö
, c⁄° * 
íd
)

110 
	gOff£t
::
add
(
begö
, 
íd
);

111  *
	gthis
;

114 
Posôi⁄
 
	gPosôi⁄
::
öc
(c⁄° * 
begö
, c⁄° * 
íd
) const

116 
Off£t
 
off£t
(
löe
, 
cﬁumn
);

117 
	goff£t
 = 
off£t
.
öc
(
begö
, 
íd
);

118  
Posôi⁄
(
fûe
, 
off£t
);

121 
boﬁ
 
	gPosôi⁄
::
›î©‹
=(c⁄° 
Posôi⁄
 &
pos
) const

123  
fûe
 =
pos
.fûê&& 
löe
 =pos.löê&& 
cﬁumn
 ==Öos.column;

126 
boﬁ
 
	gPosôi⁄
::
›î©‹
!(c⁄° 
Posôi⁄
 &
pos
) const

128  
fûe
 =
pos
.fûê|| 
löe
 !pos.löê|| 
cﬁumn
 !=Öos.column;

131 
	gPosôi⁄
::
›î©‹
+(c⁄° 
Off£t
 &
off
)

133 *
this
 = 
Posôi⁄
(
fûe
, 
löe
 + 
off
.löe, off.löê> 0 ? off.
cﬁumn
 : column + off.column);

136 c⁄° 
Posôi⁄
 
	gPosôi⁄
::
›î©‹
+ (c⁄° 
Off£t
 &
off
) const

138  
Posôi⁄
(
fûe
, 
löe
 + 
off
.löe, off.löê> 0 ? off.
cﬁumn
 : column + off.column);

141 c⁄° 
Off£t
 
	gPosôi⁄
::
›î©‹
- (c⁄° Off£à&
off
) const

143  
Off£t
(
löe
 - 
off
.löe, off.löê=löê? 
cﬁumn
 - off.column : column);

	@node_modules/node-sass/src/libsass/src/position.hpp

1 #i‚de‡
SASS_POSITION_H


2 
	#SASS_POSITION_H


	)

4 
	~<°rög
>

5 
	~<c°rög
>

8 
«me•a˚
 
	gSass
 {

11 ˛as†
	cOff£t
 {

13 
	gpublic
:

14 
Off£t
(c⁄° * 
°rög
);

15 
Off£t
(c⁄° 
°d
::
°rög
& 
ãxt
);

16 
Off£t
(c⁄° 
size_t
 
löe
, c⁄° size_à
cﬁumn
);

19 
Off£t
 
add
(c⁄° * 
begö
, c⁄° * 
íd
);

20 
Off£t
 
öc
(c⁄° * 
begö
, c⁄° * 
íd
) const;

23 
Off£t
 
öô
(c⁄° * 
beg
, c⁄° * 
íd
);

25 
	gpublic
:

26 
›î©‹
+(c⁄° 
Off£t
 &
pos
);

27 
boﬁ
 
	g›î©‹
=(c⁄° 
Off£t
 &
pos
) const;

28 
boﬁ
 
	g›î©‹
!(c⁄° 
Off£t
 &
pos
) const;

29 
Off£t
 
	g›î©‹
+ (c⁄° 
	gOff£t
 &
	goff
) const;

30 
Off£t
 
	g›î©‹
- (c⁄° 
	gOff£t
 &
	goff
) const;

32 
	gpublic
:

35 
public
:

36 
Off£t
 
off
(Ë{  *
this
; }

38 
	gpublic
:

39 
size_t
 
löe
;

40 
size_t
 
	gcﬁumn
;

44 ˛as†
	cPosôi⁄
 : 
public
 
Off£t
 {

46 
public
:

47 
Posôi⁄
(c⁄° 
size_t
 
fûe
);

48 
Posôi⁄
(c⁄° 
size_t
 
fûe
, c⁄° 
Off£t
& 
off£t
);

49 
Posôi⁄
(c⁄° 
size_t
 
löe
, c⁄° size_à
cﬁumn
);

50 
Posôi⁄
(c⁄° 
size_t
 
fûe
, c⁄° size_à
löe
, c⁄° size_à
cﬁumn
);

52 
	gpublic
:

53 
›î©‹
+(c⁄° 
Off£t
 &
off
);

54 
boﬁ
 
	g›î©‹
=(c⁄° 
Posôi⁄
 &
pos
) const;

55 
boﬁ
 
	g›î©‹
!(c⁄° 
Posôi⁄
 &
pos
) const;

56 c⁄° 
Posôi⁄
 
	g›î©‹
+ (c⁄° 
	gOff£t
 &
	goff
) const;

57 c⁄° 
Off£t
 
	g›î©‹
- (c⁄° 
	gOff£t
 &
	goff
) const;

59 
Posôi⁄
 
add
(c⁄° * 
begö
, c⁄° * 
íd
);

60 
Posôi⁄
 
öc
(c⁄° * 
begö
, c⁄° * 
íd
) const;

62 
	gpublic
:

65 
public
:

66 
size_t
 
fûe
;

71 ˛as†
	cTokí
 {

72 
	gpublic
:

73 c⁄° * 
¥efix
;

74 c⁄° * 
	gbegö
;

75 c⁄° * 
	gíd
;

77 
Tokí
()

78 : 
¥efix
(0), 
begö
(0), 
íd
(0) { }

79 
Tokí
(c⁄° * 
b
, c⁄° * 
e
)

80 : 
¥efix
(
b
), 
begö
(b), 
íd
(
e
) { }

81 
Tokí
(c⁄° * 
°r
)

82 : 
¥efix
(
°r
), 
begö
(°r), 
íd
(°∏+ 
°æí
(str)) { }

83 
Tokí
(c⁄° * 
p
, c⁄° * 
b
, c⁄° * 
e
)

84 : 
¥efix
(
p
), 
begö
(
b
), 
íd
(
e
) { }

86 
size_t
 
Àngth
(Ëc⁄° {  
	gíd
 - 
	gbegö
; }

87 
	g°d
::
°rög
 
ws_bef‹e
(Ëc⁄° {  
°d
::°rög(
¥efix
, 
begö
); }

88 
	g°d
::
°rög
 
to_°rög
(Ëc⁄° {  
°d
::°rög(
begö
, 
íd
); }

89 
	g°d
::
°rög
 
time_w•a˚
() const {

90 
°d
::
°rög
 
°r
(
to_°rög
());

91 
	g°d
::
°rög
 
whôe•a˚s
(" \t\f\v\n\r");

92  
	g°r
.
îa£
(
°r
.
föd_œ°_nŸ_of
(
whôe•a˚s
)+1);

95 
›î©‹
 
boﬁ
(Ë{  
	gbegö
 && 
	gíd
 && begö >
íd
; }

96 
›î©‹
 
	g°d
::
°rög
(Ë{  
to_°rög
(); }

98 
boﬁ
 
	g›î©‹
==(
Tokí
 
t
Ë{  
to_°rög
() ==Å.to_string(); }

101 ˛as†
	cP¨£rSèã
 : 
public
 
Posôi⁄
 {

103 
public
:

104 
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
 = 0, c⁄° 
size_t
 
fûe
 = 
°d
::
°rög
::
≈os
);

105 
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
, c⁄° 
Posôi⁄
& 
posôi⁄
, 
Off£t
 
off£t
 = Offset(0, 0));

106 
P¨£rSèã
(c⁄° * 
∑th
, c⁄° * 
§c
, c⁄° 
Tokí
& 
tokí
, c⁄° 
Posôi⁄
& 
posôi⁄
, 
Off£t
 
off£t
 = Offset(0, 0));

108 
	gpublic
:

109 
Off£t
 
off
(Ë{  *
this
; }

110 
Posôi⁄
 
pos
(Ë{  *
	gthis
; }

111 
P¨£rSèã
 
p°©e
(Ë{  *
	gthis
; }

113 
	gpublic
:

114 c⁄° * 
∑th
;

115 c⁄° * 
	g§c
;

116 
Off£t
 
	goff£t
;

117 
Tokí
 
	gtokí
;

	@node_modules/node-sass/src/libsass/src/prelexer.cpp

1 
	~"ßss.hµ
"

2 
	~<c˘y≥
>

3 
	~<c°ddef
>

4 
	~<io°ªam
>

5 
	~<iom™ù
>

6 
	~"utû.hµ
"

7 
	~"posôi⁄.hµ
"

8 
	~"¥ñexî.hµ
"

9 
	~"c⁄°™ts.hµ
"

12 
«me•a˚
 
	gSass
 {

14 
usög
 
«me•a˚
 
	gC⁄°™ts
;

16 
«me•a˚
 
	gPªÀxî
 {

73 c⁄° 
°rög_doubÀ_√g©es
[] = "\"\\#";

74 c⁄° * 
ª_°rög_doubÀ_˛o£
(c⁄° * 
§c
)

76  
	g£quí˚
 <

78 
	gzîo_∂us
 <

79 
	gÆã∫©ives
 <

81 
	g£quí˚
 <

82 
	gexa˘ly
 <'\\'>,

83 
	g™y_ch¨


86 
	g£quí˚
 <

87 
	gexa˘ly
 <'#'>,

88 
	g√g©e
 <

89 
	gexa˘ly
 <'{'>

93 
	g√g_˛ass_ch¨
 <

94 
	g°rög_doubÀ_√g©es


100 
	gÆã∫©ives
 <

101 
	gexa˘ly
 <'"'>,

102 
	glookahód
 < 
	gexa˘ly
< 
	ghash_lbø˚
 > >

104 >(
	g§c
);

107 c⁄° * 
ª_°rög_doubÀ_›í
(c⁄° * 
§c
)

109  
	g£quí˚
 <

111 
	gexa˘ly
 <'"'>,

113 
	gzîo_∂us
 <

114 
	gÆã∫©ives
 <

116 
	g£quí˚
 <

117 
	gexa˘ly
 <'\\'>,

118 
	g™y_ch¨


121 
	g£quí˚
 <

122 
	gexa˘ly
 <'#'>,

123 
	g√g©e
 <

124 
	gexa˘ly
 <'{'>

128 
	g√g_˛ass_ch¨
 <

129 
	g°rög_doubÀ_√g©es


135 
	gÆã∫©ives
 <

136 
	gexa˘ly
 <'"'>,

137 
	glookahód
 < 
	gexa˘ly
< 
	ghash_lbø˚
 > >

139 >(
	g§c
);

142 c⁄° 
°rög_sögÀ_√g©es
[] = "'\\#";

143 c⁄° * 
ª_°rög_sögÀ_˛o£
(c⁄° * 
§c
)

145  
	g£quí˚
 <

147 
	gzîo_∂us
 <

148 
	gÆã∫©ives
 <

150 
	g£quí˚
 <

151 
	gexa˘ly
 <'\\'>,

152 
	g™y_ch¨


155 
	g£quí˚
 <

156 
	gexa˘ly
 <'#'>,

157 
	g√g©e
 <

158 
	gexa˘ly
 <'{'>

162 
	g√g_˛ass_ch¨
 <

163 
	g°rög_sögÀ_√g©es


169 
	gÆã∫©ives
 <

170 
	gexa˘ly
 <'\''>,

171 
	glookahód
 < 
	gexa˘ly
< 
	ghash_lbø˚
 > >

173 >(
	g§c
);

176 c⁄° * 
ª_°rög_sögÀ_›í
(c⁄° * 
§c
)

178  
	g£quí˚
 <

180 
	gexa˘ly
 <'\''>,

182 
	gzîo_∂us
 <

183 
	gÆã∫©ives
 <

185 
	g£quí˚
 <

186 
	gexa˘ly
 <'\\'>,

187 
	g™y_ch¨


190 
	g£quí˚
 <

191 
	gexa˘ly
 <'#'>,

192 
	g√g©e
 <

193 
	gexa˘ly
 <'{'>

197 
	g√g_˛ass_ch¨
 <

198 
	g°rög_sögÀ_√g©es


204 
	gÆã∫©ives
 <

205 
	gexa˘ly
 <'\''>,

206 
	glookahód
 < 
	gexa˘ly
< 
	ghash_lbø˚
 > >

208 >(
	g§c
);

217 c⁄° * 
ª_°rög_uri_˛o£
(c⁄° * 
§c
)

219  
	g£quí˚
 <

220 
	gn⁄_gªedy
<

221 
	gÆã∫©ives
<

222 
	g˛ass_ch¨
< 
	gªÆ_uri_ch¨s
 >,

223 
	guri_ch¨a˘î
,

224 
	gNONASCII
,

225 
	gESCAPE


227 
	gÆã∫©ives
<

228 
	g£quí˚
 < 
	g›ti⁄Æ
 < 
	gW
 >, 
	gexa˘ly
 <')'> >,

229 
	glookahód
 < 
	gexa˘ly
< 
	ghash_lbø˚
 > >

232 
	g›ti⁄Æ
 <

233 
	g£quí˚
 < 
	g›ti⁄Æ
 < 
	gW
 >, 
	gexa˘ly
 <')'> >

235 >(
	g§c
);

238 c⁄° * 
ª_°rög_uri_›í
(c⁄° * 
§c
)

240  
	g£quí˚
 <

241 
	gexa˘ly
 <'u'>,

242 
	gexa˘ly
 <'r'>,

243 
	gexa˘ly
 <'l'>,

244 
	gexa˘ly
 <'('>,

245 
	gW
,

246 
	gn⁄_gªedy
<

247 
	gÆã∫©ives
<

248 
	g˛ass_ch¨
< 
	gªÆ_uri_ch¨s
 >,

249 
	guri_ch¨a˘î
,

250 
	gNONASCII
,

251 
	gESCAPE


253 
	gÆã∫©ives
<

254 
	g£quí˚
 < 
	gW
, 
	gexa˘ly
 <')'> >,

255 
	gexa˘ly
< 
	ghash_lbø˚
 >

258 >(
	g§c
);

262 c⁄° * 
löe_commít
(c⁄° * 
§c
)

264  
	g£quí˚
<

265 
	gexa˘ly
 <

266 
	g¶ash_¶ash


268 
	gn⁄_gªedy
<

269 
	g™y_ch¨
,

270 
	gíd_of_löe


272 >(
	g§c
);

276 c⁄° * 
block_commít
(c⁄° * 
§c
)

278  
	g£quí˚
<

279 
	gdñimôed_by
<

280 
	g¶ash_°¨
,

281 
	g°¨_¶ash
,

282 
	gÁl£


284 >(
	g§c
);

297 c⁄° * 
›ti⁄Æ_css_whôe•a˚
(c⁄° * 
§c
) {

298  
	gzîo_∂us
< 
	gÆã∫©ives
<
	g•a˚s
, 
	glöe_commít
> >(
	g§c
);

300 c⁄° * 
css_whôe•a˚
(c⁄° * 
§c
) {

301  
	g⁄e_∂us
< 
	gÆã∫©ives
<
	g•a˚s
, 
	glöe_commít
> >(
	g§c
);

304 c⁄° * 
›ti⁄Æ_css_commíts
(c⁄° * 
§c
) {

305  
	gzîo_∂us
< 
	gÆã∫©ives
<
	g•a˚s
, 
	glöe_commít
, 
	gblock_commít
> >(
	g§c
);

307 c⁄° * 
css_commíts
(c⁄° * 
§c
) {

308  
	g⁄e_∂us
< 
	gÆã∫©ives
<
	g•a˚s
, 
	glöe_commít
, 
	gblock_commít
> >(
	g§c
);

312 c⁄° * 
esˇ≥_£q
(c⁄° * 
§c
)

314  
	g£quí˚
<

315 
	gexa˘ly
<'\\'>,

316 
	gÆã∫©ives
 <

317 
	gmömax_ønge
<

318 1, 3, 
	gxdigô


320 
	g™y_ch¨


322 
	g›ti⁄Æ
 <

323 
	gexa˘ly
 <' '>

325 >(
	g§c
);

329 c⁄° * 
idítifõr_Æpha
(c⁄° * 
§c
)

331  
	gÆã∫©ives
<

332 
	gunicode_£q
,

333 
	gÆpha
,

334 
	gunicode
,

335 
	gexa˘ly
<'-'>,

336 
	gexa˘ly
<'_'>,

337 
	gNONASCII
,

338 
	gESCAPE
,

339 
	gesˇ≥_£q


340 >(
	g§c
);

344 c⁄° * 
idítifõr_Ænum
(c⁄° * 
§c
)

346  
	gÆã∫©ives
<

347 
	gunicode_£q
,

348 
	gÆnum
,

349 
	gunicode
,

350 
	gexa˘ly
<'-'>,

351 
	gexa˘ly
<'_'>,

352 
	gNONASCII
,

353 
	gESCAPE
,

354 
	gesˇ≥_£q


355 >(
	g§c
);

359 c⁄° * 
°ri˘_idítifõr
(c⁄° * 
§c
)

361  
	g£quí˚
<

362 
	g⁄e_∂us
 < 
	g°ri˘_idítifõr_Æpha
 >,

363 
	gzîo_∂us
 < 
	g°ri˘_idítifõr_Ænum
 >

365 >(
	g§c
);

369 c⁄° * 
idítifõr
(c⁄° * 
§c
)

371  
	g£quí˚
<

372 
	gzîo_∂us
< 
	gexa˘ly
<'-'> >,

373 
	g⁄e_∂us
 < 
	gidítifõr_Æpha
 >,

374 
	gzîo_∂us
 < 
	gidítifõr_Ænum
 >

376 >(
	g§c
);

379 c⁄° * 
°ri˘_idítifõr_Æpha
(c⁄° * 
§c
)

381  
	gÆã∫©ives
 <

382 
	gÆpha
,

383 
	gunicode
,

384 
	gesˇ≥_£q
,

385 
	gexa˘ly
<'_'>

386 >(
	g§c
);

389 c⁄° * 
°ri˘_idítifõr_Ænum
(c⁄° * 
§c
)

391  
	gÆã∫©ives
 <

392 
	gÆnum
,

393 
	gunicode
,

394 
	gesˇ≥_£q
,

395 
	gexa˘ly
<'_'>

396 >(
	g§c
);

400 c⁄° * 
⁄e_unô
(c⁄° * 
§c
)

402  
	g£quí˚
 <

403 
	g›ti⁄Æ
 < 
	gexa˘ly
 <'-'> >,

404 
	g°ri˘_idítifõr_Æpha
,

405 
	gzîo_∂us
 < 
	gÆã∫©ives
<

406 
	g°ri˘_idítifõr_Ænum
,

407 
	g£quí˚
 <

408 
	g⁄e_∂us
 < 
	gexa˘ly
<'-'> >,

409 
	g°ri˘_idítifõr_Æpha


412 >(
	g§c
);

416 c⁄° * 
mu…ùÀ_unôs
(c⁄° * 
§c
)

419 
	g£quí˚
 <

420 
	g⁄e_unô
,

421 
	gzîo_∂us
 <

422 
	g£quí˚
 <

423 
	gexa˘ly
 <'*'>,

424 
	g⁄e_unô


427 >(
	g§c
);

431 c⁄° * 
unô_idítifõr
(c⁄° * 
§c
)

433  
	g£quí˚
 <

434 
	gmu…ùÀ_unôs
,

435 
	g›ti⁄Æ
 <

436 
	g£quí˚
 <

437 
	gexa˘ly
 <'/'>,

438 
	gmu…ùÀ_unôs


440 >(
	g§c
);

443 c⁄° * 
idítifõr_Ænums
(c⁄° * 
§c
)

445  
	g⁄e_∂us
< 
	gidítifõr_Ænum
 >(
	g§c
);

449 c⁄° * 
numbî_¥efix
(c⁄° * 
§c
) {

450  
	gÆã∫©ives
 <

451 
	gexa˘ly
 < '+' >,

452 
	g£quí˚
 <

453 
	gexa˘ly
 < '-' >,

454 
	g›ti⁄Æ_css_whôe•a˚
,

455 
	gexa˘ly
< '-' >

457 >(
	g§c
);

461 c⁄° * 
idítifõr_schema
(c⁄° * 
§c
) {

463  
	g£quí˚
 <

464 
	g⁄e_∂us
 <

465 
	g£quí˚
 <

466 
	gzîo_∂us
 <

467 
	gÆã∫©ives
 <

468 
	g£quí˚
 <

469 
	g›ti⁄Æ
 <

470 
	gexa˘ly
 <'$'>

472 
	gidítifõr


474 
	gexa˘ly
 <'-'>

477 
	göãΩﬁ™t
,

478 
	gzîo_∂us
 <

479 
	gÆã∫©ives
 <

480 
	gdigôs
,

481 
	g£quí˚
 <

482 
	g›ti⁄Æ
 <

483 
	gexa˘ly
 <'$'>

485 
	gidítifõr


487 
	gquŸed_°rög
,

488 
	gexa˘ly
<'-'>

493 
	g√g©e
 <

494 
	gexa˘ly
<'%'>

496 > (
	g§c
);

500 c⁄° * 
öãΩﬁ™t
(c⁄° * 
§c
) {

501  
	gªcursive_sc›es
< 
	gexa˘ly
<
	ghash_lbø˚
>,Éxa˘ly<
	grbø˚
> >(
	g§c
);

505 c⁄° * 
sögÀ_quŸed_°rög
(c⁄° * 
§c
) {

507  
	g£quí˚
 <

508 
	gexa˘ly
 <'\''>,

509 
	gzîo_∂us
 <

510 
	gÆã∫©ives
 <

512 
	g£quí˚
 <

513 
	gexa˘ly
 < '\\' >,

514 
	gª_löebªak


516 
	gesˇ≥_£q
,

517 
	gunicode_£q
,

519 
	göãΩﬁ™t
,

521 
	g™y_ch¨_but
 < '\'' >

524 
	gexa˘ly
 <'\''>

525 >(
	g§c
);

529 c⁄° * 
doubÀ_quŸed_°rög
(c⁄° * 
§c
) {

531  
	g£quí˚
 <

532 
	gexa˘ly
 <'"'>,

533 
	gzîo_∂us
 <

534 
	gÆã∫©ives
 <

536 
	g£quí˚
 <

537 
	gexa˘ly
 < '\\' >,

538 
	gª_löebªak


540 
	gesˇ≥_£q
,

541 
	gunicode_£q
,

543 
	göãΩﬁ™t
,

545 
	g™y_ch¨_but
 < '"' >

548 
	gexa˘ly
 <'"'>

549 >(
	g§c
);

553 c⁄° * 
quŸed_°rög
(c⁄° * 
§c
) {

555  
	gÆã∫©ives
<

556 
	gsögÀ_quŸed_°rög
,

557 
	gdoubÀ_quŸed_°rög


558 >(
	g§c
);

561 c⁄° * 
ßss_vÆue
(c⁄° * 
§c
) {

562  
	gÆã∫©ives
 <

563 
	gquŸed_°rög
,

564 
	gidítifõr
,

565 
	g≥r˚¡age
,

566 
	ghex
,

567 
	gdimísi⁄
,

568 
	gnumbî


569 >(
	g§c
);

574 c⁄° * 
vÆue_combö©i⁄s
(c⁄° * 
§c
) {

576 
boﬁ
 
	gwas_numbî
 = 
Ál£
;

577 c⁄° * 
	gpos
 = 
§c
;

578 
	g§c
) {

579 i‡((
	gpos
 = 
Æã∫©ives
 < 
quŸed_°rög
, 
	gidítifõr
, 
	g≥r˚¡age
, 
	ghex
 >(
	g§c
))) {

580 
	gwas_numbî
 = 
Ál£
;

581 
	g§c
 = 
pos
;

582 } i‡(!
	gwas_numbî
 && !
	gexa˘ly
<'+'>(
	g§c
Ë&& (
	gpos
 = 
Æã∫©ives
 < 
dimísi⁄
, 
	gnumbî
 >(src))) {

583 
	gwas_numbî
 = 
åue
;

584 
	g§c
 = 
pos
;

589  
	g§c
;

597 c⁄° * 
vÆue_schema
(c⁄° * 
§c
)

599  
	g£quí˚
 <

600 
	g⁄e_∂us
 <

601 
	g£quí˚
 <

602 
	g›ti⁄Æ
 < 
	gvÆue_combö©i⁄s
 >,

603 
	göãΩﬁ™t
,

604 
	g›ti⁄Æ
 < 
	gvÆue_combö©i⁄s
 >

607 >(
	g§c
);

611 c⁄° * 
©_keyw‹d
(c⁄° * 
§c
) {

612  
	g£quí˚
<
	gexa˘ly
<'@'>, 
	gidítifõr
>(
	g§c
);

632 c⁄° * 
ª_Æmo°_™y_vÆue_tokí
(c⁄° * 
§c
) {

634  
	gÆã∫©ives
 <

635 
	g⁄e_∂us
 <

636 
	gÆã∫©ives
 <

637 
	g£quí˚
 <

638 
	gexa˘ly
 <'\\'>,

639 
	g™y_ch¨


641 
	g£quí˚
 <

642 
	g√g©e
 <

643 
	g£quí˚
 <

644 
	gexa˘ly
 < 
	guæ_kwd
 >,

645 
	gexa˘ly
 <'('>

648 
	g√g_˛ass_ch¨
 <

649 
	gÆmo°_™y_vÆue_˛ass


652 
	g£quí˚
 <

653 
	gexa˘ly
 <'/'>,

654 
	g√g©e
 <

655 
	gÆã∫©ives
 <

656 
	gexa˘ly
 <'/'>,

657 
	gexa˘ly
 <'*'>

661 
	g£quí˚
 <

662 
	gexa˘ly
 <'\\'>,

663 
	gexa˘ly
 <'#'>,

664 
	g√g©e
 <

665 
	gexa˘ly
 <'{'>

668 
	g£quí˚
 <

669 
	gexa˘ly
 <'!'>,

670 
	g√g©e
 <

671 
	gÆpha


676 
	gblock_commít
,

677 
	glöe_commít
,

678 
	göãΩﬁ™t
,

679 
	g•a˚
,

680 
	g£quí˚
 <

681 
	gexa˘ly
<'u'>,

682 
	gexa˘ly
<'r'>,

683 
	gexa˘ly
<'l'>,

684 
	gexa˘ly
<'('>,

685 
	gzîo_∂us
 <

686 
	gÆã∫©ives
 <

687 
	g˛ass_ch¨
< 
	gªÆ_uri_ch¨s
 >,

688 
	guri_ch¨a˘î
,

689 
	gNONASCII
,

690 
	gESCAPE


695 
	gexa˘ly
<')'>

697 >(
	g§c
);

705 c⁄° * 
ª_•ecül_dúe˘ive
(c⁄° * 
§c
) {

706  
	gÆã∫©ives
 <

707 
	gw‹d
 < 
	gmixö_kwd
 >,

708 
	gw‹d
 < 
	gö˛ude_kwd
 >,

709 
	gw‹d
 < 
	gfun˘i⁄_kwd
 >,

710 
	gw‹d
 < 
	gªtu∫_kwd
 >,

711 
	gw‹d
 < 
	gdebug_kwd
 >,

712 
	gw‹d
 < 
	gw¨n_kwd
 >,

713 
	gw‹d
 < 
	gf‹_kwd
 >,

714 
	gw‹d
 < 
	góch_kwd
 >,

715 
	gw‹d
 < 
	gwhûe_kwd
 >,

716 
	gw‹d
 < 
	gif_kwd
 >,

717 
	gw‹d
 < 
	gñ£_kwd
 >,

718 
	gw‹d
 < 
	gexãnd_kwd
 >,

719 
	gw‹d
 < 
	gimp‹t_kwd
 >,

720 
	gw‹d
 < 
	gmedü_kwd
 >,

721 
	gw‹d
 < 
	gch¨£t_kwd
 >,

722 
	gw‹d
 < 
	gc⁄ã¡_kwd
 >,

724 
	gw‹d
 < 
	g©_roŸ_kwd
 >,

725 
	gw‹d
 < 
	gîr‹_kwd
 >

726 >(
	g§c
);

729 c⁄° * 
ª_¥efixed_dúe˘ive
(c⁄° * 
§c
) {

730  
	g£quí˚
 <

731 
	g›ti⁄Æ
 <

732 
	g£quí˚
 <

733 
	gexa˘ly
 <'-'>,

734 
	g⁄e_∂us
 < 
	gÆnum
 >,

735 
	gexa˘ly
 <'-'>

738 
	gexa˘ly
 < 
	gsuµ‹ts_kwd
 >

739 >(
	g§c
);

742 c⁄° * 
ª_ª„ªn˚_combö©‹
(c⁄° * 
§c
) {

743  
	g£quí˚
 <

744 
	g›ti⁄Æ
 <

745 
	g£quí˚
 <

746 
	gzîo_∂us
 <

747 
	gexa˘ly
 <'-'>

749 
	gidítifõr
,

750 
	gexa˘ly
 <'|'>

753 
	gzîo_∂us
 <

754 
	gexa˘ly
 <'-'>

756 
	gidítifõr


757 >(
	g§c
);

760 c⁄° * 
°©ic_ª„ªn˚_combö©‹
(c⁄° * 
§c
) {

761  
	g£quí˚
 <

762 
	gexa˘ly
 <'/'>,

763 
	gª_ª„ªn˚_combö©‹
,

764 
	gexa˘ly
 <'/'>

765 >(
	g§c
);

768 c⁄° * 
schema_ª„ªn˚_combö©‹
(c⁄° * 
§c
) {

769  
	g£quí˚
 <

770 
	gexa˘ly
 <'/'>,

771 
	g›ti⁄Æ
 <

772 
	g£quí˚
 <

773 
	gcss_ù_idítifõr
,

774 
	gexa˘ly
 <'|'>

777 
	gcss_ù_idítifõr
,

778 
	gexa˘ly
 <'/'>

779 > (
	g§c
);

782 c⁄° * 
kwd_imp‹t
(c⁄° * 
§c
) {

783  
	gw‹d
<
	gimp‹t_kwd
>(
	g§c
);

786 c⁄° * 
kwd_©_roŸ
(c⁄° * 
§c
) {

787  
	gw‹d
<
	g©_roŸ_kwd
>(
	g§c
);

790 c⁄° * 
kwd_wôh_dúe˘ive
(c⁄° * 
§c
) {

791  
	gw‹d
<
	gwôh_kwd
>(
	g§c
);

794 c⁄° * 
kwd_wôhout_dúe˘ive
(c⁄° * 
§c
) {

795  
	gw‹d
<
	gwôhout_kwd
>(
	g§c
);

798 c⁄° * 
kwd_medü
(c⁄° * 
§c
) {

799  
	gw‹d
<
	gmedü_kwd
>(
	g§c
);

802 c⁄° * 
kwd_suµ‹ts_dúe˘ive
(c⁄° * 
§c
) {

803  
	gw‹d
<
	gsuµ‹ts_kwd
>(
	g§c
);

806 c⁄° * 
kwd_mixö
(c⁄° * 
§c
) {

807  
	gw‹d
<
	gmixö_kwd
>(
	g§c
);

810 c⁄° * 
kwd_fun˘i⁄
(c⁄° * 
§c
) {

811  
	gw‹d
<
	gfun˘i⁄_kwd
>(
	g§c
);

814 c⁄° * 
kwd_ªtu∫_dúe˘ive
(c⁄° * 
§c
) {

815  
	gw‹d
<
	gªtu∫_kwd
>(
	g§c
);

818 c⁄° * 
kwd_ö˛ude_dúe˘ive
(c⁄° * 
§c
) {

819  
	gw‹d
<
	gö˛ude_kwd
>(
	g§c
);

822 c⁄° * 
kwd_c⁄ã¡_dúe˘ive
(c⁄° * 
§c
) {

823  
	gw‹d
<
	gc⁄ã¡_kwd
>(
	g§c
);

826 c⁄° * 
kwd_ch¨£t_dúe˘ive
(c⁄° * 
§c
) {

827  
	gw‹d
<
	gch¨£t_kwd
>(
	g§c
);

830 c⁄° * 
kwd_exãnd
(c⁄° * 
§c
) {

831  
	gw‹d
<
	gexãnd_kwd
>(
	g§c
);

835 c⁄° * 
kwd_if_dúe˘ive
(c⁄° * 
§c
) {

836  
	gw‹d
<
	gif_kwd
>(
	g§c
);

839 c⁄° * 
kwd_ñ£_dúe˘ive
(c⁄° * 
§c
) {

840  
	gw‹d
<
	gñ£_kwd
>(
	g§c
);

842 c⁄° * 
ñ£if_dúe˘ive
(c⁄° * 
§c
) {

843  
	g£quí˚
< 
	gexa˘ly
< 
	gñ£_kwd
 >,

844 
	g›ti⁄Æ_css_commíts
,

845 
	gw‹d
< 
	gif_a·î_ñ£_kwd
 > >(
	g§c
);

848 c⁄° * 
kwd_f‹_dúe˘ive
(c⁄° * 
§c
) {

849  
	gw‹d
<
	gf‹_kwd
>(
	g§c
);

852 c⁄° * 
kwd_‰om
(c⁄° * 
§c
) {

853  
	gw‹d
<
	g‰om_kwd
>(
	g§c
);

856 c⁄° * 
kwd_to
(c⁄° * 
§c
) {

857  
	gw‹d
<
	gto_kwd
>(
	g§c
);

860 c⁄° * 
kwd_through
(c⁄° * 
§c
) {

861  
	gw‹d
<
	gthrough_kwd
>(
	g§c
);

864 c⁄° * 
kwd_óch_dúe˘ive
(c⁄° * 
§c
) {

865  
	gw‹d
<
	góch_kwd
>(
	g§c
);

868 c⁄° * 
kwd_ö
(c⁄° * 
§c
) {

869  
	gw‹d
<
	gö_kwd
>(
	g§c
);

872 c⁄° * 
kwd_whûe_dúe˘ive
(c⁄° * 
§c
) {

873  
	gw‹d
<
	gwhûe_kwd
>(
	g§c
);

876 c⁄° * 
«me
(c⁄° * 
§c
) {

877  
	g⁄e_∂us
< 
	gÆã∫©ives
< 
	gÆnum
,

878 
	gexa˘ly
<'-'>,

879 
	gexa˘ly
<'_'>,

880 
	gesˇ≥_£q
 > >(
	g§c
);

883 c⁄° * 
kwd_w¨n
(c⁄° * 
§c
) {

884  
	gw‹d
<
	gw¨n_kwd
>(
	g§c
);

887 c⁄° * 
kwd_îr
(c⁄° * 
§c
) {

888  
	gw‹d
<
	gîr‹_kwd
>(
	g§c
);

891 c⁄° * 
kwd_dbg
(c⁄° * 
§c
) {

892  
	gw‹d
<
	gdebug_kwd
>(
	g§c
);

900 c⁄° * 
kwd_nuŒ
(c⁄° * 
§c
) {

901  
	gw‹d
<
	gnuŒ_kwd
>(
	g§c
);

904 c⁄° * 
css_idítifõr
(c⁄° * 
§c
) {

905  
	g£quí˚
 <

906 
	gzîo_∂us
 <

907 
	gexa˘ly
 <'-'>

909 
	gidítifõr


910 >(
	g§c
);

913 c⁄° * 
css_ù_idítifõr
(c⁄° * 
§c
) {

914  
	g£quí˚
 <

915 
	gzîo_∂us
 <

916 
	gexa˘ly
 <'-'>

918 
	gÆã∫©ives
 <

919 
	gidítifõr
,

920 
	göãΩﬁ™t


922 >(
	g§c
);

926 c⁄° * 
«me•a˚_¥efix
(c⁄° * 
§c
) {

927  
	g£quí˚
 <

928 
	g›ti⁄Æ
 <

929 
	gÆã∫©ives
 <

930 
	gexa˘ly
 <'*'>,

931 
	gcss_idítifõr


934 
	gexa˘ly
 <'|'>,

935 
	g√g©e
 <

936 
	gexa˘ly
 <'='>

938 >(
	g§c
);

942 c⁄° * 
«me•a˚_schema
(c⁄° * 
§c
) {

943  
	g£quí˚
 <

944 
	g›ti⁄Æ
 <

945 
	gÆã∫©ives
 <

946 
	gexa˘ly
 <'*'>,

947 
	gcss_ù_idítifõr


950 
	gexa˘ly
<'|'>,

951 
	g√g©e
 <

952 
	gexa˘ly
 <'='>

954 >(
	g§c
);

957 c⁄° * 
hyphís_™d_idítifõr
(c⁄° * 
§c
) {

958  
	g£quí˚
< 
	gzîo_∂us
< 
	gexa˘ly
< '-' > >, 
	gidítifõr_Ænums
 >(
	g§c
);

960 c⁄° * 
hyphís_™d_«me
(c⁄° * 
§c
) {

961  
	g£quí˚
< 
	gzîo_∂us
< 
	gexa˘ly
< '-' > >, 
	g«me
 >(
	g§c
);

963 c⁄° * 
univîßl
(c⁄° * 
§c
) {

964  
	g£quí˚
< 
	g›ti⁄Æ
<
	g«me•a˚_schema
>, 
	gexa˘ly
<'*'> >(
	g§c
);

967 c⁄° * 
id_«me
(c⁄° * 
§c
) {

968  
	g£quí˚
<
	gexa˘ly
<'#'>, 
	gidítifõr_Ænums
 >(
	g§c
);

971 c⁄° * 
˛ass_«me
(c⁄° * 
§c
) {

972  
	g£quí˚
<
	gexa˘ly
<'.'>, 
	gidítifõr
 >(
	g§c
);

975 c⁄° * 
©åibuã_«me
(c⁄° * 
§c
) {

976  
	gÆã∫©ives
< 
	g£quí˚
< 
	g›ti⁄Æ
<
	g«me•a˚_schema
>, 
	gidítifõr
>,

977 
	gidítifõr
 >(
	g§c
);

980 c⁄° * 
∂a˚hﬁdî
(c⁄° * 
§c
) {

981  
	g£quí˚
<
	gexa˘ly
<'%'>, 
	gidítifõr_Ænums
 >(
	g§c
);

985 c⁄° * 
›
(c⁄° * 
§c
) {

986  
	g˛ass_ch¨
<
	g›_ch¨s
>(
	g§c
);

988 c⁄° * 
sign
(c⁄° * 
§c
) {

989  
	g˛ass_ch¨
<
	gsign_ch¨s
>(
	g§c
);

991 c⁄° * 
unsig√d_numbî
(c⁄° * 
§c
) {

992  
	gÆã∫©ives
<
	g£quí˚
< 
	gzîo_∂us
<
	gdigôs
>,

993 
	gexa˘ly
<'.'>,

994 
	g⁄e_∂us
<
	gdigôs
> >,

995 
	gdigôs
>(
	g§c
);

997 c⁄° * 
numbî
(c⁄° * 
§c
) {

998  
	g£quí˚
< 
	g›ti⁄Æ
<
	gsign
>, 
	gunsig√d_numbî
>(
	g§c
);

1000 c⁄° * 
c€fficõ¡
(c⁄° * 
§c
) {

1001  
	gÆã∫©ives
< 
	g£quí˚
< 
	g›ti⁄Æ
<
	gsign
>, 
	gdigôs
 >,

1002 
	gsign
 >(
	g§c
);

1004 c⁄° * 
böomül
(c⁄° * 
§c
) {

1005  
	g£quí˚
 <

1006 
	g›ti⁄Æ
 < 
	gsign
 >,

1007 
	g›ti⁄Æ
 < 
	gdigôs
 >,

1008 
	gexa˘ly
 <'n'>,

1009 
	gzîo_∂us
 < 
	g£quí˚
 <

1010 
	g›ti⁄Æ_css_whôe•a˚
, 
	gsign
,

1011 
	g›ti⁄Æ_css_whôe•a˚
, 
	gdigôs


1013 >(
	g§c
);

1015 c⁄° * 
≥r˚¡age
(c⁄° * 
§c
) {

1016  
	g£quí˚
< 
	gnumbî
, 
	gexa˘ly
<'%'> >(
	g§c
);

1018 c⁄° * 
am≥rßnd
(c⁄° * 
§c
) {

1019  
	gexa˘ly
<'&'>(
	g§c
);

1026 c⁄° * 
dimísi⁄
(c⁄° * 
§c
) {

1027  
	g£quí˚
<
	gnumbî
, 
	gunô_idítifõr
 >(
	g§c
);

1029 c⁄° * 
hex
(c⁄° * 
§c
) {

1030 c⁄° * 
	gp
 = 
£quí˚
< 
exa˘ly
<'#'>, 
	g⁄e_∂us
<
	gxdigô
> >(
	g§c
);

1031 
±rdiff_t
 
	gÀn
 = 
p
 - 
§c
;

1032  (
	gÀn
 !4 && 
Àn
 !7Ë? 0 : 
p
;

1034 c⁄° * 
hexa
(c⁄° * 
§c
) {

1035 c⁄° * 
	gp
 = 
£quí˚
< 
exa˘ly
<'#'>, 
	g⁄e_∂us
<
	gxdigô
> >(
	g§c
);

1036 
±rdiff_t
 
	gÀn
 = 
p
 - 
§c
;

1037  (
	gÀn
 !4 && 
Àn
 !7 &&Üí !9Ë? 0 : 
p
;

1039 c⁄° * 
hex0
(c⁄° * 
§c
) {

1040 c⁄° * 
	gp
 = 
£quí˚
< 
exa˘ly
<'0'>, 
	gexa˘ly
<'x'>, 
	g⁄e_∂us
<
	gxdigô
> >(
	g§c
);

1041 
±rdiff_t
 
	gÀn
 = 
p
 - 
§c
;

1042  (
	gÀn
 !5 && 
Àn
 !8Ë? 0 : 
p
;

1051 c⁄° * 
uri_¥efix
(c⁄° * 
§c
) {

1052  
	g£quí˚
 <

1053 
	gexa˘ly
 <

1054 
	guæ_kwd


1056 
	gzîo_∂us
 <

1057 
	g£quí˚
 <

1058 
	gexa˘ly
 <'-'>,

1059 
	g⁄e_∂us
 <

1060 
	gÆpha


1064 
	gexa˘ly
 <'('>

1065 >(
	g§c
);

1089 c⁄° * 
kwd_imp‹è¡
(c⁄° * 
§c
) {

1090  
	g£quí˚
< 
	gexa˘ly
<'!'>,

1091 
	g›ti⁄Æ_css_whôe•a˚
,

1092 
	gw‹d
<
	gimp‹è¡_kwd
> >(
	g§c
);

1095 c⁄° * 
kwd_›ti⁄Æ
(c⁄° * 
§c
) {

1096  
	g£quí˚
< 
	gexa˘ly
<'!'>,

1097 
	g›ti⁄Æ_css_whôe•a˚
,

1098 
	gw‹d
<
	g›ti⁄Æ_kwd
> >(
	g§c
);

1101 c⁄° * 
deÁu…_Êag
(c⁄° * 
§c
) {

1102  
	g£quí˚
< 
	gexa˘ly
<'!'>,

1103 
	g›ti⁄Æ_css_whôe•a˚
,

1104 
	gw‹d
<
	gdeÁu…_kwd
> >(
	g§c
);

1107 c⁄° * 
globÆ_Êag
(c⁄° * 
§c
) {

1108  
	g£quí˚
< 
	gexa˘ly
<'!'>,

1109 
	g›ti⁄Æ_css_whôe•a˚
,

1110 
	gw‹d
<
	gglobÆ_kwd
> >(
	g§c
);

1113 c⁄° * 
p£udo_¥efix
(c⁄° * 
§c
) {

1114  
	g£quí˚
< 
	gexa˘ly
<':'>, 
	g›ti⁄Æ
<Éxa˘ly<':'> > >(
	g§c
);

1117 c⁄° * 
fun˘i⁄Æ_schema
(c⁄° * 
§c
) {

1118  
	g£quí˚
 <

1119 
	g⁄e_∂us
 <

1120 
	g£quí˚
 <

1121 
	gzîo_∂us
 <

1122 
	gÆã∫©ives
 <

1123 
	gidítifõr
,

1124 
	gexa˘ly
 <'-'>

1127 
	g⁄e_∂us
 <

1128 
	g£quí˚
 <

1129 
	göãΩﬁ™t
,

1130 
	gÆã∫©ives
 <

1131 
	gdigôs
,

1132 
	gidítifõr
,

1133 
	gexa˘ly
<'+'>,

1134 
	gexa˘ly
<'-'>

1140 
	g√g©e
 <

1141 
	gexa˘ly
 <'%'>

1143 
	glookahód
 <

1144 
	gexa˘ly
 <'('>

1146 > (
	g§c
);

1149 c⁄° * 
ª_nŸhög
(c⁄° * 
§c
) {

1150  
	g§c
;

1153 c⁄° * 
ª_fun˘i⁄Æ
(c⁄° * 
§c
) {

1154  
	g£quí˚
< 
	gidítifõr
, 
	g›ti⁄Æ
 < 
	gblock_commít
 >, 
	gexa˘ly
<'('> >(
	g§c
);

1156 c⁄° * 
ª_p£udo_£À˘‹
(c⁄° * 
§c
) {

1157  
	g£quí˚
< 
	gidítifõr
, 
	g›ti⁄Æ
 < 
	gblock_commít
 >, 
	gexa˘ly
<'('> >(
	g§c
);

1160 c⁄° * 
p£udo_nŸ
(c⁄° * 
§c
) {

1161  
	gw‹d
< 
	gp£udo_nŸ_kwd
 >(
	g§c
);

1164 c⁄° * 
eví
(c⁄° * 
§c
) {

1165  
	gw‹d
<
	geví_kwd
>(
	g§c
);

1167 c⁄° * 
odd
(c⁄° * 
§c
) {

1168  
	gw‹d
<
	godd_kwd
>(
	g§c
);

1171 c⁄° * 
exa˘_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<'='>(
	g§c
); }

1172 c⁄° * 
˛ass_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<
	gtûde_equÆ
>(
	g§c
); }

1173 c⁄° * 
dash_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<
	gpùe_equÆ
>(
	g§c
); }

1174 c⁄° * 
¥efix_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<
	gˇªt_equÆ
>(
	g§c
); }

1175 c⁄° * 
suffix_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<
	gdﬁœr_equÆ
>(
	g§c
); }

1176 c⁄° * 
sub°rög_m©ch
(c⁄° * 
§c
Ë{  
	gexa˘ly
<
	g°¨_equÆ
>(
	g§c
); }

1193 c⁄° * 
v¨übÀ
(c⁄° * 
§c
) {

1194  
	g£quí˚
<
	gexa˘ly
<'$'>, 
	gidítifõr
>(
	g§c
);

1199 c⁄° * 
ˇlc_‚_ˇŒ
(c⁄° * 
§c
) {

1200  
	g£quí˚
 <

1201 
	g›ti⁄Æ
 < 
	g£quí˚
 <

1202 
	ghyphís
,

1203 
	g⁄e_∂us
 < 
	g£quí˚
 <

1204 
	g°ri˘_idítifõr
,

1205 
	ghyphís


1208 
	gexa˘ly
 < 
	gˇlc_‚_kwd
 >,

1209 
	gw‹d_bound¨y


1210 >(
	g§c
);

1214 c⁄° * 
kwd_åue
(c⁄° * 
§c
) {

1215  
	gw‹d
<
	gåue_kwd
>(
	g§c
);

1217 c⁄° * 
kwd_Ál£
(c⁄° * 
§c
) {

1218  
	gw‹d
<
	gÁl£_kwd
>(
	g§c
);

1220 c⁄° * 
kwd_⁄ly
(c⁄° * 
§c
) {

1221  
	gkeyw‹d
 < 
	g⁄ly_kwd
 >(
	g§c
);

1223 c⁄° * 
kwd_™d
(c⁄° * 
§c
) {

1224  
	gkeyw‹d
 < 
	g™d_kwd
 >(
	g§c
);

1226 c⁄° * 
kwd_‹
(c⁄° * 
§c
) {

1227  
	gkeyw‹d
 < 
	g‹_kwd
 >(
	g§c
);

1229 c⁄° * 
kwd_nŸ
(c⁄° * 
§c
) {

1230  
	gkeyw‹d
 < 
	gnŸ_kwd
 >(
	g§c
);

1232 c⁄° * 
kwd_eq
(c⁄° * 
§c
) {

1233  
	gexa˘ly
<
	geq
>(
	g§c
);

1235 c⁄° * 
kwd_√q
(c⁄° * 
§c
) {

1236  
	gexa˘ly
<
	g√q
>(
	g§c
);

1238 c⁄° * 
kwd_gt
(c⁄° * 
§c
) {

1239  
	gexa˘ly
<
	ggt
>(
	g§c
);

1241 c⁄° * 
kwd_gã
(c⁄° * 
§c
) {

1242  
	gexa˘ly
<
	ggã
>(
	g§c
);

1244 c⁄° * 
kwd_…
(c⁄° * 
§c
) {

1245  
	gexa˘ly
<
	g…
>(
	g§c
);

1247 c⁄° * 
kwd_…e
(c⁄° * 
§c
) {

1248  
	gexa˘ly
<
	g…e
>(
	g§c
);

1252 c⁄° * 
õ_¥ogid
(c⁄° * 
§c
) {

1253  
	g£quí˚
 <

1254 
	gw‹d
<
	g¥ogid_kwd
>,

1255 
	gexa˘ly
<':'>,

1256 
	gÆã∫©ives
< 
	gidítifõr_schema
, 
	gidítifõr
 >,

1257 
	gzîo_∂us
< 
	g£quí˚
<

1258 
	gexa˘ly
<'.'>,

1259 
	gÆã∫©ives
< 
	gidítifõr_schema
, 
	gidítifõr
 >

1261 
	gzîo_∂us
 < 
	g£quí˚
<

1262 
	gexa˘ly
<'('>,

1263 
	g›ti⁄Æ_css_whôe•a˚
,

1264 
	g›ti⁄Æ
 < 
	g£quí˚
<

1265 
	gÆã∫©ives
< 
	gv¨übÀ
, 
	gidítifõr_schema
, 
	gidítifõr
 >,

1266 
	g›ti⁄Æ_css_whôe•a˚
,

1267 
	gexa˘ly
<'='>,

1268 
	g›ti⁄Æ_css_whôe•a˚
,

1269 
	gÆã∫©ives
< 
	gv¨übÀ
, 
	gidítifõr_schema
, 
	gidítifõr
, 
	gquŸed_°rög
, 
	gnumbî
, 
	ghexa
 >,

1270 
	gzîo_∂us
< 
	g£quí˚
<

1271 
	g›ti⁄Æ_css_whôe•a˚
,

1272 
	gexa˘ly
<','>,

1273 
	g›ti⁄Æ_css_whôe•a˚
,

1274 
	g£quí˚
<

1275 
	gÆã∫©ives
< 
	gv¨übÀ
, 
	gidítifõr_schema
, 
	gidítifõr
 >,

1276 
	g›ti⁄Æ_css_whôe•a˚
,

1277 
	gexa˘ly
<'='>,

1278 
	g›ti⁄Æ_css_whôe•a˚
,

1279 
	gÆã∫©ives
< 
	gv¨übÀ
, 
	gidítifõr_schema
, 
	gidítifõr
, 
	gquŸed_°rög
, 
	gnumbî
, 
	ghexa
 >

1283 
	g›ti⁄Æ_css_whôe•a˚
,

1284 
	gexa˘ly
<')'>

1286 >(
	g§c
);

1288 c⁄° * 
õ_ex¥essi⁄
(c⁄° * 
§c
) {

1289  
	g£quí˚
 < 
	gw‹d
<
	gex¥essi⁄_kwd
>, 
	gexa˘ly
<'('>, 
	gskù_ovî_sc›es
<Éxa˘ly<'('>,Éxa˘ly<')'> > >(
	g§c
);

1291 c⁄° * 
õ_¥›îty
(c⁄° * 
§c
) {

1292  
	gÆã∫©ives
 < 
	gõ_ex¥essi⁄
, 
	gõ_¥ogid
 >(
	g§c
);

1300 c⁄° * 
õ_keyw‹d_¨g_¥›îty
(c⁄° * 
§c
) {

1301  
	gÆã∫©ives
 <

1302 
	gv¨übÀ
,

1303 
	gidítifõr_schema
,

1304 
	gidítifõr


1305 >(
	g§c
);

1307 c⁄° * 
õ_keyw‹d_¨g_vÆue
(c⁄° * 
§c
) {

1308  
	gÆã∫©ives
 <

1309 
	gv¨übÀ
,

1310 
	gidítifõr_schema
,

1311 
	gidítifõr
,

1312 
	gquŸed_°rög
,

1313 
	gnumbî
,

1314 
	ghexa
,

1315 
	g£quí˚
 <

1316 
	gexa˘ly
 < '(' >,

1317 
	gskù_ovî_sc›es
 <

1318 
	gexa˘ly
 < '(' >,

1319 
	gexa˘ly
 < ')' >

1322 >(
	g§c
);

1325 c⁄° * 
õ_keyw‹d_¨g
(c⁄° * 
§c
) {

1326  
	g£quí˚
 <

1327 
	gõ_keyw‹d_¨g_¥›îty
,

1328 
	g›ti⁄Æ_css_whôe•a˚
,

1329 
	gexa˘ly
<'='>,

1330 
	g›ti⁄Æ_css_whôe•a˚
,

1331 
	gõ_keyw‹d_¨g_vÆue


1332 >(
	g§c
);

1382 c⁄° * 
H
(c⁄° * 
§c
) {

1383  
	g°d
::
isxdigô
(*
§c
) ? src+1 : 0;

1386 c⁄° * 
W
(c⁄° * 
§c
) {

1387  
	gzîo_∂us
< 
	gÆã∫©ives
<

1388 
	g•a˚
,

1389 
	gexa˘ly
< '\t' >,

1390 
	gexa˘ly
< '\r' >,

1391 
	gexa˘ly
< '\n' >,

1392 
	gexa˘ly
< '\f' >

1393 > >(
	g§c
);

1396 c⁄° * 
UUNICODE
(c⁄° * 
§c
) {

1397  
	g£quí˚
< 
	gexa˘ly
<'\\'>,

1398 
	gbëwìn
<
	gH
, 1, 6>,

1399 
	g›ti⁄Æ
< 
	gW
 >

1400 >(
	g§c
);

1403 c⁄° * 
NONASCII
(c⁄° * 
§c
) {

1404  
n⁄ascii
(
§c
);

1407 c⁄° * 
ESCAPE
(c⁄° * 
§c
) {

1408  
	gÆã∫©ives
<

1409 
	gUUNICODE
,

1410 
	g£quí˚
<

1411 
	gexa˘ly
<'\\'>,

1412 
	gÆã∫©ives
<

1413 
	gNONASCII
,

1414 
	gesˇ∑bÀ_ch¨a˘î


1417 >(
	g§c
);

1428 c⁄° * 
ªÆ_uri_suffix
(c⁄° * 
§c
) {

1429  
	g£quí˚
< 
	gW
, 
	gexa˘ly
< ')' > >(
	g§c
);

1432 c⁄° * 
ªÆ_uri_vÆue
(c⁄° * 
§c
) {

1434 
	g£quí˚
<

1435 
	gn⁄_gªedy
<

1436 
	gÆã∫©ives
<

1437 
	g˛ass_ch¨
< 
	gªÆ_uri_ch¨s
 >,

1438 
	guri_ch¨a˘î
,

1439 
	gNONASCII
,

1440 
	gESCAPE


1442 
	gÆã∫©ives
<

1443 
	gªÆ_uri_suffix
,

1444 
	gexa˘ly
< 
	ghash_lbø˚
 >

1448 (
	g§c
);

1451 c⁄° * 
°©ic_°rög
(c⁄° * 
§c
) {

1452 c⁄° * 
	gpos
 = 
§c
;

1453 c⁄° * 
	gs
 = 
quŸed_°rög
(
pos
);

1454 
Tokí
 
t
(
pos
, 
s
);

1455 c⁄° 
	gp
 = 
cou¡_öãrvÆ
< 
öãΩﬁ™t
 >(
t
.
begö
, 
	gt
.
	gíd
);

1456  (
	gp
 =0Ë? 
t
.
íd
 : 0;

1459 c⁄° * 
unicode_£q
(c⁄° * 
§c
) {

1460  
	g£quí˚
 <

1461 
	gÆã∫©ives
 <

1462 
	gexa˘ly
< 'U' >,

1463 
	gexa˘ly
< 'u' >

1465 
	gexa˘ly
< '+' >,

1466 
	g∑dded_tokí
 <

1467 6, 
	gxdigô
,

1468 
	gexa˘ly
 < '?' >

1470 >(
	g§c
);

1473 c⁄° * 
°©ic_comp⁄ít
(c⁄° * 
§c
) {

1474  
	gÆã∫©ives
< 
	gidítifõr
,

1475 
	g°©ic_°rög
,

1476 
	g≥r˚¡age
,

1477 
	ghex
,

1478 
	gexa˘ly
<'|'>,

1480 
	g£quí˚
 < 
	gnumbî
, 
	gunô_idítifõr
 >,

1481 
	gnumbî
,

1482 
	g£quí˚
< 
	gexa˘ly
<'!'>, 
	gw‹d
<
	gimp‹è¡_kwd
> >

1483 >(
	g§c
);

1486 c⁄° * 
°©ic_¥›îty
(c⁄° * 
§c
) {

1488 
	g£quí˚
 <

1489 
	gzîo_∂us
<

1490 
	g£quí˚
 <

1491 
	g›ti⁄Æ_css_commíts
,

1492 
	gÆã∫©ives
 <

1493 
	gexa˘ly
<','>,

1494 
	gexa˘ly
<'('>,

1495 
	gexa˘ly
<')'>,

1496 
	gkwd_›ti⁄Æ
,

1497 
	gquŸed_°rög
,

1498 
	göãΩﬁ™t
,

1499 
	gidítifõr
,

1500 
	g≥r˚¡age
,

1501 
	gdimísi⁄
,

1502 
	gv¨übÀ
,

1503 
	gÆnum
,

1504 
	g£quí˚
 <

1505 
	gexa˘ly
 <'\\'>,

1506 
	g™y_ch¨


1511 
	glookahód
 <

1512 
	g£quí˚
 <

1513 
	g›ti⁄Æ_css_commíts
,

1514 
	gÆã∫©ives
 <

1515 
	gexa˘ly
 <';'>,

1516 
	gexa˘ly
 <'}'>,

1517 
	gíd_of_fûe


1521 >(
	g§c
);

1524 c⁄° * 
°©ic_vÆue
(c⁄° * 
§c
) {

1525  
	g£quí˚
< sequence<

1526 
	g°©ic_comp⁄ít
,

1527 
	gzîo_∂us
< 
	gidítifõr
 >

1529 
	gzîo_∂us
 < 
	g£quí˚
<

1530 
	gÆã∫©ives
<

1531 
	g£quí˚
< 
	g›ti⁄Æ_•a˚s
, 
	gÆã∫©ives
<

1532 
	gexa˘ly
 < '/' >,

1533 
	gexa˘ly
 < ',' >,

1534 
	gexa˘ly
 < ' ' >

1535 >, 
	g›ti⁄Æ_•a˚s
 >,

1536 
	g•a˚s


1538 
	g°©ic_comp⁄ít


1540 
	gzîo_∂us
 < 
	g•a˚s
 >,

1541 
	gÆã∫©ives
< 
	gexa˘ly
<';'>,Éxactly<'}'> >

1542 >(
	g§c
);

1545 c⁄° * 
∑ª¡he£_sc›e
(c⁄° * 
§c
) {

1546  
	g£quí˚
 <

1547 
	gexa˘ly
 < '(' >,

1548 
	gskù_ovî_sc›es
 <

1549 
	gexa˘ly
 < '(' >,

1550 
	gexa˘ly
 < ')' >

1552 >(
	g§c
);

1555 c⁄° * 
ª_£À˘‹_li°
(c⁄° * 
§c
) {

1556  
	gÆã∫©ives
 <

1558 
	g£quí˚
 <

1559 
	gam≥rßnd
,

1560 
	g⁄e_∂us
 <

1561 
	gexa˘ly
 < '-' >

1563 
	gw‹d_bound¨y
,

1564 
	g›ti⁄Æ_•a˚s


1567 
	g⁄e_∂us
 <

1568 
	gÆã∫©ives
 <

1570 
	g•a˚s
, 
	gblock_commít
, 
	glöe_commít
,

1573 
	gschema_ª„ªn˚_combö©‹
,

1575 
	g˛ass_ch¨
 < 
	g£À˘‹_lookahód_›s
 >,

1577 
	g˛ass_ch¨
 < 
	g£À˘‹_combö©‹_›s
 >,

1579 
	g£quí˚
 <

1580 
	gexa˘ly
 <'('>,

1581 
	g›ti⁄Æ_•a˚s
,

1582 
	g›ti⁄Æ
 <
	gª_£À˘‹_li°
>,

1583 
	g›ti⁄Æ_•a˚s
,

1584 
	gexa˘ly
 <')'>

1586 
	gÆã∫©ives
 <

1587 
	gexa˘_m©ch
, 
	g˛ass_m©ch
, 
	gdash_m©ch
,

1588 
	g¥efix_m©ch
, 
	gsuffix_m©ch
, 
	gsub°rög_m©ch


1591 
	g£quí˚
 <

1593 
	g›ti⁄Æ
 < 
	g«me•a˚_schema
 >,

1595 
	gÆã∫©ives
 <

1596 
	g£quí˚
 <

1597 
	gexa˘ly
 <'#'>,

1599 
	g√g©e
 < 
	gexa˘ly
 <'{'> >

1602 
	gexa˘ly
 <'.'>,

1604 
	g›ti⁄Æ
 < 
	gp£udo_¥efix
 >

1607 
	g⁄e_∂us
 < 
	g£quí˚
 <

1609 
	gzîo_∂us
 < 
	gexa˘ly
<'-'> >,

1611 
	gÆã∫©ives
 <

1612 
	gkwd_›ti⁄Æ
,

1613 
	gexa˘ly
 <'*'>,

1614 
	gquŸed_°rög
,

1615 
	göãΩﬁ™t
,

1616 
	gidítifõr
,

1617 
	gv¨übÀ
,

1618 
	g≥r˚¡age
,

1619 
	gböomül
,

1620 
	gdimísi⁄
,

1621 
	gÆnum


1625 
	gzîo_∂us
 < 
	gexa˘ly
<'-'> >

1629 >(
	g§c
);

1632 c⁄° * 
ty≥_£À˘‹
(c⁄° * 
§c
) {

1633  
	g£quí˚
< 
	g›ti⁄Æ
<
	g«me•a˚_schema
>, 
	gidítifõr
>(
	g§c
);

1635 c⁄° * 
ª_ty≥_£À˘‹
(c⁄° * 
§c
) {

1636  
	gÆã∫©ives
< 
	gty≥_£À˘‹
, 
	gunivîßl
, 
	gquŸed_°rög
, 
	gdimísi⁄
, 
	g≥r˚¡age
, 
	gnumbî
, 
	gidítifõr_Ænums
 >(
	g§c
);

1638 c⁄° * 
ª_ty≥_£À˘‹2
(c⁄° * 
§c
) {

1639  
	gÆã∫©ives
< 
	gty≥_£À˘‹
, 
	gunivîßl
, 
	gquŸed_°rög
, 
	gdimísi⁄
, 
	g≥r˚¡age
, 
	gnumbî
, 
	gidítifõr_Ænums
 >(
	g§c
);

1641 c⁄° * 
ª_°©ic_ex¥essi⁄
(c⁄° * 
§c
) {

1642  
	g£quí˚
< 
	gnumbî
, 
	g›ti⁄Æ_•a˚s
, 
	gexa˘ly
<'/'>, o±i⁄Æ_•a˚s,Çumbî >(
	g§c
);

1647 c⁄° * 
ª_•ecül_fun
(c⁄° * 
§c
) {

1650 i‡(c⁄° * 
	gˇlc
 = 
ˇlc_‚_ˇŒ
(
§c
)) {

1651  
ˇlc
;

1654  
	g£quí˚
 <

1655 
	g›ti⁄Æ
 <

1656 
	g£quí˚
 <

1657 
	gexa˘ly
 <'-'>,

1658 
	g⁄e_∂us
 <

1659 
	gÆã∫©ives
 <

1660 
	gÆpha
,

1661 
	gexa˘ly
 <'+'>,

1662 
	gexa˘ly
 <'-'>

1667 
	gÆã∫©ives
 <

1668 
	gw‹d
 < 
	gex¥essi⁄_kwd
 >,

1669 
	g£quí˚
 <

1670 
	g£quí˚
 <

1671 
	gexa˘ly
 < 
	g¥ogid_kwd
 >,

1672 
	gexa˘ly
 <':'>

1674 
	gzîo_∂us
 <

1675 
	gÆã∫©ives
 <

1676 
	gch¨_ønge
 <'a', 'z'>,

1677 
	gexa˘ly
 <'.'>

1682 >(
	g§c
);

	@node_modules/node-sass/src/libsass/src/prelexer.hpp

1 #i‚de‡
SASS_PRELEXER_H


2 
	#SASS_PRELEXER_H


	)

4 
	~<c°rög
>

5 
	~"Àxî.hµ
"

7 
«me•a˚
 
	gSass
 {

9 
«me•a˚
 
	gPªÀxî
 {

16 c⁄° * 
kwd_åue
(c⁄° * 
§c
);

17 c⁄° * 
kwd_Ál£
(c⁄° * 
§c
);

18 c⁄° * 
kwd_⁄ly
(c⁄° * 
§c
);

19 c⁄° * 
kwd_™d
(c⁄° * 
§c
);

20 c⁄° * 
kwd_‹
(c⁄° * 
§c
);

21 c⁄° * 
kwd_nŸ
(c⁄° * 
§c
);

22 c⁄° * 
kwd_eq
(c⁄° * 
§c
);

23 c⁄° * 
kwd_√q
(c⁄° * 
§c
);

24 c⁄° * 
kwd_gt
(c⁄° * 
§c
);

25 c⁄° * 
kwd_gã
(c⁄° * 
§c
);

26 c⁄° * 
kwd_…
(c⁄° * 
§c
);

27 c⁄° * 
kwd_…e
(c⁄° * 
§c
);

30 c⁄° * 
kwd_©
(c⁄° * 
§c
);

31 c⁄° * 
kwd_dŸ
(c⁄° * 
§c
);

32 c⁄° * 
kwd_comma
(c⁄° * 
§c
);

33 c⁄° * 
kwd_cﬁ⁄
(c⁄° * 
§c
);

34 c⁄° * 
kwd_¶ash
(c⁄° * 
§c
);

35 c⁄° * 
kwd_°¨
(c⁄° * 
§c
);

36 c⁄° * 
kwd_∂us
(c⁄° * 
§c
);

37 c⁄° * 
kwd_möus
(c⁄° * 
§c
);

44 
	gãm∂©e
 <
	gbeg
, 
	gíd
, 
boﬁ
 
	gesc
>

45 c⁄° * 
dñimôed_by
(c⁄° * 
§c
) {

46 
	g§c
 = 
exa˘ly
<
beg
>(
§c
);

47 i‡(!
	g§c
)  0;

48 c⁄° * 
	g°›
;

50 i‡(!*
	g§c
)  0;

51 
	g°›
 = 
exa˘ly
<
íd
>(
§c
);

52 i‡(
	g°›
 && (!
	gesc
 || *(
	g§c
 - 1Ë!'\\')Ë 
°›
;

53 
	g§c
 = 
°›
 ? st› : 
§c
 + 1;

61 
	gãm∂©e
<
¥ñexî
 
	g°¨t
,ÖªÀxî 
	g°›
>

62 c⁄° * 
skù_ovî_sc›es
(c⁄° * 
§c
, c⁄° * 
íd
) {

64 
size_t
 
	gÀvñ
 = 0;

65 
boﬁ
 
	gö_squŸe
 = 
Ál£
;

66 
boﬁ
 
	gö_dquŸe
 = 
Ál£
;

69 *
	g§c
) {

72 i‡(
	gíd
 && 
	g§c
 >
íd
) ;

75 i‡(*
	g§c
 == '\\') {

76 ++ 
§c
;

78 i‡(*
	g§c
 == '"') {

79 
ö_dquŸe
 = ! in_dquote;

81 i‡(*
	g§c
 == '\'') {

82 
ö_squŸe
 = ! in_squote;

84 i‡(
	gö_dquŸe
 || 
	gö_squŸe
) {

89 i‡(c⁄° * 
	gpos
 = 
°¨t
(
§c
)) {

90 ++ 
Àvñ
;

91 
	g§c
 = 
pos
 - 1;

95 i‡(c⁄° * 
	gföÆ
 = 
°›
(
§c
)) {

97 i‡(
Àvñ
 > 0) --Üevel;

100  
	gföÆ
;

102 
	g§c
 = 
föÆ
 - 1;

106 ++ 
	g§c
;

114 c⁄° * 
∑ª¡he£_sc›e
(c⁄° * 
§c
);

120 
	gãm∂©e
<
¥ñexî
 
	g°¨t
,ÖªÀxî 
	g°›
>

121 c⁄° * 
skù_ovî_sc›es
(c⁄° * 
§c
) {

122  
	gskù_ovî_sc›es
<
	g°¨t
, 
	g°›
>(
	g§c
, 0);

126 
	gãm∂©e
 <
¥ñexî
 
	g°¨t
,ÖªÀxî 
	g°›
>

127 c⁄° * 
ªcursive_sc›es
(c⁄° * 
§c
) {

129 
	g§c
 = 
°¨t
(
§c
);

131 i‡(!
	g§c
)  0;

133  
	gskù_ovî_sc›es
<
	g°¨t
, 
	g°›
>(
	g§c
);

137 
	gãm∂©e
 <c⁄° * 
	gbeg
, c⁄° * 
	gíd
, 
boﬁ
 
	gesc
>

138 c⁄° * 
dñimôed_by
(c⁄° * 
§c
) {

139 
	g§c
 = 
exa˘ly
<
beg
>(
§c
);

140 i‡(!
	g§c
)  0;

141 c⁄° * 
	g°›
;

143 i‡(!*
	g§c
)  0;

144 
	g°›
 = 
exa˘ly
<
íd
>(
§c
);

145 i‡(
	g°›
 && (!
	gesc
 || *(
	g§c
 - 1Ë!'\\')Ë 
°›
;

146 
	g§c
 = 
°›
 ? st› : 
§c
 + 1;

151 
	gãm∂©e
<
¥ñexî
 
	gmx
, 
size_t
 
	glo
, size_à
	ghi
>

152 c⁄° * 
bëwìn
(c⁄° * 
§c
) {

153 
size_t
 
	gi
 = 0; i < 
	glo
; ++i) {

154 
	g§c
 = 
mx
(
§c
);

155 i‡(!
	g§c
)  0;

157 
size_t
 
	gi
 = 
lo
; i <
hi
; ++i) {

158 c⁄° * 
	g√w_§c
 = 
mx
(
§c
);

159 i‡(!
	g√w_§c
Ë 
	g§c
;

160 
	g§c
 = 
√w_§c
;

162  
	g§c
;

166 c⁄° * 
ª_°rög_doubÀ_›í
(c⁄° * 
§c
);

167 c⁄° * 
ª_°rög_doubÀ_˛o£
(c⁄° * 
§c
);

168 c⁄° * 
ª_°rög_sögÀ_›í
(c⁄° * 
§c
);

169 c⁄° * 
ª_°rög_sögÀ_˛o£
(c⁄° * 
§c
);

170 c⁄° * 
ª_°rög_uri_›í
(c⁄° * 
§c
);

171 c⁄° * 
ª_°rög_uri_˛o£
(c⁄° * 
§c
);

174 c⁄° * 
löe_commít
(c⁄° * 
§c
);

177 c⁄° * 
block_commít
(c⁄° * 
§c
);

179 c⁄° * 
commít
(c⁄° * 
§c
);

181 c⁄° * 
doubÀ_quŸed_°rög
(c⁄° * 
§c
);

182 c⁄° * 
sögÀ_quŸed_°rög
(c⁄° * 
§c
);

183 c⁄° * 
quŸed_°rög
(c⁄° * 
§c
);

185 c⁄° * 
öãΩﬁ™t
(c⁄° * 
§c
);

187 c⁄° * 
numbî_¥efix
(c⁄° * 
§c
);

190 c⁄° * 
›ti⁄Æ_css_whôe•a˚
(c⁄° * 
§c
);

191 c⁄° * 
css_whôe•a˚
(c⁄° * 
§c
);

193 c⁄° * 
›ti⁄Æ_css_commíts
(c⁄° * 
§c
);

194 c⁄° * 
css_commíts
(c⁄° * 
§c
);

197 c⁄° * 
esˇ≥_£q
(c⁄° * 
§c
);

200 c⁄° * 
cu°om_¥›îty_«me
(c⁄° * 
§c
);

202 c⁄° * 
idítifõr
(c⁄° * 
§c
);

203 c⁄° * 
idítifõr_Æpha
(c⁄° * 
§c
);

204 c⁄° * 
idítifõr_Ænum
(c⁄° * 
§c
);

205 c⁄° * 
°ri˘_idítifõr
(c⁄° * 
§c
);

206 c⁄° * 
°ri˘_idítifõr_Æpha
(c⁄° * 
§c
);

207 c⁄° * 
°ri˘_idítifõr_Ænum
(c⁄° * 
§c
);

209 c⁄° * 
⁄e_unô
(c⁄° * 
§c
);

210 c⁄° * 
mu…ùÀ_unôs
(c⁄° * 
§c
);

211 c⁄° * 
unô_idítifõr
(c⁄° * 
§c
);

214 c⁄° * 
ª_ª„ªn˚_combö©‹
(c⁄° * 
§c
);

215 c⁄° * 
°©ic_ª„ªn˚_combö©‹
(c⁄° * 
§c
);

216 c⁄° * 
schema_ª„ªn˚_combö©‹
(c⁄° * 
§c
);

219 c⁄° * 
idítifõr_schema
(c⁄° * 
§c
);

220 c⁄° * 
vÆue_schema
(c⁄° * 
§c
);

221 c⁄° * 
ßss_vÆue
(c⁄° * 
§c
);

226 c⁄° * 
víd‹_¥efix
(c⁄° * 
§c
);

228 c⁄° * 
ª_•ecül_dúe˘ive
(c⁄° * 
§c
);

229 c⁄° * 
ª_¥efixed_dúe˘ive
(c⁄° * 
§c
);

230 c⁄° * 
ª_Æmo°_™y_vÆue_tokí
(c⁄° * 
§c
);

233 c⁄° * 
©_keyw‹d
(c⁄° * 
§c
);

234 c⁄° * 
kwd_imp‹t
(c⁄° * 
§c
);

235 c⁄° * 
kwd_©_roŸ
(c⁄° * 
§c
);

236 c⁄° * 
kwd_wôh_dúe˘ive
(c⁄° * 
§c
);

237 c⁄° * 
kwd_wôhout_dúe˘ive
(c⁄° * 
§c
);

238 c⁄° * 
kwd_medü
(c⁄° * 
§c
);

239 c⁄° * 
kwd_suµ‹ts_dúe˘ive
(c⁄° * 
§c
);

242 c⁄° * 
kwd_mixö
(c⁄° * 
§c
);

243 c⁄° * 
kwd_fun˘i⁄
(c⁄° * 
§c
);

244 c⁄° * 
kwd_ªtu∫_dúe˘ive
(c⁄° * 
§c
);

245 c⁄° * 
kwd_ö˛ude_dúe˘ive
(c⁄° * 
§c
);

246 c⁄° * 
kwd_c⁄ã¡_dúe˘ive
(c⁄° * 
§c
);

247 c⁄° * 
kwd_ch¨£t_dúe˘ive
(c⁄° * 
§c
);

248 c⁄° * 
kwd_exãnd
(c⁄° * 
§c
);

250 c⁄° * 
unicode_£q
(c⁄° * 
§c
);

252 c⁄° * 
kwd_if_dúe˘ive
(c⁄° * 
§c
);

253 c⁄° * 
kwd_ñ£_dúe˘ive
(c⁄° * 
§c
);

254 c⁄° * 
ñ£if_dúe˘ive
(c⁄° * 
§c
);

256 c⁄° * 
kwd_f‹_dúe˘ive
(c⁄° * 
§c
);

257 c⁄° * 
kwd_‰om
(c⁄° * 
§c
);

258 c⁄° * 
kwd_to
(c⁄° * 
§c
);

259 c⁄° * 
kwd_through
(c⁄° * 
§c
);

261 c⁄° * 
kwd_óch_dúe˘ive
(c⁄° * 
§c
);

262 c⁄° * 
kwd_ö
(c⁄° * 
§c
);

264 c⁄° * 
kwd_whûe_dúe˘ive
(c⁄° * 
§c
);

266 c⁄° * 
ª_nŸhög
(c⁄° * 
§c
);

267 c⁄° * 
ª_ty≥_£À˘‹2
(c⁄° * 
§c
);

269 c⁄° * 
ª_•ecül_fun
(c⁄° * 
§c
);

271 c⁄° * 
kwd_w¨n
(c⁄° * 
§c
);

272 c⁄° * 
kwd_îr
(c⁄° * 
§c
);

273 c⁄° * 
kwd_dbg
(c⁄° * 
§c
);

275 c⁄° * 
kwd_nuŒ
(c⁄° * 
§c
);

277 c⁄° * 
ª_£À˘‹_li°
(c⁄° * 
§c
);

278 c⁄° * 
ª_ty≥_£À˘‹
(c⁄° * 
§c
);

279 c⁄° * 
ª_°©ic_ex¥essi⁄
(c⁄° * 
§c
);

282 c⁄° * 
css_idítifõr
(c⁄° * 
§c
);

283 c⁄° * 
css_ù_idítifõr
(c⁄° * 
§c
);

286 c⁄° * 
«me•a˚_schema
(c⁄° * 
§c
);

287 c⁄° * 
«me•a˚_¥efix
(c⁄° * 
§c
);

288 c⁄° * 
ty≥_£À˘‹
(c⁄° * 
§c
);

289 c⁄° * 
hyphís_™d_idítifõr
(c⁄° * 
§c
);

290 c⁄° * 
hyphís_™d_«me
(c⁄° * 
§c
);

291 c⁄° * 
univîßl
(c⁄° * 
§c
);

293 c⁄° * 
id_«me
(c⁄° * 
§c
);

295 c⁄° * 
˛ass_«me
(c⁄° * 
§c
);

297 c⁄° * 
©åibuã_«me
(c⁄° * 
§c
);

299 c⁄° * 
∂a˚hﬁdî
(c⁄° * 
§c
);

301 c⁄° * 
›
(c⁄° * 
§c
);

302 c⁄° * 
sign
(c⁄° * 
§c
);

303 c⁄° * 
unsig√d_numbî
(c⁄° * 
§c
);

304 c⁄° * 
numbî
(c⁄° * 
§c
);

305 c⁄° * 
c€fficõ¡
(c⁄° * 
§c
);

306 c⁄° * 
böomül
(c⁄° * 
§c
);

307 c⁄° * 
≥r˚¡age
(c⁄° * 
§c
);

308 c⁄° * 
am≥rßnd
(c⁄° * 
§c
);

309 c⁄° * 
dimísi⁄
(c⁄° * 
§c
);

310 c⁄° * 
hex
(c⁄° * 
§c
);

311 c⁄° * 
hexa
(c⁄° * 
§c
);

312 c⁄° * 
hex0
(c⁄° * 
§c
);

315 c⁄° * 
uri_¥efix
(c⁄° * 
§c
);

317 c⁄° * 
kwd_imp‹è¡
(c⁄° * 
§c
);

319 c⁄° * 
kwd_›ti⁄Æ
(c⁄° * 
§c
);

321 c⁄° * 
deÁu…_Êag
(c⁄° * 
§c
);

322 c⁄° * 
globÆ_Êag
(c⁄° * 
§c
);

324 c⁄° * 
p£udo_¥efix
(c⁄° * 
§c
);

326 c⁄° * 
ª_fun˘i⁄Æ
(c⁄° * 
§c
);

327 c⁄° * 
ª_p£udo_£À˘‹
(c⁄° * 
§c
);

328 c⁄° * 
fun˘i⁄Æ_schema
(c⁄° * 
§c
);

329 c⁄° * 
p£udo_nŸ
(c⁄° * 
§c
);

331 c⁄° * 
eví
(c⁄° * 
§c
);

332 c⁄° * 
odd
(c⁄° * 
§c
);

334 c⁄° * 
exa˘_m©ch
(c⁄° * 
§c
);

335 c⁄° * 
˛ass_m©ch
(c⁄° * 
§c
);

336 c⁄° * 
dash_m©ch
(c⁄° * 
§c
);

337 c⁄° * 
¥efix_m©ch
(c⁄° * 
§c
);

338 c⁄° * 
suffix_m©ch
(c⁄° * 
§c
);

339 c⁄° * 
sub°rög_m©ch
(c⁄° * 
§c
);

347 c⁄° * 
v¨übÀ
(c⁄° * 
§c
);

348 c⁄° * 
ˇlc_‚_ˇŒ
(c⁄° * 
§c
);

351 c⁄° * 
õ_¥ogid
(c⁄° * 
§c
);

352 c⁄° * 
õ_ex¥essi⁄
(c⁄° * 
§c
);

353 c⁄° * 
õ_¥›îty
(c⁄° * 
§c
);

354 c⁄° * 
õ_keyw‹d_¨g
(c⁄° * 
§c
);

355 c⁄° * 
õ_keyw‹d_¨g_vÆue
(c⁄° * 
§c
);

356 c⁄° * 
õ_keyw‹d_¨g_¥›îty
(c⁄° * 
§c
);

359 c⁄° * 
H
(c⁄° * 
§c
);

360 c⁄° * 
W
(c⁄° * 
§c
);

362 c⁄° * 
UUNICODE
(c⁄° * 
§c
);

363 c⁄° * 
NONASCII
(c⁄° * 
§c
);

364 c⁄° * 
ESCAPE
(c⁄° * 
§c
);

365 c⁄° * 
ªÆ_uri_suffix
(c⁄° * 
§c
);

367 c⁄° * 
ªÆ_uri_vÆue
(c⁄° * 
§c
);

374 c⁄° * 
°©ic_°rög
(c⁄° * 
§c
);

375 c⁄° * 
°©ic_comp⁄ít
(c⁄° * 
§c
);

376 c⁄° * 
°©ic_¥›îty
(c⁄° * 
§c
);

377 c⁄° * 
°©ic_vÆue
(c⁄° * 
§c
);

380 
	gãm∂©e
<
	gc
>

381 c⁄° * 
föd_fú°
(c⁄° * 
§c
) {

382 *
	g§c
 && *§¯!
c
Ë++
§c
;

383  *
	g§c
 ? src : 0;

385 
	gãm∂©e
<
¥ñexî
 
	gmx
>

386 c⁄° * 
föd_fú°
(c⁄° * 
§c
) {

387 *
	g§c
 && !
mx
(
§c
)) ++src;

388  *
	g§c
 ? src : 0;

390 
	gãm∂©e
<
¥ñexî
 
	gmx
>

391 c⁄° * 
föd_fú°_ö_öãrvÆ
(c⁄° * 
beg
, c⁄° * 
íd
) {

392 
boﬁ
 
	gesc
 = 
Ál£
;

393 (
	gbeg
 < 
	gíd
) && *beg) {

394 i‡(
	gesc
Ëes¯
Ál£
;

395 i‡(*
	gbeg
 ='\\'Ë
esc
 = 
åue
;

396 i‡(
mx
(
beg
)Ë 
	gbeg
;

397 ++
	gbeg
;

401 
	gãm∂©e
<
¥ñexî
 
	gmx
,ÖªÀxî 
	gskù
>

402 c⁄° * 
föd_fú°_ö_öãrvÆ
(c⁄° * 
beg
, c⁄° * 
íd
) {

403 
boﬁ
 
	gesc
 = 
Ál£
;

404 (
	gbeg
 < 
	gíd
) && *beg) {

405 i‡(
	gesc
Ëes¯
Ál£
;

406 i‡(*
	gbeg
 ='\\'Ë
esc
 = 
åue
;

407 i‡(c⁄° * 
	gpos
 = 
skù
(
beg
)Ëbeg = 
pos
;

408 i‡(
mx
(
beg
)Ë 
	gbeg
;

409 ++
	gbeg
;

413 
	gãm∂©e
 <
¥ñexî
 
	gmx
>

414 
cou¡_öãrvÆ
(c⁄° * 
beg
, c⁄° * 
íd
) {

415 
	gcou¡î
 = 0;

416 
boﬁ
 
	gesc
 = 
Ál£
;

417 
	gbeg
 < 
	gíd
 && *beg) {

418 c⁄° * 
	gp
;

419 i‡(
	gesc
) {

420 
	gesc
 = 
Ál£
;

421 ++
	gbeg
;

422 } i‡(*
	gbeg
 == '\\') {

423 
esc
 = 
åue
;

424 ++
	gbeg
;

425 } i‡((
	gp
 = 
mx
(
beg
))) {

426 ++
cou¡î
;

427 
	gbeg
 = 
p
;

430 ++
	gbeg
;

433  
	gcou¡î
;

436 
	gãm∂©e
 <
size_t
 
	gsize
, 
¥ñexî
 
	gmx
,ÖªÀxî 
	g∑d
>

437 c⁄° * 
∑dded_tokí
(c⁄° * 
§c
)

439 
size_t
 
	ggŸ
 = 0;

440 c⁄° * 
	gpos
 = 
§c
;

441 
	ggŸ
 < 
	gsize
) {

442 i‡(!
mx
(
pos
)) ;

443 ++ 
	gpos
; ++ 
	ggŸ
;

445 
	ggŸ
 < 
	gsize
) {

446 i‡(!
∑d
(
pos
)) ;

447 ++ 
	gpos
; ++ 
	ggŸ
;

449  
	ggŸ
 ? 
	gpos
 : 0;

452 
	gãm∂©e
 <
size_t
 
	gmö
, size_à
	gmax
, 
¥ñexî
 
	gmx
>

453 c⁄° * 
mömax_ønge
(c⁄° * 
§c
)

455 
size_t
 
	ggŸ
 = 0;

456 c⁄° * 
	gpos
 = 
§c
;

457 
	ggŸ
 < 
	gmax
) {

458 i‡(!
mx
(
pos
)) ;

459 ++ 
	gpos
; ++ 
	ggŸ
;

461 i‡(
	ggŸ
 < 
	gmö
)  0;

462 i‡(
	ggŸ
 > 
	gmax
)  0;

463  
	gpos
;

466 
	gãm∂©e
 <
	gmö
, 
	gmax
>

467 c⁄° * 
ch¨_ønge
(c⁄° * 
§c
)

469 i‡(*
	g§c
 < 
	gmö
)  0;

470 i‡(*
	g§c
 > 
	gmax
)  0;

471  
	g§c
 + 1;

	@node_modules/node-sass/src/libsass/src/remove_placeholders.cpp

1 
	~"ßss.hµ
"

2 
	~"ªmove_∂a˚hﬁdîs.hµ
"

3 
	~"c⁄ãxt.hµ
"

4 
	~"ö•e˘.hµ
"

5 
	~<io°ªam
>

7 
«me•a˚
 
	gSass
 {

9 
	gRemove_Pœ˚hﬁdîs
::
Remove_Pœ˚hﬁdîs
(
C⁄ãxt
& 
˘x
)

10 : 
˘x
(ctx)

13 
Remove_Pœ˚hﬁdîs
::
›î©‹
()(
Block
* 
b
) {

14 
size_t
 
i
 = 0, 
	gL
 = 
b
->
Àngth
(); 
	gi
 < L; ++i) {

15 (*
	gb
)[
i
]->
≥rf‹m
(
this
);

19 
Sñe˘‹_Li°
* 
	gRemove_Pœ˚hﬁdîs
::
ªmove_∂a˚hﬁdîs
(Sñe˘‹_Li°* 
¶
)

21 
Sñe˘‹_Li°
* 
√w_¶
 = 
SASS_MEMORY_NEW
(
˘x
.
mem
, Sñe˘‹_Li°, 
¶
->
p°©e
());

23 
size_t
 
	gi
 = 0, 
	gL
 = 
¶
->
Àngth
(); i < L; ++i) {

24 i‡(!(*
	g¶
)[
i
]->
c⁄èös_∂a˚hﬁdî
()) {

25 *
	g√w_¶
 << (*
	g¶
)[
i
];

29  
	g√w_¶
;

34 
	gRemove_Pœ˚hﬁdîs
::
›î©‹
()(
RuÀ£t
* 
r
) {

36 
Sñe˘‹_Li°
* 
¶
 = 
°©ic_ˇ°
<Sñe˘‹_Li°*>(
r
->
£À˘‹
());

38 i‡(
	g¶
) {

40 
	gr
->
£À˘‹
(
ªmove_∂a˚hﬁdîs
(
¶
));

42 
Com∂ex_Sñe˘‹
* 
	gcs
 : *
¶
) {

43 
cs
) {

44 i‡(
cs
->
hód
()) {

45 
Sim∂e_Sñe˘‹
* 
ss
 : *
cs
->
hód
()) {

46 i‡(
Wøµed_Sñe˘‹
* 
ws
 = 
dy«mic_ˇ°
<Wøµed_Sñe˘‹*>(
ss
)) {

47 i‡(
Sñe˘‹_Li°
* 
¶
 = 
dy«mic_ˇ°
<Sñe˘‹_Li°*>(
ws
->
£À˘‹
())) {

48 
Sñe˘‹_Li°
* 
˛ón
 = 
ªmove_∂a˚hﬁdîs
(
¶
);

51 
	g˛ón
->
ªmove_∑ª¡_£À˘‹s
();

52 
	gws
->
£À˘‹
(
˛ón
);

57 
	gcs
 = 
cs
->
èû
();

63 
Block
* 
	gb
 = 
r
->
block
();

65 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

66 i‡((*
	gb
)[
i
]Ë(*b)[i]->
≥rf‹m
(
this
);

70 
	gRemove_Pœ˚hﬁdîs
::
›î©‹
()(
Medü_Block
* 
m
) {

71 
›î©‹
()(
m
->
block
());

73 
	gRemove_Pœ˚hﬁdîs
::
›î©‹
()(
Suµ‹ts_Block
* 
m
) {

74 
›î©‹
()(
m
->
block
());

77 
	gRemove_Pœ˚hﬁdîs
::
›î©‹
()(
Dúe˘ive
* 
a
) {

78 i‡(
a
->
block
()Ëa->block()->
≥rf‹m
(
this
);

	@node_modules/node-sass/src/libsass/src/remove_placeholders.hpp

1 #i‚de‡
SASS_REMOVE_PLACEHOLDERS_H


2 
	#SASS_REMOVE_PLACEHOLDERS_H


	)

4 #¥agm®
⁄˚


6 
	~"a°.hµ
"

7 
	~"›î©i⁄.hµ
"

9 
«me•a˚
 
	gSass
 {

12 
˛ass
 
	gC⁄ãxt
;

14 
˛ass
 
	gRemove_Pœ˚hﬁdîs
 : 
public
 
O≥øti⁄_CRTP
<, Remove_Placeholders> {

16 
	gC⁄ãxt
& 
	g˘x
;

18 
ÁŒback_im∂
(
AST_Node
* 
n
) {}

20 
	gpublic
:

21 
Sñe˘‹_Li°
* 
ªmove_∂a˚hﬁdîs
(Selector_List*);

23 
	gpublic
:

24 
Remove_Pœ˚hﬁdîs
(
C⁄ãxt
&);

25 ~
Remove_Pœ˚hﬁdîs
() { }

27 
›î©‹
()(
	gBlock
*);

28 
›î©‹
()(
	gRuÀ£t
*);

29 
›î©‹
()(
	gMedü_Block
*);

30 
›î©‹
()(
	gSuµ‹ts_Block
*);

31 
›î©‹
()(
	gDúe˘ive
*);

33 
	gãm∂©e
 <
ty≥«me
 
	gU
>

34 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

	@node_modules/node-sass/src/libsass/src/sass.cpp

1 
	~"ßss.hµ
"

2 
	~<c°dlib
>

3 
	~<c°rög
>

4 
	~<ve˘‹
>

5 
	~<s°ªam
>

7 
	~"ßss.h
"

8 
	~"fûe.hµ
"

9 
	~"utû.hµ
"

12 
usög
 
«me•a˚
 
Sass
;

16 * 
ADDCALL
 
ßss_Æloc_mem‹y
(
size_t
 
size
)

18 * 
±r
 = 
mÆloc
(
size
);

19 i‡(
±r
 =
NULL
)

20 
out_of_mem‹y
();

21  
±r
;

24 * 
ADDCALL
 
ßss_c›y_c_°rög
(c⁄° * 
°r
)

26 
size_t
 
Àn
 = 
°æí
(
°r
) + 1;

27 * 
˝y
 = (*Ë
ßss_Æloc_mem‹y
(
Àn
);

28 
°d
::
mem˝y
(
˝y
, 
°r
, 
Àn
);

29  
˝y
;

33 
ADDCALL
 
ßss_‰ì_mem‹y
(* 
±r
)

35 i‡(
±r
Ë
‰ì
 (ptr);

39 * 
ADDCALL
 
ßss_°rög_quŸe
 (c⁄° *
°r
, c⁄° 
quŸe_m¨k
)

41 
°d
::
°rög
 
quŸed
 = 
quŸe
(
°r
, 
quŸe_m¨k
);

42  
ßss_c›y_c_°rög
(
quŸed
.
c_°r
());

46 * 
ADDCALL
 
ßss_°rög_unquŸe
 (c⁄° *
°r
)

48 
°d
::
°rög
 
unquŸed
 = 
unquŸe
(
°r
);

49  
ßss_c›y_c_°rög
(
unquŸed
.
c_°r
());

54 * 
ADDCALL
 
ßss_ªsﬁve_fûe
 (c⁄° * 
fûe
, c⁄° * 
∑ths
[])

56 
°d
::
°rög
 
ªsﬁved
(
Fûe
::
föd_fûe
(
fûe
, 
∑ths
));

57  
ßss_c›y_c_°rög
(
ªsﬁved
.
c_°r
());

61 c⁄° * 
ADDCALL
 
libßss_vîsi⁄
()

63  
LIBSASS_VERSION
;

67 c⁄° * 
ADDCALL
 
libßss_œnguage_vîsi⁄
()

69  
LIBSASS_LANGUAGE_VERSION
;

	@node_modules/node-sass/src/libsass/src/sass.hpp

2 #i‚de‡
SASS_SASS_H


3 
	#SASS_SASS_H


	)

8 #unde‡
__EXTENSIONS__


10 #ifde‡
_MSC_VER


11 #¥agm®
w¨nög
(
dißbÀ
 : 4005)

15 #ifde‡
_WIN32


17 
	#NOGDI


	)

19 
	#NOMINMAX


	)

21 
	#_NO_W32_PSEUDO_MODIFIERS


	)

27 #i‚de‡
FS_CASE_SENSITIVE


28 #ifde‡
_WIN32


29 
	#FS_CASE_SENSITIVE
 0

	)

31 
	#FS_CASE_SENSITIVE
 1

	)

36 #i‚de‡
PATH_SEP


37 #ifde‡
_WIN32


38 
	#PATH_SEP
 ';'

	)

40 
	#PATH_SEP
 ':'

	)

46 
	~"ßss/ba£.h
"

49 
«me•a˚
 
	gSass
 {

52 c⁄° 
Sass_Ouçut_StyÀ
 
	gNESTED
 = 
SASS_STYLE_NESTED
;

53 c⁄° 
Sass_Ouçut_StyÀ
 
	gCOMPACT
 = 
SASS_STYLE_COMPACT
;

54 c⁄° 
Sass_Ouçut_StyÀ
 
	gEXPANDED
 = 
SASS_STYLE_EXPANDED
;

55 c⁄° 
Sass_Ouçut_StyÀ
 
	gCOMPRESSED
 = 
SASS_STYLE_COMPRESSED
;

57 c⁄° 
Sass_Ouçut_StyÀ
 
	gINSPECT
 = 
SASS_STYLE_INSPECT
;

58 c⁄° 
Sass_Ouçut_StyÀ
 
	gTO_SASS
 = 
SASS_STYLE_TO_SASS
;

63 
	eSass_I≈ut_StyÀ
 {

64 
	mSASS_CONTEXT_NULL
,

65 
	mSASS_CONTEXT_FILE
,

66 
	mSASS_CONTEXT_DATA
,

67 
	mSASS_CONTEXT_FOLDER


71 
	s°rög_li°
 {

72 
°rög_li°
* 
	m√xt
;

73 * 
	m°rög
;

77 
	sSass_In•e˘_O±i⁄s
 {

81 
Sass_Ouçut_StyÀ
 
	mouçut_°yÀ
;

84 
	m¥ecisi⁄
;

87 
Sass_In•e˘_O±i⁄s
(
Sass_Ouçut_StyÀ
 
°yÀ
 = 
Sass
::
NESTED
,

88 
¥ecisi⁄
 = 5)

89 : 
ouçut_°yÀ
(
°yÀ
), 
¥ecisi⁄
(precision)

95 
	gSass_Ouçut_O±i⁄s
 : 
Sass_In•e˘_O±i⁄s
 {

98 c⁄° * 
ödít
;

100 c⁄° * 
	glöe„ed
;

104 
boﬁ
 
	gsour˚_commíts
;

107 
Sass_Ouçut_O±i⁄s
(
Sass_In•e˘_O±i⁄s
 
›t
,

108 c⁄° * 
ödít
 = " ",

109 c⁄° * 
löe„ed
 = "\n",

110 
boﬁ
 
sour˚_commíts
 = 
Ál£
)

111 : 
Sass_In•e˘_O±i⁄s
(
›t
),

112 
ödít
(ödít), 
löe„ed
(linefeed),

113 
sour˚_commíts
(source_comments)

117 
Sass_Ouçut_O±i⁄s
(
Sass_Ouçut_StyÀ
 
°yÀ
 = 
Sass
::
NESTED
,

118 
¥ecisi⁄
 = 5,

119 c⁄° * 
ödít
 = " ",

120 c⁄° * 
löe„ed
 = "\n",

121 
boﬁ
 
sour˚_commíts
 = 
Ál£
)

122 : 
Sass_In•e˘_O±i⁄s
(
°yÀ
, 
¥ecisi⁄
),

123 
ödít
(ödít), 
löe„ed
(linefeed),

124 
sour˚_commíts
(source_comments)

	@node_modules/node-sass/src/libsass/src/sass2scss.cpp

7 #ifde‡
_MSC_VER


8 
	#_CRT_SECURE_NO_WARNINGS


	)

9 
	#_CRT_NONSTDC_NO_DEPRECATE


	)

13 
	~<°ack
>

14 
	~<°rög
>

15 
	~<c°rög
>

16 
	~<c°dlib
>

17 
	~<s°ªam
>

18 
	~<io°ªam
>

19 
	~<°dio.h
>

33 
	~"ßss2scss.h
"

36 
«me•a˚
 
	gSass


40 
	#PRETTIFY
(
c⁄vîãr
Ë(c⁄vîãr.
›ti⁄s
 - (c⁄vîãr.›ti⁄†& 248))

	)

42 
	#KEEP_COMMENT
(
c⁄vîãr
Ë((c⁄vîãr.
›ti⁄s
 & 
SASS2SCSS_KEEP_COMMENT
Ë=SASS2SCSS_KEEP_COMMENT)

	)

43 
	#STRIP_COMMENT
(
c⁄vîãr
Ë((c⁄vîãr.
›ti⁄s
 & 
SASS2SCSS_STRIP_COMMENT
Ë=SASS2SCSS_STRIP_COMMENT)

	)

44 
	#CONVERT_COMMENT
(
c⁄vîãr
Ë((c⁄vîãr.
›ti⁄s
 & 
SASS2SCSS_CONVERT_COMMENT
Ë=SASS2SCSS_CONVERT_COMMENT)

	)

47 
	#INDENT
(
c⁄vîãr
Ë(c⁄vîãr.
ödíts
.
	`t›
())

	)

50 
	#IS_PARSING
(
c⁄vîãr
Ë(c⁄vîãr.
commít
 ="")

	)

51 
	#IS_COMMENT
(
c⁄vîãr
Ë(c⁄vîãr.
commít
 !"")

	)

52 
	#IS_SRC_COMMENT
(
c⁄vîãr
Ë(c⁄vîãr.
commít
 ="//" && ! 
	`CONVERT_COMMENT
(c⁄vîãr))

	)

53 
	#IS_CSS_COMMENT
(
c⁄vîãr
Ë(c⁄vîãr.
commít
 ="/*" || (c⁄vîãr.commíà="//" && 
	`CONVERT_COMMENT
(c⁄vîãr)))

	)

56 
	g°d
::
°rög
 
˛o£r
 (c⁄° 
c⁄vîãr
& converter)

58  
PRETTIFY
(
c⁄vîãr
) == 0 ? " }" :

59 
PRETTIFY
(
c⁄vîãr
) <= 1 ? " }" :

60 "\n" + 
INDENT
(
c⁄vîãr
) + "}";

64 
	g°d
::
°rög
 
›íî
 (c⁄° 
c⁄vîãr
& converter)

66  
PRETTIFY
(
c⁄vîãr
) == 0 ? " { " :

67 
PRETTIFY
(
c⁄vîãr
) <= 2 ? " {" :

68 "\n" + 
INDENT
(
c⁄vîãr
) + "{";

73 
boﬁ
 
isP£udoSñe˘‹
 (
°d
::
°rög
& 
£l
)

76 
size_t
 
Àn
 = 
£l
.
Àngth
();

77 i‡(
	gÀn
 < 1Ë 
	gÁl£
;

78 
size_t
 
	gpos
 = 
£l
.
föd_fú°_nŸ_of
("abcdefghijklmnopqrstuvwxyz-ABCDEFGHIJKLMNOPQRSTUVWXYZ", 1);

79 i‡(
	gpos
 !
°d
::
°rög
::
≈os
Ë
£l
.
îa£
(
pos
, std::string::npos);

80 
size_t
 
	gi
 = 
£l
.
Àngth
();

81 
	gi
 -- > 0Ë{ 
	g£l
.
©
(
i
Ë
tﬁowî
(
£l
.at(i)); }

84 i‡(
	g£l
 =":lök"Ë 
åue
;

85 i‡(
	g£l
 =":visôed"Ë 
åue
;

86 i‡(
	g£l
 =":a˘ive"Ë 
åue
;

89 i‡(
	g£l
 =":œng"Ë 
åue
;

90 i‡(
	g£l
 =":fú°-chûd"Ë 
åue
;

91 i‡(
	g£l
 =":hovî"Ë 
åue
;

92 i‡(
	g£l
 =":focus"Ë 
åue
;

96 i‡(
	g£l
 =":fú°"Ë 
åue
;

99 i‡(
	g£l
 =":èrgë"Ë 
åue
;

100 i‡(
	g£l
 =":roŸ"Ë 
åue
;

101 i‡(
	g£l
 =":¡h-chûd"Ë 
åue
;

102 i‡(
	g£l
 =":¡h-œ°-of-chûd"Ë 
åue
;

103 i‡(
	g£l
 =":¡h-of-ty≥"Ë 
åue
;

104 i‡(
	g£l
 =":¡h-œ°-of-ty≥"Ë 
åue
;

105 i‡(
	g£l
 =":œ°-chûd"Ë 
åue
;

106 i‡(
	g£l
 =":fú°-of-ty≥"Ë 
åue
;

107 i‡(
	g£l
 =":œ°-of-ty≥"Ë 
åue
;

108 i‡(
	g£l
 =":⁄ly-chûd"Ë 
åue
;

109 i‡(
	g£l
 =":⁄ly-of-ty≥"Ë 
åue
;

110 i‡(
	g£l
 =":em±y"Ë 
åue
;

111 i‡(
	g£l
 =":nŸ"Ë 
åue
;

114 i‡(
	g£l
 =":deÁu…"Ë 
åue
;

115 i‡(
	g£l
 =":vÆid"Ë 
åue
;

116 i‡(
	g£l
 =":övÆid"Ë 
åue
;

117 i‡(
	g£l
 =":ö-ønge"Ë 
åue
;

118 i‡(
	g£l
 =":out-of-ønge"Ë 
åue
;

119 i‡(
	g£l
 =":ªquúed"Ë 
åue
;

120 i‡(
	g£l
 =":›ti⁄Æ"Ë 
åue
;

121 i‡(
	g£l
 =":ªad-⁄ly"Ë 
åue
;

122 i‡(
	g£l
 =":ªad-wrôe"Ë 
åue
;

123 i‡(
	g£l
 =":dú"Ë 
åue
;

124 i‡(
	g£l
 =":íabÀd"Ë 
åue
;

125 i‡(
	g£l
 =":dißbÀd"Ë 
åue
;

126 i‡(
	g£l
 =":checked"Ë 
åue
;

127 i‡(
	g£l
 =":ödëîmö©e"Ë 
åue
;

128 i‡(
	g£l
 =":¡h-œ°-chûd"Ë 
åue
;

131 i‡(
	g£l
 =":™y-lök"Ë 
åue
;

132 i‡(
	g£l
 =":loˇl-lök"Ë 
åue
;

133 i‡(
	g£l
 =":sc›e"Ë 
åue
;

134 i‡(
	g£l
 =":a˘ive-dr›-èrgë"Ë 
åue
;

135 i‡(
	g£l
 =":vÆid-dr›-èrgë"Ë 
åue
;

136 i‡(
	g£l
 =":övÆid-dr›-èrgë"Ë 
åue
;

137 i‡(
	g£l
 =":cuºít"Ë 
åue
;

138 i‡(
	g£l
 =":∑°"Ë 
åue
;

139 i‡(
	g£l
 =":futuª"Ë 
åue
;

140 i‡(
	g£l
 =":∂a˚hﬁdî-shown"Ë 
åue
;

141 i‡(
	g£l
 =":u£r-îr‹"Ë 
åue
;

142 i‡(
	g£l
 =":bœnk"Ë 
åue
;

143 i‡(
	g£l
 =":¡h-m©ch"Ë 
åue
;

144 i‡(
	g£l
 =":¡h-œ°-m©ch"Ë 
åue
;

145 i‡(
	g£l
 =":¡h-cﬁumn"Ë 
åue
;

146 i‡(
	g£l
 =":¡h-œ°-cﬁumn"Ë 
åue
;

147 i‡(
	g£l
 =":m©ches"Ë 
åue
;

150 i‡(
	g£l
 =":fuŒs¸ìn"Ë 
åue
;

153  
	gÁl£
;

159 
boﬁ
 
hasCh¨D©a
 (
°d
::
°rög
& 
ßss
)

162 
size_t
 
cﬁ_pos
 = 0;

164 
	gåue
)

168 
	gcﬁ_pos
 = 
ßss
.
föd_fú°_nŸ_of
(" \t\n\v\f\r", 
cﬁ_pos
);

171 i‡(
	gcﬁ_pos
 =
°d
::
°rög
::
≈os
Ë 
Ál£
;

174 i‡(
	gßss
.
sub°r
(
cﬁ_pos
, 2) == "/*")

177 
cﬁ_pos
 = 
ßss
.
föd
("*/", col_pos);

179 i‡(
	gcﬁ_pos
 =
°d
::
°rög
::
≈os
Ë 
Ál£
;

181 
	gcﬁ_pos
 += 2;

185  
	gåue
;

195 
size_t
 
födCommítO≥√r
 (
°d
::
°rög
& 
ßss
)

198 
size_t
 
cﬁ_pos
 = 0;

199 
boﬁ
 
	g≠€d
 = 
Ál£
;

200 
boﬁ
 
	gquŸed
 = 
Ál£
;

201 
boﬁ
 
	gcommít
 = 
Ál£
;

202 
size_t
 
	gbøckës
 = 0;

204 
	gcﬁ_pos
 !
°d
::
°rög
::
≈os
)

208 
cﬁ_pos
 = 
ßss
.
föd_fú°_of
("\"\'/\\*()", col_pos);

211 i‡(
	gcﬁ_pos
 !
°d
::
°rög
::
≈os
)

213 
ch¨a˘î
 = 
ßss
.
©
(
cﬁ_pos
);

215 i‡(
	gch¨a˘î
 == '(')

217 i‡(!
quŸed
 && !
≠€d
Ë
bøckës
 ++;

219 i‡(
	gch¨a˘î
 == ')')

221 i‡(!
quŸed
 && !
≠€d
Ë
bøckës
 --;

223 i‡(
	gch¨a˘î
 == '\"')

226 i‡(!
≠€d
 && !
commít
Ë
quŸed
 = !quoted;

228 i‡(
	gch¨a˘î
 == '\'')

231 i‡(!
quŸed
 && !
commít
Ë
≠€d
 = !apoed;

233 i‡(
	gcﬁ_pos
 > 0 && 
	gch¨a˘î
 == '/')

235 i‡(
ßss
.
©
(
cﬁ_pos
 - 1) == '*')

237 
commít
 = 
Ál£
;

240 i‡(
	gßss
.
©
(
cﬁ_pos
 - 1) == '/')

243 i‡(!
quŸed
 && !
≠€d
 && !
commít
 && 
bøckës
 =0Ë 
cﬁ_pos
 - 1;

246 i‡(
	gch¨a˘î
 == '\\')

249 i‡(
quŸed
 || 
≠€d
Ë
cﬁ_pos
 ++;

252 i‡(
	gcﬁ_pos
 > 0 && 
	gch¨a˘î
 == '*')

255 i‡(
ßss
.
©
(
cﬁ_pos
 - 1) == '/')

258 i‡(!
quŸed
 && !
≠€d
Ë
commít
 = 
åue
;

263 
	gcﬁ_pos
 ++;

270  
	gcﬁ_pos
;

277 
	g°d
::
°rög
 
ªmoveMu…ûöeCommít
 (
°d
::°rög &
ßss
)

280 
°d
::
°rög
 
˛ón
 = "";

281 
size_t
 
	gcﬁ_pos
 = 0;

282 
size_t
 
	g›í_pos
 = 0;

283 
size_t
 
	g˛o£_pos
 = 0;

284 
boﬁ
 
	g≠€d
 = 
Ál£
;

285 
boﬁ
 
	gquŸed
 = 
Ál£
;

286 
boﬁ
 
	gcommít
 = 
Ál£
;

289 
	gcﬁ_pos
 !
°d
::
°rög
::
≈os
)

293 
cﬁ_pos
 = 
ßss
.
föd_fú°_of
("\"\'/\\*", col_pos);

296 i‡(
	gcﬁ_pos
 !
°d
::
°rög
::
≈os
)

298 
ch¨a˘î
 = 
ßss
.
©
(
cﬁ_pos
);

301 i‡(
	gch¨a˘î
 == '\"')

303 i‡(!
≠€d
 && !
commít
Ë
quŸed
 = !quoted;

305 i‡(
	gch¨a˘î
 == '\'')

307 i‡(!
quŸed
 && !
commít
Ë
≠€d
 = !apoed;

310 i‡(
	gch¨a˘î
 == '/')

313 i‡(
commít
 && 
cﬁ_pos
 > 0 && 
ßss
.
©
(col_pos - 1) == '*')

315 
˛o£_pos
 = 
cﬁ_pos
 + 1; 
	gcommít
 = 
Ál£
;

318 i‡(
	gch¨a˘î
 == '\\')

321 i‡(
quŸed
 || 
≠€d
Ë
cﬁ_pos
 ++;

324 i‡(
	gch¨a˘î
 == '*')

327 i‡(!
quŸed
 && !
≠€d
 && 
cﬁ_pos
 > 0 && 
ßss
.
©
(col_pos - 1) == '/')

329 
commít
 = 
åue
; 
	g›í_pos
 = 
cﬁ_pos
 - 1;

330 
	g˛ón
 +
ßss
.
sub°r
(
˛o£_pos
, 
›í_pos
 - close_pos);

335 
	gcﬁ_pos
 ++;

343 i‡(
	gcommít
Ë
	g˛ón
 +
ßss
.
sub°r
(
›í_pos
);

344 
	g˛ón
 +
ßss
.
sub°r
(
˛o£_pos
);

347  
	g˛ón
;

353 
	g°d
::
°rög
 
πrim
(c⁄° 
°d
::°rög &
ßss
)

355 
°d
::
°rög
 
åimmed
 = 
ßss
;

356 
size_t
 
	gpos_ws
 = 
åimmed
.
föd_œ°_nŸ_of
(" \t\n\v\f\r");

357 i‡(
	gpos_ws
 !
°d
::
°rög
::
≈os
)

358 { 
åimmed
.
îa£
(
pos_ws
 + 1); }

359 { 
	gåimmed
.
˛ór
(); }

360  
	gåimmed
;

366 
	g°d
::
°rög
 
Êush
 (
°d
::°rög& 
ßss
, 
c⁄vîãr
& converter)

370 
	g°d
::
°rög
 
scss
 = "";

373 
	gscss
 +
PRETTIFY
(
c⁄vîãr
) > 0 ?

374 
c⁄vîãr
.
whôe•a˚
 : "";

376 
	gc⁄vîãr
.
	gwhôe•a˚
 = "";

379 
size_t
 
	gpos_right
 = 
ßss
.
föd_œ°_nŸ_of
("\n\r");

380 i‡(
	gpos_right
 =
°d
::
°rög
::
≈os
Ë 
scss
;

383 
	g°d
::
°rög
 
lfs
 = 
ßss
.
sub°r
(
pos_right
 + 1);

384 
	gßss
 = 
ßss
.
sub°r
(0, 
pos_right
 + 1);

387 
size_t
 
	gcommít_pos
 = 
födCommítO≥√r
(
ßss
);

389 i‡(
	gcommít_pos
 !
°d
::
°rög
::
≈os
)

392 i‡(
CONVERT_COMMENT
(
c⁄vîãr
Ë&& !
IS_COMMENT
(converter))

395 
ßss
.
©
(
commít_pos
 + 1) = '*';

397 
	gßss
 += " */";

400 i‡(
	gcommít_pos
 > 0)

403 
size_t
 
	gws_pos
 = 
ßss
.
föd_œ°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
, 
commít_pos
 - 1);

404 
	gcommít_pos
 = 
ws_pos
 =
°d
::
°rög
::
≈os
 ? 0 : ws_pos + 1;

406 i‡(!
STRIP_COMMENT
(
c⁄vîãr
))

409 
	gc⁄vîãr
.
	gwhôe•a˚
 +
ßss
.
sub°r
(
commít_pos
);

416 
	gßss
 = 
ßss
.
sub°r
(0, 
commít_pos
);

420 
	gc⁄vîãr
.
	gwhôe•a˚
 +
lfs
 + "\n";

423 i‡(
PRETTIFY
(
c⁄vîãr
) == 0)

426 
size_t
 
pos_À·
 = 
ßss
.
föd_fú°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
);

427 i‡(
	gpos_À·
 !
°d
::
°rög
::
≈os
Ë
ßss
 = sass.
sub°r
(
pos_À·
);

431 
	gscss
 +
ßss
;

434  
	gscss
;

440 
	g°d
::
°rög
 
¥o˚ss
 (
°d
::°rög& 
ßss
, 
c⁄vîãr
& converter)

444 
	g°d
::
°rög
 
scss
 = "";

447 i‡(
STRIP_COMMENT
(
c⁄vîãr
))

449 
	gßss
 = 
ªmoveMu…ûöeCommít
(
ßss
);

453 
	gßss
 = 
πrim
(
ßss
);

456 
size_t
 
	gpos_À·
 = 
ßss
.
föd_fú°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
);

459 i‡(
	gc⁄vîãr
.
	gíd_of_fûe
Ë
	gpos_À·
 = 0;

462 i‡(
	gpos_À·
 =
°d
::
°rög
::
≈os
)

465 
c⁄vîãr
.
whôe•a˚
 +
ßss
 + "\n";

472 
	g°d
::
°rög
 
ödít
 = 
ßss
.
sub°r
(0, 
pos_À·
);

475 
	g°d
::
°rög
 
›í
 = 
ßss
.
sub°r
(
pos_À·
, 2);

479 i‡(
	gödít
.
Àngth
(Ë<
INDENT
(
c⁄vîãr
).length())

483 i‡(
IS_CSS_COMMENT
(
c⁄vîãr
))

486 i‡(!
STRIP_COMMENT
(
c⁄vîãr
)Ë
scss
 += " */";

489 i‡(
IS_SRC_COMMENT
(
c⁄vîãr
))

497 i‡(
	gc⁄vîãr
.
	g¥›îty
)

500 i‡(!
	gc⁄vîãr
.
	gcomma
)

504 i‡(
	gc⁄vîãr
.
	g£À˘‹
Ë
	gscss
 += " {}";

506 i‡(!
	gc⁄vîãr
.
	g£micﬁ⁄
Ë
	gscss
 += ";";

511 
	gc⁄vîãr
.
	gcommít
 = "";

516 
	gödít
.
Àngth
(Ë< 
INDENT
(
c⁄vîãr
).length())

519 
	gc⁄vîãr
.
	gödíts
.
p›
();

521 i‡(
IS_PARSING
(
c⁄vîãr
))

522 { 
	gscss
 +
˛o£r
(
c⁄vîãr
); }

523 { 
	gscss
 += " */"; }

525 
	gc⁄vîãr
.
	gcommít
 = "";

529 
	gc⁄vîãr
.
	g£À˘‹
 = 
Ál£
;

533 i‡(
	gßss
.
sub°r
(
pos_À·
, 1) == "\\") {

534 
c⁄vîãr
.
£À˘‹
 = 
åue
;

535 
	gßss
[
pos_À·
] = ' ';

539 i‡(
	gßss
.
sub°r
(
pos_À·
, 1Ë=":" && 
ßss
.substr(pos_left, 2) != "::")

544 
c⁄vîãr
.
£À˘‹
 = 
åue
;

546 
size_t
 
	gpos_w•a˚
 = 
ßss
.
föd_fú°_of
(
SASS2SCSS_FIND_WHITESPACE
, 
pos_À·
);

548 i‡(
	gpos_w•a˚
 !
°d
::
°rög
::
≈os
)

551 
°d
::
°rög
 
p£udo
 = 
ßss
.
sub°r
(
pos_À·
, 
pos_w•a˚
 -Öos_left);

554 
size_t
 
	gpos_vÆue
 = 
ßss
.
föd_fú°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
, 
pos_w•a˚
);

556 i‡(
	gpos_vÆue
 !
°d
::
°rög
::
≈os
)

559 i‡(!(
ßss
.
©
(
pos_vÆue
Ë=':' || 
isP£udoSñe˘‹
(
p£udo
)))

562 
ßss
 = 
ödít
 + sass.
sub°r
(
pos_À·
 + 1, 
pos_w•a˚
 -Öos_À· - 1Ë+ ":" + 
	gßss
.substr(pos_wspace);

564 
size_t
 
	gpos_cﬁ⁄
 = 
ßss
.
föd_fú°_nŸ_of
(":", 
pos_À·
);

566 i‡(
	gpos_cﬁ⁄
 !
°d
::
°rög
::
≈os
)

569 
pos_cﬁ⁄
 = 
ßss
.
föd_fú°_of
(":",Öos_colon);

571 
	gc⁄vîãr
.
	g£À˘‹
 = 
pos_cﬁ⁄
 =
°d
::
°rög
::
≈os
;

581 
	gßss
.
sub°r
(
pos_À·
, 5) == "@warn" ||

582 
ßss
.
sub°r
(
pos_À·
, 6) == "@debug" ||

583 
ßss
.
sub°r
(
pos_À·
, 6) == "@error" ||

584 
ßss
.
sub°r
(
pos_À·
, 8) == "@charset"

585 Ë{ 
ßss
 = 
ödít
 + sass.
sub°r
(
pos_À·
); }

587 i‡(
	gßss
.
sub°r
(
pos_À·
, 1Ë="=" && 
ßss
.
föd_fú°_of
(
SASS2SCSS_FIND_WHITESPACE
,Öos_left) !=Öos_left + 1)

588 { 
ßss
 = 
ödít
 + "@mixö " + sass.
sub°r
(
pos_À·
 + 1); }

589 i‡(
	gßss
.
sub°r
(
pos_À·
, 1Ë="+" && 
ßss
.
föd_fú°_of
(
SASS2SCSS_FIND_WHITESPACE
,Öos_left) !=Öos_left + 1)

590 { 
ßss
 = 
ödít
 + "@ö˛udê" + sass.
sub°r
(
pos_À·
 + 1); }

593 i‡(
	gßss
.
sub°r
(
pos_À·
, 7) == "@import")

596 
size_t
 
pos_imp‹t
 = 
ßss
.
föd_fú°_of
(
SASS2SCSS_FIND_WHITESPACE
, 
pos_À·
 + 7);

597 
size_t
 
	gpos_quŸe
 = 
ßss
.
föd_fú°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
, 
pos_imp‹t
);

599 i‡(
	gßss
.
sub°r
(
pos_quŸe
, 4) != "url(")

602 i‡(
ßss
.
sub°r
(
pos_quŸe
, 1) != "\"" && sass.substr(pos_quote, 1) != "\'")

605 
size_t
 
pos_íd
 = 
ßss
.
föd_œ°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
);

607 i‡(
	gpos_íd
 !
°d
::
°rög
::
≈os
)

610 
ßss
 = sass.
sub°r
(0, 
pos_quŸe
Ë+ "\"" + 
	gßss
.sub°r’os_quŸe, 
pos_íd
 -Öos_quote + 1) + "\"";

617 
	gßss
.
sub°r
(
pos_À·
, 7) != "@return" &&

618 
ßss
.
sub°r
(
pos_À·
, 7) != "@extend" &&

619 
ßss
.
sub°r
(
pos_À·
, 8) != "@include" &&

620 
ßss
.
sub°r
(
pos_À·
, 8) != "@content"

624 
c⁄vîãr
.
£À˘‹
 = 
åue
;

626 
size_t
 
	gpos_cﬁ⁄
 = 
ßss
.
föd_fú°_of
(":", 
pos_À·
);

628 i‡(
	gpos_cﬁ⁄
 !
°d
::
°rög
::
≈os
)

631 i‡(
ßss
[
pos_cﬁ⁄
+1] =' 'Ë
c⁄vîãr
.
£À˘‹
 = 
Ál£
;

632 i‡(
	gßss
[
pos_cﬁ⁄
+1] =' 'Ë
c⁄vîãr
.
£À˘‹
 = 
Ál£
;

638 i‡(
	gödít
.
Àngth
(Ë>
INDENT
(
c⁄vîãr
).length())

641 i‡(
IS_PARSING
(
c⁄vîãr
))

644 i‡(
hasCh¨D©a
(
ßss
))

648 
c⁄vîãr
.
¥›îty
 = 
åue
;

653 i‡(
	gödít
.
Àngth
(Ë> 
INDENT
(
c⁄vîãr
).length())

656 i‡(
IS_PARSING
(
c⁄vîãr
))

659 i‡(
	gc⁄vîãr
.
	g¥›îty
)

662 
	gscss
 +
›íî
(
c⁄vîãr
);

664 
	gc⁄vîãr
.
	gödíts
.
push
("");

666 
INDENT
(
c⁄vîãr
Ë
ödít
;

670 i‡(!
IS_CSS_COMMENT
(
c⁄vîãr
))

674 
	gßss
.
©
(
INDENT
(
c⁄vîãr
).
Àngth
()+0) = '/';

677 
	gßss
.
©
(
INDENT
(
c⁄vîãr
).
Àngth
()+1) = '/';

684 i‡(
	g›í
 ="/*" || 
›í
 == "//")

687 
c⁄vîãr
.
¥›îty
 = 
Ál£
;

689 i‡(
IS_CSS_COMMENT
(
c⁄vîãr
Ë&& 
	g›í
 != "")

691 i‡(!
STRIP_COMMENT
(
c⁄vîãr
Ë&& !
CONVERT_COMMENT
(c⁄vîãr)Ë
scss
 += " */";

695 i‡(
CONVERT_COMMENT
(
c⁄vîãr
))

697 i‡(
IS_PARSING
(
c⁄vîãr
))

698 { 
	gßss
.
©
(
pos_À·
 + 1) = '*'; }

701 
	gc⁄vîãr
.
	gcommít
 = 
›í
;

708 (
IS_COMMENT
(
c⁄vîãr
Ë&& 
STRIP_COMMENT
(converter)) ||

711 (
IS_SRC_COMMENT
(
c⁄vîãr
Ë&& ! 
KEEP_COMMENT
(converter))

715 
	gscss
 +
Êush
(
ßss
, 
c⁄vîãr
);

719 
size_t
 
	gpos_right
 = 
ßss
.
föd_œ°_nŸ_of
(
SASS2SCSS_FIND_WHITESPACE
);

722 i‡(
	gpos_right
 !
°d
::
°rög
::
≈os
)

726 
°d
::
°rög
 
˛o£
 = 
ßss
.
sub°r
(
pos_right
, 1);

729 
	gc⁄vîãr
.
	gcomma
 = 
IS_PARSING
(
c⁄vîãr
Ë&& 
˛o£
 == ",";

730 
	gc⁄vîãr
.
	g£micﬁ⁄
 = 
IS_PARSING
(
c⁄vîãr
Ë&& 
˛o£
 == ";";

734 i‡(
	gpos_right
 > 0)

738 
	g°d
::
°rög
 
˛o£
 = 
ßss
.
sub°r
(
pos_right
 - 1, 2);

740 i‡(
	g˛o£
 ="*/"Ë
c⁄vîãr
.
commít
 = "";

751  
	gscss
;

758 
	g°d
::
i°ªam
& 
ß„Gëlöe
(
°d
::i°ªam& 
is
, std::
°rög
& 
t
)

760 
t
.
˛ór
();

768 
	g°d
::
i°ªam
::
£¡ry
 
£
(
is
, 
åue
);

769 
	g°d
::
°ªambuf
* 
sb
 = 
is
.
rdbuf
();

772 
	gc
 = 
sb
->
sbumpc
();

773 
	gc
) {

775  
is
;

777 if(
sb
->
sgëc
() == '\n')

778 
sb
->
sbumpc
();

779  
	gis
;

780 
	gEOF
:

782 if(
t
.
em±y
())

783 
is
.
£t°©e
(
°d
::
ios
::
eofbô
);

784  
	gis
;

786 
t
 +()
c
;

792 * 
ßss2scss
 (c⁄° 
°d
::
°rög
& 
ßss
, c⁄° 
›ti⁄s
)

796 
	g°d
::
°rög
 
löe
;

797 
	g°d
::
°rög
 
scss
 = "";

798 
	g°d
::
°rög°ªam
 
°ªam
(
ßss
);

801 
c⁄vîãr
 
	gc⁄vîãr
;

803 
	gc⁄vîãr
.
	gcomma
 = 
Ál£
;

804 
	gc⁄vîãr
.
	g¥›îty
 = 
Ál£
;

805 
	gc⁄vîãr
.
	g£À˘‹
 = 
Ál£
;

806 
	gc⁄vîãr
.
	g£micﬁ⁄
 = 
Ál£
;

807 
	gc⁄vîãr
.
	gíd_of_fûe
 = 
Ál£
;

808 
	gc⁄vîãr
.
	gcommít
 = "";

809 
	gc⁄vîãr
.
	gwhôe•a˚
 = "";

810 
	gc⁄vîãr
.
	gödíts
.
push
("");

811 
	gc⁄vîãr
.
	g›ti⁄s
 = 
›ti⁄s
;

814 
ß„Gëlöe
(
°ªam
, 
löe
Ë&& !
	g°ªam
.
eof
())

815 { 
	gscss
 +
¥o˚ss
(
löe
, 
c⁄vîãr
); }

818 
	g°d
::
°rög
 
˛o£r
 = "";

820 
	gc⁄vîãr
.
	gíd_of_fûe
 = 
åue
;

822 
	gscss
 +
¥o˚ss
(
˛o£r
, 
c⁄vîãr
);

826 * 
	gc°r
 = (*Ë
mÆloc
 (
scss
.
Àngth
() + 1);

828 
°r˝y
 (
c°r
, 
scss
.
c_°r
());

830  &
	gc°r
[0];

842 * 
ADDCALL
 
ßss2scss
 (c⁄° * 
ßss
, c⁄° 
›ti⁄s
)

844  
Sass
::
ßss2scss
(
ßss
, 
›ti⁄s
);

848 c⁄° * 
ADDCALL
 
ßss2scss_vîsi⁄
() {

849  
SASS2SCSS_VERSION
;

	@node_modules/node-sass/src/libsass/src/sass_context.cpp

1 
	~"ßss.hµ
"

2 
	~<c°rög
>

3 
	~<°dex˚±
>

4 
	~<s°ªam
>

5 
	~<°rög
>

6 
	~<ve˘‹
>

8 
	~"ßss.h
"

9 
	~"fûe.hµ
"

10 
	~"js⁄.hµ
"

11 
	~"utû.hµ
"

12 
	~"c⁄ãxt.hµ
"

13 
	~"ßss_c⁄ãxt.hµ
"

14 
	~"ßss_fun˘i⁄s.hµ
"

15 
	~"a°_fwd_de˛.hµ
"

16 
	~"îr‹_h™dlög.hµ
"

18 
	#LFEED
 "\n"

	)

21 
usög
 
«me•a˚
 
Sass
;

23 
c›y_›ti⁄s
(
Sass_O±i⁄s
* 
to
, Sass_O±i⁄s* 
‰om
) { *to = *from; }

25 
	#IMPLEMENT_SASS_OPTION_ACCESSOR
(
ty≥
, 
›ti⁄
) \

26 
ty≥
 
ADDCALL
 
ßss_›ti⁄_gë_
##
	`›ti⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
Ë{  o±i⁄s->
›ti⁄
; } \

27 
ADDCALL
 
ßss_›ti⁄_£t_
##
	`›ti⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
ty≥
 
›ti⁄
Ë{ o±i⁄s->›ti⁄ = o±i⁄; }

	)

28 
	#IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(
ty≥
, 
›ti⁄
, 
def
) \

29 
ty≥
 
ADDCALL
 
ßss_›ti⁄_gë_
##
	`›ti⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
Ë{  
	`ß„_°r
(›ti⁄s->
›ti⁄
, 
def
); } \

30 
ADDCALL
 
ßss_›ti⁄_£t_
##
	`›ti⁄
 (
Sass_O±i⁄s
* 
›ti⁄s
, 
ty≥
 
›ti⁄
) \

31 { 
	`‰ì
(
›ti⁄s
->
›ti⁄
); o±i⁄s->›ti⁄ = o±i⁄ || 
def
 ? 
	`ßss_c›y_c_°rög
(›ti⁄ ? o±i⁄ : defË: 0; }

	)

33 
	#IMPLEMENT_SASS_CONTEXT_GETTER
(
ty≥
, 
›ti⁄
) \

34 
ty≥
 
ADDCALL
 
ßss_c⁄ãxt_gë_
##
	`›ti⁄
 (
Sass_C⁄ãxt
* 
˘x
Ë{  ctx->
›ti⁄
; }

	)

35 
	#IMPLEMENT_SASS_CONTEXT_TAKER
(
ty≥
, 
›ti⁄
) \

36 
ty≥
 
ßss_c⁄ãxt_èke_
##
	`›ti⁄
 (
Sass_C⁄ãxt
* 
˘x
) \

37 { 
ty≥
 
foo
 = 
˘x
->
›ti⁄
; ctx->›ti⁄ = 0;  foo; }

	)

39 
h™dÀ_îr‹
(
Sass_C⁄ãxt
* 
c_˘x
) {

40 
åy
 {

41 
throw
;

43 
ˇtch
 (
Ex˚±i⁄
::
Ba£
& 
e
) {

44 
°d
::
°rög°ªam
 
msg_°ªam
;

45 
°d
::
°rög
 
cwd
(
Sass
::
Fûe
::
gë_cwd
());

47 
°d
::
°rög
 
msg_¥efix
(
e
.
îπy≥
());

48 
boﬁ
 
gŸ_√wlöe
 = 
Ál£
;

49 
msg_°ªam
 << 
msg_¥efix
 << ": ";

50 c⁄° * 
msg
 = 
e
.
wh©
();

51 
msg
 && *msg) {

52 i‡(*
msg
 == '\r') {

53 
gŸ_√wlöe
 = 
åue
;

54 } i‡(*
msg
 == '\n') {

55 
gŸ_√wlöe
 = 
åue
;

56 } i‡(
gŸ_√wlöe
) {

57 
msg_°ªam
 << 
°d
::
°rög
(
msg_¥efix
.
size
() + 2, ' ');

58 
gŸ_√wlöe
 = 
Ál£
;

60 
msg_°ªam
 << *
msg
;

61 ++ 
msg
;

63 i‡(!
gŸ_√wlöe
Ë
msg_°ªam
 << "\n";

64 i‡(
e
.
imp‹t_°ack
) {

65 
size_t
 
i
 = 1; i < 
e
.
imp‹t_°ack
->
size
() - 1; ++i) {

66 
°d
::
°rög
 
∑th
((*
e
.
imp‹t_°ack
)[
i
]->
imp_∑th
);

67 
°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
∑th
, 
cwd
, cwd));

68 
msg_°ªam
 << 
°d
::
°rög
(
msg_¥efix
.
size
() + 2, ' ');

69 
msg_°ªam
 << (
i
 == 1 ? " onÜine " : " fromÜine ");

70 
msg_°ªam
 << 
e
.
p°©e
.
löe
+1 << " o‡" << 
ªl_∑th
 << "\n";

73 
°d
::
°rög
 
ªl_∑th
(
Sass
::
Fûe
::
abs2ªl
(
e
.
p°©e
.
∑th
, 
cwd
, cwd));

74 
msg_°ªam
 << 
°d
::
°rög
(
msg_¥efix
.
size
() + 2, ' ');

75 
msg_°ªam
 << " o¿löê" << 
e
.
p°©e
.
löe
+1 << " o‡" << 
ªl_∑th
 << "\n";

79 i‡(
e
.
p°©e
.
löe
 !
°d
::
°rög
::
≈os
 &&É.p°©e.
cﬁumn
 != std::string::npos) {

80 
size_t
 
löe
 = 
e
.
p°©e
.line;

81 c⁄° * 
löe_beg
 = 
e
.
p°©e
.
§c
;

82 
löe_beg
 && *löe_beg && 
löe
) {

83 i‡(*
löe_beg
 ='\n'Ë-- 
löe
;

84 ++ 
löe_beg
;

86 c⁄° * 
löe_íd
 = 
löe_beg
;

87 
löe_íd
 && *line_end && *line_end != '\n') {

88 i‡(*
löe_íd
 == '\n') ;

89 i‡(*
löe_íd
 == '\r') ;

90 
löe_íd
 ++;

92 
size_t
 
max_À·
 = 42; size_à
max_right
 = 78;

93 
size_t
 
move_ö
 = 
e
.
p°©e
.
cﬁumn
 > 
max_À·
 ?É.pstate.column - max_left : 0;

94 
size_t
 
sh‹ãn
 = (
löe_íd
 - 
löe_beg
Ë- 
move_ö
 > 
max_right
 ?

95 (
löe_íd
 - 
löe_beg
Ë- 
move_ö
 - 
max_right
 : 0;

96 
msg_°ªam
 << ">> " << 
°d
::
°rög
(
löe_beg
 + 
move_ö
, 
löe_íd
 - 
sh‹ãn
) << "\n";

97 
msg_°ªam
 << " " << 
°d
::
°rög
(
e
.
p°©e
.
cﬁumn
 - 
move_ö
, '-') << "^\n";

100 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

101 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(1));

102 
js⁄_≠≥nd_membî
(
js⁄_îr
, "fûe", 
js⁄_mk°rög
(
e
.
p°©e
.
∑th
));

103 
js⁄_≠≥nd_membî
(
js⁄_îr
, "löe", 
js⁄_mknumbî
(()(
e
.
p°©e
.
löe
+1)));

104 
js⁄_≠≥nd_membî
(
js⁄_îr
, "cﬁumn", 
js⁄_mknumbî
(()(
e
.
p°©e
.
cﬁumn
+1)));

105 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
(
e
.
wh©
()));

106 
js⁄_≠≥nd_membî
(
js⁄_îr
, "f‹m©ãd", 
js⁄_mk°rög
(
msg_°ªam
.
°r
().
c_°r
()));

108 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

109 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

110 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
(
e
.
wh©
());

111 
c_˘x
->
îr‹_°©us
 = 1;

112 
c_˘x
->
îr‹_fûe
 = 
ßss_c›y_c_°rög
(
e
.
p°©e
.
∑th
);

113 
c_˘x
->
îr‹_löe
 = 
e
.
p°©e
.
löe
+1;

114 
c_˘x
->
îr‹_cﬁumn
 = 
e
.
p°©e
.
cﬁumn
+1;

115 
c_˘x
->
îr‹_§c
 = 
e
.
p°©e
.
§c
;

116 
c_˘x
->
ouçut_°rög
 = 0;

117 
c_˘x
->
sour˚_m≠_°rög
 = 0;

118 
js⁄_dñëe
(
js⁄_îr
);

120 
ˇtch
 (
°d
::
bad_Æloc
& 
ba
) {

121 
°d
::
°rög°ªam
 
msg_°ªam
;

122 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

123 
msg_°ªam
 << "U«bÀÅÿÆloˇã mem‹y: " << 
ba
.
wh©
(Ë<< 
°d
::
ídl
;

124 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(2));

125 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
(
ba
.
wh©
()));

126 
js⁄_≠≥nd_membî
(
js⁄_îr
, "f‹m©ãd", 
js⁄_mk°rög
(
msg_°ªam
.
°r
().
c_°r
()));

127 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

128 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

129 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
(
ba
.
wh©
());

130 
c_˘x
->
îr‹_°©us
 = 2;

131 
c_˘x
->
ouçut_°rög
 = 0;

132 
c_˘x
->
sour˚_m≠_°rög
 = 0;

133 
js⁄_dñëe
(
js⁄_îr
);

135 
ˇtch
 (
°d
::
ex˚±i⁄
& 
e
) {

136 
°d
::
°rög°ªam
 
msg_°ªam
;

137 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

138 
msg_°ªam
 << "I¡î«»Eº‹: " << 
e
.
wh©
(Ë<< 
°d
::
ídl
;

139 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(3));

140 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
(
e
.
wh©
()));

141 
js⁄_≠≥nd_membî
(
js⁄_îr
, "f‹m©ãd", 
js⁄_mk°rög
(
msg_°ªam
.
°r
().
c_°r
()));

142 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

143 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

144 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
(
e
.
wh©
());

145 
c_˘x
->
îr‹_°©us
 = 3;

146 
c_˘x
->
ouçut_°rög
 = 0;

147 
c_˘x
->
sour˚_m≠_°rög
 = 0;

148 
js⁄_dñëe
(
js⁄_îr
);

150 
ˇtch
 (
°d
::
°rög
& 
e
) {

151 
°d
::
°rög°ªam
 
msg_°ªam
;

152 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

153 
msg_°ªam
 << "I¡î«»Eº‹: " << 
e
 << 
°d
::
ídl
;

154 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(4));

155 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
(
e
.
c_°r
()));

156 
js⁄_≠≥nd_membî
(
js⁄_îr
, "f‹m©ãd", 
js⁄_mk°rög
(
msg_°ªam
.
°r
().
c_°r
()));

157 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

158 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

159 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
(
e
.
c_°r
());

160 
c_˘x
->
îr‹_°©us
 = 4;

161 
c_˘x
->
ouçut_°rög
 = 0;

162 
c_˘x
->
sour˚_m≠_°rög
 = 0;

163 
js⁄_dñëe
(
js⁄_îr
);

165 
ˇtch
 (c⁄° * 
e
) {

166 
°d
::
°rög°ªam
 
msg_°ªam
;

167 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

168 
msg_°ªam
 << "I¡î«»Eº‹: " << 
e
 << 
°d
::
ídl
;

169 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(4));

170 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
(
e
));

171 
js⁄_≠≥nd_membî
(
js⁄_îr
, "f‹m©ãd", 
js⁄_mk°rög
(
msg_°ªam
.
°r
().
c_°r
()));

172 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

173 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

174 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
(
e
);

175 
c_˘x
->
îr‹_°©us
 = 4;

176 
c_˘x
->
ouçut_°rög
 = 0;

177 
c_˘x
->
sour˚_m≠_°rög
 = 0;

178 
js⁄_dñëe
(
js⁄_îr
);

180 
ˇtch
 (...) {

181 
°d
::
°rög°ªam
 
msg_°ªam
;

182 
Js⁄Node
* 
js⁄_îr
 = 
js⁄_mkobje˘
();

183 
msg_°ªam
 << "Unknow¿îr‹ occuºed" << 
°d
::
ídl
;

184 
js⁄_≠≥nd_membî
(
js⁄_îr
, "°©us", 
js⁄_mknumbî
(5));

185 
js⁄_≠≥nd_membî
(
js⁄_îr
, "mesßge", 
js⁄_mk°rög
("unknown"));

186 
åy
 { 
c_˘x
->
îr‹_js⁄
 = 
js⁄_°rögify
(
js⁄_îr
, " "); } 
ˇtch
(...) {}

187 
c_˘x
->
îr‹_mesßge
 = 
ßss_c›y_c_°rög
(
msg_°ªam
.
°r
().
c_°r
());

188 
c_˘x
->
îr‹_ãxt
 = 
ßss_c›y_c_°rög
("unknown");

189 
c_˘x
->
îr‹_°©us
 = 5;

190 
c_˘x
->
ouçut_°rög
 = 0;

191 
c_˘x
->
sour˚_m≠_°rög
 = 0;

192 
js⁄_dñëe
(
js⁄_îr
);

194  
c_˘x
->
îr‹_°©us
;

199 
h™dÀ_îr‹s
(
Sass_C⁄ãxt
* 
c_˘x
) {

200 
åy
 {  
h™dÀ_îr‹
(
c_˘x
); }

201 
ˇtch
 (...Ë{  
h™dÀ_îr‹
(
c_˘x
); }

202  
c_˘x
->
îr‹_°©us
;

206 
Sass_Compûî
* 
ßss_¥ï¨e_c⁄ãxt
 (
Sass_C⁄ãxt
* 
c_˘x
, 
C⁄ãxt
* 
˝p_˘x
Ë
throw
()

208 
åy
 {

210 i‡(
c_˘x
->
c_fun˘i⁄s
) {

211 autÿ
this_func_d©a
 = 
c_˘x
->
c_fun˘i⁄s
;

212 
this_func_d©a
 && *this_func_data) {

213 
˝p_˘x
->
add_c_fun˘i⁄
(*
this_func_d©a
);

214 ++
this_func_d©a
;

219 i‡(
c_˘x
->
c_hódîs
) {

220 autÿ
this_hód_d©a
 = 
c_˘x
->
c_hódîs
;

221 
this_hód_d©a
 && *this_head_data) {

222 
˝p_˘x
->
add_c_hódî
(*
this_hód_d©a
);

223 ++
this_hód_d©a
;

228 i‡(
c_˘x
->
c_imp‹ãrs
) {

229 autÿ
this_imp_d©a
 = 
c_˘x
->
c_imp‹ãrs
;

230 
this_imp_d©a
 && *this_imp_data) {

231 
˝p_˘x
->
add_c_imp‹ãr
(*
this_imp_d©a
);

232 ++
this_imp_d©a
;

237 
c_˘x
->
îr‹_js⁄
 = 0;

238 
c_˘x
->
îr‹_ãxt
 = 0;

239 
c_˘x
->
îr‹_mesßge
 = 0;

240 
c_˘x
->
îr‹_°©us
 = 0;

242 
c_˘x
->
îr‹_§c
 = 0;

243 
c_˘x
->
îr‹_fûe
 = 0;

244 
c_˘x
->
îr‹_löe
 = 
°d
::
°rög
::
≈os
;

245 
c_˘x
->
îr‹_cﬁumn
 = 
°d
::
°rög
::
≈os
;

248 
Sass_Compûî
* 
compûî
 = (Sass_Compûî*Ë
ˇŒoc
(1, (Sass_Compiler));

249 
compûî
->
°©e
 = 
SASS_COMPILER_CREATED
;

252 
compûî
->
c_˘x
 = c_ctx;

253 
compûî
->
˝p_˘x
 = cpp_ctx;

254 
˝p_˘x
->
c_compûî
 = 
compûî
;

257  
compûî
;

261 
ˇtch
 (...Ë{ 
h™dÀ_îr‹s
(
c_˘x
); }

268 
Block
* 
ßss_∑r£_block
 (
Sass_Compûî
* 
compûî
Ë
throw
()

272 i‡(
compûî
 == 0)  0;

274 
C⁄ãxt
* 
˝p_˘x
 = 
compûî
->cpp_ctx;

275 
Sass_C⁄ãxt
* 
c_˘x
 = 
compûî
->c_ctx;

277 
compûî
->
˝p_˘x
->
c_compûî
 = compiler;

278 
compûî
->
°©e
 = 
SASS_COMPILER_PARSED
;

280 
åy
 {

283 
°d
::
°rög
 
öput_∑th
 = 
ß„_°r
(
c_˘x
->input_path);

284 
°d
::
°rög
 
ouçut_∑th
 = 
ß„_°r
(
c_˘x
->output_path);

287 
Block
* 
roŸ
 = 0;

291 
boﬁ
 
skù
 = 
c_˘x
->
ty≥
 =
SASS_CONTEXT_DATA
;

294 
roŸ
 = 
˝p_˘x
->
∑r£
();

296 i‡(!
roŸ
)  0;

302 
size_t
 
hódîs
 = 
˝p_˘x
->
hód_imp‹ts
;

305 i‡(
c›y_°rögs
(
˝p_˘x
->
gë_ö˛uded_fûes
(
skù
, 
hódîs
), &
c_˘x
->
ö˛uded_fûes
Ë=
NULL
)

306 
throw
(
°d
::
bad_Æloc
());

309  
roŸ
;

313 
ˇtch
 (...Ë{ 
h™dÀ_îr‹s
(
c_˘x
); }

321 
ßss_compûe_c⁄ãxt
 (
Sass_C⁄ãxt
* 
c_˘x
, 
C⁄ãxt
* 
˝p_˘x
)

325 
Sass_Compûî
* 
compûî
 = 
ßss_¥ï¨e_c⁄ãxt
(
c_˘x
, 
˝p_˘x
);

327 
åy
 {

329 
ßss_compûî_∑r£
(
compûî
);

330 
ßss_compûî_execuã
(
compûî
);

333 
ˇtch
 (...Ë{ 
h™dÀ_îr‹s
(
c_˘x
); }

335 
ßss_dñëe_compûî
(
compûî
);

337  
c_˘x
->
îr‹_°©us
;

340 
ölöe
 
öô_›ti⁄s
 (
Sass_O±i⁄s
* 
›ti⁄s
)

342 
›ti⁄s
->
¥ecisi⁄
 = 5;

343 
›ti⁄s
->
ödít
 = " ";

344 
›ti⁄s
->
löe„ed
 = 
LFEED
;

347 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_make_›ti⁄s
 ()

349 
Sass_O±i⁄s
* 
›ti⁄s
 = (Sass_O±i⁄s*Ë
ˇŒoc
(1, (Sass_Options));

350 i‡(
›ti⁄s
 =0Ë{ 
°d
::
˚º
 << "Eº‹áŒoˇtög mem‹y f‹ o±i⁄s" << std::
ídl
;  0; }

351 
öô_›ti⁄s
(
›ti⁄s
);

352  
›ti⁄s
;

355 
Sass_Fûe_C⁄ãxt
* 
ADDCALL
 
ßss_make_fûe_c⁄ãxt
(c⁄° * 
öput_∑th
)

357 
Sass_Fûe_C⁄ãxt
* 
˘x
 = (Sass_Fûe_C⁄ãxt*Ë
ˇŒoc
(1, (Sass_File_Context));

358 i‡(
˘x
 =0Ë{ 
°d
::
˚º
 << "Eº‹áŒoˇtög mem‹y f‹ fûêc⁄ãxt" << std::
ídl
;  0; }

359 
˘x
->
ty≥
 = 
SASS_CONTEXT_FILE
;

360 
öô_›ti⁄s
(
˘x
);

361 
åy
 {

362 i‡(
öput_∑th
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("File context created withoután inputÖath")); }

363 i‡(*
öput_∑th
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("File context created withÉmpty inputÖath")); }

364 
ßss_›ti⁄_£t_öput_∑th
(
˘x
, 
öput_∑th
);

365 } 
ˇtch
 (...) {

366 
h™dÀ_îr‹s
(
˘x
);

368  
˘x
;

371 
Sass_D©a_C⁄ãxt
* 
ADDCALL
 
ßss_make_d©a_c⁄ãxt
(* 
sour˚_°rög
)

373 
Sass_D©a_C⁄ãxt
* 
˘x
 = (Sass_D©a_C⁄ãxt*Ë
ˇŒoc
(1, (Sass_Data_Context));

374 i‡(
˘x
 =0Ë{ 
°d
::
˚º
 << "Eº‹áŒoˇtög mem‹y f‹ d©®c⁄ãxt" << std::
ídl
;  0; }

375 
˘x
->
ty≥
 = 
SASS_CONTEXT_DATA
;

376 
öô_›ti⁄s
(
˘x
);

377 
åy
 {

378 i‡(
sour˚_°rög
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("Data context created withoutá source string")); }

379 i‡(*
sour˚_°rög
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("Data context created withÉmpty source string")); }

380 
˘x
->
sour˚_°rög
 = source_string;

381 } 
ˇtch
 (...) {

382 
h™dÀ_îr‹s
(
˘x
);

384  
˘x
;

387 
Sass_Compûî
* 
ADDCALL
 
ßss_make_d©a_compûî
 (
Sass_D©a_C⁄ãxt
* 
d©a_˘x
)

389 i‡(
d©a_˘x
 == 0)  0;

390 
C⁄ãxt
* 
˝p_˘x
 = 
√w
 
D©a_C⁄ãxt
(*
d©a_˘x
);

391  
ßss_¥ï¨e_c⁄ãxt
(
d©a_˘x
, 
˝p_˘x
);

394 
Sass_Compûî
* 
ADDCALL
 
ßss_make_fûe_compûî
 (
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
)

396 i‡(
fûe_˘x
 == 0)  0;

397 
C⁄ãxt
* 
˝p_˘x
 = 
√w
 
Fûe_C⁄ãxt
(*
fûe_˘x
);

398  
ßss_¥ï¨e_c⁄ãxt
(
fûe_˘x
, 
˝p_˘x
);

401 
ADDCALL
 
ßss_compûe_d©a_c⁄ãxt
(
Sass_D©a_C⁄ãxt
* 
d©a_˘x
)

403 i‡(
d©a_˘x
 == 0)  1;

404 i‡(
d©a_˘x
->
îr‹_°©us
)

405  
d©a_˘x
->
îr‹_°©us
;

406 
åy
 {

407 i‡(
d©a_˘x
->
sour˚_°rög
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("Data context hasÇo source string")); }

411 
ˇtch
 (...Ë{  
h™dÀ_îr‹s
(
d©a_˘x
) | 1; }

412 
C⁄ãxt
* 
˝p_˘x
 = 
√w
 
D©a_C⁄ãxt
(*
d©a_˘x
);

413  
ßss_compûe_c⁄ãxt
(
d©a_˘x
, 
˝p_˘x
);

416 
ADDCALL
 
ßss_compûe_fûe_c⁄ãxt
(
Sass_Fûe_C⁄ãxt
* 
fûe_˘x
)

418 i‡(
fûe_˘x
 == 0)  1;

419 i‡(
fûe_˘x
->
îr‹_°©us
)

420  
fûe_˘x
->
îr‹_°©us
;

421 
åy
 {

422 i‡(
fûe_˘x
->
öput_∑th
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("File context hasÇo inputÖath")); }

423 i‡(*
fûe_˘x
->
öput_∑th
 =0Ë{ 
throw
(
°d
::
ru¡ime_îr‹
("File context hasÉmpty inputÖath")); }

425 
ˇtch
 (...Ë{  
h™dÀ_îr‹s
(
fûe_˘x
) | 1; }

426 
C⁄ãxt
* 
˝p_˘x
 = 
√w
 
Fûe_C⁄ãxt
(*
fûe_˘x
);

427  
ßss_compûe_c⁄ãxt
(
fûe_˘x
, 
˝p_˘x
);

430 
ADDCALL
 
ßss_compûî_∑r£
(
Sass_Compûî
* 
compûî
)

432 i‡(
compûî
 == 0)  1;

433 i‡(
compûî
->
°©e
 =
SASS_COMPILER_PARSED
)  0;

434 i‡(
compûî
->
°©e
 !
SASS_COMPILER_CREATED
)  -1;

435 i‡(
compûî
->
c_˘x
 =
NULL
)  1;

436 i‡(
compûî
->
˝p_˘x
 =
NULL
)  1;

437 i‡(
compûî
->
c_˘x
->
îr‹_°©us
)

438  
compûî
->
c_˘x
->
îr‹_°©us
;

440 
compûî
->
roŸ
 = 
ßss_∑r£_block
(compiler);

445 
ADDCALL
 
ßss_compûî_execuã
(
Sass_Compûî
* 
compûî
)

447 i‡(
compûî
 == 0)  1;

448 i‡(
compûî
->
°©e
 =
SASS_COMPILER_EXECUTED
)  0;

449 i‡(
compûî
->
°©e
 !
SASS_COMPILER_PARSED
)  -1;

450 i‡(
compûî
->
c_˘x
 =
NULL
)  1;

451 i‡(
compûî
->
˝p_˘x
 =
NULL
)  1;

452 i‡(
compûî
->
roŸ
 =
NULL
)  1;

453 i‡(
compûî
->
c_˘x
->
îr‹_°©us
)

454  
compûî
->
c_˘x
->
îr‹_°©us
;

455 
compûî
->
°©e
 = 
SASS_COMPILER_EXECUTED
;

456 
C⁄ãxt
* 
˝p_˘x
 = 
compûî
->cpp_ctx;

457 
Block
* 
roŸ
 = 
compûî
->root;

459 
åy
 { 
compûî
->
c_˘x
->
ouçut_°rög
 = 
˝p_˘x
->
ªndî
(
roŸ
); }

461 
ˇtch
 (...Ë{  
h™dÀ_îr‹s
(
compûî
->
c_˘x
) | 1; }

463 
compûî
->
c_˘x
->
sour˚_m≠_°rög
 = 
˝p_˘x
->
ªndî_§cm≠
();

469 
ßss_˛ór_›ti⁄s
 (
Sass_O±i⁄s
* 
›ti⁄s
)

471 i‡(
›ti⁄s
 == 0) ;

473 i‡(
›ti⁄s
->
c_fun˘i⁄s
) {

474 
Sass_Fun˘i⁄_Li°
 
this_func_d©a
 = 
›ti⁄s
->
c_fun˘i⁄s
;

475 
this_func_d©a
 && *this_func_data) {

476 
‰ì
(*
this_func_d©a
);

477 ++
this_func_d©a
;

481 i‡(
›ti⁄s
->
c_hódîs
) {

482 
Sass_Imp‹ãr_Li°
 
this_hód_d©a
 = 
›ti⁄s
->
c_hódîs
;

483 
this_hód_d©a
 && *this_head_data) {

484 
‰ì
(*
this_hód_d©a
);

485 ++
this_hód_d©a
;

489 i‡(
›ti⁄s
->
c_imp‹ãrs
) {

490 
Sass_Imp‹ãr_Li°
 
this_imp_d©a
 = 
›ti⁄s
->
c_imp‹ãrs
;

491 
this_imp_d©a
 && *this_imp_data) {

492 
‰ì
(*
this_imp_d©a
);

493 ++
this_imp_d©a
;

497 i‡(
›ti⁄s
->
∂ugö_∑ths
) {

498 
°rög_li°
* 
cur
;

499 
°rög_li°
* 
√xt
;

500 
cur
 = 
›ti⁄s
->
∂ugö_∑ths
;

501 
cur
) {

502 
√xt
 = 
cur
->next;

503 
‰ì
(
cur
->
°rög
);

504 
‰ì
(
cur
);

505 
cur
 = 
√xt
;

509 i‡(
›ti⁄s
->
ö˛ude_∑ths
) {

510 
°rög_li°
* 
cur
;

511 
°rög_li°
* 
√xt
;

512 
cur
 = 
›ti⁄s
->
ö˛ude_∑ths
;

513 
cur
) {

514 
√xt
 = 
cur
->next;

515 
‰ì
(
cur
->
°rög
);

516 
‰ì
(
cur
);

517 
cur
 = 
√xt
;

521 
‰ì
(
›ti⁄s
->
c_fun˘i⁄s
);

523 
‰ì
(
›ti⁄s
->
c_imp‹ãrs
);

524 
‰ì
(
›ti⁄s
->
c_hódîs
);

526 
›ti⁄s
->
c_fun˘i⁄s
 = 0;

527 
›ti⁄s
->
c_imp‹ãrs
 = 0;

528 
›ti⁄s
->
c_hódîs
 = 0;

529 
›ti⁄s
->
∂ugö_∑ths
 = 0;

530 
›ti⁄s
->
ö˛ude_∑ths
 = 0;

535 
ßss_˛ór_c⁄ãxt
 (
Sass_C⁄ãxt
* 
˘x
)

537 i‡(
˘x
 == 0) ;

539 i‡(
˘x
->
ouçut_°rög
Ë
‰ì
(ctx->output_string);

540 i‡(
˘x
->
sour˚_m≠_°rög
Ë
‰ì
(ctx->source_map_string);

541 i‡(
˘x
->
îr‹_mesßge
Ë
‰ì
(ctx->error_message);

542 i‡(
˘x
->
îr‹_ãxt
Ë
‰ì
(ctx->error_text);

543 i‡(
˘x
->
îr‹_js⁄
Ë
‰ì
(ctx->error_json);

544 i‡(
˘x
->
îr‹_fûe
Ë
‰ì
(ctx->error_file);

545 i‡(
˘x
->
öput_∑th
Ë
‰ì
(ctx->input_path);

546 i‡(
˘x
->
ouçut_∑th
Ë
‰ì
(ctx->output_path);

547 i‡(
˘x
->
∂ugö_∑th
Ë
‰ì
(ctx->plugin_path);

548 i‡(
˘x
->
ö˛ude_∑th
Ë
‰ì
(ctx->include_path);

549 i‡(
˘x
->
sour˚_m≠_fûe
Ë
‰ì
(ctx->source_map_file);

550 i‡(
˘x
->
sour˚_m≠_roŸ
Ë
‰ì
(ctx->source_map_root);

551 
‰ì_°rög_¨øy
(
˘x
->
ö˛uded_fûes
);

553 
˘x
->
ouçut_°rög
 = 0;

554 
˘x
->
sour˚_m≠_°rög
 = 0;

555 
˘x
->
îr‹_mesßge
 = 0;

556 
˘x
->
îr‹_ãxt
 = 0;

557 
˘x
->
îr‹_js⁄
 = 0;

558 
˘x
->
îr‹_fûe
 = 0;

559 
˘x
->
öput_∑th
 = 0;

560 
˘x
->
ouçut_∑th
 = 0;

561 
˘x
->
ö˛ude_∑th
 = 0;

562 
˘x
->
sour˚_m≠_fûe
 = 0;

563 
˘x
->
sour˚_m≠_roŸ
 = 0;

564 
˘x
->
ö˛uded_fûes
 = 0;

566 
ßss_˛ór_›ti⁄s
(
˘x
);

569 
ADDCALL
 
ßss_dñëe_compûî
 (
Sass_Compûî
* 
compûî
)

571 i‡(
compûî
 == 0) {

574 
C⁄ãxt
* 
˝p_˘x
 = 
compûî
->cpp_ctx;

575 i‡(
˝p_˘x
Ë
dñëe
(cpp_ctx);

576 
compûî
->
˝p_˘x
 = 0;

577 
‰ì
(
compûî
);

581 
ADDCALL
 
ßss_dñëe_fûe_c⁄ãxt
 (
Sass_Fûe_C⁄ãxt
* 
˘x
)

584 
ßss_˛ór_c⁄ãxt
(
˘x
); 
‰ì
(ctx);

587 
ADDCALL
 
ßss_dñëe_d©a_c⁄ãxt
 (
Sass_D©a_C⁄ãxt
* 
˘x
)

591 i‡(
˘x
->
sour˚_°rög
Ë
‰ì
(ctx->source_string);

593 
ßss_˛ór_c⁄ãxt
(
˘x
); 
‰ì
(ctx);

597 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_fûe_c⁄ãxt_gë_c⁄ãxt
(
Sass_Fûe_C⁄ãxt
* 
˘x
) {  ctx; }

598 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_d©a_c⁄ãxt_gë_c⁄ãxt
(
Sass_D©a_C⁄ãxt
* 
˘x
) {  ctx; }

601 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_c⁄ãxt_gë_›ti⁄s
(
Sass_C⁄ãxt
* 
˘x
) {  ctx; }

602 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_fûe_c⁄ãxt_gë_›ti⁄s
(
Sass_Fûe_C⁄ãxt
* 
˘x
) {  ctx; }

603 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_d©a_c⁄ãxt_gë_›ti⁄s
(
Sass_D©a_C⁄ãxt
* 
˘x
) {  ctx; }

604 
ADDCALL
 
ßss_fûe_c⁄ãxt_£t_›ti⁄s
 (
Sass_Fûe_C⁄ãxt
* 
˘x
, 
Sass_O±i⁄s
* 
›t
Ë{ 
c›y_›ti⁄s
(ctx, opt); }

605 
ADDCALL
 
ßss_d©a_c⁄ãxt_£t_›ti⁄s
 (
Sass_D©a_C⁄ãxt
* 
˘x
, 
Sass_O±i⁄s
* 
›t
Ë{ 
c›y_›ti⁄s
(ctx, opt); }

608 
Sass_Compûî_Sèã
 
ADDCALL
 
ßss_compûî_gë_°©e
(
Sass_Compûî
* 
compûî
Ë{  compûî->
°©e
; }

609 
Sass_C⁄ãxt
* 
ADDCALL
 
ßss_compûî_gë_c⁄ãxt
(
Sass_Compûî
* 
compûî
Ë{  compûî->
c_˘x
; }

610 
Sass_O±i⁄s
* 
ADDCALL
 
ßss_compûî_gë_›ti⁄s
(
Sass_Compûî
* 
compûî
Ë{  compûî->
c_˘x
; }

612 
size_t
 
ADDCALL
 
ßss_compûî_gë_imp‹t_°ack_size
(
Sass_Compûî
* 
compûî
Ë{  compûî->
˝p_˘x
->
imp‹t_°ack
.
size
(); }

613 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_compûî_gë_œ°_imp‹t
(
Sass_Compûî
* 
compûî
Ë{  compûî->
˝p_˘x
->
imp‹t_°ack
.
back
(); }

614 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_compûî_gë_imp‹t_íåy
(
Sass_Compûî
* 
compûî
, 
size_t
 
idx
Ë{  compûî->
˝p_˘x
->
imp‹t_°ack
[idx]; }

617 
size_t
 
ADDCALL
 
ßss_c⁄ãxt_gë_ö˛uded_fûes_size
 (
Sass_C⁄ãxt
* 
˘x
)

618 { 
size_t
 
l
 = 0;áutÿ
i
 = 
˘x
->
ö˛uded_fûes
; i && *i) { ++i; ++l; } Ü; }

621 
IMPLEMENT_SASS_OPTION_ACCESSOR
(, 
¥ecisi⁄
);

622 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
Sass_Ouçut_StyÀ
, 
ouçut_°yÀ
);

623 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
boﬁ
, 
sour˚_commíts
);

624 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
boﬁ
, 
sour˚_m≠_embed
);

625 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
boﬁ
, 
sour˚_m≠_c⁄ã¡s
);

626 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
boﬁ
, 
omô_sour˚_m≠_uæ
);

627 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
boﬁ
, 
is_ödíãd_sy¡ax_§c
);

628 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
Sass_Fun˘i⁄_Li°
, 
c_fun˘i⁄s
);

629 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
Sass_Imp‹ãr_Li°
, 
c_imp‹ãrs
);

630 
IMPLEMENT_SASS_OPTION_ACCESSOR
(
Sass_Imp‹ãr_Li°
, 
c_hódîs
);

631 
IMPLEMENT_SASS_OPTION_ACCESSOR
(c⁄° *, 
ödít
);

632 
IMPLEMENT_SASS_OPTION_ACCESSOR
(c⁄° *, 
löe„ed
);

633 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
öput_∑th
, 0);

634 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
ouçut_∑th
, 0);

635 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
∂ugö_∑th
, 0);

636 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
ö˛ude_∑th
, 0);

637 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
sour˚_m≠_fûe
, 0);

638 
IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
(c⁄° *, 
sour˚_m≠_roŸ
, 0);

641 
IMPLEMENT_SASS_CONTEXT_GETTER
(, 
îr‹_°©us
);

642 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
îr‹_js⁄
);

643 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
îr‹_mesßge
);

644 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
îr‹_ãxt
);

645 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
îr‹_fûe
);

646 
IMPLEMENT_SASS_CONTEXT_GETTER
(
size_t
, 
îr‹_löe
);

647 
IMPLEMENT_SASS_CONTEXT_GETTER
(
size_t
, 
îr‹_cﬁumn
);

648 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
îr‹_§c
);

649 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
ouçut_°rög
);

650 
IMPLEMENT_SASS_CONTEXT_GETTER
(c⁄° *, 
sour˚_m≠_°rög
);

651 
IMPLEMENT_SASS_CONTEXT_GETTER
(**, 
ö˛uded_fûes
);

654 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
îr‹_js⁄
);

655 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
îr‹_mesßge
);

656 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
îr‹_ãxt
);

657 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
îr‹_fûe
);

658 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
ouçut_°rög
);

659 
IMPLEMENT_SASS_CONTEXT_TAKER
(*, 
sour˚_m≠_°rög
);

660 
IMPLEMENT_SASS_CONTEXT_TAKER
(**, 
ö˛uded_fûes
);

663 
ADDCALL
 
ßss_›ti⁄_push_ö˛ude_∑th
(
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
∑th
)

666 
°rög_li°
* 
ö˛ude_∑th
 = (°rög_li°*Ë
ˇŒoc
(1, (string_list));

667 i‡(
ö˛ude_∑th
 == 0) ;

668 
ö˛ude_∑th
->
°rög
 = 
∑th
 ? 
ßss_c›y_c_°rög
(path) : 0;

669 
°rög_li°
* 
œ°
 = 
›ti⁄s
->
ö˛ude_∑ths
;

670 i‡(!
›ti⁄s
->
ö˛ude_∑ths
) {

671 
›ti⁄s
->
ö˛ude_∑ths
 = 
ö˛ude_∑th
;

673 
œ°
->
√xt
)

674 
œ°
 =Üa°->
√xt
;

675 
œ°
->
√xt
 = 
ö˛ude_∑th
;

681 
ADDCALL
 
ßss_›ti⁄_push_∂ugö_∑th
(
Sass_O±i⁄s
* 
›ti⁄s
, c⁄° * 
∑th
)

684 
°rög_li°
* 
∂ugö_∑th
 = (°rög_li°*Ë
ˇŒoc
(1, (string_list));

685 i‡(
∂ugö_∑th
 == 0) ;

686 
∂ugö_∑th
->
°rög
 = 
∑th
 ? 
ßss_c›y_c_°rög
(path) : 0;

687 
°rög_li°
* 
œ°
 = 
›ti⁄s
->
∂ugö_∑ths
;

688 i‡(!
›ti⁄s
->
∂ugö_∑ths
) {

689 
›ti⁄s
->
∂ugö_∑ths
 = 
∂ugö_∑th
;

691 
œ°
->
√xt
)

692 
œ°
 =Üa°->
√xt
;

693 
œ°
->
√xt
 = 
∂ugö_∑th
;

	@node_modules/node-sass/src/libsass/src/sass_context.hpp

1 #i‚de‡
SASS_SASS_CONTEXT_H


2 
	#SASS_SASS_CONTEXT_H


	)

4 
	~"ßss.h
"

5 
	~"ßss.hµ
"

6 
	~"c⁄ãxt.hµ
"

7 
	~"a°_fwd_de˛.hµ
"

10 
	gSass_O±i⁄s
 : 
Sass_Ouçut_O±i⁄s
 {

13 
boﬁ
 
sour˚_m≠_embed
;

16 
boﬁ
 
	gsour˚_m≠_c⁄ã¡s
;

19 
boﬁ
 
	gomô_sour˚_m≠_uæ
;

22 
boﬁ
 
	gis_ödíãd_sy¡ax_§c
;

30 * 
	göput_∑th
;

36 * 
	gouçut_∑th
;

41 * 
	gö˛ude_∑th
;

42 * 
	g∂ugö_∑th
;

45 
°rög_li°
* 
	gö˛ude_∑ths
;

47 
°rög_li°
* 
	g∂ugö_∑ths
;

52 * 
	gsour˚_m≠_fûe
;

55 * 
	gsour˚_m≠_roŸ
;

58 
Sass_Fun˘i⁄_Li°
 
	gc_fun˘i⁄s
;

61 
Sass_Imp‹ãr_Li°
 
	gc_imp‹ãrs
;

64 
Sass_Imp‹ãr_Li°
 
	gc_hódîs
;

70 
	gSass_C⁄ãxt
 : 
Sass_O±i⁄s


74 
Sass_I≈ut_StyÀ
 
ty≥
;

77 * 
	gouçut_°rög
;

80 * 
	gsour˚_m≠_°rög
;

83 
	gîr‹_°©us
;

84 * 
	gîr‹_js⁄
;

85 * 
	gîr‹_ãxt
;

86 * 
	gîr‹_mesßge
;

88 * 
	gîr‹_fûe
;

89 
size_t
 
	gîr‹_löe
;

90 
size_t
 
	gîr‹_cﬁumn
;

91 c⁄° * 
	gîr‹_§c
;

94 ** 
	gö˛uded_fûes
;

99 
	gSass_Fûe_C⁄ãxt
 : 
Sass_C⁄ãxt
 {

107 
	gSass_D©a_C⁄ãxt
 : 
Sass_C⁄ãxt
 {

110 * 
sour˚_°rög
;

111 * 
	g§cm≠_°rög
;

116 
	sSass_Compûî
 {

118 
Sass_Compûî_Sèã
 
	m°©e
;

120 
Sass_C⁄ãxt
* 
	mc_˘x
;

122 
	mSass
::
C⁄ãxt
* 
˝p_˘x
;

124 
	mSass
::
Block
* 
roŸ
;

	@node_modules/node-sass/src/libsass/src/sass_functions.cpp

1 
	~"ßss.hµ
"

2 
	~<c°rög
>

3 
	~"utû.hµ
"

4 
	~"c⁄ãxt.hµ
"

5 
	~"ßss/fun˘i⁄s.h
"

6 
	~"ßss_fun˘i⁄s.hµ
"

9 
usög
 
«me•a˚
 
Sass
;

11 
Sass_Fun˘i⁄_Li°
 
ADDCALL
 
ßss_make_fun˘i⁄_li°
(
size_t
 
Àngth
)

13  (
Sass_Fun˘i⁄_Li°
Ë
ˇŒoc
(
Àngth
 + 1, (
Sass_Fun˘i⁄_E¡ry
));

16 
Sass_Fun˘i⁄_E¡ry
 
ADDCALL
 
ßss_make_fun˘i⁄
(c⁄° * 
sig«tuª
, 
Sass_Fun˘i⁄_Fn
 
fun˘i⁄
, * 
cookõ
)

18 
Sass_Fun˘i⁄_E¡ry
 
cb
 = (Sass_Fun˘i⁄_E¡ryË
ˇŒoc
(1, (
Sass_Fun˘i⁄
));

19 i‡(
cb
 == 0)  0;

20 
cb
->
sig«tuª
 = signature;

21 
cb
->
fun˘i⁄
 = function;

22 
cb
->
cookõ
 = cookie;

23  
cb
;

27 
Sass_Fun˘i⁄_E¡ry
 
ADDCALL
 
ßss_fun˘i⁄_gë_li°_íåy
(
Sass_Fun˘i⁄_Li°
 
li°
, 
size_t
 
pos
) { Üist[pos]; }

28 
ßss_fun˘i⁄_£t_li°_íåy
(
Sass_Fun˘i⁄_Li°
 
li°
, 
size_t
 
pos
, 
Sass_Fun˘i⁄_E¡ry
 
cb
) {Üist[pos] = cb; }

30 c⁄° * 
ADDCALL
 
ßss_fun˘i⁄_gë_sig«tuª
(
Sass_Fun˘i⁄_E¡ry
 
cb
Ë{  cb->
sig«tuª
; }

31 
Sass_Fun˘i⁄_Fn
 
ADDCALL
 
ßss_fun˘i⁄_gë_fun˘i⁄
(
Sass_Fun˘i⁄_E¡ry
 
cb
Ë{  cb->
fun˘i⁄
; }

32 * 
ADDCALL
 
ßss_fun˘i⁄_gë_cookõ
(
Sass_Fun˘i⁄_E¡ry
 
cb
Ë{  cb->
cookõ
; }

34 
Sass_Imp‹ãr_E¡ry
 
ADDCALL
 
ßss_make_imp‹ãr
(
Sass_Imp‹ãr_Fn
 
imp‹ãr
, 
¥i‹ôy
, * 
cookõ
)

36 
Sass_Imp‹ãr_E¡ry
 
cb
 = (Sass_Imp‹ãr_E¡ryË
ˇŒoc
(1, (
Sass_Imp‹ãr
));

37 i‡(
cb
 == 0)  0;

38 
cb
->
imp‹ãr
 = importer;

39 
cb
->
¥i‹ôy
 =Öriority;

40 
cb
->
cookõ
 = cookie;

41  
cb
;

44 
Sass_Imp‹ãr_Fn
 
ADDCALL
 
ßss_imp‹ãr_gë_fun˘i⁄
(
Sass_Imp‹ãr_E¡ry
 
cb
Ë{  cb->
imp‹ãr
; }

45 
ADDCALL
 
ßss_imp‹ãr_gë_¥i‹ôy
 (
Sass_Imp‹ãr_E¡ry
 
cb
Ë{  cb->
¥i‹ôy
; }

46 * 
ADDCALL
 
ßss_imp‹ãr_gë_cookõ
(
Sass_Imp‹ãr_E¡ry
 
cb
Ë{  cb->
cookõ
; }

49 
ADDCALL
 
ßss_dñëe_imp‹ãr
 (
Sass_Imp‹ãr_E¡ry
 
cb
)

51 
‰ì
(
cb
);

55 
Sass_Imp‹ãr_Li°
 
ADDCALL
 
ßss_make_imp‹ãr_li°
(
size_t
 
Àngth
)

57  (
Sass_Imp‹ãr_Li°
Ë
ˇŒoc
(
Àngth
 + 1, (
Sass_Imp‹ãr_E¡ry
));

60 
Sass_Imp‹ãr_E¡ry
 
ADDCALL
 
ßss_imp‹ãr_gë_li°_íåy
(
Sass_Imp‹ãr_Li°
 
li°
, 
size_t
 
idx
) { Üist[idx]; }

61 
ADDCALL
 
ßss_imp‹ãr_£t_li°_íåy
(
Sass_Imp‹ãr_Li°
 
li°
, 
size_t
 
idx
, 
Sass_Imp‹ãr_E¡ry
 
cb
) {Üist[idx] = cb; }

64 
Sass_Imp‹t_Li°
 
ADDCALL
 
ßss_make_imp‹t_li°
(
size_t
 
Àngth
)

66  (
Sass_Imp‹t
**Ë
ˇŒoc
(
Àngth
 + 1, (Sass_Import*));

71 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_make_imp‹t
(c⁄° * 
imp_∑th
, c⁄° * 
abs_∑th
, * 
sour˚
, * 
§cm≠
)

73 
Sass_Imp‹t
* 
v
 = (Sass_Imp‹t*Ë
ˇŒoc
(1, (Sass_Import));

74 i‡(
v
 == 0)  0;

75 
v
->
imp_∑th
 = imp_∑th ? 
ßss_c›y_c_°rög
(imp_path) : 0;

76 
v
->
abs_∑th
 =ábs_∑th ? 
ßss_c›y_c_°rög
(abs_path) : 0;

77 
v
->
sour˚
 = source;

78 
v
->
§cm≠
 = srcmap;

79 
v
->
îr‹
 = 0;

80 
v
->
löe
 = -1;

81 
v
->
cﬁumn
 = -1;

82  
v
;

86 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_make_imp‹t_íåy
(c⁄° * 
∑th
, * 
sour˚
, * 
§cm≠
)

88  
ßss_make_imp‹t
(
∑th
,Ö©h, 
sour˚
, 
§cm≠
);

92 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_imp‹t_£t_îr‹
(Sass_Imp‹t_E¡ry 
imp‹t
, c⁄° * 
îr‹
, 
size_t
 
löe
, size_à
cﬁ
)

94 i‡(
imp‹t
 == 0)  0;

95 i‡(
imp‹t
->
îr‹
Ë
‰ì
(import->error);

96 
imp‹t
->
îr‹
 =Éº‹ ? 
ßss_c›y_c_°rög
(error) : 0;

97 
imp‹t
->
löe
 =Üine ?Üine : -1;

98 
imp‹t
->
cﬁumn
 = 
cﬁ
 ? col : -1;

99  
imp‹t
;

103 
ADDCALL
 
ßss_imp‹t_£t_li°_íåy
(
Sass_Imp‹t_Li°
 
li°
, 
size_t
 
idx
, 
Sass_Imp‹t_E¡ry
 
íåy
) {Üist[idx] =Éntry; }

104 
Sass_Imp‹t_E¡ry
 
ADDCALL
 
ßss_imp‹t_gë_li°_íåy
(
Sass_Imp‹t_Li°
 
li°
, 
size_t
 
idx
) { Üist[idx]; }

107 
ADDCALL
 
ßss_dñëe_imp‹t_li°
(
Sass_Imp‹t_Li°
 
li°
)

109 
Sass_Imp‹t_Li°
 
ô
 = 
li°
;

110 i‡(
li°
 == 0) ;

111 *
li°
) {

112 
ßss_dñëe_imp‹t
(*
li°
);

113 ++
li°
;

115 
‰ì
(
ô
);

119 
ADDCALL
 
ßss_dñëe_imp‹t
(
Sass_Imp‹t_E¡ry
 
imp‹t
)

121 
‰ì
(
imp‹t
->
imp_∑th
);

122 
‰ì
(
imp‹t
->
abs_∑th
);

123 
‰ì
(
imp‹t
->
sour˚
);

124 
‰ì
(
imp‹t
->
§cm≠
);

125 
‰ì
(
imp‹t
->
îr‹
);

126 
‰ì
(
imp‹t
);

130 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_imp_∑th
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
imp_∑th
; }

131 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_abs_∑th
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
abs_∑th
; }

132 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_sour˚
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
sour˚
; }

133 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_§cm≠
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
§cm≠
; }

136 
size_t
 
ADDCALL
 
ßss_imp‹t_gë_îr‹_löe
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
löe
; }

137 
size_t
 
ADDCALL
 
ßss_imp‹t_gë_îr‹_cﬁumn
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
cﬁumn
; }

138 c⁄° * 
ADDCALL
 
ßss_imp‹t_gë_îr‹_mesßge
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ É¡ry->
îr‹
; }

142 * 
ADDCALL
 
ßss_imp‹t_èke_sour˚
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ * 
±r
 =É¡ry->
sour˚
;Éntry->source = 0; Ötr; }

143 * 
ADDCALL
 
ßss_imp‹t_èke_§cm≠
(
Sass_Imp‹t_E¡ry
 
íåy
Ë{ * 
±r
 =É¡ry->
§cm≠
;Éntry->srcmap = 0; Ötr; }

	@node_modules/node-sass/src/libsass/src/sass_functions.hpp

1 #i‚de‡
SASS_SASS_FUNCTIONS_H


2 
	#SASS_SASS_FUNCTIONS_H


	)

4 
	~"ßss.h
"

7 
	sSass_Fun˘i⁄
 {

8 c⁄° * 
	msig«tuª
;

9 
Sass_Fun˘i⁄_Fn
 
	mfun˘i⁄
;

10 * 
	mcookõ
;

14 
	sSass_Imp‹t
 {

15 * 
	mimp_∑th
;

16 *
	mabs_∑th
;

17 * 
	msour˚
;

18 * 
	m§cm≠
;

20 * 
	mîr‹
;

21 
size_t
 
	mlöe
;

22 
size_t
 
	mcﬁumn
;

26 
	sSass_Imp‹ãr
 {

27 
Sass_Imp‹ãr_Fn
 
	mimp‹ãr
;

28 
	m¥i‹ôy
;

29 * 
	mcookõ
;

	@node_modules/node-sass/src/libsass/src/sass_util.cpp

1 
	~"ßss.hµ
"

2 
	~"node.hµ
"

4 
«me•a˚
 
	gSass
 {

40 
Node
 
∑ths
(c⁄° Node& 
¨rs
, 
C⁄ãxt
& 
˘x
) {

42 
Node
 
	glo›Sèπ
 = Node::
¸óãCﬁÀ˘i⁄
();

43 
	glo›Sèπ
.
cﬁÀ˘i⁄
()->
push_back
(
Node
::
¸óãCﬁÀ˘i⁄
());

45 
	gNodeDeque
::
ôî©‹
 
¨rsIãr
 = 
¨rs
.
cﬁÀ˘i⁄
()->
begö
(), 
	g¨rsEndIãr
 =áºs.cﬁÀ˘i⁄()->
íd
();

46 
	g¨rsIãr
 !
¨rsEndIãr
; ++arrsIter) {

48 
	gNode
& 
	g¨r
 = *
¨rsIãr
;

50 
Node
 
	g≥rmuèti⁄s
 = Node::
¸óãCﬁÀ˘i⁄
();

52 
	gNodeDeque
::
ôî©‹
 
¨rIãr
 = 
¨r
.
cﬁÀ˘i⁄
()->
begö
(), 
	g¨rIãrEnd
 =áº.cﬁÀ˘i⁄()->
íd
();

53 
	g¨rIãr
 !
¨rIãrEnd
; ++arrIter) {

55 
	gNode
& 
	ge
 = *
¨rIãr
;

57 
	gNodeDeque
::
ôî©‹
 
lo›SèπIãr
 = 
lo›Sèπ
.
cﬁÀ˘i⁄
()->
begö
(), 
	glo›SèπIãrEnd
 =Üo›Sèπ.cﬁÀ˘i⁄()->
íd
();

58 
	glo›SèπIãr
 !
lo›SèπIãrEnd
; ++loopStartIter) {

60 
	gNode
& 
	g∑th
 = *
lo›SèπIãr
;

62 
Node
 
	g√wPîmuèti⁄
 = Node::
¸óãCﬁÀ˘i⁄
();

63 
	g√wPîmuèti⁄
.
	ggŸ_löe_„ed
 = 
¨r
.
gŸ_löe_„ed
;

64 
	g√wPîmuèti⁄
.
∂us
(
∑th
);

65 
	g√wPîmuèti⁄
.
cﬁÀ˘i⁄
()->
push_back
(
e
);

67 
	g≥rmuèti⁄s
.
cﬁÀ˘i⁄
()->
push_back
(
√wPîmuèti⁄
);

71 
	glo›Sèπ
 = 
≥rmuèti⁄s
;

74  
	glo›Sèπ
;

111 
Node
 
Ê©ãn
(Node& 
¨r
, 
C⁄ãxt
& 
˘x
, 
n
) {

112 i‡(
	gn
 !-1 && 
n
 == 0) {

113  
¨r
;

116 
Node
 
	gÊ©ã√d
 = Node::
¸óãCﬁÀ˘i⁄
();

117 i‡(
	g¨r
.
	ggŸ_löe_„ed
Ë
	gÊ©ã√d
.gŸ_löe_„ed = 
åue
;

119 
	gNodeDeque
::
ôî©‹
 
ôî
 = 
¨r
.
cﬁÀ˘i⁄
()->
begö
(), 
	gôîEnd
 =áº.cﬁÀ˘i⁄()->
íd
();

120 
	gôî
 !
ôîEnd
; iter++) {

121 
	gNode
& 
	ge
 = *
ôî
;

124 i‡(
	ge
.
isCﬁÀ˘i⁄
()) {

127 
Node
 
	gªcur£Fœâíed
 = 
Ê©ãn
(
e
, 
˘x
, 
n
 - 1);

129 if(
	ge
.
	ggŸ_löe_„ed
) {

130 
	gÊ©ã√d
.
	ggŸ_löe_„ed
 = 
e
.
gŸ_löe_„ed
;

131 
	gªcur£Fœâíed
.
	ggŸ_löe_„ed
 = 
e
.
gŸ_löe_„ed
;

134 autÿ
	gi
 : (*
ªcur£Fœâíed
.
cﬁÀ˘i⁄
())) {

135 i‡(
ªcur£Fœâíed
.
gŸ_löe_„ed
) {

137 
i
.
gŸ_löe_„ed
 = 
åue
;

139 
	gÊ©ã√d
.
cﬁÀ˘i⁄
()->
push_back
(
i
);

143 
	gÊ©ã√d
.
cﬁÀ˘i⁄
()->
push_back
(
e
);

147  
	gÊ©ã√d
;

	@node_modules/node-sass/src/libsass/src/sass_util.hpp

1 #i‚de‡
SASS_SASS_UTIL_H


2 
	#SASS_SASS_UTIL_H


	)

4 
	~"a°.hµ
"

5 
	~"node.hµ
"

6 
	~"debug.hµ
"

8 
«me•a˚
 
	gSass
 {

31 
Node
 
∑ths
(c⁄° Node& 
¨rs
, 
C⁄ãxt
& 
˘x
);

38 ˛as†
	cDeÁu…LcsCom∑øt‹
 {

39 
	gpublic
:

40 
boﬁ
 
›î©‹
()(c⁄° 
Node
& 
⁄e
, c⁄° 
	gNode
& 
	gtwo
, Node& 
	gout
) const {

43 i‡(
	g⁄e
 =
two
) {

44 
out
 = 
⁄e
;

45  
	gåue
;

48  
	gÁl£
;

53 
	g°d
::
	tve˘‹
<
	t°d
::ve˘‹<> > 
	tLCSTabÀ
;

62 
	gãm∂©e
<
ty≥«me
 
	gCom∑øt‹Ty≥
>

63 
Node
 
	$lcs_backåa˚
(c⁄° 
LCSTabÀ
& 
c
, c⁄° 
Node
& 
x
, c⁄° Node& 
y
, 
i
, 
j
, c⁄° 
Com∑øt‹Ty≥
& 
com∑øt‹
) {

64 
	`DEBUG_PRINTLN
(
LCS
, "LCSBACK: X=" << 
x
 << " Y=" << 
y
 << " I=" << 
i
 << " J=" << 
j
)

66 i‡(
i
 =0 || 
j
 == 0) {

67 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING EMPTY")

68  
Node
::
	`¸óãCﬁÀ˘i⁄
();

71 
NodeDeque
& 
xChûdªn
 = *(
x
.
	`cﬁÀ˘i⁄
());

72 
NodeDeque
& 
yChûdªn
 = *(
y
.
	`cﬁÀ˘i⁄
());

74 
Node
 
com∑ªOut
 = Node::
	`¸óãNû
();

75 i‡(
	`com∑øt‹
(
xChûdªn
[
i
], 
yChûdªn
[
j
], 
com∑ªOut
)) {

76 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING AFTER ELEM COMPARE")

77 
Node
 
ªsu…
 = 
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
 - 1, 
j
 - 1, 
com∑øt‹
);

78 
ªsu…
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
com∑ªOut
);

79  
ªsu…
;

82 i‡(
c
[
i
][
j
 - 1] > c[i - 1][j]) {

83 
	`DEBUG_PRINTLN
(
LCS
, "RETURNING AFTER TABLE COMPARE")

84  
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
, 
j
 - 1, 
com∑øt‹
);

87 
	`DEBUG_PRINTLN
(
LCS
, "FINAL RETURN")

88  
	`lcs_backåa˚
(
c
, 
x
, 
y
, 
i
 - 1, 
j
, 
com∑øt‹
);

89 
	}
}

98 
	gãm∂©e
<
ty≥«me
 
	gCom∑øt‹Ty≥
>

99 
	$lcs_èbÀ
(c⁄° 
Node
& 
x
, c⁄° Node& 
y
, c⁄° 
Com∑øt‹Ty≥
& 
com∑øt‹
, 
LCSTabÀ
& 
out
) {

100 
	`DEBUG_PRINTLN
(
LCS
, "LCSTABLE: X=" << 
x
 << " Y=" << 
y
)

102 
NodeDeque
& 
xChûdªn
 = *(
x
.
	`cﬁÀ˘i⁄
());

103 
NodeDeque
& 
yChûdªn
 = *(
y
.
	`cﬁÀ˘i⁄
());

105 
LCSTabÀ
 
	`c
(
xChûdªn
.
	`size
(), 
°d
::
ve˘‹
<>(
yChûdªn
.size()));

111 
size_t
 
i
 = 1; i < 
xChûdªn
.
	`size
(); i++) {

112 
size_t
 
j
 = 1; j < 
yChûdªn
.
	`size
(); j++) {

113 
Node
 
com∑ªOut
 = Node::
	`¸óãNû
();

115 i‡(
	`com∑øt‹
(
xChûdªn
[
i
], 
yChûdªn
[
j
], 
com∑ªOut
)) {

116 
c
[
i
][
j
] = c[i - 1][j - 1] + 1;

118 
c
[
i
][
j
] = 
°d
::
	`max
(c[i][j - 1], c[i - 1][j]);

123 
out
 = 
c
;

124 
	}
}

141 
	gãm∂©e
<
ty≥«me
 
	gCom∑øt‹Ty≥
>

142 
Node
 
	$lcs
(
Node
& 
x
, Node& 
y
, c⁄° 
Com∑øt‹Ty≥
& 
com∑øt‹
, 
C⁄ãxt
& 
˘x
) {

143 
	`DEBUG_PRINTLN
(
LCS
, "LCS: X=" << 
x
 << " Y=" << 
y
)

145 
Node
 
√wX
 = Node::
	`¸óãCﬁÀ˘i⁄
();

146 
√wX
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãNû
());

147 
√wX
.
	`∂us
(
x
);

149 
Node
 
√wY
 = Node::
	`¸óãCﬁÀ˘i⁄
();

150 
√wY
.
	`cﬁÀ˘i⁄
()->
	`push_back
(
Node
::
	`¸óãNû
());

151 
√wY
.
	`∂us
(
y
);

153 
LCSTabÀ
 
èbÀ
;

154 
	`lcs_èbÀ
(
√wX
, 
√wY
, 
com∑øt‹
, 
èbÀ
);

156  
	`lcs_backåa˚
(
èbÀ
, 
√wX
, 
√wY
, 
°©ic_ˇ°
<>“ewX.
	`cﬁÀ˘i⁄
()->
	`size
()Ë- 1, sètic_ˇ°<>“ewY.cﬁÀ˘i⁄()->size()Ë- 1, 
com∑øt‹
);

157 
	}
}

172 
Node
 
Ê©ãn
(Node& 
¨r
, 
C⁄ãxt
& 
˘x
, 
n
 = -1);

219 
	gãm∂©e
<
ty≥«me
 
	gEnumTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gKeyFun˘‹Ty≥
>

220 
group_by_to_a
(
°d
::
ve˘‹
<
EnumTy≥
>& 
íumî©i⁄
, 
KeyFun˘‹Ty≥
& 
keyFunc
, std::ve˘‹<°d::
∑ú
<
KeyTy≥
, std::ve˘‹<EnumTy≥> > >& 
¨r
 ) {

222 
°d
::
m≠
<, 
	gKeyTy≥
> 
	g‹dî
;

224 
	g°d
::
m≠
<
size_t
, std::
ve˘‹
<
EnumTy≥
> > 
grou≥d
;

226 
ty≥«me
 
	g°d
::
ve˘‹
<
EnumTy≥
>::
ôî©‹
 
íumIãr
 = 
íumî©i⁄
.
begö
(), 
	gíumIãrEnd
 =Énumî©i⁄.
íd
(); 
	gíumIãr
 !
íumIãrEnd
;ÉnumIter++) {

227 
	gEnumTy≥
& 
	ge
 = *
íumIãr
;

229 
KeyTy≥
 
	gkey
 = 
keyFunc
(
e
);

231 i‡(
	ggrou≥d
.
föd
(
key
.
hash
()Ë=
grou≥d
.
íd
()) {

232 
‹dî
.
ö£π
(
°d
::
make_∑ú
(()‹dî.
size
(), 
key
));

234 
	g°d
::
ve˘‹
<
EnumTy≥
> 
√wCﬁÀ˘i⁄
;

235 
	g√wCﬁÀ˘i⁄
.
push_back
(
e
);

236 
	ggrou≥d
.
ö£π
(
°d
::
make_∑ú
(
key
.
hash
(), 
√wCﬁÀ˘i⁄
));

238 
	g°d
::
ve˘‹
<
EnumTy≥
>& 
cﬁÀ˘i⁄
 = 
grou≥d
.
©
(
key
.
hash
());

239 
	gcﬁÀ˘i⁄
.
push_back
(
e
);

243 
	gödex
 = 0; index < 
	g‹dî
.
size
(); index++) {

244 
	gKeyTy≥
& 
	gkey
 = 
‹dî
.
©
(
ödex
);

245 
	g°d
::
ve˘‹
<
EnumTy≥
>& 
vÆues
 = 
grou≥d
.
©
(
key
.
hash
());

247 
	g°d
::
∑ú
<
KeyTy≥
, std::
ve˘‹
<
EnumTy≥
> > 
groupög
 = 
°d
::
make_∑ú
(
key
, 
vÆues
);

249 
	g¨r
.
push_back
(
groupög
);

	@node_modules/node-sass/src/libsass/src/sass_values.cpp

1 
	~"ßss.hµ
"

2 
	~<c°dlib
>

3 
	~<c°rög
>

4 
	~"utû.hµ
"

5 
	~"evÆ.hµ
"

6 
	~"vÆues.hµ
"

7 
	~"ßss/vÆues.h
"

8 
	~"ßss_vÆues.hµ
"

11 
usög
 
«me•a˚
 
Sass
;

14 
Sass_Tag
 
ADDCALL
 
ßss_vÆue_gë_èg
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
; }

17 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_nuŒ
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_NULL
; }

18 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_numbî
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_NUMBER
; }

19 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_°rög
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_STRING
; }

20 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_boﬁón
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_BOOLEAN
; }

21 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_cﬁ‹
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_COLOR
; }

22 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_li°
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_LIST
; }

23 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_m≠
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_MAP
; }

24 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_îr‹
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_ERROR
; }

25 
boﬁ
 
ADDCALL
 
ßss_vÆue_is_w¨nög
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
unknown
.
èg
 =
SASS_WARNING
; }

28 
ADDCALL
 
ßss_numbî_gë_vÆue
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
numbî
.
vÆue
; }

29 
ADDCALL
 
ßss_numbî_£t_vÆue
(
Sass_VÆue
* 
v
, 
vÆue
Ë{ v->
numbî
.value = value; }

30 c⁄° * 
ADDCALL
 
ßss_numbî_gë_unô
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
numbî
.
unô
; }

31 
ADDCALL
 
ßss_numbî_£t_unô
(
Sass_VÆue
* 
v
, * 
unô
Ë{ v->
numbî
.unit = unit; }

34 c⁄° * 
ADDCALL
 
ßss_°rög_gë_vÆue
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
°rög
.
vÆue
; }

35 
ADDCALL
 
ßss_°rög_£t_vÆue
(
Sass_VÆue
* 
v
, * 
vÆue
Ë{ v->
°rög
.value = value; }

36 
boﬁ
 
ADDCALL
 
ßss_°rög_is_quŸed
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
°rög
.
quŸed
; }

37 
ADDCALL
 
ßss_°rög_£t_quŸed
(
Sass_VÆue
* 
v
, 
boﬁ
 
quŸed
Ë{ v->
°rög
.quoted = quoted; }

40 
boﬁ
 
ADDCALL
 
ßss_boﬁón_gë_vÆue
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
boﬁón
.
vÆue
; }

41 
ADDCALL
 
ßss_boﬁón_£t_vÆue
(
Sass_VÆue
* 
v
, 
boﬁ
 
vÆue
Ë{ v->
boﬁón
.value = value; }

44 
ADDCALL
 
ßss_cﬁ‹_gë_r
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
cﬁ‹
.
r
; }

45 
ADDCALL
 
ßss_cﬁ‹_£t_r
(
Sass_VÆue
* 
v
, 
r
Ë{ v->
cﬁ‹
.r =Ñ; }

46 
ADDCALL
 
ßss_cﬁ‹_gë_g
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
cﬁ‹
.
g
; }

47 
ADDCALL
 
ßss_cﬁ‹_£t_g
(
Sass_VÆue
* 
v
, 
g
Ë{ v->
cﬁ‹
.g = g; }

48 
ADDCALL
 
ßss_cﬁ‹_gë_b
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
cﬁ‹
.
b
; }

49 
ADDCALL
 
ßss_cﬁ‹_£t_b
(
Sass_VÆue
* 
v
, 
b
Ë{ v->
cﬁ‹
.b = b; }

50 
ADDCALL
 
ßss_cﬁ‹_gë_a
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
cﬁ‹
.
a
; }

51 
ADDCALL
 
ßss_cﬁ‹_£t_a
(
Sass_VÆue
* 
v
, 
a
Ë{ v->
cﬁ‹
.a =á; }

54 
size_t
 
ADDCALL
 
ßss_li°_gë_Àngth
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
li°
.
Àngth
; }

55 
Sass_Sï¨©‹
 
ADDCALL
 
ßss_li°_gë_£∑øt‹
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
li°
.
£∑øt‹
; }

56 
ADDCALL
 
ßss_li°_£t_£∑øt‹
(
Sass_VÆue
* 
v
, 
Sass_Sï¨©‹
 
£∑øt‹
Ë{ v->
li°
.separator = separator; }

58 
Sass_VÆue
* 
ADDCALL
 
ßss_li°_gë_vÆue
(c⁄° Sass_VÆue* 
v
, 
size_t
 
i
Ë{  v->
li°
.
vÆues
[i]; }

59 
ADDCALL
 
ßss_li°_£t_vÆue
(
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_VÆue* 
vÆue
Ë{ v->
li°
.
vÆues
[i] = value; }

62 
size_t
 
ADDCALL
 
ßss_m≠_gë_Àngth
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
m≠
.
Àngth
; }

64 
Sass_VÆue
* 
ADDCALL
 
ßss_m≠_gë_key
(c⁄° Sass_VÆue* 
v
, 
size_t
 
i
Ë{  v->
m≠
.
∑ús
[i].
key
; }

65 
Sass_VÆue
* 
ADDCALL
 
ßss_m≠_gë_vÆue
(c⁄° Sass_VÆue* 
v
, 
size_t
 
i
Ë{  v->
m≠
.
∑ús
[i].
vÆue
; }

66 
ADDCALL
 
ßss_m≠_£t_key
(
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_VÆue* 
key
Ë{ v->
m≠
.
∑ús
[i].key = key; }

67 
ADDCALL
 
ßss_m≠_£t_vÆue
(
Sass_VÆue
* 
v
, 
size_t
 
i
, Sass_VÆue* 
vÆ
Ë{ v->
m≠
.
∑ús
[i].
vÆue
 = val; }

70 * 
ADDCALL
 
ßss_îr‹_gë_mesßge
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
îr‹
.
mesßge
; };

71 
ADDCALL
 
ßss_îr‹_£t_mesßge
(
Sass_VÆue
* 
v
, * 
msg
Ë{ v->
îr‹
.
mesßge
 = msg; };

74 * 
ADDCALL
 
ßss_w¨nög_gë_mesßge
(c⁄° 
Sass_VÆue
* 
v
Ë{  v->
w¨nög
.
mesßge
; };

75 
ADDCALL
 
ßss_w¨nög_£t_mesßge
(
Sass_VÆue
* 
v
, * 
msg
Ë{ v->
w¨nög
.
mesßge
 = msg; };

79 
Sass_VÆue
* 
ADDCALL
 
ßss_make_boﬁón
(
boﬁ
 
vÆ
)

81 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

82 i‡(
v
 == 0)  0;

83 
v
->
boﬁón
.
èg
 = 
SASS_BOOLEAN
;

84 
v
->
boﬁón
.
vÆue
 = 
vÆ
;

85  
v
;

88 
Sass_VÆue
* 
ADDCALL
 
ßss_make_numbî
(
vÆ
, c⁄° * 
unô
)

90 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

91 i‡(
v
 == 0)  0;

92 
v
->
numbî
.
èg
 = 
SASS_NUMBER
;

93 
v
->
numbî
.
vÆue
 = 
vÆ
;

94 
v
->
numbî
.
unô
 = unô ? 
ßss_c›y_c_°rög
(unit) : 0;

95 i‡(
v
->
numbî
.
unô
 =0Ë{ 
‰ì
(v);  0; }

96  
v
;

99 
Sass_VÆue
* 
ADDCALL
 
ßss_make_cﬁ‹
(
r
, 
g
, 
b
, 
a
)

101 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

102 i‡(
v
 == 0)  0;

103 
v
->
cﬁ‹
.
èg
 = 
SASS_COLOR
;

104 
v
->
cﬁ‹
.
r
 =Ñ;

105 
v
->
cﬁ‹
.
g
 = g;

106 
v
->
cﬁ‹
.
b
 = b;

107 
v
->
cﬁ‹
.
a
 =á;

108  
v
;

111 
Sass_VÆue
* 
ADDCALL
 
ßss_make_°rög
(c⁄° * 
vÆ
)

113 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

114 i‡(
v
 == 0)  0;

115 
v
->
°rög
.
quŸed
 = 
Ál£
;

116 
v
->
°rög
.
èg
 = 
SASS_STRING
;

117 
v
->
°rög
.
vÆue
 = 
vÆ
 ? 
ßss_c›y_c_°rög
(val) : 0;

118 i‡(
v
->
°rög
.
vÆue
 =0Ë{ 
‰ì
(v);  0; }

119  
v
;

122 
Sass_VÆue
* 
ADDCALL
 
ßss_make_q°rög
(c⁄° * 
vÆ
)

124 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

125 i‡(
v
 == 0)  0;

126 
v
->
°rög
.
quŸed
 = 
åue
;

127 
v
->
°rög
.
èg
 = 
SASS_STRING
;

128 
v
->
°rög
.
vÆue
 = 
vÆ
 ? 
ßss_c›y_c_°rög
(val) : 0;

129 i‡(
v
->
°rög
.
vÆue
 =0Ë{ 
‰ì
(v);  0; }

130  
v
;

133 
Sass_VÆue
* 
ADDCALL
 
ßss_make_li°
(
size_t
 
Àn
, 
Sass_Sï¨©‹
 
£p
)

135 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

136 i‡(
v
 == 0)  0;

137 
v
->
li°
.
èg
 = 
SASS_LIST
;

138 
v
->
li°
.
Àngth
 = 
Àn
;

139 
v
->
li°
.
£∑øt‹
 = 
£p
;

140 
v
->
li°
.
vÆues
 = (
Sass_VÆue
**Ë
ˇŒoc
(
Àn
, (Sass_Value*));

141 i‡(
v
->
li°
.
vÆues
 =0Ë{ 
‰ì
(v);  0; }

142  
v
;

145 
Sass_VÆue
* 
ADDCALL
 
ßss_make_m≠
(
size_t
 
Àn
)

147 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

148 i‡(
v
 == 0)  0;

149 
v
->
m≠
.
èg
 = 
SASS_MAP
;

150 
v
->
m≠
.
Àngth
 = 
Àn
;

151 
v
->
m≠
.
∑ús
 = (
Sass_M≠Paú
*Ë
ˇŒoc
(
Àn
, (Sass_MapPair));

152 i‡(
v
->
m≠
.
∑ús
 =0Ë{ 
‰ì
(v);  0; }

153  
v
;

156 
Sass_VÆue
* 
ADDCALL
 
ßss_make_nuŒ
()

158 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

159 i‡(
v
 == 0)  0;

160 
v
->
nuŒ
.
èg
 = 
SASS_NULL
;

161  
v
;

164 
Sass_VÆue
* 
ADDCALL
 
ßss_make_îr‹
(c⁄° * 
msg
)

166 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

167 i‡(
v
 == 0)  0;

168 
v
->
îr‹
.
èg
 = 
SASS_ERROR
;

169 
v
->
îr‹
.
mesßge
 = 
msg
 ? 
ßss_c›y_c_°rög
(msg) : 0;

170 i‡(
v
->
îr‹
.
mesßge
 =0Ë{ 
‰ì
(v);  0; }

171  
v
;

174 
Sass_VÆue
* 
ADDCALL
 
ßss_make_w¨nög
(c⁄° * 
msg
)

176 
Sass_VÆue
* 
v
 = (Sass_VÆue*Ë
ˇŒoc
(1, (Sass_Value));

177 i‡(
v
 == 0)  0;

178 
v
->
w¨nög
.
èg
 = 
SASS_WARNING
;

179 
v
->
w¨nög
.
mesßge
 = 
msg
 ? 
ßss_c›y_c_°rög
(msg) : 0;

180 i‡(
v
->
w¨nög
.
mesßge
 =0Ë{ 
‰ì
(v);  0; }

181  
v
;

185 
ADDCALL
 
ßss_dñëe_vÆue
(
Sass_VÆue
* 
vÆ
) {

187 
size_t
 
i
;

188 i‡(
vÆ
 == 0) ;

189 
vÆ
->
unknown
.
èg
) {

190 
SASS_NULL
: {

192 
SASS_BOOLEAN
: {

194 
SASS_NUMBER
: {

195 
‰ì
(
vÆ
->
numbî
.
unô
);

197 
SASS_COLOR
: {

199 
SASS_STRING
: {

200 
‰ì
(
vÆ
->
°rög
.
vÆue
);

202 
SASS_LIST
: {

203 
i
=0; i<
vÆ
->
li°
.
Àngth
; i++) {

204 
ßss_dñëe_vÆue
(
vÆ
->
li°
.
vÆues
[
i
]);

206 
‰ì
(
vÆ
->
li°
.
vÆues
);

208 
SASS_MAP
: {

209 
i
=0; i<
vÆ
->
m≠
.
Àngth
; i++) {

210 
ßss_dñëe_vÆue
(
vÆ
->
m≠
.
∑ús
[
i
].
key
);

211 
ßss_dñëe_vÆue
(
vÆ
->
m≠
.
∑ús
[
i
].
vÆue
);

213 
‰ì
(
vÆ
->
m≠
.
∑ús
);

215 
SASS_ERROR
: {

216 
‰ì
(
vÆ
->
îr‹
.
mesßge
);

218 
SASS_WARNING
: {

219 
‰ì
(
vÆ
->
îr‹
.
mesßge
);

223 
‰ì
(
vÆ
);

228 
Sass_VÆue
* 
ADDCALL
 
ßss_˛⁄e_vÆue
 (c⁄° Sass_VÆue* 
vÆ
)

231 
size_t
 
i
;

232 i‡(
vÆ
 == 0)  0;

233 
vÆ
->
unknown
.
èg
) {

234 
SASS_NULL
: {

235  
ßss_make_nuŒ
();

237 
SASS_BOOLEAN
: {

238  
ßss_make_boﬁón
(
vÆ
->
boﬁón
.
vÆue
);

240 
SASS_NUMBER
: {

241  
ßss_make_numbî
(
vÆ
->
numbî
.
vÆue
, vÆ->numbî.
unô
);

243 
SASS_COLOR
: {

244  
ßss_make_cﬁ‹
(
vÆ
->
cﬁ‹
.
r
, vÆ->cﬁ‹.
g
, vÆ->cﬁ‹.
b
, vÆ->cﬁ‹.
a
);

246 
SASS_STRING
: {

247  
ßss_°rög_is_quŸed
(
vÆ
Ë? 
ßss_make_q°rög
(vÆ->
°rög
.
vÆue
Ë: 
ßss_make_°rög
(val->string.value);

249 
SASS_LIST
: {

250 
Sass_VÆue
* 
li°
 = 
ßss_make_li°
(
vÆ
->li°.
Àngth
, vÆ->li°.
£∑øt‹
);

251 
i
 = 0; i < 
li°
->li°.
Àngth
; i++) {

252 
li°
->li°.
vÆues
[
i
] = 
ßss_˛⁄e_vÆue
(
vÆ
->list.values[i]);

254  
li°
;

256 
SASS_MAP
: {

257 
Sass_VÆue
* 
m≠
 = 
ßss_make_m≠
(
vÆ
->m≠.
Àngth
);

258 
i
 = 0; i < 
vÆ
->
m≠
.
Àngth
; i++) {

259 
m≠
->m≠.
∑ús
[
i
].
key
 = 
ßss_˛⁄e_vÆue
(
vÆ
->map.pairs[i].key);

260 
m≠
->m≠.
∑ús
[
i
].
vÆue
 = 
ßss_˛⁄e_vÆue
(
vÆ
->map.pairs[i].value);

262  
m≠
;

264 
SASS_ERROR
: {

265  
ßss_make_îr‹
(
vÆ
->
îr‹
.
mesßge
);

267 
SASS_WARNING
: {

268  
ßss_make_w¨nög
(
vÆ
->
w¨nög
.
mesßge
);

276 
Sass_VÆue
* 
ADDCALL
 
ßss_vÆue_°rögify
 (c⁄° Sass_VÆue* 
v
, 
boﬁ
 
com¥es£d
, 
¥ecisi⁄
)

278 
Mem‹y_M™agî
 
mem
;

279 
VÆue
* 
vÆ
 = 
ßss_vÆue_to_a°_node
(
mem
, 
v
);

280 
Sass_In•e˘_O±i⁄s
 
›ti⁄s
(
com¥es£d
 ? 
COMPRESSED
 : 
NESTED
, 
¥ecisi⁄
);

281 
°d
::
°rög
 
°r
(
vÆ
->
to_°rög
(
›ti⁄s
));

282  
ßss_make_q°rög
(
°r
.
c_°r
());

285 
Sass_VÆue
* 
ADDCALL
 
ßss_vÆue_›
 (
Sass_OP
 
›
, c⁄° Sass_VÆue* 
a
, c⁄° Sass_VÆue* 
b
)

288 
Sass
::
VÆue
* 
rv
 = 0;

289 
Mem‹y_M™agî
 
mem
;

291 
åy
 {

293 
VÆue
* 
lhs
 = 
ßss_vÆue_to_a°_node
(
mem
, 
a
);

294 
VÆue
* 
rhs
 = 
ßss_vÆue_to_a°_node
(
mem
, 
b
);

295 
Sass_In•e˘_O±i⁄s
 
›ti⁄s
(
NESTED
, 5);

298 
›
) {

299 
Sass_OP
::
EQ
:  
ßss_make_boﬁón
(
EvÆ
::
eq
(
lhs
, 
rhs
));

300 
Sass_OP
::
NEQ
:  
ßss_make_boﬁón
(!
EvÆ
::
eq
(
lhs
, 
rhs
));

301 
Sass_OP
::
GT
:  
ßss_make_boﬁón
(!
EvÆ
::
…
(
lhs
, 
rhs
, "gt"Ë&& !EvÆ::
eq
(lhs,Ñhs));

302 
Sass_OP
::
GTE
:  
ßss_make_boﬁón
(!
EvÆ
::
…
(
lhs
, 
rhs
, "gte"));

303 
Sass_OP
::
LT
:  
ßss_make_boﬁón
(
EvÆ
::
…
(
lhs
, 
rhs
, "lt"));

304 
Sass_OP
::
LTE
:  
ßss_make_boﬁón
(
EvÆ
::
…
(
lhs
, 
rhs
, "…e"Ë|| EvÆ::
eq
(lhs,Ñhs));

308 i‡(
ßss_vÆue_is_numbî
(
a
Ë&& sass_vÆue_is_numbî(
b
)) {

309 c⁄° 
Numbî
* 
l_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
lhs
);

310 c⁄° 
Numbî
* 
r_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
rhs
);

311 
rv
 = 
EvÆ
::
›_numbîs
(
mem
, 
›
, *
l_n
, *
r_n
, 
›ti⁄s
);

313 i‡(
ßss_vÆue_is_numbî
(
a
Ë&& 
ßss_vÆue_is_cﬁ‹
(a)) {

314 c⁄° 
Numbî
* 
l_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
lhs
);

315 c⁄° 
Cﬁ‹
* 
r_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
rhs
);

316 
rv
 = 
EvÆ
::
›_numbî_cﬁ‹
(
mem
, 
›
, *
l_n
, *
r_c
, 
›ti⁄s
);

318 i‡(
ßss_vÆue_is_cﬁ‹
(
a
Ë&& 
ßss_vÆue_is_numbî
(
b
)) {

319 c⁄° 
Cﬁ‹
* 
l_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
lhs
);

320 c⁄° 
Numbî
* 
r_n
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
rhs
);

321 
rv
 = 
EvÆ
::
›_cﬁ‹_numbî
(
mem
, 
›
, *
l_c
, *
r_n
, 
›ti⁄s
);

323 i‡(
ßss_vÆue_is_cﬁ‹
(
a
Ë&& sass_vÆue_is_cﬁ‹(
b
)) {

324 c⁄° 
Cﬁ‹
* 
l_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
lhs
);

325 c⁄° 
Cﬁ‹
* 
r_c
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
rhs
);

326 
rv
 = 
EvÆ
::
›_cﬁ‹s
(
mem
, 
›
, *
l_c
, *
r_c
, 
›ti⁄s
);

329 
VÆue
* 
l_v
 = 
dy«mic_ˇ°
<VÆue*>(
lhs
);

330 
VÆue
* 
r_v
 = 
dy«mic_ˇ°
<VÆue*>(
rhs
);

331 
rv
 = 
EvÆ
::
›_°rögs
(
mem
, 
›
, *
l_v
, *
r_v
, 
›ti⁄s
);

335 i‡(!
rv
Ë 
ßss_make_îr‹
("invalidÑeturn value");

338  
a°_node_to_ßss_vÆue
(
rv
);

343 
ˇtch
 (
Ex˚±i⁄
::
InvÆidSass
& 
e
Ë{  
ßss_make_îr‹
”.
wh©
()); }

344 
ˇtch
 (
°d
::
bad_Æloc
&Ë{  
ßss_make_îr‹
("memoryÉxhausted"); }

345 
ˇtch
 (
°d
::
ex˚±i⁄
& 
e
Ë{  
ßss_make_îr‹
”.
wh©
()); }

346 
ˇtch
 (
°d
::
°rög
& 
e
Ë{  
ßss_make_îr‹
”.
c_°r
()); }

347 
ˇtch
 (c⁄° * 
e
Ë{  
ßss_make_îr‹
(e); }

348 
ˇtch
 (...Ë{  
ßss_make_îr‹
("unknown"); }

	@node_modules/node-sass/src/libsass/src/sass_values.hpp

1 #i‚de‡
SASS_SASS_VALUES_H


2 
	#SASS_SASS_VALUES_H


	)

4 
	~"ßss.h
"

6 
	sSass_Unknown
 {

7 
Sass_Tag
 
	mèg
;

10 
	sSass_Boﬁón
 {

11 
Sass_Tag
 
	mèg
;

12 
boﬁ
 
	mvÆue
;

15 
	sSass_Numbî
 {

16 
Sass_Tag
 
	mèg
;

17 
	mvÆue
;

18 * 
	munô
;

21 
	sSass_Cﬁ‹
 {

22 
Sass_Tag
 
	mèg
;

23 
	mr
;

24 
	mg
;

25 
	mb
;

26 
	ma
;

29 
	sSass_Såög
 {

30 
Sass_Tag
 
	mèg
;

31 
boﬁ
 
	mquŸed
;

32 * 
	mvÆue
;

35 
	sSass_Li°
 {

36 
Sass_Tag
 
	mèg
;

37 
Sass_Sï¨©‹
 
	m£∑øt‹
;

38 
size_t
 
	mÀngth
;

40 
Sass_VÆue
** 
	mvÆues
;

43 
	sSass_M≠
 {

44 
Sass_Tag
 
	mèg
;

45 
size_t
 
	mÀngth
;

46 
Sass_M≠Paú
* 
	m∑ús
;

49 
	sSass_NuŒ
 {

50 
Sass_Tag
 
	mèg
;

53 
	sSass_Eº‹
 {

54 
Sass_Tag
 
	mèg
;

55 * 
	mmesßge
;

58 
	sSass_W¨nög
 {

59 
Sass_Tag
 
	mèg
;

60 * 
	mmesßge
;

63 
	uSass_VÆue
 {

64 
Sass_Unknown
 
	munknown
;

65 
Sass_Boﬁón
 
	mboﬁón
;

66 
Sass_Numbî
 
	mnumbî
;

67 
Sass_Cﬁ‹
 
	mcﬁ‹
;

68 
Sass_Såög
 
	m°rög
;

69 
Sass_Li°
 
	mli°
;

70 
Sass_M≠
 
	mm≠
;

71 
Sass_NuŒ
 
	mnuŒ
;

72 
Sass_Eº‹
 
	mîr‹
;

73 
Sass_W¨nög
 
	mw¨nög
;

76 
	sSass_M≠Paú
 {

77 
Sass_VÆue
* 
	mkey
;

78 
Sass_VÆue
* 
	mvÆue
;

	@node_modules/node-sass/src/libsass/src/source_map.cpp

1 
	~"ßss.hµ
"

2 
	~<°rög
>

3 
	~<s°ªam
>

4 
	~<io°ªam
>

5 
	~<c°ddef
>

6 
	~<iom™ù
>

8 
	~"a°.hµ
"

9 
	~"js⁄.hµ
"

10 
	~"c⁄ãxt.hµ
"

11 
	~"posôi⁄.hµ
"

12 
	~"sour˚_m≠.hµ
"

14 
«me•a˚
 
	gSass
 {

15 
	gSour˚M≠
::
Sour˚M≠
(Ë: 
cuºít_posôi⁄
(0, 0, 0), 
fûe
("stdin") { }

16 
	gSour˚M≠
::
Sour˚M≠
(c⁄° 
°d
::
°rög
& 
fûe
Ë: 
cuºít_posôi⁄
(0, 0, 0), file(file) { }

18 
	g°d
::
°rög
 
Sour˚M≠
::
ªndî_§cm≠
(
C⁄ãxt
 &
˘x
) {

20 c⁄° 
boﬁ
 
ö˛ude_sour˚s
 = 
˘x
.
c_›ti⁄s
.
sour˚_m≠_c⁄ã¡s
;

21 c⁄° 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
löks
 = 
˘x
.
§cm≠_löks
;

22 c⁄° 
	g°d
::
ve˘‹
<
Resour˚
>& 
sour˚s
(
˘x
.
ªsour˚s
);

24 
Js⁄Node
* 
	gjs⁄_§cm≠
 = 
js⁄_mkobje˘
();

26 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "vîsi⁄", 
js⁄_mknumbî
(3));

29 i‡(!
	g˘x
.
	gsour˚_m≠_roŸ
.
em±y
()) {

30 
Js⁄Node
* 
	groŸ
 = 
js⁄_mk°rög
(
˘x
.
sour˚_m≠_roŸ
.
c_°r
());

31 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "sour˚RoŸ", 
roŸ
);

34 c⁄° *
	gö˛ude
 = 
fûe
.
c_°r
();

35 
Js⁄Node
 *
	gjs⁄_ö˛ude
 = 
js⁄_mk°rög
(
ö˛ude
);

36 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "fûe", 
js⁄_ö˛ude
);

38 
Js⁄Node
 *
	gjs⁄_ö˛udes
 = 
js⁄_mk¨øy
();

39 
size_t
 
	gi
 = 0; i < 
	gsour˚_ödex
.
size
(); ++i) {

40 c⁄° *
	gö˛ude
 = 
löks
[
sour˚_ödex
[
i
]].
c_°r
();

41 
Js⁄Node
 *
	gjs⁄_ö˛ude
 = 
js⁄_mk°rög
(
ö˛ude
);

42 
js⁄_≠≥nd_ñemít
(
js⁄_ö˛udes
, 
js⁄_ö˛ude
);

44 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "sour˚s", 
js⁄_ö˛udes
);

46 i‡(
	gö˛ude_sour˚s
) {

47 
Js⁄Node
 *
	gjs⁄_c⁄ã¡s
 = 
js⁄_mk¨øy
();

48 
size_t
 
	gi
 = 0; i < 
	gsour˚_ödex
.
size
(); ++i) {

49 c⁄° 
	gResour˚
& 
ªsour˚
(
sour˚s
[
sour˚_ödex
[
i
]]);

50 
Js⁄Node
 *
	gjs⁄_c⁄ã¡
 = 
js⁄_mk°rög
(
ªsour˚
.
c⁄ã¡s
);

51 
js⁄_≠≥nd_ñemít
(
js⁄_c⁄ã¡s
, 
js⁄_c⁄ã¡
);

53 i‡(
	gjs⁄_c⁄ã¡s
->
	gchûdªn
.
	ghód
)

54 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "sour˚sC⁄ã¡", 
js⁄_c⁄ã¡s
);

57 
	g°d
::
°rög
 
m≠pögs
 = 
£rülize_m≠pögs
();

58 
Js⁄Node
 *
	gjs⁄_m≠pögs
 = 
js⁄_mk°rög
(
m≠pögs
.
c_°r
());

59 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "m≠pögs", 
js⁄_m≠pögs
);

61 
Js⁄Node
 *
	gjs⁄_«mes
 = 
js⁄_mk¨øy
();

64 
js⁄_≠≥nd_membî
(
js⁄_§cm≠
, "«mes", 
js⁄_«mes
);

66 *
	g°r
 = 
js⁄_°rögify
(
js⁄_§cm≠
, "\t");

67 
	g°d
::
°rög
 
ªsu…
 = 
°d
::°rög(
°r
);

68 
‰ì
(
°r
);

69 
js⁄_dñëe
(
js⁄_§cm≠
);

70  
	gªsu…
;

73 
	g°d
::
°rög
 
Sour˚M≠
::
£rülize_m≠pögs
() {

74 
°d
::
°rög
 
ªsu…
 = "";

76 
size_t
 
	g¥evious_gíî©ed_löe
 = 0;

77 
size_t
 
	g¥evious_gíî©ed_cﬁumn
 = 0;

78 
size_t
 
	g¥evious_‹igöÆ_löe
 = 0;

79 
size_t
 
	g¥evious_‹igöÆ_cﬁumn
 = 0;

80 
size_t
 
	g¥evious_‹igöÆ_fûe
 = 0;

81 
size_t
 
	gi
 = 0; i < 
	gm≠pögs
.
size
(); ++i) {

82 c⁄° 
size_t
 
	ggíî©ed_löe
 = 
m≠pögs
[
i
].
gíî©ed_posôi⁄
.
löe
;

83 c⁄° 
size_t
 
	ggíî©ed_cﬁumn
 = 
m≠pögs
[
i
].
gíî©ed_posôi⁄
.
cﬁumn
;

84 c⁄° 
size_t
 
	g‹igöÆ_löe
 = 
m≠pögs
[
i
].
‹igöÆ_posôi⁄
.
löe
;

85 c⁄° 
size_t
 
	g‹igöÆ_cﬁumn
 = 
m≠pögs
[
i
].
‹igöÆ_posôi⁄
.
cﬁumn
;

86 c⁄° 
size_t
 
	g‹igöÆ_fûe
 = 
m≠pögs
[
i
].
‹igöÆ_posôi⁄
.
fûe
;

88 i‡(
	ggíî©ed_löe
 !
¥evious_gíî©ed_löe
) {

89 
¥evious_gíî©ed_cﬁumn
 = 0;

90 i‡(
	ggíî©ed_löe
 > 
	g¥evious_gíî©ed_löe
) {

91 
	gªsu…
 +
°d
::
°rög
(
gíî©ed_löe
 - 
¥evious_gíî©ed_löe
, ';');

92 
	g¥evious_gíî©ed_löe
 = 
gíî©ed_löe
;

95 i‡(
	gi
 > 0) {

96 
	gªsu…
 += ",";

100 
	gªsu…
 +
ba£64vlq
.
ícode
(
°©ic_ˇ°
<>(
gíî©ed_cﬁumn
Ë- sètic_ˇ°<>(
¥evious_gíî©ed_cﬁumn
));

101 
	g¥evious_gíî©ed_cﬁumn
 = 
gíî©ed_cﬁumn
;

103 
	gªsu…
 +
ba£64vlq
.
ícode
(
°©ic_ˇ°
<>(
‹igöÆ_fûe
Ë- sètic_ˇ°<>(
¥evious_‹igöÆ_fûe
));

104 
	g¥evious_‹igöÆ_fûe
 = 
‹igöÆ_fûe
;

106 
	gªsu…
 +
ba£64vlq
.
ícode
(
°©ic_ˇ°
<>(
‹igöÆ_löe
Ë- sètic_ˇ°<>(
¥evious_‹igöÆ_löe
));

107 
	g¥evious_‹igöÆ_löe
 = 
‹igöÆ_löe
;

109 
	gªsu…
 +
ba£64vlq
.
ícode
(
°©ic_ˇ°
<>(
‹igöÆ_cﬁumn
Ë- sètic_ˇ°<>(
¥evious_‹igöÆ_cﬁumn
));

110 
	g¥evious_‹igöÆ_cﬁumn
 = 
‹igöÆ_cﬁumn
;

113  
	gªsu…
;

116 
	gSour˚M≠
::
¥ïíd
(c⁄° 
OuçutBuf„r
& 
out
)

118 
Off£t
 
size
(
out
.
sm≠
.
cuºít_posôi⁄
);

119 
M≠pög
 
	gm≠pög
 : 
out
.
sm≠
.
m≠pögs
) {

120 i‡(
m≠pög
.
gíî©ed_posôi⁄
.
löe
 > 
size
.line) {

121 
throw
(
°d
::
ru¡ime_îr‹
("prepend sourcemap has illegalÜine"));

123 i‡(
	gm≠pög
.
	ggíî©ed_posôi⁄
.
	glöe
 =
size
.
löe
) {

124 i‡(
m≠pög
.
gíî©ed_posôi⁄
.
cﬁumn
 > 
size
.column) {

125 
throw
(
°d
::
ru¡ime_îr‹
("prepend sourcemap has illegal column"));

130 
¥ïíd
(
Off£t
(
out
.
buf„r
));

132 
VECTOR_UNSHIFT
(
m≠pögs
, 
out
.
sm≠
.mappings);

135 
	gSour˚M≠
::
≠≥nd
(c⁄° 
OuçutBuf„r
& 
out
)

137 
≠≥nd
(
Off£t
(
out
.
buf„r
));

140 
	gSour˚M≠
::
¥ïíd
(c⁄° 
Off£t
& 
off£t
)

142 i‡(
off£t
.
löe
 !0 || off£t.
cﬁumn
 != 0) {

143 
M≠pög
& 
m≠pög
 : 
m≠pögs
) {

145 i‡(
m≠pög
.
gíî©ed_posôi⁄
.
löe
 == 0) {

146 
m≠pög
.
gíî©ed_posôi⁄
.
cﬁumn
 +
off£t
.column;

149 
	gm≠pög
.
	ggíî©ed_posôi⁄
.
	glöe
 +
off£t
.
löe
;

152 i‡(
	gcuºít_posôi⁄
.
	glöe
 == 0) {

153 
cuºít_posôi⁄
.
cﬁumn
 +
off£t
.column;

155 
	gcuºít_posôi⁄
.
	glöe
 +
off£t
.
löe
;

158 
	gSour˚M≠
::
≠≥nd
(c⁄° 
Off£t
& 
off£t
)

160 
cuºít_posôi⁄
 +
off£t
;

163 
	gSour˚M≠
::
add_›í_m≠pög
(c⁄° 
AST_Node
* 
node
)

165 
m≠pögs
.
push_back
(
M≠pög
(
node
->
p°©e
(), 
cuºít_posôi⁄
));

168 
	gSour˚M≠
::
add_˛o£_m≠pög
(c⁄° 
AST_Node
* 
node
)

170 
m≠pögs
.
push_back
(
M≠pög
(
node
->
p°©e
(Ë+Çode->p°©e().
off£t
, 
cuºít_posôi⁄
));

173 
P¨£rSèã
 
	gSour˚M≠
::
ªm≠
(c⁄° P¨£rSèã& 
p°©e
) {

174 
size_t
 
i
 = 0; 
	gi
 < 
	gm≠pögs
.
size
(); ++i) {

176 
	gm≠pögs
[
i
].
	ggíî©ed_posôi⁄
.
	gfûe
 =
p°©e
.
fûe
 &&

177 
m≠pögs
[
i
].
gíî©ed_posôi⁄
.
löe
 =
p°©e
.line &&

178 
m≠pögs
[
i
].
gíî©ed_posôi⁄
.
cﬁumn
 =
p°©e
.column

179 Ë 
P¨£rSèã
(
p°©e
.
∑th
,Ö°©e.
§c
, 
m≠pögs
[
i
].
‹igöÆ_posôi⁄
,Ö°©e.
off£t
);

181  
P¨£rSèã
(
p°©e
.
∑th
,Ö°©e.
§c
, 
Posôi⁄
(-1, -1, -1), 
Off£t
(0, 0));

	@node_modules/node-sass/src/libsass/src/source_map.hpp

1 #i‚de‡
SASS_SOURCE_MAP_H


2 
	#SASS_SOURCE_MAP_H


	)

4 
	~<°rög
>

5 
	~<ve˘‹
>

7 
	~"a°_fwd_de˛.hµ
"

8 
	~"ba£64vlq.hµ
"

9 
	~"posôi⁄.hµ
"

10 
	~"m≠pög.hµ
"

12 
	#VECTOR_PUSH
(
vec
, 
ös
Ëvec.
	`ö£π
(vec.
	`íd
(), ins.
	`begö
(), ins.íd())

	)

13 
	#VECTOR_UNSHIFT
(
vec
, 
ös
Ëvec.
	`ö£π
(vec.
	`begö
(), ins.begö(), ins.
	`íd
())

	)

15 
«me•a˚
 
	gSass
 {

17 
˛ass
 
	gC⁄ãxt
;

18 
˛ass
 
	gOuçutBuf„r
;

20 ˛as†
	cSour˚M≠
 {

22 
	gpublic
:

23 
°d
::
ve˘‹
<
size_t
> 
sour˚_ödex
;

24 
Sour˚M≠
();

25 
Sour˚M≠
(c⁄° 
°d
::
°rög
& 
fûe
);

27 
≠≥nd
(c⁄° 
Off£t
& 
off£t
);

28 
¥ïíd
(c⁄° 
Off£t
& 
off£t
);

29 
≠≥nd
(c⁄° 
OuçutBuf„r
& 
out
);

30 
¥ïíd
(c⁄° 
OuçutBuf„r
& 
out
);

31 
add_›í_m≠pög
(c⁄° 
AST_Node
* 
node
);

32 
add_˛o£_m≠pög
(c⁄° 
AST_Node
* 
node
);

34 
	g°d
::
°rög
 
ªndî_§cm≠
(
C⁄ãxt
 &
˘x
);

35 
P¨£rSèã
 
ªm≠
(c⁄° P¨£rSèã& 
p°©e
);

37 
	g¥iv©e
:

39 
°d
::
°rög
 
£rülize_m≠pögs
();

41 
	g°d
::
ve˘‹
<
M≠pög
> 
m≠pögs
;

42 
Posôi⁄
 
	gcuºít_posôi⁄
;

43 
	gpublic
:

44 
°d
::
°rög
 
fûe
;

45 
	g¥iv©e
:

46 
Ba£64VLQ
 
ba£64vlq
;

49 ˛as†
	cOuçutBuf„r
 {

50 
	gpublic
:

51 
OuçutBuf„r
()

52 : 
buf„r
(""),

53 
sm≠
()

55 
	gpublic
:

56 
°d
::
°rög
 
buf„r
;

57 
Sour˚M≠
 
	gsm≠
;

	@node_modules/node-sass/src/libsass/src/subset_map.hpp

1 #i‚de‡
SASS_SUBSET_MAP_H


2 
	#SASS_SUBSET_MAP_H


	)

4 
	~<m≠
>

5 
	~<£t
>

6 
	~<ve˘‹
>

7 
	~<Æg‹ôhm
>

8 
	~<ôî©‹
>

57 
«me•a˚
 
	gSass
 {

59 
	gãm∂©e
<
ty≥«me
 
	gF
,Åy≥«mê
	gS
,Åy≥«mê
	gT
>

60 
	såùÀ
 {

61 
F
 
	gfú°
;

62 
S
 
	g£c⁄d
;

63 
T
 
	gthúd
;

65 
åùÀ
(c⁄° 
F
& 
f
, c⁄° 
S
& 
s
, c⁄° 
T
& 
t
Ë: 
fú°
(f), 
£c⁄d
(s), 
thúd
(t) { }

68 
	gãm∂©e
<
ty≥«me
 
	gF
,Åy≥«mê
	gS
,Åy≥«mê
	gT
>

69 
	gåùÀ
<
	gF
, 
	gS
, 
	gT
> 
make_åùÀ
(c⁄° 
F
& 
f
, c⁄° 
S
& 
s
, c⁄° 
T
& 
t
)

70 {  
	gåùÀ
<
	gF
, 
	gS
, 
	gT
>(
	gf
, 
	gs
, 
	gt
); }

72 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

73 ˛as†
	cSub£t_M≠
 {

74 
	g¥iv©e
:

75 
°d
::
ve˘‹
<
V
> 
vÆues_
;

76 
	g°d
::
m≠
<
K
, std::
ve˘‹
<
åùÀ
<
°d
::ve˘‹<K>, std::
£t
<K>, 
	gsize_t
> > > 
	ghash_
;

77 
	gpublic
:

78 
put
(c⁄° 
°d
::
ve˘‹
<
K
>& 
s
, c⁄° 
V
& 
vÆue
);

79 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
V
, std::ve˘‹<
K
> > > 
gë_kv
(c⁄° std::ve˘‹<K>& 
s
);

80 
	g°d
::
ve˘‹
<
V
> 
gë_v
(c⁄° 
°d
::ve˘‹<
K
>& 
s
);

81 
boﬁ
 
em±y
(Ë{  
	gvÆues_
.empty(); }

82 
˛ór
(Ë{ 
	gvÆues_
.˛ór(); 
	ghash_
.clear(); }

83 c⁄° 
	g°d
::
ve˘‹
<
V
> 
vÆues
(Ë{  
vÆues_
; }

86 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

87 
	gSub£t_M≠
<
	gK
, 
	gV
>::
put
(c⁄° 
°d
::
ve˘‹
<
K
>& 
s
, c⁄° 
V
& 
vÆue
)

89 i‡(
	gs
.
em±y
()Ë
	gthrow
 "internalÉrror: subset map keys mayÇot beÉmpty";

90 
size_t
 
	gödex
 = 
vÆues_
.
size
();

91 
	gvÆues_
.
push_back
(
vÆue
);

92 
	g°d
::
£t
<
K
> 
ss
;

93 
size_t
 
	gi
 = 0, 
	gS
 = 
s
.
size
(); i < S; ++i)

94 { 
	gss
.
ö£π
(
s
[
i
]); }

95 
size_t
 
	gi
 = 0, 
	gS
 = 
s
.
size
(); i < S; ++i)

97 
	ghash_
[
s
[
i
]].
push_back
(
make_åùÀ
(s, 
ss
, 
ödex
));

101 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

102 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
V
, std::ve˘‹<
K
> > > 
Sub£t_M≠
<K, 
	gV
>::
gë_kv
(c⁄° std::ve˘‹<K>& 
s
)

104 
°d
::
ve˘‹
<
K
> 
s‹ãd
 = 
s
;

105 
s‹t
(
s‹ãd
.
begö
(), s‹ãd.
íd
());

106 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
size_t
, std::ve˘‹<
K
> > > 
ödi˚s
;

107 
size_t
 
	gi
 = 0, 
	gS
 = 
s
.
size
(); i < S; ++i) {

108 i‡(!
	ghash_
.
cou¡
(
s
[
i
])) {

111 
	g°d
::
ve˘‹
<
åùÀ
<
°d
::ve˘‹<
K
>, std::
£t
<K>, 
	gsize_t
> > 
	gsub£ts
 = 
hash_
[
s
[
i
]];

113 
size_t
 
	gj
 = 0, 
	gT
 = 
sub£ts
.
size
(); j < T; ++j) {

114 i‡(!
ö˛udes
(
s‹ãd
.
begö
(), s‹ãd.
íd
(), 
sub£ts
[
j
].
£c⁄d
.begin(), subsets[j].second.end())) {

118 
	gödi˚s
.
push_back
(
°d
::
make_∑ú
(
sub£ts
[
j
].
thúd
, sub£ts[j].
fú°
));

122 
s‹t
(
ödi˚s
.
begö
(), indi˚s.
íd
());

123 
ty≥«me
 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
size_t
, std::ve˘‹<
K
> > >::
ôî©‹
 
ödi˚s_íd
 = 
unique
(
ödi˚s
.
begö
(), indi˚s.
íd
());

124 
	gödi˚s
.
ªsize
(
di°™˚
(
ödi˚s
.
begö
(), 
ödi˚s_íd
));

126 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
V
, std::ve˘‹<
K
> > > 
ªsu…s
;

127 
size_t
 
	gi
 = 0, 
	gS
 = 
ödi˚s
.
size
(); i < S; ++i) {

128 
	gªsu…s
.
push_back
(
°d
::
make_∑ú
(
vÆues_
[
ödi˚s
[
i
].
fú°
], indi˚s[i].
£c⁄d
));

130  
	gªsu…s
;

133 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

134 
	g°d
::
ve˘‹
<
V
> 
Sub£t_M≠
<
K
, 
	gV
>::
gë_v
(c⁄° 
°d
::ve˘‹<K>& 
s
)

136 
°d
::
ve˘‹
<°d::
∑ú
<
V
, 
	g°d
::ve˘‹<
K
> > > 
kvs
 = 
gë_kv
(
s
);

137 
	g°d
::
ve˘‹
<
V
> 
ªsu…s
;

138 
size_t
 
	gi
 = 0, 
	gS
 = 
kvs
.
size
(); i < S; ++iË
	gªsu…s
.
push_back
(kvs[
i
].
fú°
);

139  
	gªsu…s
;

	@node_modules/node-sass/src/libsass/src/to_c.cpp

1 
	~"ßss.hµ
"

2 
	~"to_c.hµ
"

3 
	~"a°.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
Sass_VÆue
* 
	gTo_C
::
ÁŒback_im∂
(
AST_Node
* 
n
)

8 {  
ßss_make_îr‹
("unknownÅype for C-API"); }

10 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Boﬁón
* 
b
)

11 {  
ßss_make_boﬁón
(
b
->
vÆue
()); }

13 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Numbî
* 
n
)

14 {  
ßss_make_numbî
(
n
->
vÆue
(),Ç->
unô
().
c_°r
()); }

16 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Cu°om_W¨nög
* 
w
)

17 {  
ßss_make_w¨nög
(
w
->
mesßge
().
c_°r
()); }

19 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Cu°om_Eº‹
* 
e
)

20 {  
ßss_make_îr‹
(
e
->
mesßge
().
c_°r
()); }

22 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Cﬁ‹
* 
c
)

23 {  
ßss_make_cﬁ‹
(
c
->
r
(), c->
g
(), c->
b
(), c->
a
()); }

25 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Såög_C⁄°™t
* 
s
)

27 i‡(
s
->
quŸe_m¨k
()) {

28  
ßss_make_q°rög
(
s
->
vÆue
().
c_°r
());

30  
ßss_make_°rög
(
s
->
vÆue
().
c_°r
());

34 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Såög_QuŸed
* 
s
)

35 {  
ßss_make_q°rög
(
s
->
vÆue
().
c_°r
()); }

37 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Li°
* 
l
)

39 
Sass_VÆue
* 
v
 = 
ßss_make_li°
(
l
->
Àngth
(),Ü->
£∑øt‹
());

40 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

41 
ßss_li°_£t_vÆue
(
v
, 
i
, (*
l
)[i]->
≥rf‹m
(
this
));

43  
	gv
;

46 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
M≠
* 
m
)

48 
Sass_VÆue
* 
v
 = 
ßss_make_m≠
(
m
->
Àngth
());

49 
	gi
 = 0;

50 autÿ
	gkey
 : 
m
->
keys
()) {

51 
ßss_m≠_£t_key
(
v
, 
i
, 
key
->
≥rf‹m
(
this
));

52 
ßss_m≠_£t_vÆue
(
v
, 
i
, 
m
->
©
(
key
)->
≥rf‹m
(
this
));

53 
	gi
++;

55  
	gv
;

58 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Argumíts
* 
a
)

60 
Sass_VÆue
* 
v
 = 
ßss_make_li°
(
a
->
Àngth
(), 
SASS_COMMA
);

61 
size_t
 
	gi
 = 0, 
	gL
 = 
a
->
Àngth
(); i < L; ++i) {

62 
ßss_li°_£t_vÆue
(
v
, 
i
, (*
a
)[i]->
≥rf‹m
(
this
));

64  
	gv
;

67 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
Argumít
* 
a
)

68 {  
a
->
vÆue
()->
≥rf‹m
(
this
); }

71 
Sass_VÆue
* 
	gTo_C
::
›î©‹
()(
NuŒ
* 
n
)

72 {  
ßss_make_nuŒ
(); }

	@node_modules/node-sass/src/libsass/src/to_c.hpp

1 #i‚de‡
SASS_TO_C_H


2 
	#SASS_TO_C_H


	)

4 
	~"a°_fwd_de˛.hµ
"

5 
	~"›î©i⁄.hµ
"

6 
	~"ßss/vÆues.h
"

8 
«me•a˚
 
	gSass
 {

10 
˛ass
 
	gTo_C
 : 
public
 
O≥øti⁄_CRTP
<
Sass_VÆue
*, To_C> {

12 
Sass_VÆue
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

14 
	gpublic
:

16 
To_C
() { }

17 ~
To_C
() { }

19 
Sass_VÆue
* 
›î©‹
()(
Boﬁón
*);

20 
Sass_VÆue
* 
›î©‹
()(
	gNumbî
*);

21 
Sass_VÆue
* 
›î©‹
()(
	gCﬁ‹
*);

22 
Sass_VÆue
* 
›î©‹
()(
	gSåög_C⁄°™t
*);

23 
Sass_VÆue
* 
›î©‹
()(
	gSåög_QuŸed
*);

24 
Sass_VÆue
* 
›î©‹
()(
	gCu°om_W¨nög
*);

25 
Sass_VÆue
* 
›î©‹
()(
	gCu°om_Eº‹
*);

26 
Sass_VÆue
* 
›î©‹
()(
	gLi°
*);

27 
Sass_VÆue
* 
›î©‹
()(
	gM≠
*);

28 
Sass_VÆue
* 
›î©‹
()(
	gNuŒ
*);

29 
Sass_VÆue
* 
›î©‹
()(
	gArgumíts
*);

30 
Sass_VÆue
* 
›î©‹
()(
	gArgumít
*);

33 
Sass_VÆue
* 
ÁŒback
(
AST_Node
* 
x
)

34 {  
ÁŒback_im∂
(
x
); }

	@node_modules/node-sass/src/libsass/src/to_value.cpp

1 
	~"ßss.hµ
"

2 
	~"a°.hµ
"

3 
	~"to_vÆue.hµ
"

5 
«me•a˚
 
	gSass
 {

7 
VÆue
* 
	gTo_VÆue
::
ÁŒback_im∂
(
AST_Node
* 
n
)

11 
throw
 
°d
::
ru¡ime_îr‹
("invalidÇode forÅo_value");

17 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Cu°om_Eº‹
* 
e
)

19  
e
;

23 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Cu°om_W¨nög
* 
w
)

25  
w
;

29 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Boﬁón
* 
b
)

31  
b
;

35 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Numbî
* 
n
)

37  
n
;

41 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Cﬁ‹
* 
c
)

43  
c
;

47 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Såög_C⁄°™t
* 
s
)

49  
s
;

53 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Såög_QuŸed
* 
s
)

55  
s
;

59 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Li°
* 
l
)

61 
Li°
* 
Œ
 = 
SASS_MEMORY_NEW
(
mem
, List,

62 
l
->
p°©e
(),

63 
l
->
Àngth
(),

64 
l
->
£∑øt‹
(),

65 
l
->
is_¨gli°
());

66 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

67 *
	gŒ
 << (*
	gl
)[
i
]->
≥rf‹m
(
this
);

69  
	gŒ
;

73 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
M≠
* 
m
)

75  
m
;

79 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
NuŒ
* 
n
)

81  
n
;

85 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Argumít
* 
¨g
)

87 i‡(!
¨g
->
«me
().
em±y
())  0;

88  
	g¨g
->
vÆue
()->
≥rf‹m
(
this
);

92 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Sñe˘‹_Li°
* 
s
)

94  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
,

95 
s
->
p°©e
(),

96 
s
->
to_°rög
(
˘x
.
c_›ti⁄s
));

100 
VÆue
* 
	gTo_VÆue
::
›î©‹
()(
Bö¨y_Ex¥essi⁄
* 
s
)

102  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
,

103 
s
->
p°©e
(),

104 
s
->
to_°rög
(
˘x
.
c_›ti⁄s
));

	@node_modules/node-sass/src/libsass/src/to_value.hpp

1 #i‚de‡
SASS_TO_VALUE_H


2 
	#SASS_TO_VALUE_H


	)

4 
	~"›î©i⁄.hµ
"

5 
	~"ßss/vÆues.h
"

6 
	~"a°_fwd_de˛.hµ
"

8 
«me•a˚
 
	gSass
 {

10 
˛ass
 
	gTo_VÆue
 : 
public
 
O≥øti⁄_CRTP
<
VÆue
*, To_Value> {

12 
VÆue
* 
ÁŒback_im∂
(
AST_Node
* 
n
);

14 
	g¥iv©e
:

16 
C⁄ãxt
& 
˘x
;

17 
	gMem‹y_M™agî
& 
	gmem
;

19 
	gpublic
:

21 
To_VÆue
(
C⁄ãxt
& 
˘x
, 
Mem‹y_M™agî
& 
mem
)

22 : 
˘x
(˘x), 
mem
(mem)

24 ~
To_VÆue
() { }

25 
usög
 
	gO≥øti⁄
<
	gVÆue
*>::
›î©‹
();

27 
VÆue
* 
›î©‹
()(
	gArgumít
*);

28 
VÆue
* 
›î©‹
()(
	gBoﬁón
*);

29 
VÆue
* 
›î©‹
()(
	gNumbî
*);

30 
VÆue
* 
›î©‹
()(
	gCﬁ‹
*);

31 
VÆue
* 
›î©‹
()(
	gSåög_C⁄°™t
*);

32 
VÆue
* 
›î©‹
()(
	gSåög_QuŸed
*);

33 
VÆue
* 
›î©‹
()(
	gCu°om_W¨nög
*);

34 
VÆue
* 
›î©‹
()(
	gCu°om_Eº‹
*);

35 
VÆue
* 
›î©‹
()(
	gLi°
*);

36 
VÆue
* 
›î©‹
()(
	gM≠
*);

37 
VÆue
* 
›î©‹
()(
	gNuŒ
*);

40 
VÆue
* 
›î©‹
()(
	gSñe˘‹_Li°
*);

41 
VÆue
* 
›î©‹
()(
	gBö¨y_Ex¥essi⁄
*);

44 
	gãm∂©e
 <
ty≥«me
 
	gU
>

45 
VÆue
* 
ÁŒback
(
U
 
x
Ë{  
ÁŒback_im∂
(x); }

	@node_modules/node-sass/src/libsass/src/units.cpp

1 
	~"ßss.hµ
"

2 
	~<°dex˚±
>

3 
	~"unôs.hµ
"

5 
«me•a˚
 
	gSass
 {

12 c⁄° 
	gsize_c⁄vîsi⁄_Á˘‹s
[6][6] =

23 c⁄° 
	g™gÀ_c⁄vîsi⁄_Á˘‹s
[4][4] =

26  { 1, 40.0/36.0, 
PI
/180.0, 1.0/360.0 },

27  { 36.0/40.0, 1, 
PI
/200.0, 1.0/400.0 },

28  { 180.0/
PI
, 200.0/PI, 1, 0.5/PI },

29  { 360.0, 400.0, 2.0*
PI
, 1 }

32 c⁄° 
	gtime_c⁄vîsi⁄_Á˘‹s
[2][2] =

38 c⁄° 
	g‰equícy_c⁄vîsi⁄_Á˘‹s
[2][2] =

44 c⁄° 
	gªsﬁuti⁄_c⁄vîsi⁄_Á˘‹s
[3][3] =

52 
UnôCœss
 
gë_unô_ty≥
(
UnôTy≥
 
unô
)

54 
	gunô
 & 0xFF00)

56 
	gUnôCœss
::
LENGTH
:  
UnôCœss
::LENGTH; ;

57 
	gUnôCœss
::
ANGLE
:  
UnôCœss
::ANGLE; ;

58 
	gUnôCœss
::
TIME
:  
UnôCœss
::TIME; ;

59 
	gUnôCœss
::
FREQUENCY
:  
UnôCœss
::FREQUENCY; ;

60 
	gUnôCœss
::
RESOLUTION
:  
UnôCœss
::RESOLUTION; ;

61 :  
UnôCœss
::
INCOMMENSURABLE
; ;

65 
	g°d
::
°rög
 
gë_unô_˛ass
(
UnôTy≥
 
unô
)

67 
unô
 & 0xFF00)

69 
UnôCœss
::
LENGTH
:  "LENGTH"; ;

70 
	gUnôCœss
::
ANGLE
:  "ANGLE"; ;

71 
	gUnôCœss
::
TIME
:  "TIME"; ;

72 
	gUnôCœss
::
FREQUENCY
:  "FREQUENCY"; ;

73 
	gUnôCœss
::
RESOLUTION
:  "RESOLUTION"; ;

78 
UnôTy≥
 
°rög_to_unô
(c⁄° 
°d
::
°rög
& 
s
)

81 i‡(
s
 ="px"Ë 
UnôTy≥
::
PX
;

82 i‡(
	gs
 ="±"Ë 
UnôTy≥
::
PT
;

83 i‡(
	gs
 ="pc"Ë 
UnôTy≥
::
PC
;

84 i‡(
	gs
 ="mm"Ë 
UnôTy≥
::
MM
;

85 i‡(
	gs
 ="cm"Ë 
UnôTy≥
::
CM
;

86 i‡(
	gs
 ="ö"Ë 
UnôTy≥
::
IN
;

88 i‡(
	gs
 ="deg"Ë 
UnôTy≥
::
DEG
;

89 i‡(
	gs
 ="gød"Ë 
UnôTy≥
::
GRAD
;

90 i‡(
	gs
 ="ød"Ë 
UnôTy≥
::
RAD
;

91 i‡(
	gs
 ="tu∫"Ë 
UnôTy≥
::
TURN
;

93 i‡(
	gs
 ="s"Ë 
UnôTy≥
::
SEC
;

94 i‡(
	gs
 ="ms"Ë 
UnôTy≥
::
MSEC
;

96 i‡(
	gs
 ="Hz"Ë 
UnôTy≥
::
HERTZ
;

97 i‡(
	gs
 ="kHz"Ë 
UnôTy≥
::
KHERTZ
;

99 i‡(
	gs
 ="dpi"Ë 
UnôTy≥
::
DPI
;

100 i‡(
	gs
 ="dpcm"Ë 
UnôTy≥
::
DPCM
;

101 i‡(
	gs
 ="dµx"Ë 
UnôTy≥
::
DPPX
;

103  
	gUnôTy≥
::
UNKNOWN
;

106 c⁄° * 
unô_to_°rög
(
UnôTy≥
 
unô
)

108 
	gunô
) {

110 
	gUnôTy≥
::
PX
:  "px"; ;

111 
	gUnôTy≥
::
PT
:  "pt"; ;

112 
	gUnôTy≥
::
PC
:  "pc"; ;

113 
	gUnôTy≥
::
MM
:  "mm"; ;

114 
	gUnôTy≥
::
CM
:  "cm"; ;

115 
	gUnôTy≥
::
IN
:  "in"; ;

117 
	gUnôTy≥
::
DEG
:  "deg"; ;

118 
	gUnôTy≥
::
GRAD
:  "grad"; ;

119 
	gUnôTy≥
::
RAD
:  "rad"; ;

120 
	gUnôTy≥
::
TURN
:  "turn"; ;

122 
	gUnôTy≥
::
SEC
:  "s"; ;

123 
	gUnôTy≥
::
MSEC
:  "ms"; ;

125 
	gUnôTy≥
::
HERTZ
:  "Hz"; ;

126 
	gUnôTy≥
::
KHERTZ
:  "kHz"; ;

128 
	gUnôTy≥
::
DPI
:  "dpi"; ;

129 
	gUnôTy≥
::
DPCM
:  "dpcm"; ;

130 
	gUnôTy≥
::
DPPX
:  "dppx"; ;

136 
	g°d
::
°rög
 
unô_to_˛ass
(c⁄° 
°d
::°rög& 
s
)

138 i‡(
s
 == "px")  "LENGTH";

139 i‡(
	gs
 == "pt")  "LENGTH";

140 i‡(
	gs
 == "pc")  "LENGTH";

141 i‡(
	gs
 == "mm")  "LENGTH";

142 i‡(
	gs
 == "cm")  "LENGTH";

143 i‡(
	gs
 == "in")  "LENGTH";

145 i‡(
	gs
 == "deg")  "ANGLE";

146 i‡(
	gs
 == "grad")  "ANGLE";

147 i‡(
	gs
 == "rad")  "ANGLE";

148 i‡(
	gs
 == "turn")  "ANGLE";

150 i‡(
	gs
 == "s")  "TIME";

151 i‡(
	gs
 == "ms")  "TIME";

153 i‡(
	gs
 == "Hz")  "FREQUENCY";

154 i‡(
	gs
 == "kHz")  "FREQUENCY";

156 i‡(
	gs
 == "dpi")  "RESOLUTION";

157 i‡(
	gs
 == "dpcm")  "RESOLUTION";

158 i‡(
	gs
 == "dppx")  "RESOLUTION";

160  "CUSTOM:" + 
	gs
;

164 
c⁄vîsi⁄_Á˘‹
(c⁄° 
°d
::
°rög
& 
s1
, c⁄° std::°rög& 
s2
, 
boﬁ
 
°ri˘
)

167 i‡(
	gs1
 =
s2
)  1;

169 
UnôTy≥
 
	gu1
 = 
°rög_to_unô
(
s1
);

170 
UnôTy≥
 
	gu2
 = 
°rög_to_unô
(
s2
);

172 
UnôCœss
 
	gt1
 = 
gë_unô_ty≥
(
u1
);

173 
UnôCœss
 
	gt2
 = 
gë_unô_ty≥
(
u2
);

176 
size_t
 
	gi1
 = 
u1
 - 
t1
;

177 
size_t
 
	gi2
 = 
u2
 - 
t2
;

180 i‡(
	g°ri˘
 && 
	gt1
 !
t2
Ë
throw
 
öcom∑tibÀUnôs
(
u1
, 
u2
);

182 i‡(
	gu1
 !
UNKNOWN
 && 
u2
 != UNKNOWN) {

183 
t1
) {

184 
UnôCœss
::
LENGTH
:  
size_c⁄vîsi⁄_Á˘‹s
[
i1
][
i2
]; ;

185 
	gUnôCœss
::
ANGLE
:  
™gÀ_c⁄vîsi⁄_Á˘‹s
[
i1
][
i2
]; ;

186 
	gUnôCœss
::
TIME
:  
time_c⁄vîsi⁄_Á˘‹s
[
i1
][
i2
]; ;

187 
	gUnôCœss
::
FREQUENCY
:  
‰equícy_c⁄vîsi⁄_Á˘‹s
[
i1
][
i2
]; ;

188 
	gUnôCœss
::
RESOLUTION
:  
ªsﬁuti⁄_c⁄vîsi⁄_Á˘‹s
[
i1
][
i2
]; ;

190 
	gUnôCœss
::
INCOMMENSURABLE
:  0; ;

	@node_modules/node-sass/src/libsass/src/units.hpp

1 #i‚de‡
SASS_UNITS_H


2 
	#SASS_UNITS_H


	)

4 
	~<cm©h
>

5 
	~<°rög
>

6 
	~<s°ªam
>

8 
«me•a˚
 
	gSass
 {

10 c⁄° 
	gPI
 = 
°d
::
acos
(-1);

12 
	eUnôCœss
 {

13 
	gLENGTH
 = 0x000,

14 
	gANGLE
 = 0x100,

15 
	gTIME
 = 0x200,

16 
	gFREQUENCY
 = 0x300,

17 
	gRESOLUTION
 = 0x400,

18 
	gINCOMMENSURABLE
 = 0x500

21 
	eUnôTy≥
 {

24 
	gIN
 = 
UnôCœss
::
LENGTH
,

25 
	gCM
,

26 
	gPC
,

27 
	gMM
,

28 
	gPT
,

29 
	gPX
,

32 
	gDEG
 = 
ANGLE
,

33 
	gGRAD
,

34 
	gRAD
,

35 
	gTURN
,

38 
	gSEC
 = 
TIME
,

39 
	gMSEC
,

42 
	gHERTZ
 = 
FREQUENCY
,

43 
	gKHERTZ
,

46 
	gDPI
 = 
RESOLUTION
,

47 
	gDPCM
,

48 
	gDPPX
,

51 
	gUNKNOWN
 = 
INCOMMENSURABLE


55 c⁄° 
size_c⁄vîsi⁄_Á˘‹s
[6][6];

56 c⁄° 
™gÀ_c⁄vîsi⁄_Á˘‹s
[4][4];

57 c⁄° 
time_c⁄vîsi⁄_Á˘‹s
[2][2];

58 c⁄° 
‰equícy_c⁄vîsi⁄_Á˘‹s
[2][2];

59 c⁄° 
ªsﬁuti⁄_c⁄vîsi⁄_Á˘‹s
[3][3];

61 
	gSass
::
UnôTy≥
 
°rög_to_unô
(c⁄° 
°d
::
°rög
&);

62 c⁄° * 
unô_to_°rög
(
Sass
::
UnôTy≥
 
unô
);

63 
	gSass
::
UnôCœss
 
gë_unô_ty≥
(
Sass
::
UnôTy≥
 
unô
);

64 
	g°d
::
°rög
 
gë_unô_˛ass
(
Sass
::
UnôTy≥
 
unô
);

65 
	g°d
::
°rög
 
unô_to_˛ass
(c⁄° 
°d
::string&);

67 
c⁄vîsi⁄_Á˘‹
(c⁄° 
°d
::
°rög
&, c⁄° std::°rög&, 
boﬁ
 = 
åue
);

69 ˛as†
	cöcom∑tibÀUnôs
: 
public
 
°d
::
ex˚±i⁄


71 
public
:

72 c⁄° * 
msg
;

73 
öcom∑tibÀUnôs
(
Sass
::
UnôTy≥
 
a
, Sass::UnôTy≥ 
b
)

74 : 
ex˚±i⁄
()

76 
°d
::
°rög°ªam
 
ss
;

77 
	gss
 << "Incompatible units: ";

78 
	gss
 << "'" << 
unô_to_°rög
(
a
) << "'ánd ";

79 
	gss
 << "'" << 
unô_to_°rög
(
b
) << "'";

80 
	gmsg
 = 
ss
.
°r
().
c_°r
();

82 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
()

84  
	gmsg
;

	@node_modules/node-sass/src/libsass/src/utf8.h

28 #i‚de‡
UTF8_FOR_CPP_2675DCD0_9480_4c0c_B92A_CC14C027B731


29 
	#UTF8_FOR_CPP_2675DCD0_9480_4c0c_B92A_CC14C027B731


	)

31 
	~"utf8/checked.h
"

32 
	~"utf8/unchecked.h
"

	@node_modules/node-sass/src/libsass/src/utf8/checked.h

28 #i‚de‡
UTF8_FOR_CPP_CHECKED_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


29 
	#UTF8_FOR_CPP_CHECKED_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


	)

31 
	~"c‹e.h
"

32 
	~<°dex˚±
>

34 
«me•a˚
 
	gutf8


37 ˛as†
	cex˚±i⁄
 : 
public
 ::
°d
::
ex˚±i⁄
 {

41 ˛as†
	cövÆid_code_poöt
 : 
public
 
ex˚±i⁄
 {

42 
uöt32_t
 
˝
;

43 
	gpublic
:

44 
övÆid_code_poöt
(
uöt32_t
 
˝
) : cp(cp) {}

45 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
() {  "Invalid codeÖoint"; }

46 
uöt32_t
 
code_poöt
(Ëc⁄° { 
	g˝
;}

49 ˛as†
	cövÆid_utf8
 : 
public
 
ex˚±i⁄
 {

50 
uöt8_t
 
u8
;

51 
	gpublic
:

52 
övÆid_utf8
 (
uöt8_t
 
u
Ë: 
u8
(u) {}

53 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
() {  "Invalid UTF-8"; }

54 
uöt8_t
 
utf8_o˘ë
(Ëc⁄° { 
	gu8
;}

57 ˛as†
	cövÆid_utf16
 : 
public
 
ex˚±i⁄
 {

58 
uöt16_t
 
u16
;

59 
	gpublic
:

60 
övÆid_utf16
 (
uöt16_t
 
u
Ë: 
u16
(u) {}

61 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
() {  "Invalid UTF-16"; }

62 
uöt16_t
 
utf16_w‹d
(Ëc⁄° { 
	gu16
;}

65 ˛as†
	cnŸ_íough_room
 : 
public
 
ex˚±i⁄
 {

66 
public
:

67 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
() {  "NotÉnough space"; }

72 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

73 
o˘ë_ôî©‹
 
	$≠≥nd
(
uöt32_t
 
˝
, 
o˘ë_ôî©‹
 
ªsu…
)

75 i‡(!
utf8
::
öã∫Æ
::
	`is_code_poöt_vÆid
(
˝
))

76 
throw
 
	`övÆid_code_poöt
(
˝
);

78 i‡(
˝
 < 0x80)

79 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(
˝
);

80 i‡(
˝
 < 0x800) {

81 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 6) | 0xc0);

82 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

84 i‡(
˝
 < 0x10000) {

85 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 12) | 0xe0);

86 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 6) & 0x3f) | 0x80);

87 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

90 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 18) | 0xf0);

91 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 12) & 0x3f) | 0x80);

92 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 6) & 0x3f) | 0x80);

93 *(
ªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

95  
ªsu…
;

96 
	}
}

98 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gouçut_ôî©‹
>

99 
ouçut_ôî©‹
 
	$ª∂a˚_övÆid
(
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, 
ouçut_ôî©‹
 
out
, 
uöt32_t
 
ª∂a˚mít
)

101 
°¨t
 !
íd
) {

102 
o˘ë_ôî©‹
 
£quí˚_°¨t
 = 
°¨t
;

103 
öã∫Æ
::
utf_îr‹
 
îr_code
 = 
utf8
::öã∫Æ::
	`vÆid©e_√xt
(
°¨t
, 
íd
);

104 
îr_code
) {

105 
öã∫Æ
::
UTF8_OK
 :

106 
o˘ë_ôî©‹
 
ô
 = 
£quí˚_°¨t
; ià!
°¨t
; ++it)

107 *
out
++ = *
ô
;

109 
öã∫Æ
::
NOT_ENOUGH_ROOM
:

110 
throw
 
	`nŸ_íough_room
();

111 
öã∫Æ
::
INVALID_LEAD
:

112 
out
 = 
utf8
::
	`≠≥nd
 (
ª∂a˚mít
, out);

113 ++
°¨t
;

115 
öã∫Æ
::
INCOMPLETE_SEQUENCE
:

116 
öã∫Æ
::
OVERLONG_SEQUENCE
:

117 
öã∫Æ
::
INVALID_CODE_POINT
:

118 
out
 = 
utf8
::
	`≠≥nd
 (
ª∂a˚mít
, out);

119 ++
°¨t
;

121 
°¨t
 !
íd
 && 
utf8
::
öã∫Æ
::
	`is_åaû
(*start))

122 ++
°¨t
;

126  
out
;

127 
	}
}

129 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gouçut_ôî©‹
>

130 
ölöe
 
ouçut_ôî©‹
 
	$ª∂a˚_övÆid
(
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, 
ouçut_ôî©‹
 
out
)

132 c⁄° 
uöt32_t
 
ª∂a˚mít_m¨kî
 = 
utf8
::
öã∫Æ
::
	`mask16
(0xfffd);

133  
utf8
::
	`ª∂a˚_övÆid
(
°¨t
, 
íd
, 
out
, 
ª∂a˚mít_m¨kî
);

134 
	}
}

136 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

137 
uöt32_t
 
	$√xt
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
)

139 
uöt32_t
 
˝
 = 0;

140 
öã∫Æ
::
utf_îr‹
 
îr_code
 = 
utf8
::öã∫Æ::
	`vÆid©e_√xt
(
ô
, 
íd
, 
˝
);

141 
îr_code
) {

142 
öã∫Æ
::
UTF8_OK
 :

144 
öã∫Æ
::
NOT_ENOUGH_ROOM
 :

145 
throw
 
	`nŸ_íough_room
();

146 
öã∫Æ
::
INVALID_LEAD
 :

147 
öã∫Æ
::
INCOMPLETE_SEQUENCE
 :

148 
öã∫Æ
::
OVERLONG_SEQUENCE
 :

149 
throw
 
	`övÆid_utf8
(*
ô
);

150 
öã∫Æ
::
INVALID_CODE_POINT
 :

151 
throw
 
	`övÆid_code_poöt
(
˝
);

153  
˝
;

154 
	}
}

156 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

157 
uöt32_t
 
	$≥ek_√xt
(
o˘ë_ôî©‹
 
ô
, o˘ë_ôî©‹ 
íd
)

159  
utf8
::
	`√xt
(
ô
, 
íd
);

160 
	}
}

162 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

163 
uöt32_t
 
	$¥i‹
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
°¨t
)

166 i‡(
ô
 =
°¨t
)

167 
throw
 
	`nŸ_íough_room
();

169 
o˘ë_ôî©‹
 
íd
 = 
ô
;

171 
utf8
::
öã∫Æ
::
	`is_åaû
(*(--
ô
)))

172 i‡(
ô
 =
°¨t
)

173 
throw
 
	`övÆid_utf8
(*
ô
);

174  
utf8
::
	`≥ek_√xt
(
ô
, 
íd
);

175 
	}
}

178 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

179 
uöt32_t
 
	$¥evious
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
∑ss_°¨t
)

181 
o˘ë_ôî©‹
 
íd
 = 
ô
;

182 
utf8
::
öã∫Æ
::
	`is_åaû
(*(--
ô
)))

183 i‡(
ô
 =
∑ss_°¨t
)

184 
throw
 
	`övÆid_utf8
(*
ô
);

185 
o˘ë_ôî©‹
 
ãmp
 = 
ô
;

186  
utf8
::
	`√xt
(
ãmp
, 
íd
);

187 
	}
}

189 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gdi°™˚_ty≥
>

190 
	$adv™˚
 (
o˘ë_ôî©‹
& 
ô
, 
di°™˚_ty≥
 
n
, o˘ë_ôî©‹ 
íd
)

192 
di°™˚_ty≥
 
i
 = 0; i < 
n
; ++i)

193 
utf8
::
	`√xt
(
ô
, 
íd
);

194 
	}
}

196 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

197 
ty≥«me
 
	g°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥


198 
	$di°™˚
 (
o˘ë_ôî©‹
 
fú°
, o˘ë_ôî©‹ 
œ°
)

200 
ty≥«me
 
°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥
 
di°
;

201 
di°
 = 0; 
fú°
 < 
œ°
; ++dist)

202 
utf8
::
	`√xt
(
fú°
, 
œ°
);

203  
di°
;

204 
	}
}

206 
	gãm∂©e
 <
ty≥«me
 
	gu16bô_ôî©‹
,Åy≥«mê
	go˘ë_ôî©‹
>

207 
o˘ë_ôî©‹
 
	$utf16to8
 (
u16bô_ôî©‹
 
°¨t
, u16bô_ôî©‹ 
íd
, 
o˘ë_ôî©‹
 
ªsu…
)

209 
°¨t
 !
íd
) {

210 
uöt32_t
 
˝
 = 
utf8
::
öã∫Æ
::
	`mask16
(*
°¨t
++);

212 i‡(
utf8
::
öã∫Æ
::
	`is_Àad_suºog©e
(
˝
)) {

213 i‡(
°¨t
 !
íd
) {

214 
uöt32_t
 
åaû_suºog©e
 = 
utf8
::
öã∫Æ
::
	`mask16
(*
°¨t
++);

215 i‡(
utf8
::
öã∫Æ
::
	`is_åaû_suºog©e
(
åaû_suºog©e
))

216 
˝
 = (˝ << 10Ë+ 
åaû_suºog©e
 + 
öã∫Æ
::
SURROGATE_OFFSET
;

218 
throw
 
	`övÆid_utf16
(
°©ic_ˇ°
<
uöt16_t
>(
åaû_suºog©e
));

221 
throw
 
	`övÆid_utf16
(
°©ic_ˇ°
<
uöt16_t
>(
˝
));

225 i‡(
utf8
::
öã∫Æ
::
	`is_åaû_suºog©e
(
˝
))

226 
throw
 
	`övÆid_utf16
(
°©ic_ˇ°
<
uöt16_t
>(
˝
));

228 
ªsu…
 = 
utf8
::
	`≠≥nd
(
˝
,Ñesult);

230  
ªsu…
;

231 
	}
}

233 
	gãm∂©e
 <
ty≥«me
 
	gu16bô_ôî©‹
,Åy≥«mê
	go˘ë_ôî©‹
>

234 
u16bô_ôî©‹
 
	$utf8to16
 (
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, 
u16bô_ôî©‹
 
ªsu…
)

236 
°¨t
 !
íd
) {

237 
uöt32_t
 
˝
 = 
utf8
::
	`√xt
(
°¨t
, 
íd
);

238 i‡(
˝
 > 0xffff) {

239 *
ªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>((
˝
 >> 10Ë+ 
öã∫Æ
::
LEAD_OFFSET
);

240 *
ªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>((
˝
 & 0x3ffË+ 
öã∫Æ
::
TRAIL_SURROGATE_MIN
);

243 *
ªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>(
˝
);

245  
ªsu…
;

246 
	}
}

248 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gu32bô_ôî©‹
>

249 
o˘ë_ôî©‹
 
	$utf32to8
 (
u32bô_ôî©‹
 
°¨t
, u32bô_ôî©‹ 
íd
, 
o˘ë_ôî©‹
 
ªsu…
)

251 
°¨t
 !
íd
)

252 
ªsu…
 = 
utf8
::
	`≠≥nd
(*(
°¨t
++),Ñesult);

254  
ªsu…
;

255 
	}
}

257 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gu32bô_ôî©‹
>

258 
u32bô_ôî©‹
 
	$utf8to32
 (
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, 
u32bô_ôî©‹
 
ªsu…
)

260 
°¨t
 !
íd
)

261 (*
ªsu…
++Ë
utf8
::
	`√xt
(
°¨t
, 
íd
);

263  
ªsu…
;

264 
	}
}

267 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

268 
˛ass
 
	gôî©‹
 : 
public
 
°d
::
ôî©‹
 <°d::
bidúe˘i⁄Æ_ôî©‹_èg
, 
	guöt32_t
> {

269 
o˘ë_ôî©‹
 
	gô
;

270 
o˘ë_ôî©‹
 
	gønge_°¨t
;

271 
o˘ë_ôî©‹
 
	gønge_íd
;

272 
	gpublic
:

273 
ôî©‹
 () {}

274 
ex∂icô
 
ôî©‹
 (c⁄° 
o˘ë_ôî©‹
& 
o˘ë_ô
,

275 c⁄° 
o˘ë_ôî©‹
& 
ønge_°¨t
,

276 c⁄° 
o˘ë_ôî©‹
& 
ønge_íd
) :

277 
ô
(
o˘ë_ô
), 
ønge_°¨t
‘™ge_°¨t), 
ønge_íd
(range_end)

279 i‡(
	gô
 < 
	gønge_°¨t
 || ià> 
	gønge_íd
)

280 
throw
 
	g°d
::
out_of_ønge
("Invalid utf-8 iteratorÖosition");

283 
o˘ë_ôî©‹
 
ba£
 (Ëc⁄° {  
	gô
; }

284 
uöt32_t
 
	g›î©‹
 * () const

286 
o˘ë_ôî©‹
 
	gãmp
 = 
ô
;

287  
	gutf8
::
√xt
(
ãmp
, 
ønge_íd
);

289 
boﬁ
 
	g›î©‹
 =(c⁄° 
ôî©‹
& 
rhs
) const

291 i‡(
ønge_°¨t
 !
rhs
.ønge_°¨à|| 
ønge_íd
 !=Ñhs.range_end)

292 
throw
 
°d
::
logic_îr‹
("Comparing utf-8 iterators defined with differentÑanges");

293  (
	gô
 =
rhs
.
ô
);

295 
boﬁ
 
	g›î©‹
 !(c⁄° 
ôî©‹
& 
rhs
) const

297  !(
›î©‹
 =(
rhs
));

299 
	gôî©‹
& 
	g›î©‹
 ++ ()

301 
	gutf8
::
√xt
(
ô
, 
ønge_íd
);

302  *
	gthis
;

304 
ôî©‹
 
	g›î©‹
 ++ ()

306 
ôî©‹
 
	gãmp
 = *
this
;

307 
	gutf8
::
√xt
(
ô
, 
ønge_íd
);

308  
	gãmp
;

310 
	gôî©‹
& 
	g›î©‹
 -- ()

312 
	gutf8
::
¥i‹
(
ô
, 
ønge_°¨t
);

313  *
	gthis
;

315 
ôî©‹
 
	g›î©‹
 -- ()

317 
ôî©‹
 
	gãmp
 = *
this
;

318 
	gutf8
::
¥i‹
(
ô
, 
ønge_°¨t
);

319  
	gãmp
;

	@node_modules/node-sass/src/libsass/src/utf8/core.h

28 #i‚de‡
UTF8_FOR_CPP_CORE_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


29 
	#UTF8_FOR_CPP_CORE_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


	)

31 
	~<ôî©‹
>

33 
«me•a˚
 
	gutf8


38 
	tuöt8_t
;

39 
	tuöt16_t
;

40 
	tuöt32_t
;

43 
«me•a˚
 
	göã∫Æ


48 c⁄° 
uöt16_t
 
	gLEAD_SURROGATE_MIN
 = 0xd800u;

49 c⁄° 
uöt16_t
 
	gLEAD_SURROGATE_MAX
 = 0xdbffu;

50 c⁄° 
uöt16_t
 
	gTRAIL_SURROGATE_MIN
 = 0xdc00u;

51 c⁄° 
uöt16_t
 
	gTRAIL_SURROGATE_MAX
 = 0xdfffu;

52 c⁄° 
uöt16_t
 
	gLEAD_OFFSET
 = 
LEAD_SURROGATE_MIN
 - (0x10000 >> 10);

53 c⁄° 
uöt32_t
 
	gSURROGATE_OFFSET
 = 0x10000u - (
LEAD_SURROGATE_MIN
 << 10Ë- 
TRAIL_SURROGATE_MIN
;

56 c⁄° 
uöt32_t
 
	gCODE_POINT_MAX
 = 0x0010ffffu;

58 
	gãm∂©e
<
ty≥«me
 
	go˘ë_ty≥
>

59 
ölöe
 
uöt8_t
 
mask8
(
o˘ë_ty≥
 
oc
)

61  
	g°©ic_ˇ°
<
	guöt8_t
>(0xf‡& 
	goc
);

63 
	gãm∂©e
<
ty≥«me
 
	gu16_ty≥
>

64 
ölöe
 
uöt16_t
 
mask16
(
u16_ty≥
 
oc
)

66  
	g°©ic_ˇ°
<
	guöt16_t
>(0xfff‡& 
	goc
);

68 
	gãm∂©e
<
ty≥«me
 
	go˘ë_ty≥
>

69 
ölöe
 
boﬁ
 
is_åaû
(
o˘ë_ty≥
 
oc
)

71  ((
	gutf8
::
öã∫Æ
::
mask8
(
oc
) >> 6) == 0x2);

74 
	gãm∂©e
 <
ty≥«me
 
	gu16
>

75 
ölöe
 
boﬁ
 
is_Àad_suºog©e
(
u16
 
˝
)

77  (
	g˝
 >
LEAD_SURROGATE_MIN
 && 
˝
 <
LEAD_SURROGATE_MAX
);

80 
	gãm∂©e
 <
ty≥«me
 
	gu16
>

81 
ölöe
 
boﬁ
 
is_åaû_suºog©e
(
u16
 
˝
)

83  (
	g˝
 >
TRAIL_SURROGATE_MIN
 && 
˝
 <
TRAIL_SURROGATE_MAX
);

86 
	gãm∂©e
 <
ty≥«me
 
	gu16
>

87 
ölöe
 
boﬁ
 
is_suºog©e
(
u16
 
˝
)

89  (
	g˝
 >
LEAD_SURROGATE_MIN
 && 
˝
 <
TRAIL_SURROGATE_MAX
);

92 
	gãm∂©e
 <
ty≥«me
 
	gu32
>

93 
ölöe
 
boﬁ
 
is_code_poöt_vÆid
(
u32
 
˝
)

95  (
	g˝
 <
CODE_POINT_MAX
 && !
utf8
::
öã∫Æ
::
is_suºog©e
(
˝
));

98 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

99 
ölöe
 
ty≥«me
 
	g°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥


100 
£quí˚_Àngth
(
o˘ë_ôî©‹
 
Àad_ô
)

102 
uöt8_t
 
Àad
 = 
utf8
::
öã∫Æ
::
mask8
(*
Àad_ô
);

103 i‡(
	gÀad
 < 0x80)

105 i‡((
	gÀad
 >> 5) == 0x6)

107 i‡((
	gÀad
 >> 4) == 0xe)

109 i‡((
	gÀad
 >> 3) == 0x1e)

115 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_dif„ªn˚_ty≥
>

116 
ölöe
 
boﬁ
 
is_ovîl⁄g_£quí˚
(
uöt32_t
 
˝
, 
o˘ë_dif„ªn˚_ty≥
 
Àngth
)

118 i‡(
	g˝
 < 0x80) {

119 i‡(
	gÀngth
 != 1)

120  
åue
;

122 i‡(
	g˝
 < 0x800) {

123 i‡(
	gÀngth
 != 2)

124  
åue
;

126 i‡(
	g˝
 < 0x10000) {

127 i‡(
	gÀngth
 != 3)

128  
åue
;

131  
	gÁl£
;

134 
	eutf_îr‹
 {
	gUTF8_OK
, 
	gNOT_ENOUGH_ROOM
, 
	gINVALID_LEAD
, 
	gINCOMPLETE_SEQUENCE
, 
	gOVERLONG_SEQUENCE
, 
	gINVALID_CODE_POINT
};

137 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

138 
utf_îr‹
 
ö¸ó£_ß„ly
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
)

140 i‡(++
	gô
 =
íd
)

141  
NOT_ENOUGH_ROOM
;

143 i‡(!
	gutf8
::
öã∫Æ
::
is_åaû
(*
ô
))

144  
INCOMPLETE_SEQUENCE
;

146  
	gUTF8_OK
;

149 
	#UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
IT
, 
END
Ë{
utf_îr‹
 
ªt
 = 
	`ö¸ó£_ß„ly
(IT, END); i‡‘ë !
UTF8_OK
ËÑë;}

	)

152 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

153 
utf_îr‹
 
gë_£quí˚_1
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
, 
uöt32_t
& 
code_poöt
)

155 i‡(
	gô
 =
íd
)

156  
NOT_ENOUGH_ROOM
;

158 
	gcode_poöt
 = 
utf8
::
öã∫Æ
::
mask8
(*
ô
);

160  
	gUTF8_OK
;

163 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

164 
utf_îr‹
 
gë_£quí˚_2
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
, 
uöt32_t
& 
code_poöt
)

166 i‡(
	gô
 =
íd
)

167  
NOT_ENOUGH_ROOM
;

169 
	gcode_poöt
 = 
utf8
::
öã∫Æ
::
mask8
(*
ô
);

171 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

173 
	gcode_poöt
 = ((
code_poöt
 << 6Ë& 0x7ffË+ ((*
ô
) & 0x3f);

175  
	gUTF8_OK
;

178 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

179 
utf_îr‹
 
gë_£quí˚_3
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
, 
uöt32_t
& 
code_poöt
)

181 i‡(
	gô
 =
íd
)

182  
NOT_ENOUGH_ROOM
;

184 
	gcode_poöt
 = 
utf8
::
öã∫Æ
::
mask8
(*
ô
);

186 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

188 
	gcode_poöt
 = ((
code_poöt
 << 12Ë& 0xffffË+ ((
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 6) & 0xfff);

190 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

192 
	gcode_poöt
 +(*
ô
) & 0x3f;

194  
	gUTF8_OK
;

197 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

198 
utf_îr‹
 
gë_£quí˚_4
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
, 
uöt32_t
& 
code_poöt
)

200 i‡(
	gô
 =
íd
)

201  
NOT_ENOUGH_ROOM
;

203 
	gcode_poöt
 = 
utf8
::
öã∫Æ
::
mask8
(*
ô
);

205 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

207 
	gcode_poöt
 = ((
code_poöt
 << 18Ë& 0x1fffffË+ ((
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 12) & 0x3ffff);

209 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

211 
	gcode_poöt
 +(
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 6) & 0xfff;

213 
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR
(
ô
, 
íd
)

215 
	gcode_poöt
 +(*
ô
) & 0x3f;

217  
	gUTF8_OK
;

220 #unde‡
UTF8_CPP_INCREASE_AND_RETURN_ON_ERROR


222 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

223 
utf_îr‹
 
vÆid©e_√xt
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
, 
uöt32_t
& 
code_poöt
)

227 
o˘ë_ôî©‹
 
	g‹igöÆ_ô
 = 
ô
;

229 
uöt32_t
 
	g˝
 = 0;

231 
ty≥«me
 
	t°d
::
	tôî©‹_åaôs
<
	to˘ë_ôî©‹
>::
	tdif„ªn˚_ty≥
 
	to˘ë_dif„ªn˚_ty≥
;

232 c⁄° 
o˘ë_dif„ªn˚_ty≥
 
	gÀngth
 = 
utf8
::
öã∫Æ
::
£quí˚_Àngth
(
ô
);

235 
utf_îr‹
 
	gîr
 = 
UTF8_OK
;

236 
	gÀngth
) {

238  
INVALID_LEAD
;

240 
îr
 = 
utf8
::
öã∫Æ
::
gë_£quí˚_1
(
ô
, 
íd
, 
˝
);

243 
îr
 = 
utf8
::
öã∫Æ
::
gë_£quí˚_2
(
ô
, 
íd
, 
˝
);

246 
îr
 = 
utf8
::
öã∫Æ
::
gë_£quí˚_3
(
ô
, 
íd
, 
˝
);

249 
îr
 = 
utf8
::
öã∫Æ
::
gë_£quí˚_4
(
ô
, 
íd
, 
˝
);

253 i‡(
	gîr
 =
UTF8_OK
) {

255 i‡(
utf8
::
öã∫Æ
::
is_code_poöt_vÆid
(
˝
)) {

256 i‡(!
utf8
::
öã∫Æ
::
is_ovîl⁄g_£quí˚
(
˝
, 
Àngth
)){

258 
code_poöt
 = 
˝
;

259 ++
	gô
;

260  
	gUTF8_OK
;

263 
	gîr
 = 
OVERLONG_SEQUENCE
;

266 
	gîr
 = 
INVALID_CODE_POINT
;

270 
	gô
 = 
‹igöÆ_ô
;

271  
	gîr
;

274 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

275 
ölöe
 
utf_îr‹
 
vÆid©e_√xt
(
o˘ë_ôî©‹
& 
ô
, o˘ë_ôî©‹ 
íd
) {

276 
uöt32_t
 
	gign‹ed
;

277  
	gutf8
::
öã∫Æ
::
vÆid©e_√xt
(
ô
, 
íd
, 
ign‹ed
);

285 c⁄° 
uöt8_t
 
	gbom
[] = {0xef, 0xbb, 0xbf};

287 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

288 
o˘ë_ôî©‹
 
föd_övÆid
(o˘ë_ôî©‹ 
°¨t
, o˘ë_ôî©‹ 
íd
)

290 
o˘ë_ôî©‹
 
	gªsu…
 = 
°¨t
;

291 
	gªsu…
 !
íd
) {

292 
utf8
::
öã∫Æ
::
utf_îr‹
 
îr_code
 = utf8::öã∫Æ::
vÆid©e_√xt
(
ªsu…
, 
íd
);

293 i‡(
	gîr_code
 !
öã∫Æ
::
UTF8_OK
)

294  
ªsu…
;

296  
	gªsu…
;

299 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

300 
ölöe
 
boﬁ
 
is_vÆid
(
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
)

302  (
	gutf8
::
föd_övÆid
(
°¨t
, 
íd
) ==Énd);

305 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

306 
ölöe
 
boﬁ
 
°¨ts_wôh_bom
 (
o˘ë_ôî©‹
 
ô
, o˘ë_ôî©‹ 
íd
)

309 ((
	gô
 !
íd
Ë&& (
utf8
::
öã∫Æ
::
mask8
(*
ô
++)Ë=
bom
[0]) &&

310 ((
ô
 !
íd
Ë&& (
utf8
::
öã∫Æ
::
mask8
(*ô++)Ë=
bom
[1]) &&

311 ((
ô
 !
íd
Ë&& (
utf8
::
öã∫Æ
::
mask8
(*ô)Ë=
bom
[2])

316 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

317 
ölöe
 
boﬁ
 
is_bom
 (
o˘ë_ôî©‹
 
ô
)

320 (
	gutf8
::
öã∫Æ
::
mask8
(*
ô
++)Ë=
bom
[0] &&

321 (
utf8
::
öã∫Æ
::
mask8
(*
ô
++)Ë=
bom
[1] &&

322 (
utf8
::
öã∫Æ
::
mask8
(*
ô
)Ë=
bom
[2]

	@node_modules/node-sass/src/libsass/src/utf8/unchecked.h

28 #i‚de‡
UTF8_FOR_CPP_UNCHECKED_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


29 
	#UTF8_FOR_CPP_UNCHECKED_H_2675DCD0_9480_4c0c_B92A_CC14C027B731


	)

31 
	~"c‹e.h
"

33 
«me•a˚
 
	gutf8


35 
«me•a˚
 
	gunchecked


37 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

38 
o˘ë_ôî©‹
 
≠≥nd
(
uöt32_t
 
˝
, o˘ë_ôî©‹ 
ªsu…
)

40 i‡(
	g˝
 < 0x80)

41 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(
˝
);

42 i‡(
	g˝
 < 0x800) {

43 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 6) | 0xc0);

44 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

46 i‡(
	g˝
 < 0x10000) {

47 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 12) | 0xe0);

48 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 6) & 0x3f) | 0x80);

49 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

52 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 >> 18) | 0xf0);

53 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 12) & 0x3f)| 0x80);

54 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>(((
˝
 >> 6) & 0x3f) | 0x80);

55 *(
	gªsu…
++Ë
°©ic_ˇ°
<
uöt8_t
>((
˝
 & 0x3f) | 0x80);

57  
	gªsu…
;

60 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

61 
uöt32_t
 
√xt
(
o˘ë_ôî©‹
& 
ô
)

63 
uöt32_t
 
	g˝
 = 
utf8
::
öã∫Æ
::
mask8
(*
ô
);

64 
ty≥«me
 
	g°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥
 
Àngth
 = 
utf8
::
öã∫Æ
::
£quí˚_Àngth
(
ô
);

65 
	gÀngth
) {

69 
ô
++;

70 
	g˝
 = ((
˝
 << 6Ë& 0x7ffË+ ((*
ô
) & 0x3f);

73 ++
ô
;

74 
	g˝
 = ((
˝
 << 12Ë& 0xffffË+ ((
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 6) & 0xfff);

75 ++
	gô
;

76 
	g˝
 +(*
ô
) & 0x3f;

79 ++
ô
;

80 
	g˝
 = ((
˝
 << 18Ë& 0x1fffffË+ ((
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 12) & 0x3ffff);

81 ++
	gô
;

82 
	g˝
 +(
utf8
::
öã∫Æ
::
mask8
(*
ô
) << 6) & 0xfff;

83 ++
	gô
;

84 
	g˝
 +(*
ô
) & 0x3f;

87 ++
	gô
;

88  
	g˝
;

91 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

92 
uöt32_t
 
≥ek_√xt
(
o˘ë_ôî©‹
 
ô
)

94  
	gutf8
::
unchecked
::
√xt
(
ô
);

97 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

98 
uöt32_t
 
¥i‹
(
o˘ë_ôî©‹
& 
ô
)

100 
	gutf8
::
öã∫Æ
::
is_åaû
(*(--
ô
))) ;

101 
o˘ë_ôî©‹
 
	gãmp
 = 
ô
;

102  
	gutf8
::
unchecked
::
√xt
(
ãmp
);

106 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

107 
ölöe
 
uöt32_t
 
¥evious
(
o˘ë_ôî©‹
& 
ô
)

109  
	gutf8
::
unchecked
::
¥i‹
(
ô
);

112 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gdi°™˚_ty≥
>

113 
adv™˚
 (
o˘ë_ôî©‹
& 
ô
, 
di°™˚_ty≥
 
n
)

115 
di°™˚_ty≥
 
	gi
 = 0; i < 
	gn
; ++i)

116 
	gutf8
::
unchecked
::
√xt
(
ô
);

119 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

120 
ty≥«me
 
	g°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥


121 
di°™˚
 (
o˘ë_ôî©‹
 
fú°
, o˘ë_ôî©‹ 
œ°
)

123 
ty≥«me
 
	g°d
::
ôî©‹_åaôs
<
o˘ë_ôî©‹
>::
dif„ªn˚_ty≥
 
di°
;

124 
	gdi°
 = 0; 
	gfú°
 < 
	gœ°
; ++dist)

125 
	gutf8
::
unchecked
::
√xt
(
fú°
);

126  
	gdi°
;

129 
	gãm∂©e
 <
ty≥«me
 
	gu16bô_ôî©‹
,Åy≥«mê
	go˘ë_ôî©‹
>

130 
o˘ë_ôî©‹
 
utf16to8
 (
u16bô_ôî©‹
 
°¨t
, u16bô_ôî©‹ 
íd
, o˘ë_ôî©‹ 
ªsu…
)

132 
	g°¨t
 !
íd
) {

133 
uöt32_t
 
˝
 = 
utf8
::
öã∫Æ
::
mask16
(*
°¨t
++);

135 i‡(
	gutf8
::
öã∫Æ
::
is_Àad_suºog©e
(
˝
)) {

136 
uöt32_t
 
åaû_suºog©e
 = 
utf8
::
öã∫Æ
::
mask16
(*
°¨t
++);

137 
	g˝
 = (
˝
 << 10Ë+ 
åaû_suºog©e
 + 
öã∫Æ
::
SURROGATE_OFFSET
;

139 
	gªsu…
 = 
utf8
::
unchecked
::
≠≥nd
(
˝
, 
ªsu…
);

141  
	gªsu…
;

144 
	gãm∂©e
 <
ty≥«me
 
	gu16bô_ôî©‹
,Åy≥«mê
	go˘ë_ôî©‹
>

145 
u16bô_ôî©‹
 
utf8to16
 (
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, u16bô_ôî©‹ 
ªsu…
)

147 
	g°¨t
 < 
	gíd
) {

148 
uöt32_t
 
	g˝
 = 
utf8
::
unchecked
::
√xt
(
°¨t
);

149 i‡(
	g˝
 > 0xffff) {

150 *
	gªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>((
˝
 >> 10Ë+ 
öã∫Æ
::
LEAD_OFFSET
);

151 *
	gªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>((
˝
 & 0x3ffË+ 
öã∫Æ
::
TRAIL_SURROGATE_MIN
);

154 *
	gªsu…
++ = 
°©ic_ˇ°
<
uöt16_t
>(
˝
);

156  
	gªsu…
;

159 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gu32bô_ôî©‹
>

160 
o˘ë_ôî©‹
 
utf32to8
 (
u32bô_ôî©‹
 
°¨t
, u32bô_ôî©‹ 
íd
, o˘ë_ôî©‹ 
ªsu…
)

162 
	g°¨t
 !
íd
)

163 
ªsu…
 = 
utf8
::
unchecked
::
≠≥nd
(*(
°¨t
++),Ñesult);

165  
	gªsu…
;

168 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
,Åy≥«mê
	gu32bô_ôî©‹
>

169 
u32bô_ôî©‹
 
utf8to32
 (
o˘ë_ôî©‹
 
°¨t
, o˘ë_ôî©‹ 
íd
, u32bô_ôî©‹ 
ªsu…
)

171 
	g°¨t
 < 
	gíd
)

172 (*
	gªsu…
++Ë
utf8
::
unchecked
::
√xt
(
°¨t
);

174  
	gªsu…
;

178 
	gãm∂©e
 <
ty≥«me
 
	go˘ë_ôî©‹
>

179 
˛ass
 
	gôî©‹
 : 
public
 
°d
::
ôî©‹
 <°d::
bidúe˘i⁄Æ_ôî©‹_èg
, 
	guöt32_t
> {

180 
o˘ë_ôî©‹
 
	gô
;

181 
	gpublic
:

182 
ôî©‹
 () {}

183 
ex∂icô
 
ôî©‹
 (c⁄° 
o˘ë_ôî©‹
& 
o˘ë_ô
): 
ô
(octet_it) {}

185 
o˘ë_ôî©‹
 
ba£
 (Ëc⁄° {  
ô
; }

186 
uöt32_t
 
	g›î©‹
 * () const

188 
o˘ë_ôî©‹
 
	gãmp
 = 
ô
;

189  
	gutf8
::
unchecked
::
√xt
(
ãmp
);

191 
boﬁ
 
	g›î©‹
 =(c⁄° 
ôî©‹
& 
rhs
) const

193  (
ô
 =
rhs
.it);

195 
boﬁ
 
	g›î©‹
 !(c⁄° 
ôî©‹
& 
rhs
) const

197  !(
›î©‹
 =(
rhs
));

199 
	gôî©‹
& 
	g›î©‹
 ++ ()

201 ::
°d
::
adv™˚
(
ô
, 
utf8
::
öã∫Æ
::
£quí˚_Àngth
(it));

202  *
	gthis
;

204 
ôî©‹
 
	g›î©‹
 ++ ()

206 
ôî©‹
 
	gãmp
 = *
this
;

207 ::
°d
::
adv™˚
(
ô
, 
utf8
::
öã∫Æ
::
£quí˚_Àngth
(it));

208  
	gãmp
;

210 
	gôî©‹
& 
	g›î©‹
 -- ()

212 
	gutf8
::
unchecked
::
¥i‹
(
ô
);

213  *
	gthis
;

215 
ôî©‹
 
	g›î©‹
 -- ()

217 
ôî©‹
 
	gãmp
 = *
this
;

218 
	gutf8
::
unchecked
::
¥i‹
(
ô
);

219  
	gãmp
;

	@node_modules/node-sass/src/libsass/src/utf8_string.cpp

1 
	~"ßss.hµ
"

2 
	~<°rög
>

3 
	~<ve˘‹
>

4 
	~<c°dlib
>

5 
	~<cm©h
>

7 
	~"utf8.h
"

9 
«me•a˚
 
	gSass
 {

10 
«me•a˚
 
	gUTF_8
 {

11 
usög
 
	g°d
::
°rög
;

19 
size_t
 
code_poöt_cou¡
(c⁄° 
°rög
& 
°r
, size_à
°¨t
, size_à
íd
) {

20  
	gutf8
::
di°™˚
(
°r
.
begö
(Ë+ 
°¨t
, så.begö(Ë+ 
íd
);

23 
size_t
 
code_poöt_cou¡
(c⁄° 
°rög
& 
°r
) {

24  
	gutf8
::
di°™˚
(
°r
.
begö
(), så.
íd
());

28 
size_t
 
off£t_©_posôi⁄
(c⁄° 
°rög
& 
°r
, size_à
posôi⁄
) {

29 
	g°rög
::
c⁄°_ôî©‹
 
ô
 = 
°r
.
begö
();

30 
	gutf8
::
adv™˚
(
ô
, 
posôi⁄
, 
°r
.
íd
());

31  
di°™˚
(
°r
.
begö
(), 
ô
);

35 
size_t
 
code_poöt_size_©_off£t
(c⁄° 
°rög
& 
°r
, size_à
off£t
) {

37 
	g°rög
::
c⁄°_ôî©‹
 
°›
 = 
°r
.
begö
(Ë+ 
off£t
;

39 i‡(
	g°›
 =
°r
.
íd
())  0;

41 
	gutf8
::
adv™˚
(
°›
, 1, 
°r
.
íd
());

43  
	g°›
 - 
	g°r
.
begö
(Ë- 
	goff£t
;

47 
size_t
 
n‹mÆize_ödex
(
ödex
, size_à
Àn
) {

48 
	gsig√d_Àn
 = 
°©ic_ˇ°
<>(
Àn
);

51 i‡(
	gödex
 > 0 && index <
sig√d_Àn
) {

53  
ödex
-1;

55 i‡(
	gödex
 > 
	gsig√d_Àn
) {

57  
	gÀn
;

59 i‡(
	gödex
 == 0) {

62 i‡(
	g°d
::
abs
(()
ödex
Ë<
sig√d_Àn
) {

64  
ödex
 + 
sig√d_Àn
;

72 #ifde‡
_WIN32


75 
usög
 
	g°d
::
w°rög
;

78 
°rög
 
c⁄vît_‰om_utf16
(c⁄° 
w°rög
& 
utf16
)

80 
°rög
 
	gutf8
;

82 
	gutf8
.
ª£rve
((
utf16
)/2);

83 
	gutf8
::
utf16to8
(
utf16
.
begö
(), utf16.
íd
(),

84 
back_ö£πî
(
utf8
));

85  
	gutf8
;

89 
w°rög
 
c⁄vît_to_utf16
(c⁄° 
°rög
& 
utf8
)

91 
w°rög
 
	gutf16
;

93 
	gutf16
.
ª£rve
(
code_poöt_cou¡
(
utf8
)*2);

94 
	gutf8
::
utf8to16
(
utf8
.
begö
(), utf8.
íd
(),

95 
back_ö£πî
(
utf16
));

96  
	gutf16
;

	@node_modules/node-sass/src/libsass/src/utf8_string.hpp

1 #i‚de‡
SASS_UTF8_STRING_H


2 
	#SASS_UTF8_STRING_H


	)

4 
	~<°rög
>

5 
	~"utf8.h
"

7 
«me•a˚
 
	gSass
 {

8 
«me•a˚
 
	gUTF_8
 {

16 
size_t
 
code_poöt_cou¡
(c⁄° 
°d
::
°rög
& 
°r
, size_à
°¨t
, size_à
íd
);

17 
size_t
 
code_poöt_cou¡
(c⁄° 
°d
::
°rög
& 
°r
);

20 
size_t
 
off£t_©_posôi⁄
(c⁄° 
°d
::
°rög
& 
°r
, size_à
posôi⁄
);

23 
size_t
 
code_poöt_size_©_off£t
(c⁄° 
°d
::
°rög
& 
°r
, size_à
off£t
);

26 
size_t
 
n‹mÆize_ödex
(
ödex
, size_à
Àn
);

28 #ifde‡
_WIN32


30 
	g°d
::
°rög
 
c⁄vît_‰om_utf16
(c⁄° 
°d
::
w°rög
& 
w°r
);

31 
	g°d
::
w°rög
 
c⁄vît_to_utf16
(c⁄° 
°d
::
°rög
& 
°r
);

	@node_modules/node-sass/src/libsass/src/util.cpp

1 
	~"ßss.hµ
"

2 
	~"ßss.h
"

3 
	~"a°.hµ
"

4 
	~"utû.hµ
"

5 
	~"Àxî.hµ
"

6 
	~"¥ñexî.hµ
"

7 
	~"c⁄°™ts.hµ
"

8 
	~"utf8/checked.h
"

10 
	~<cm©h
>

11 
	~<°döt.h
>

13 
«me•a˚
 
	gSass
 {

15 
round
(
vÆ
, 
size_t
 
¥ecisi⁄
)

18 i‡(
fmod
(
vÆ
, 1Ë- 0.5 > - 
	g°d
::
pow
(0.1, 
¥ecisi⁄
 + 1)Ë std::
˚û
(val);

19 i‡(
fmod
(
vÆ
, 1Ë- 0.5 > 
	g°d
::
pow
(0.1, 
¥ecisi⁄
)Ë std::
Êo‹
(val);

22 
usög
 
«me•a˚
 
	g°d
;

23  ::
round
(
vÆ
);

27 
ßss_©of
(c⁄° *
°r
)

29 
	g£∑øt‹
 = *(
loˇÀc⁄v
()->
decimÆ_poöt
);

30 if(
	g£∑øt‹
 != '.'){

34 c⁄° *
found
 = 
°rchr
(
°r
, '.');

35 if(
	gfound
 !
NULL
){

38 *
c›y
 = 
ßss_c›y_c_°rög
(
°r
);

39 *(
	gc›y
 + (
	gfound
 - 
	g°r
)Ë
£∑øt‹
;

40 
	gªs
 = 
©of
(
c›y
);

41 
‰ì
(
c›y
);

42  
	gªs
;

46  
©of
(
°r
);

50 c⁄° * 
ß„_°r
 (c⁄° * 
°r
, c⁄° * 
Æt
) {

51  
	g°r
 =
NULL
 ? 
Æt
 : 
°r
;

54 
‰ì_°rög_¨øy
(** 
¨r
) {

55 if(!
	g¨r
)

58 **
	gô
 = 
¨r
;

59 
	gô
 && (*it)) {

60 
‰ì
(*
ô
);

61 ++
	gô
;

64 
‰ì
(
¨r
);

67 **
c›y_°rögs
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
>& 
°rögs
, *** 
¨øy
, 
skù
) {

68 
	gnum
 = 
°©ic_ˇ°
<>(
°rögs
.
size
()Ë- 
skù
;

69 ** 
	g¨r
 = (**Ë
ˇŒoc
(
num
 + 1, (*));

70 i‡(
	g¨r
 == 0)

71  *
¨øy
 = (**)
NULL
;

73 
	gi
 = 0; i < 
	gnum
; i++) {

74 
	g¨r
[
i
] = (*Ë
mÆloc
((Ë* (
°rögs
[ò+ 
skù
].
size
() + 1));

75 i‡(
	g¨r
[
i
] == 0) {

76 
‰ì_°rög_¨øy
(
¨r
);

77  *
	g¨øy
 = (**)
NULL
;

79 
	g°d
::
c›y
(
°rögs
[
i
 + 
skù
].
begö
(), såögs[ò+ skù].
íd
(), 
¨r
[i]);

80 
	g¨r
[
i
][
°rögs
[ò+ 
skù
].
size
()] = '\0';

83 
	g¨r
[
num
] = 0;

84  *
	g¨øy
 = 
¨r
;

88 
	g°d
::
°rög
 
ªad_css_°rög
(c⁄° 
°d
::°rög& 
°r
)

90 
°d
::
°rög
 
out
("");

91 
boﬁ
 
	gesc
 = 
Ál£
;

92 autÿ
	gi
 : 
°r
) {

93 i‡(
i
 == '\\') {

94 
esc
 = !Ésc;

95 } i‡(
	gesc
 && 
	gi
 == '\r') {

97 } i‡(
	gesc
 && 
	gi
 == '\n') {

98 
out
.
ªsize
 (out.
size
 () - 1);

99 
	gesc
 = 
Ál£
;

102 
	gesc
 = 
Ál£
;

104 
	gout
.
push_back
(
i
);

110  
	gout
;

115 
	g°d
::
°rög
 
evacu©e_esˇ≥s
(c⁄° 
°d
::°rög& 
°r
)

117 
°d
::
°rög
 
out
("");

118 
boﬁ
 
	gesc
 = 
Ál£
;

119 autÿ
	gi
 : 
°r
) {

120 i‡(
i
 ='\\' && !
esc
) {

121 
out
 += '\\';

122 
	gout
 += '\\';

123 
	gesc
 = 
åue
;

124 } i‡(
	gesc
 && 
	gi
 == '"') {

125 
out
 += '\\';

126 
	gout
 +
i
;

127 
	gesc
 = 
Ál£
;

128 } i‡(
	gesc
 && 
	gi
 == '\'') {

129 
out
 += '\\';

130 
	gout
 +
i
;

131 
	gesc
 = 
Ál£
;

132 } i‡(
	gesc
 && 
	gi
 == '\\') {

133 
out
 += '\\';

134 
	gout
 +
i
;

135 
	gesc
 = 
Ál£
;

137 
	gesc
 = 
Ál£
;

138 
	gout
 +
i
;

145  
	gout
;

149 
	g°d
::
°rög
 
°rög_to_ouçut
(c⁄° 
°d
::°rög& 
°r
)

151 
°d
::
°rög
 
out
("");

152 
boﬁ
 
	glf
 = 
Ál£
;

153 autÿ
	gi
 : 
°r
) {

154 i‡(
i
 == 10) {

155 
out
 += ' ';

156 
	glf
 = 
åue
;

157 } i‡(!(
	glf
 && 
is•a˚
(
i
))) {

158 
	gout
 +
i
;

159 
	glf
 = 
Ál£
;

162  
	gout
;

165 
	g°d
::
°rög
 
commít_to_°rög
(c⁄° 
°d
::°rög& 
ãxt
)

167 
°d
::
°rög
 
°r
 = "";

168 
size_t
 
	ghas
 = 0;

169 
	g¥ev
 = 0;

170 
boﬁ
 
	g˛ón
 = 
Ál£
;

171 autÿ
	gi
 : 
ãxt
) {

172 i‡(
˛ón
) {

173 i‡(
i
 ='\n'Ë{ 
has
 = 0; }

174 i‡(
	gi
 ='\r'Ë{ 
has
 = 0; }

175 i‡(
	gi
 ='\t'Ë{ ++ 
has
; }

176 i‡(
	gi
 =' 'Ë{ ++ 
has
; }

177 i‡(
	gi
 == '*') {}

179 
˛ón
 = 
Ál£
;

180 
	g°r
 += ' ';

181 i‡(
	g¥ev
 ='*' && 
i
 ='/'Ë
°r
 += "*/";

182 
	g°r
 +
i
;

184 } i‡(
	gi
 == '\n') {

185 
˛ón
 = 
åue
;

186 } i‡(
	gi
 == '\r') {

187 
˛ón
 = 
åue
;

189 
	g°r
 +
i
;

191 
	g¥ev
 = 
i
;

193 i‡(
	ghas
Ë 
	g°r
;

194  
	gãxt
;

201 
dëe˘_be°_quŸem¨k
(c⁄° * 
s
, 
qm
)

204 
	gquŸe_m¨k
 = 
qm
 && qm != '*' ? qm : '"';

205 *
	gs
) {

208 i‡(*
	gs
 == '\'') {  '"'; }

211 i‡(*
	gs
 ='"'Ë{ 
quŸe_m¨k
 = '\''; }

212 ++ 
	gs
;

214  
	gquŸe_m¨k
;

217 
	g°d
::
°rög
 
unquŸe
(c⁄° 
°d
::°rög& 
s
, * 
qd
, 
boﬁ
 
kìp_utf8_£quí˚s
)

222 i‡(
	gs
.
Àngth
() < 2)  s;

224 
	gq
;

225 
boﬁ
 
	gskù≥d
 = 
Ál£
;

229 i‡(*
	gs
.
begö
(Ë='"' && *
s
.
rbegö
(Ë='"'Ë
q
 = '"';

230 i‡(*
	gs
.
begö
(Ë='\'' && *
s
.
rbegö
(Ë='\''Ë
q
 = '\'';

231  
	gs
;

233 
	g°d
::
°rög
 
unq
;

234 
	gunq
.
ª£rve
(
s
.
Àngth
()-2);

236 
size_t
 
	gi
 = 1, 
	gL
 = 
s
.
Àngth
() - 1; i < L; ++i) {

240 i‡(
	gs
[
i
] ='\\' && !
skù≥d
) {

242 
skù≥d
 = 
åue
;

250 
size_t
 
	gÀn
 = 1;

254 
	gi
 + 
	gÀn
 < 
	gL
 && 
	gs
[
i
 + 
Àn
] && 
isxdigô
(
s
[i +Üen])) ++Üen;

257 i‡(
	gkìp_utf8_£quí˚s
) {

258 
	gunq
.
push_back
(
s
[
i
]);

259 } i‡(
	gÀn
 > 1) {

263 
uöt32_t
 
	g˝
 = 
°πﬁ
(
s
.
sub°r
 (
i
 + 1, 
Àn
 - 1).
c_°r
(), 
NULL
, 16);

265 i‡(
	gs
[
i
 + 
Àn
] == ' ') ++Üen;

268 i‡(
	g˝
 =0Ë
˝
 = 0xFFFD;

276 
	gu
[5] = {0,0,0,0,0}; 
	gutf8
::
≠≥nd
(
˝
, 
u
);

277 
size_t
 
	gm
 = 0; 
	gu
[
m
] && m < 5; m++Ë
	gunq
.
push_back
(
u
[m]);

280 
	gi
 +
Àn
 - 1; 
	gskù≥d
 = 
Ál£
;

295 
	gskù≥d
 = 
Ál£
;

296 
	gunq
.
push_back
(
s
[
i
]);

300 i‡(
	gskù≥d
Ë{  
	gs
; }

301 i‡(
	gqd
Ë*qd = 
q
;

302  
	gunq
;

306 
	g°d
::
°rög
 
quŸe
(c⁄° 
°d
::°rög& 
s
, 
q
)

310 
	gq
 = 
dëe˘_be°_quŸem¨k
(
s
.
c_°r
(), 
q
);

313 i‡(
	gs
.
em±y
()Ë 
	g°d
::
°rög
(2, 
q
 ? q : '"');

315 
	g°d
::
°rög
 
quŸed
;

316 
	gquŸed
.
ª£rve
(
s
.
Àngth
()+2);

317 
	gquŸed
.
push_back
(
q
);

319 c⁄° * 
	gô
 = 
s
.
c_°r
();

320 c⁄° * 
	gíd
 = 
ô
 + 
°æí
(it) + 1;

321 *
	gô
 && ià< 
	gíd
) {

322 c⁄° * 
	gnow
 = 
ô
;

324 i‡(*
	gô
 =
q
) {

325 
quŸed
.
push_back
('\\');

326 } i‡(*
	gô
 == '\\') {

327 
quŸed
.
push_back
('\\');

330 
	g˝
 = 
utf8
::
√xt
(
ô
, 
íd
);

334 i‡(
	g˝
 ='\r' && 
ô
 < 
íd
 && 
utf8
::
≥ek_√xt
(it,Énd) == '\n') {

335 
˝
 = 
utf8
::
√xt
(
ô
, 
íd
);

338 i‡(
	g˝
 == '\n') {

339 
quŸed
.
push_back
('\\');

340 
	gquŸed
.
push_back
('a');

344 
usög
 
«me•a˚
 
	gPªÀxî
;

345 i‡(
	gÆã∫©ives
 <

346 
	gPªÀxî
::
ch¨_ønge
<'a', 'f'>,

347 
	gPªÀxî
::
ch¨_ønge
<'A', 'F'>,

348 
	gPªÀxî
::
ch¨_ønge
<'0', '9'>,

349 
	g•a˚


350 >(
	gô
Ë!
NULL
) {

351 
quŸed
.
push_back
(' ');

353 } i‡(
	g˝
 < 127) {

354 
	gquŸed
.
push_back
((Ë
˝
);

356 
	gnow
 < 
	gô
) {

357 
	gquŸed
.
push_back
(*
now
);

358 ++ 
	gnow
;

363 
	gquŸed
.
push_back
(
q
);

364  
	gquŸed
;

367 
boﬁ
 
is_hex_doubÀt
(
n
)

369  
	gn
 =0x00 || 
n
 == 0x11 ||Ç == 0x22 ||Ç == 0x33 ||

370 
n
 == 0x44 ||Ç == 0x55 ||Ç == 0x66 ||Ç == 0x77 ||

371 
n
 == 0x88 ||Ç == 0x99 ||Ç == 0xAA ||Ç == 0xBB ||

372 
n
 == 0xCC ||Ç == 0xDD ||Ç == 0xEE ||Ç == 0xFF ;

375 
boﬁ
 
is_cﬁ‹_doubÀt
(
r
, 
g
, 
b
)

377  
is_hex_doubÀt
(
r
Ë&& is_hex_doubÀt(
g
Ë&& is_hex_doubÀt(
b
);

380 
boﬁ
 
≥ek_löe„ed
(c⁄° * 
°¨t
)

382 
usög
 
«me•a˚
 
	gPªÀxî
;

383 
usög
 
«me•a˚
 
	gC⁄°™ts
;

384  
	g£quí˚
 <

385 
	gzîo_∂us
 <

386 
	gÆã∫©ives
 <

387 
	gexa˘ly
 <' '>,

388 
	gexa˘ly
 <'\t'>,

389 
	glöe_commít
,

390 
	gblock_commít
,

391 
	gdñimôed_by
 <

392 
	g¶ash_°¨
,

393 
	g°¨_¶ash
,

394 
	gÁl£


398 
	gª_löebªak


399 >(
	g°¨t
) != 0;

402 
«me•a˚
 
	gUtû
 {

403 
usög
 
	g°d
::
°rög
;

405 
	g°d
::
°rög
 
πrim
(c⁄° 
°d
::°rög &
°r
) {

406 
°d
::
°rög
 
åimmed
 = 
°r
;

407 
size_t
 
	gpos_ws
 = 
åimmed
.
föd_œ°_nŸ_of
(" \t\n\v\f\r");

408 i‡(
	gpos_ws
 !
°d
::
°rög
::
≈os
)

409 { 
åimmed
.
îa£
(
pos_ws
 + 1); }

410 { 
	gåimmed
.
˛ór
(); }

411  
	gåimmed
;

414 
	g°d
::
°rög
 
n‹mÆize_undîsc‹es
(c⁄° 
°d
::°rög& 
°r
) {

415 
°d
::
°rög
 
n‹mÆized
 = 
°r
;

416 
size_t
 
	gi
 = 0, 
	gL
 = 
n‹mÆized
.
Àngth
(); i < L; ++i) {

417 if(
	gn‹mÆized
[
i
] == '_') {

418 
n‹mÆized
[
i
] = '-';

421  
	gn‹mÆized
;

424 
	g°d
::
°rög
 
n‹mÆize_decimÆs
(c⁄° 
°d
::°rög& 
°r
) {

425 
°d
::
°rög
 
¥efix
 = "0";

426 
	g°d
::
°rög
 
n‹mÆized
 = 
°r
;

428  
	gn‹mÆized
[0] ='.' ? 
n‹mÆized
.
ö£π
(0, 
¥efix
) :Çormalized;

433 
	g°d
::
°rög
 
n‹mÆize_sixtu∂ë
(c⁄° 
°d
::°rög& 
cﬁ
) {

435 
cﬁ
.
sub°r
(1, 1) == col.substr(2, 1) &&

436 
	gcﬁ
.
sub°r
(3, 1Ë=
cﬁ
.substr(4, 1) &&

437 
	gcﬁ
.
sub°r
(5, 1Ë=
cﬁ
.substr(6, 1)

439  
	g°d
::
°rög
("#" + 
cﬁ
.
sub°r
(1, 1)

440 + 
cﬁ
.
sub°r
(3, 1)

441 + 
cﬁ
.
sub°r
(5, 1));

443  
	g°d
::
°rög
(
cﬁ
);

447 
boﬁ
 
isPröèbÀ
(
RuÀ£t
* 
r
, 
Sass_Ouçut_StyÀ
 
°yÀ
) {

448 i‡(
	gr
 =
NULL
) {

449  
Ál£
;

452 
Block
* 
	gb
 = 
r
->
block
();

454 
boﬁ
 
	ghasSñe˘‹s
 = 
°©ic_ˇ°
<
Sñe˘‹_Li°
*>(
r
->
£À˘‹
())->
Àngth
() > 0;

456 i‡(!
	ghasSñe˘‹s
) {

457  
	gÁl£
;

460 
boﬁ
 
	ghasDe˛¨©i⁄s
 = 
Ál£
;

461 
boﬁ
 
	ghasPröèbÀChûdBlocks
 = 
Ál£
;

462 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

463 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

464 i‡(
	gdy«mic_ˇ°
<
	gDúe˘ive
*>(
	g°m
)) {

465  
	gåue
;

466 } i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
)) {

467 
Block
* 
	gpChûdBlock
 = ((
Has_Block
*)
°m
)->
block
();

468 i‡(
isPröèbÀ
(
pChûdBlock
, 
°yÀ
)) {

469 
	ghasPröèbÀChûdBlocks
 = 
åue
;

471 } i‡(
Commít
* 
	gc
 = 
dy«mic_ˇ°
<Commít*>(
°m
)) {

473 i‡(
°yÀ
 !
COMPRESSED
) {

474 
hasDe˛¨©i⁄s
 = 
åue
;

477 i‡(
	gc
->
is_imp‹è¡
()) {

478 
	ghasDe˛¨©i⁄s
 = 
c
->
is_imp‹è¡
();

480 } i‡(
De˛¨©i⁄
* 
	gd
 = 
dy«mic_ˇ°
<De˛¨©i⁄*>(
°m
)) {

481  
isPröèbÀ
(
d
, 
°yÀ
);

483 
	ghasDe˛¨©i⁄s
 = 
åue
;

486 i‡(
	ghasDe˛¨©i⁄s
 || 
	ghasPröèbÀChûdBlocks
) {

487  
	gåue
;

491  
	gÁl£
;

494 
boﬁ
 
isPröèbÀ
(
Såög_C⁄°™t
* 
s
, 
Sass_Ouçut_StyÀ
 
°yÀ
)

496  ! 
	gs
->
vÆue
().
em±y
();

499 
boﬁ
 
isPröèbÀ
(
Såög_QuŸed
* 
s
, 
Sass_Ouçut_StyÀ
 
°yÀ
)

501  
	gåue
;

504 
boﬁ
 
isPröèbÀ
(
De˛¨©i⁄
* 
d
, 
Sass_Ouçut_StyÀ
 
°yÀ
)

506 
Ex¥essi⁄
* 
	gvÆ
 = 
d
->
vÆue
();

507 i‡(
Såög_QuŸed
* 
	gsq
 = 
dy«mic_ˇ°
<Såög_QuŸed*>(
vÆ
)Ë 
isPröèbÀ
(
sq
, 
°yÀ
);

508 i‡(
Såög_C⁄°™t
* 
	gsc
 = 
dy«mic_ˇ°
<Såög_C⁄°™t*>(
vÆ
)Ë 
isPröèbÀ
(
sc
, 
°yÀ
);

509  
	gåue
;

512 
boﬁ
 
isPröèbÀ
(
Suµ‹ts_Block
* 
f
, 
Sass_Ouçut_StyÀ
 
°yÀ
) {

513 i‡(
	gf
 =
NULL
) {

514  
Ál£
;

517 
Block
* 
	gb
 = 
f
->
block
();

521 
boﬁ
 
	ghasDe˛¨©i⁄s
 = 
Ál£
;

522 
boﬁ
 
	ghasPröèbÀChûdBlocks
 = 
Ál£
;

523 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

524 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

525 i‡(!
	g°m
->
is_hoi°abÀ
()) {

531 i‡(
ty≥id
(*
°m
Ë=ty≥id(
De˛¨©i⁄
Ë||Åy≥id(*°mË=ty≥id(
Dúe˘ive
)) {

532 
hasDe˛¨©i⁄s
 = 
åue
;

534 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
)) {

535 
Block
* 
	gpChûdBlock
 = ((
Has_Block
*)
°m
)->
block
();

536 i‡(
isPröèbÀ
(
pChûdBlock
, 
°yÀ
)) {

537 
	ghasPröèbÀChûdBlocks
 = 
åue
;

541 i‡(
	ghasDe˛¨©i⁄s
 || 
	ghasPröèbÀChûdBlocks
) {

542  
	gåue
;

546  
	gÁl£
;

549 
boﬁ
 
isPröèbÀ
(
Medü_Block
* 
m
, 
Sass_Ouçut_StyÀ
 
°yÀ
)

551 i‡(
	gm
 =0Ë 
Ál£
;

552 
Block
* 
	gb
 = 
m
->
block
();

553 i‡(
	gb
 =0Ë 
Ál£
;

554 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

555 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

556 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Dúe˘ive
)Ë 
åue
;

557 i‡(
ty≥id
(*
°m
Ë=ty≥id(
De˛¨©i⁄
)Ë 
åue
;

558 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Commít
)) {

559 
Commít
* 
c
 = (Commít*Ë
°m
;

560 i‡(
isPröèbÀ
(
c
, 
°yÀ
)) {

561  
	gåue
;

564 i‡(
ty≥id
(*
°m
Ë=ty≥id(
RuÀ£t
)) {

565 
RuÀ£t
* 
r
 = (RuÀ£t*Ë
°m
;

566 i‡(
isPröèbÀ
(
r
, 
°yÀ
)) {

567  
	gåue
;

570 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Suµ‹ts_Block
)) {

571 
Suµ‹ts_Block
* 
f
 = (Suµ‹ts_Block*Ë
°m
;

572 i‡(
isPröèbÀ
(
f
, 
°yÀ
)) {

573  
	gåue
;

576 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Medü_Block
)) {

577 
Medü_Block
* 
m
 = (Medü_Block*Ë
°m
;

578 i‡(
isPröèbÀ
(
m
, 
°yÀ
)) {

579  
	gåue
;

582 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
Ë&& 
isPröèbÀ
(((
Has_Block
*)
°m
)->
block
(), 
°yÀ
)) {

583  
	gåue
;

586  
	gÁl£
;

589 
boﬁ
 
isPröèbÀ
(
Commít
* 
c
, 
Sass_Ouçut_StyÀ
 
°yÀ
)

592 i‡(
	g°yÀ
 !
COMPRESSED
) {

593  
åue
;

596 i‡(
	gc
->
is_imp‹è¡
()) {

597  
	gåue
;

600  
	gÁl£
;

603 
boﬁ
 
isPröèbÀ
(
Block
* 
b
, 
Sass_Ouçut_StyÀ
 
°yÀ
) {

604 i‡(
	gb
 =
NULL
) {

605  
Ál£
;

608 
size_t
 
	gi
 = 0, 
	gL
 = 
b
->
Àngth
(); i < L; ++i) {

609 
Sèãmít
* 
	g°m
 = (*
b
)[
i
];

610 i‡(
ty≥id
(*
°m
Ë=ty≥id(
De˛¨©i⁄
Ë||Åy≥id(*°mË=ty≥id(
Dúe˘ive
)) {

611  
åue
;

613 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Commít
)) {

614 
Commít
* 
c
 = (Commít*Ë
°m
;

615 i‡(
isPröèbÀ
(
c
, 
°yÀ
)) {

616  
	gåue
;

619 i‡(
ty≥id
(*
°m
Ë=ty≥id(
RuÀ£t
)) {

620 
RuÀ£t
* 
r
 = (RuÀ£t*Ë
°m
;

621 i‡(
isPröèbÀ
(
r
, 
°yÀ
)) {

622  
	gåue
;

625 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Suµ‹ts_Block
)) {

626 
Suµ‹ts_Block
* 
f
 = (Suµ‹ts_Block*Ë
°m
;

627 i‡(
isPröèbÀ
(
f
, 
°yÀ
)) {

628  
	gåue
;

631 i‡(
ty≥id
(*
°m
Ë=ty≥id(
Medü_Block
)) {

632 
Medü_Block
* 
m
 = (Medü_Block*Ë
°m
;

633 i‡(
isPröèbÀ
(
m
, 
°yÀ
)) {

634  
	gåue
;

637 i‡(
	gdy«mic_ˇ°
<
	gHas_Block
*>(
	g°m
Ë&& 
isPröèbÀ
(((
Has_Block
*)
°m
)->
block
(), 
°yÀ
)) {

638  
	gåue
;

642  
	gÁl£
;

645 
	g°d
::
°rög
 
vecJoö
(c⁄° 
°d
::
ve˘‹
<°d::°rög>& 
vec
, c⁄° std::°rög& 
£p
)

647 
vec
.
size
())

650  
°d
::
°rög
("");

652  
vec
[0];

654 
°d
::
o°rög°ªam
 
os
;

655 
	gos
 << 
	gvec
[0];

656 
size_t
 
	gi
 = 1; i < 
	gvec
.
size
(); i++) {

657 
	gos
 << 
	g£p
 << 
	gvec
[
i
];

659  
	gos
.
°r
();

663 
boﬁ
 
isAscii
(c⁄° 
chr
) {

664  (
	gchr
) < 128;

	@node_modules/node-sass/src/libsass/src/util.hpp

1 #i‚de‡
SASS_UTIL_H


2 
	#SASS_UTIL_H


	)

4 
	~<ve˘‹
>

5 
	~<°rög
>

6 
	~<as£π.h
>

7 
	~"ßss.hµ
"

8 
	~"ßss/ba£.h
"

9 
	~"a°_fwd_de˛.hµ
"

11 
	#SASS_ASSERT
(
c⁄d
, 
msg
Ë
	`as£π
(c⁄d && msg)

	)

13 
«me•a˚
 
	gSass
 {

15 
	#out_of_mem‹y
() do { \

16 
°d
::
˚º
 << "Out of memory.\n"; \

17 
	`exô
(
EXIT_FAILURE
); \

18 } 0)

	)

20 
round
(
vÆ
, 
size_t
 
¥ecisi⁄
 = 0);

21 
ßss_©of
(c⁄° * 
°r
);

22 c⁄° * 
ß„_°r
(const *, const * = "");

23 
‰ì_°rög_¨øy
(**);

24 **
c›y_°rögs
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
>&, ***, = 0);

25 
	g°d
::
°rög
 
ªad_css_°rög
(c⁄° 
°d
::°rög& 
°r
);

26 
	g°d
::
°rög
 
evacu©e_esˇ≥s
(c⁄° 
°d
::°rög& 
°r
);

27 
	g°d
::
°rög
 
°rög_to_ouçut
(c⁄° 
°d
::°rög& 
°r
);

28 
	g°d
::
°rög
 
commít_to_°rög
(c⁄° 
°d
::°rög& 
ãxt
);

30 
	g°d
::
°rög
 
quŸe
(c⁄° 
°d
::°rög&, 
q
 = 0);

31 
	g°d
::
°rög
 
unquŸe
(c⁄° 
°d
::°rög&, * 
q
 = 0, 
boﬁ
 
kìp_utf8_£quí˚s
 = 
Ál£
);

32 
dëe˘_be°_quŸem¨k
(c⁄° * 
s
, 
qm
 = '"');

34 
boﬁ
 
is_hex_doubÀt
(
n
);

35 
boﬁ
 
is_cﬁ‹_doubÀt
(
r
, 
g
, 
b
);

37 
boﬁ
 
≥ek_löe„ed
(c⁄° * 
°¨t
);

39 
«me•a˚
 
	gUtû
 {

41 
	g°d
::
°rög
 
πrim
(c⁄° 
°d
::°rög& 
°r
);

43 
	g°d
::
°rög
 
n‹mÆize_undîsc‹es
(c⁄° 
°d
::°rög& 
°r
);

44 
	g°d
::
°rög
 
n‹mÆize_decimÆs
(c⁄° 
°d
::°rög& 
°r
);

45 
	g°d
::
°rög
 
n‹mÆize_sixtu∂ë
(c⁄° 
°d
::°rög& 
cﬁ
);

47 
	g°d
::
°rög
 
vecJoö
(c⁄° 
°d
::
ve˘‹
<°d::°rög>& 
vec
, c⁄° std::°rög& 
£p
);

48 
boﬁ
 
c⁄èösAnyPröèbÀSèãmíts
(
Block
* 
b
);

50 
boﬁ
 
isPröèbÀ
(
RuÀ£t
* 
r
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

51 
boﬁ
 
isPröèbÀ
(
Suµ‹ts_Block
* 
r
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

52 
boﬁ
 
isPröèbÀ
(
Medü_Block
* 
r
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

53 
boﬁ
 
isPröèbÀ
(
Commít
* 
b
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

54 
boﬁ
 
isPröèbÀ
(
Block
* 
b
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

55 
boﬁ
 
isPröèbÀ
(
Såög_C⁄°™t
* 
s
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

56 
boﬁ
 
isPröèbÀ
(
Såög_QuŸed
* 
s
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

57 
boﬁ
 
isPröèbÀ
(
De˛¨©i⁄
* 
d
, 
Sass_Ouçut_StyÀ
 
°yÀ
 = 
NESTED
);

58 
boﬁ
 
isAscii
(c⁄° 
chr
);

	@node_modules/node-sass/src/libsass/src/values.cpp

1 
	~"ßss.hµ
"

2 
	~"ßss.h
"

3 
	~"vÆues.hµ
"

5 
	~<°döt.h
>

7 
«me•a˚
 
	gSass
 {

10 
Sass_VÆue
* 
a°_node_to_ßss_vÆue
 (c⁄° 
Ex¥essi⁄
* 
vÆ
)

12 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NUMBER
)

14 c⁄° 
Numbî
* 
ªs
 = 
dy«mic_ˇ°
<c⁄° Numbî*>(
vÆ
);

15  
ßss_make_numbî
(
ªs
->
vÆue
(),Ñes->
unô
().
c_°r
());

17 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
COLOR
)

19 c⁄° 
Cﬁ‹
* 
cﬁ
 = 
dy«mic_ˇ°
<c⁄° Cﬁ‹*>(
vÆ
);

20  
ßss_make_cﬁ‹
(
cﬁ
->
r
(), cﬁ->
g
(), cﬁ->
b
(), cﬁ->
a
());

22 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
LIST
)

24 c⁄° 
Li°
* 
l
 = 
dy«mic_ˇ°
<c⁄° Li°*>(
vÆ
);

25 
Sass_VÆue
* 
	gli°
 = 
ßss_make_li°
(
l
->
size
(),Ü->
£∑øt‹
());

26 
size_t
 
	gi
 = 0, 
	gL
 = 
l
->
Àngth
(); i < L; ++i) {

27 autÿ
	gvÆ
 = 
a°_node_to_ßss_vÆue
((*
l
)[
i
]);

28 
ßss_li°_£t_vÆue
(
li°
, 
i
, 
vÆ
);

30  
	gli°
;

32 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
MAP
)

34 c⁄° 
M≠
* 
m
 = 
dy«mic_ˇ°
<c⁄° M≠*>(
vÆ
);

35 
Sass_VÆue
* 
	gm≠
 = 
ßss_make_m≠
(
m
->
Àngth
());

36 
size_t
 
	gi
 = 0; autÿ
	gkey
 : 
m
->
keys
()) {

37 
ßss_m≠_£t_key
(
m≠
, 
i
, 
a°_node_to_ßss_vÆue
(
key
));

38 
ßss_m≠_£t_vÆue
(
m≠
, 
i
, 
a°_node_to_ßss_vÆue
(
m
->
©
(
key
)));

39 ++ 
	gi
;

41  
	gm≠
;

43 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
NULL_VAL
)

45  
ßss_make_nuŒ
();

47 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
BOOLEAN
)

49 c⁄° 
Boﬁón
* 
ªs
 = 
dy«mic_ˇ°
<c⁄° Boﬁón*>(
vÆ
);

50  
ßss_make_boﬁón
(
ªs
->
vÆue
());

52 i‡(
	gvÆ
->
c⁄¸ëe_ty≥
(Ë=
Ex¥essi⁄
::
STRING
)

54 i‡(c⁄° 
Såög_QuŸed
* 
q°r
 = 
dy«mic_ˇ°
<c⁄° Såög_QuŸed*>(
vÆ
))

56  
ßss_make_q°rög
(
q°r
->
vÆue
().
c_°r
());

58 i‡(c⁄° 
Såög_C⁄°™t
* 
	gc°r
 = 
dy«mic_ˇ°
<c⁄° Såög_C⁄°™t*>(
vÆ
))

60  
ßss_make_°rög
(
c°r
->
vÆue
().
c_°r
());

63  
ßss_make_îr‹
("unknown sass valueÅype");

67 
VÆue
* 
ßss_vÆue_to_a°_node
 (
Mem‹y_M™agî
& 
mem
, c⁄° 
Sass_VÆue
* 
vÆ
)

69 
ßss_vÆue_gë_èg
(
vÆ
)) {

70 
	gSASS_NUMBER
:

71  
SASS_MEMORY_NEW
(
mem
, 
Numbî
,

72 
P¨£rSèã
("[C-VALUE]"),

73 
ßss_numbî_gë_vÆue
(
vÆ
),

74 
ßss_numbî_gë_unô
(
vÆ
));

76 
	gSASS_BOOLEAN
:

77  
SASS_MEMORY_NEW
(
mem
, 
Boﬁón
,

78 
P¨£rSèã
("[C-VALUE]"),

79 
ßss_boﬁón_gë_vÆue
(
vÆ
));

81 
	gSASS_COLOR
:

82  
SASS_MEMORY_NEW
(
mem
, 
Cﬁ‹
,

83 
P¨£rSèã
("[C-VALUE]"),

84 
ßss_cﬁ‹_gë_r
(
vÆ
),

85 
ßss_cﬁ‹_gë_g
(
vÆ
),

86 
ßss_cﬁ‹_gë_b
(
vÆ
),

87 
ßss_cﬁ‹_gë_a
(
vÆ
));

89 
	gSASS_STRING
:

90 i‡(
ßss_°rög_is_quŸed
(
vÆ
)) {

91  
SASS_MEMORY_NEW
(
mem
, 
Såög_QuŸed
,

92 
P¨£rSèã
("[C-VALUE]"),

93 
ßss_°rög_gë_vÆue
(
vÆ
));

95  
SASS_MEMORY_NEW
(
mem
, 
Såög_C⁄°™t
,

96 
P¨£rSèã
("[C-VALUE]"),

97 
ßss_°rög_gë_vÆue
(
vÆ
));

100 
	gSASS_LIST
: {

101 
Li°
* 
l
 = 
SASS_MEMORY_NEW
(
mem
, List,

102 
P¨£rSèã
("[C-VALUE]"),

103 
ßss_li°_gë_Àngth
(
vÆ
),

104 
ßss_li°_gë_£∑øt‹
(
vÆ
));

105 
size_t
 
	gi
 = 0, 
	gL
 = 
ßss_li°_gë_Àngth
(
vÆ
); i < L; ++i) {

106 *
	gl
 << 
ßss_vÆue_to_a°_node
(
mem
, 
ßss_li°_gë_vÆue
(
vÆ
, 
i
));

108  
	gl
;

111 
	gSASS_MAP
: {

112 
M≠
* 
m
 = 
SASS_MEMORY_NEW
(
mem
, M≠, 
P¨£rSèã
("[C-VALUE]"));

113 
size_t
 
	gi
 = 0, 
	gL
 = 
ßss_m≠_gë_Àngth
(
vÆ
); i < L; ++i) {

114 *
	gm
 << 
	g°d
::
make_∑ú
(

115 
ßss_vÆue_to_a°_node
(
mem
, 
ßss_m≠_gë_key
(
vÆ
, 
i
)),

116 
ßss_vÆue_to_a°_node
(
mem
, 
ßss_m≠_gë_vÆue
(
vÆ
, 
i
)));

118  
	gm
;

121 
	gSASS_NULL
:

122  
SASS_MEMORY_NEW
(
mem
, 
NuŒ
, 
P¨£rSèã
("[C-VALUE]"));

124 
	gSASS_ERROR
:

125  
SASS_MEMORY_NEW
(
mem
, 
Cu°om_Eº‹
,

126 
P¨£rSèã
("[C-VALUE]"),

127 
ßss_îr‹_gë_mesßge
(
vÆ
));

129 
	gSASS_WARNING
:

130  
SASS_MEMORY_NEW
(
mem
, 
Cu°om_W¨nög
,

131 
P¨£rSèã
("[C-VALUE]"),

132 
ßss_w¨nög_gë_mesßge
(
vÆ
));

	@node_modules/node-sass/src/libsass/src/values.hpp

1 #i‚de‡
SASS_VALUES_H


2 
	#SASS_VALUES_H


	)

4 
	~"a°.hµ
"

6 
«me•a˚
 
	gSass
 {

8 
Sass_VÆue
* 
a°_node_to_ßss_vÆue
 (c⁄° 
Ex¥essi⁄
* 
vÆ
);

9 
VÆue
* 
ßss_vÆue_to_a°_node
 (
Mem‹y_M™agî
& 
mem
, c⁄° 
Sass_VÆue
* 
vÆ
);

	@node_modules/node-sass/src/libsass/test/test_node.cpp

1 
	~<as£π.h
>

2 
	~<s°ªam
>

4 
	~"node.hµ
"

5 
	~"∑r£r.hµ
"

8 
	#STATIC_ARRAY_SIZE
(
¨øy
Ë((◊ºay))/(◊ºay[0])))

	)

11 
«me•a˚
 
	gSass
 {

13 
C⁄ãxt
 
	g˘x
 = C⁄ãxt::
D©a
();

15 c⁄° * c⁄° 
	gROUNDTRIP_TESTS
[] = {

16 
NULL
,

30 
Com∂ex_Sñe˘‹
* 
¸óãCom∂exSñe˘‹
(
°d
::
°rög
 
§c
) {

31 
°d
::
°rög
 
ãmp
(
§c
);

32 
	gãmp
 += ";";

33  (*
	gP¨£r
::
‰om_c_°r
(
ãmp
.
c_°r
(), 
˘x
, "", 
Posôi⁄
()).
∑r£_£À˘‹_li°
())[0];

37 
roundåùTe°
(c⁄° * 
toTe°
) {

41 
Com∂ex_Sñe˘‹
* 
	gpOrigSñe˘‹
 = 
NULL
;

42 i‡(
	gtoTe°
) {

43 
	gpOrigSñe˘‹
 = 
¸óãCom∂exSñe˘‹
(
toTe°
);

46 
	g°d
::
°rög
 
ex≥˘ed
(
pOrigSñe˘‹
 ?ÖOrigSñe˘‹->
to_°rög
() : "NULL");

51 
Node
 
	gnode
 = 
com∂exSñe˘‹ToNode
(
pOrigSñe˘‹
, 
˘x
);

53 
	g°d
::
°rög°ªam
 
nodeSåögSåóm
;

54 
	gnodeSåögSåóm
 << 
	gnode
;

55 
	g°d
::
°rög
 
nodeSåög
 = 
nodeSåögSåóm
.
°r
();

56 
	gcout
 << "ASNODE: " << 
	gnode
 << 
	gídl
;

58 
Com∂ex_Sñe˘‹
* 
	gpNewSñe˘‹
 = 
nodeToCom∂exSñe˘‹
(
node
, 
˘x
);

62 
	g°d
::
°rög
 
ªsu…
(
pNewSñe˘‹
 ?ÖNewSñe˘‹->
to_°rög
() : "NULL");

64 
	gcout
 << "SELECTOR: " << 
	gex≥˘ed
 << 
	gídl
;

65 
	gcout
 << "NEW SELECTOR: " << 
	gªsu…
 << 
	gídl
;

70 
as£π
–(!
pOrigSñe˘‹
 && !
pNewSñe˘‹
 ) || (pOrigSelector &&ÖNewSelector) );

71 i‡(
	gpOrigSñe˘‹
) {

72 
as£π
–*
pOrigSñe˘‹
 =*
pNewSñe˘‹
 );

78 
as£π
(
ex≥˘ed
 =
ªsu…
);

83 
maö
() {

84 
	gödex
 = 0; index < 
STATIC_ARRAY_SIZE
(
ROUNDTRIP_TESTS
); index++) {

85 c⁄° * c⁄° 
	gtoTe°
 = 
ROUNDTRIP_TESTS
[
ödex
];

86 
	gcout
 << "\nINPUT STRING: " << (
	gtoTe°
 ?ÅoTe° : "NULL"Ë<< 
ídl
;

87 
roundåùTe°
(
toTe°
);

90 
	gcout
 << "\nTesting Done.\n";

	@node_modules/node-sass/src/libsass/test/test_paths.cpp

1 
	~<io°ªam
>

2 
	~"../∑ths.hµ
"

4 
usög
 
«me•a˚
 
	gSass
;

6 
	gãm∂©e
<
ty≥«me
 
	gT
>

7 
	g°d
::
ve˘‹
<
T
>& 
›î©‹
<<(
°d
::ve˘‹<T>& 
v
, c⁄° 
	gT
& 
	ge
)

9 
	gv
.
push_back
(
e
);

10  
	gv
;

13 
	$maö
()

15 
°d
::
ve˘‹
<> 
v1
, 
v2
, 
v3
;

16 
v1
 << 1 << 2;

17 
v2
 << 3;

18 
v3
 << 4 << 5 << 6;

20 
°d
::
ve˘‹
<°d::ve˘‹<> > 
ss
;

21 
ss
 << 
v1
 << 
v2
 << 
v3
;

23 
°d
::
ve˘‹
<°d::ve˘‹<> > 
ps
 = 
	`∑ths
(
ss
);

24 
size_t
 
i
 = 0, 
S
 = 
ps
.
	`size
(); i < S; ++i) {

25 
°d
::
cout
 << 
	`ve˘‹_to_°rög
(
ps
[
i
]Ë<< std::
ídl
;

28 
	}
}

	@node_modules/node-sass/src/libsass/test/test_selector_difference.cpp

1 
	~"../a°.hµ
"

2 
	~"../c⁄ãxt.hµ
"

3 
	~"../∑r£r.hµ
"

4 
	~<°rög
>

5 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	gSass
;

9 
C⁄ãxt
 
	g˘x
 = C⁄ãxt::
D©a
();

11 
Compound_Sñe˘‹
* 
	$£À˘‹
(
°d
::
°rög
 
§c
)

12 {  
P¨£r
::
	`‰om_c_°r
(
§c
.
	`c_°r
(), 
˘x
, "", 
	`Posôi⁄
()).
	`∑r£_compound_£À˘‹
(); 
	}
}

14 
	$diff
(
°d
::
°rög
 
s
, std::°rög 
t
)

16 
°d
::
cout
 << 
s
 << " - " << 
t
 << " = " << 
	`£À˘‹
(†+ ";")->
	`möus
(£À˘‹— + ";"), 
˘x
)->
	`to_°rög
(Ë<< std::
ídl
;

17 
	}
}

19 
	$maö
()

21 
	`diff
(".a.b.c", ".c.b");

22 
	`diff
(".a.b.c", ".fludge.b");

25 
	}
}

	@node_modules/node-sass/src/libsass/test/test_specificity.cpp

1 
	~"../a°.hµ
"

2 
	~"../c⁄ãxt.hµ
"

3 
	~"../∑r£r.hµ
"

4 
	~<°rög
>

5 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	gSass
;

9 
C⁄ãxt
 
	g˘x
 = C⁄ãxt::
D©a
();

11 
Sñe˘‹
* 
	$£À˘‹
(
°d
::
°rög
 
§c
)

12 {  
P¨£r
::
	`‰om_c_°r
(
§c
.
	`c_°r
(), 
˘x
, "", 
	`Posôi⁄
()).
	`∑r£_£À˘‹_li°
(); 
	}
}

14 
	$•ec
(
°d
::
°rög
 
£l
)

15 { 
°d
::
cout
 << 
£l
 << "\t::\t" << 
	`£À˘‹
(£»+ ";")->
	`•ecificôy
(Ë<< std::
ídl
; 
	}
}

17 
	$maö
()

19 
	`•ec
("foo bar hux");

20 
	`•ec
(".foo .bar hux");

21 
	`•ec
("#foo .bar[hux='mux']");

22 
	`•ec
("a b c dÉ f");

25 
	}
}

	@node_modules/node-sass/src/libsass/test/test_subset_map.cpp

1 
	~<°rög
>

2 
	~<io°ªam
>

3 
	~<as£π.h
>

4 
	~"../sub£t_m≠.hµ
"

6 
	gSub£t_M≠
<
	g°d
::
°rög
, std::°rög> 
ssm
;

8 
°rög
 
toSåög
(
°d
::
ve˘‹
<°d::°rög> 
v
);

9 
°rög
 
toSåög
(
°d
::
ve˘‹
<°d::
∑ú
<°d::°rög, std::ve˘‹<°d::°rög>>> 
v
);

10 
as£πEquÆ
(
°rög
 
°d
::
sEx≥˘ed
, std::°rög 
sResu…
);

12 
	$£tup
() {

13 
ssm
.
	`˛ór
();

16 
°d
::
ve˘‹
<°d::
°rög
> 
s1
;

17 
s1
.
	`push_back
("1");

18 
s1
.
	`push_back
("2");

19 
ssm
.
	`put
(
s1
, "Foo");

22 
°d
::
ve˘‹
<°d::
°rög
> 
s2
;

23 
s2
.
	`push_back
("fizz");

24 
s2
.
	`push_back
("fazz");

25 
ssm
.
	`put
(
s2
, "Bar");

28 
°d
::
ve˘‹
<°d::
°rög
> 
s3
;

29 
s3
.
	`push_back
(":foo");

30 
s3
.
	`push_back
(":bar");

31 
ssm
.
	`put
(
s3
, "Baz");

34 
°d
::
ve˘‹
<°d::
°rög
> 
s4
;

35 
s4
.
	`push_back
(":foo");

36 
s4
.
	`push_back
(":bar");

37 
s4
.
	`push_back
(":baz");

38 
ssm
.
	`put
(
s4
, "Bang");

41 
°d
::
ve˘‹
<°d::
°rög
> 
s5
;

42 
s5
.
	`push_back
(":bip");

43 
s5
.
	`push_back
(":bop");

44 
s5
.
	`push_back
(":blip");

45 
ssm
.
	`put
(
s5
, "Qux");

48 
°d
::
ve˘‹
<°d::
°rög
> 
s6
;

49 
s6
.
	`push_back
(":bip");

50 
s6
.
	`push_back
(":bop");

51 
ssm
.
	`put
(
s6
, "Thram");

52 
	}
}

54 
	$ã°EquÆKeys
() {

55 
°d
::
cout
 << "ã°EquÆKeys" << std::
ídl
;

58 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

59 
k1
.
	`push_back
("1");

60 
k1
.
	`push_back
("2");

61 
	`as£πEquÆ
("[[Foo, Së[1, 2]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

64 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

65 
k2
.
	`push_back
("fizz");

66 
k2
.
	`push_back
("fazz");

67 
	`as£πEquÆ
("[[B¨, Së[fizz, fazz]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

69 
°d
::
cout
 << std::
ídl
;

70 
	}
}

72 
	$ã°Sub£tKeys
() {

73 
°d
::
cout
 << "ã°Sub£tKeys" << std::
ídl
;

76 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

77 
k1
.
	`push_back
("1");

78 
k1
.
	`push_back
("2");

79 
k1
.
	`push_back
("fuzz");

80 
	`as£πEquÆ
("[[Foo, Së[1, 2]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

83 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

84 
k2
.
	`push_back
("fizz");

85 
k2
.
	`push_back
("fazz");

86 
k2
.
	`push_back
("3");

87 
	`as£πEquÆ
("[[B¨, Së[fizz, fazz]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

89 
°d
::
cout
 << std::
ídl
;

90 
	}
}

92 
	$ã°Su≥r£tKeys
() {

93 
°d
::
cout
 << "ã°Su≥r£tKeys" << std::
ídl
;

96 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

97 
k1
.
	`push_back
("1");

98 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

101 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

102 
k2
.
	`push_back
("2");

103 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

106 
°d
::
ve˘‹
<°d::
°rög
> 
k3
;

107 
k3
.
	`push_back
("fizz");

108 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k3
)));

111 
°d
::
ve˘‹
<°d::
°rög
> 
k4
;

112 
k4
.
	`push_back
("fazz");

113 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k4
)));

115 
°d
::
cout
 << std::
ídl
;

116 
	}
}

118 
	$ã°DisjoötKeys
() {

119 
°d
::
cout
 << "ã°DisjoötKeys" << std::
ídl
;

122 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

123 
k1
.
	`push_back
("3");

124 
k1
.
	`push_back
("4");

125 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

128 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

129 
k2
.
	`push_back
("fuzz");

130 
k2
.
	`push_back
("frizz");

131 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

134 
°d
::
ve˘‹
<°d::
°rög
> 
k3
;

135 
k3
.
	`push_back
("gran");

136 
k3
.
	`push_back
("15");

137 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k3
)));

139 
°d
::
cout
 << std::
ídl
;

140 
	}
}

142 
	$ã°SemiDisjoötKeys
() {

143 
°d
::
cout
 << "ã°SemiDisjoötKeys" << std::
ídl
;

146 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

147 
k1
.
	`push_back
("2");

148 
k1
.
	`push_back
("3");

149 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

152 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

153 
k2
.
	`push_back
("fizz");

154 
k2
.
	`push_back
("fuzz");

155 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

158 
°d
::
ve˘‹
<°d::
°rög
> 
k3
;

159 
k3
.
	`push_back
("1");

160 
k3
.
	`push_back
("fazz");

161 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k3
)));

163 
°d
::
cout
 << std::
ídl
;

164 
	}
}

166 
	$ã°Em±yKeySë
() {

167 
°d
::
cout
 << "ã°Em±yKeySë" << std::
ídl
;

170 
°d
::
ve˘‹
<°d::
°rög
> 
s1
;

171 
åy
 {

172 
ssm
.
	`put
(
s1
, "Fail");

174 
	`ˇtch
 (c⁄° * &
e
) {

175 
	`as£πEquÆ
("öã∫ÆÉº‹: sub£àm≠ key†mayÇŸ bêem±y", 
e
);

177 
	}
}

179 
	$ã°Em±yKeyGë
() {

180 
°d
::
cout
 << "ã°Em±yKeyGë" << std::
ídl
;

183 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

184 
	`as£πEquÆ
("[]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

186 
°d
::
cout
 << std::
ídl
;

187 
	}
}

188 
	$ã°Mu…ùÀSub£ts
() {

189 
°d
::
cout
 << "ã°Mu…ùÀSub£ts" << std::
ídl
;

192 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

193 
k1
.
	`push_back
("1");

194 
k1
.
	`push_back
("2");

195 
k1
.
	`push_back
("fizz");

196 
k1
.
	`push_back
("fazz");

197 
	`as£πEquÆ
("[[Foo, Së[1, 2]], [B¨, Së[fizz, fazz]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

200 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

201 
k2
.
	`push_back
("1");

202 
k2
.
	`push_back
("2");

203 
k2
.
	`push_back
("3");

204 
k2
.
	`push_back
("fizz");

205 
k2
.
	`push_back
("fazz");

206 
k2
.
	`push_back
("fuzz");

207 
	`as£πEquÆ
("[[Foo, Së[1, 2]], [B¨, Së[fizz, fazz]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k2
)));

210 
°d
::
ve˘‹
<°d::
°rög
> 
k3
;

211 
k3
.
	`push_back
(":foo");

212 
k3
.
	`push_back
(":bar");

213 
	`as£πEquÆ
("[[Baz, Së[:foo, :b¨]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k3
)));

216 
°d
::
ve˘‹
<°d::
°rög
> 
k4
;

217 
k4
.
	`push_back
(":foo");

218 
k4
.
	`push_back
(":bar");

219 
k4
.
	`push_back
(":baz");

220 
	`as£πEquÆ
("[[Baz, Së[:foo, :b¨]], [B™g, Së[:foo, :b¨, :baz]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k4
)));

222 
°d
::
cout
 << std::
ídl
;

223 
	}
}

224 
	$ã°BøckëBøckë
() {

225 
°d
::
cout
 << "ã°BøckëBøckë" << std::
ídl
;

228 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

229 
k1
.
	`push_back
("1");

230 
k1
.
	`push_back
("2");

231 
k1
.
	`push_back
("fuzz");

232 
	`as£πEquÆ
("[Foo]", 
	`toSåög
(
ssm
.
	`gë_v
(
k1
)));

235 
°d
::
ve˘‹
<°d::
°rög
> 
k2
;

236 
k2
.
	`push_back
(":foo");

237 
k2
.
	`push_back
(":bar");

238 
k2
.
	`push_back
(":baz");

239 
	`as£πEquÆ
("[Baz, B™g]", 
	`toSåög
(
ssm
.
	`gë_v
(
k2
)));

241 
°d
::
cout
 << std::
ídl
;

242 
	}
}

244 
	$ã°KeyOrdî
() {

245 
°d
::
cout
 << "ã°EquÆKeys" << std::
ídl
;

248 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

249 
k1
.
	`push_back
("2");

250 
k1
.
	`push_back
("1");

251 
	`as£πEquÆ
("[[Foo, Së[1, 2]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

253 
°d
::
cout
 << std::
ídl
;

254 
	}
}

256 
	$ã°OrdîPª£rved
() {

257 
°d
::
cout
 << "ã°OrdîPª£rved" << std::
ídl
;

259 
°d
::
ve˘‹
<°d::
°rög
> 
s1
;

260 
s1
.
	`push_back
("10");

261 
s1
.
	`push_back
("11");

262 
s1
.
	`push_back
("12");

263 
ssm
.
	`put
(
s1
, "1");

266 
°d
::
ve˘‹
<°d::
°rög
> 
s2
;

267 
s2
.
	`push_back
("10");

268 
s2
.
	`push_back
("11");

269 
ssm
.
	`put
(
s2
, "2");

272 
°d
::
ve˘‹
<°d::
°rög
> 
s3
;

273 
s3
.
	`push_back
("11");

274 
ssm
.
	`put
(
s3
, "3");

277 
°d
::
ve˘‹
<°d::
°rög
> 
s4
;

278 
s4
.
	`push_back
("11");

279 
s4
.
	`push_back
("12");

280 
ssm
.
	`put
(
s4
, "4");

283 
°d
::
ve˘‹
<°d::
°rög
> 
s5
;

284 
s5
.
	`push_back
("9");

285 
s5
.
	`push_back
("10");

286 
s5
.
	`push_back
("11");

287 
s5
.
	`push_back
("12");

288 
s5
.
	`push_back
("13");

289 
ssm
.
	`put
(
s5
, "5");

292 
°d
::
ve˘‹
<°d::
°rög
> 
s6
;

293 
s6
.
	`push_back
("10");

294 
s6
.
	`push_back
("13");

295 
ssm
.
	`put
(
s6
, "6");

298 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

299 
k1
.
	`push_back
("9");

300 
k1
.
	`push_back
("10");

301 
k1
.
	`push_back
("11");

302 
k1
.
	`push_back
("12");

303 
k1
.
	`push_back
("13");

304 
	`as£πEquÆ
("[[1, Së[10, 11, 12]], [2, Së[10, 11]], [3, Së[11]], [4, Së[11, 12]], [5, Së[9, 10, 11, 12, 13]], [6, Së[10, 13]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

306 
°d
::
cout
 << std::
ídl
;

307 
	}
}

308 
	$ã°Mu…ùÀEquÆVÆues
() {

309 
°d
::
cout
 << "ã°Mu…ùÀEquÆVÆues" << std::
ídl
;

311 
°d
::
ve˘‹
<°d::
°rög
> 
s1
;

312 
s1
.
	`push_back
("11");

313 
s1
.
	`push_back
("12");

314 
ssm
.
	`put
(
s1
, "1");

317 
°d
::
ve˘‹
<°d::
°rög
> 
s2
;

318 
s2
.
	`push_back
("12");

319 
s2
.
	`push_back
("13");

320 
ssm
.
	`put
(
s2
, "2");

323 
°d
::
ve˘‹
<°d::
°rög
> 
s3
;

324 
s3
.
	`push_back
("13");

325 
s3
.
	`push_back
("14");

326 
ssm
.
	`put
(
s3
, "1");

329 
°d
::
ve˘‹
<°d::
°rög
> 
s4
;

330 
s4
.
	`push_back
("14");

331 
s4
.
	`push_back
("15");

332 
ssm
.
	`put
(
s4
, "1");

335 
°d
::
ve˘‹
<°d::
°rög
> 
k1
;

336 
k1
.
	`push_back
("11");

337 
k1
.
	`push_back
("12");

338 
k1
.
	`push_back
("13");

339 
k1
.
	`push_back
("14");

340 
k1
.
	`push_back
("15");

341 
	`as£πEquÆ
("[[1, Së[11, 12]], [2, Së[12, 13]], [1, Së[13, 14]], [1, Së[14, 15]]]", 
	`toSåög
(
ssm
.
	`gë_kv
(
k1
)));

343 
°d
::
cout
 << std::
ídl
;

344 
	}
}

346 
	$maö
()

348 
°d
::
ve˘‹
<°d::
°rög
> 
s1
;

349 
s1
.
	`push_back
("1");

350 
s1
.
	`push_back
("2");

352 
°d
::
ve˘‹
<°d::
°rög
> 
s2
;

353 
s2
.
	`push_back
("2");

354 
s2
.
	`push_back
("3");

356 
°d
::
ve˘‹
<°d::
°rög
> 
s3
;

357 
s3
.
	`push_back
("3");

358 
s3
.
	`push_back
("4");

360 
ssm
.
	`put
(
s1
, "value1");

361 
ssm
.
	`put
(
s2
, "value2");

362 
ssm
.
	`put
(
s3
, "value3");

364 
°d
::
ve˘‹
<°d::
°rög
> 
s4
;

365 
s4
.
	`push_back
("1");

366 
s4
.
	`push_back
("2");

367 
s4
.
	`push_back
("3");

369 
°d
::
ve˘‹
<°d::
∑ú
<
°rög
, std::ve˘‹<°d::°rög> > > 
	`„tched
(
ssm
.
	`gë_kv
(
s4
));

371 
°d
::
cout
 << "PRINTING RESULTS:" << std::
ídl
;

372 
size_t
 
i
 = 0, 
S
 = 
„tched
.
	`size
(); i < S; ++i) {

373 
°d
::
cout
 << 
„tched
[
i
].
fú°
 << std::
ídl
;

376 
Sub£t_M≠
<
°rög
, såög> 
ssm2
;

377 
ssm2
.
	`put
(
s1
, "foo");

378 
ssm2
.
	`put
(
s2
, "bar");

379 
ssm2
.
	`put
(
s4
, "hux");

381 
°d
::
ve˘‹
<°d::
∑ú
<
°rög
, std::ve˘‹<°d::°rög> > > 
	`„tched2
(
ssm2
.
	`gë_kv
(
s4
));

383 
°d
::
cout
 << std::
ídl
 << "PRINTING RESULTS:" << std::endl;

384 
size_t
 
i
 = 0, 
S
 = 
„tched2
.
	`size
(); i < S; ++i) {

385 
°d
::
cout
 << 
„tched2
[
i
].
fú°
 << std::
ídl
;

388 
°d
::
cout
 << "TRYING ON A SELECTOR-LIKE OBJECT" << std::
ídl
;

390 
Sub£t_M≠
<
°rög
, såög> 
£l_ssm
;

391 
°d
::
ve˘‹
<°d::
°rög
> 
èrgë
;

392 
èrgë
.
	`push_back
("desk");

393 
èrgë
.
	`push_back
(".wood");

395 
°d
::
ve˘‹
<°d::
°rög
> 
a˘uÆ
;

396 
a˘uÆ
.
	`push_back
("desk");

397 
a˘uÆ
.
	`push_back
(".wood");

398 
a˘uÆ
.
	`push_back
(".mine");

400 
£l_ssm
.
	`put
(
èrgë
, "has-aquarium");

401 
°d
::
ve˘‹
<°d::
∑ú
<
°rög
, std::ve˘‹<°d::°rög> > > 
	`„tched3
(
£l_ssm
.
	`gë_kv
(
a˘uÆ
));

402 
°d
::
cout
 << "RESULTS:" << std::
ídl
;

403 
size_t
 
i
 = 0, 
S
 = 
„tched3
.
	`size
(); i < S; ++i) {

404 
°d
::
cout
 << 
„tched3
[
i
].
fú°
 << std::
ídl
;

407 
°d
::
cout
 << std::
ídl
;

411 
	`£tup
();

412 
	`ã°EquÆKeys
();

413 
	`ã°Sub£tKeys
();

414 
	`ã°Su≥r£tKeys
();

415 
	`ã°DisjoötKeys
();

416 
	`ã°SemiDisjoötKeys
();

417 
	`ã°Em±yKeySë
();

418 
	`ã°Em±yKeyGë
();

419 
	`ã°Mu…ùÀSub£ts
();

420 
	`ã°BøckëBøckë
();

421 
	`ã°KeyOrdî
();

423 
	`£tup
();

424 
	`ã°OrdîPª£rved
();

426 
	`£tup
();

427 
	`ã°Mu…ùÀEquÆVÆues
();

430 
	}
}

432 
°rög
 
toSåög
(
°d
::
ve˘‹
<°d::
∑ú
<°rög, std::ve˘‹<°d::°rög>>> 
v
)

434 
°d
::
°rög°ªam
 
buf„r
;

435 
	gbuf„r
 << "[";

436 
size_t
 
	gi
 = 0, 
	gS
 = 
v
.
size
(); i < S; ++i) {

437 
	gbuf„r
 << "[" << 
	gv
[
i
].
	gfú°
;

438 
	gbuf„r
 << ", Set[";

439 
size_t
 
	gj
 = 0, 
	gS
 = 
v
[
i
].
£c⁄d
.
size
(); j < S; ++j) {

440 
	gbuf„r
 << 
	gv
[
i
].
	g£c⁄d
[
j
];

441 i‡(
	gj
 < 
	gS
-1) {

442 
	gbuf„r
 << ", ";

445 
	gbuf„r
 << "]]";

446 i‡(
	gi
 < 
	gS
-1) {

447 
	gbuf„r
 << ", ";

450 
	gbuf„r
 << "]";

451  
	gbuf„r
.
°r
();

454 
°rög
 
toSåög
(
°d
::
ve˘‹
<°d::°rög> 
v
)

456 
°d
::
°rög°ªam
 
buf„r
;

457 
	gbuf„r
 << "[";

458 
size_t
 
	gi
 = 0, 
	gS
 = 
v
.
size
(); i < S; ++i) {

459 
	gbuf„r
 << 
	gv
[
i
];

460 i‡(
	gi
 < 
	gS
-1) {

461 
	gbuf„r
 << ", ";

464 
	gbuf„r
 << "]";

465  
	gbuf„r
.
°r
();

468 
	$as£πEquÆ
(
°rög
 
sEx≥˘ed
, såög 
sResu…
) {

469 
°d
::
cout
 << "Ex≥˘ed: " << 
sEx≥˘ed
 << std::
ídl
;

470 
°d
::
cout
 << "Resu…: " << 
sResu…
 << std::
ídl
;

471 
	`as£π
(
sEx≥˘ed
 =
sResu…
);

472 
	}
}

	@node_modules/node-sass/src/libsass/test/test_superselector.cpp

1 
	~"../a°.hµ
"

2 
	~"../c⁄ãxt.hµ
"

3 
	~"../∑r£r.hµ
"

4 
	~<°rög
>

6 
usög
 
«me•a˚
 
	gSass
;

8 
C⁄ãxt
 
	g˘x
 = C⁄ãxt(C⁄ãxt::
D©a
());

10 
Compound_Sñe˘‹
* 
	$compound_£À˘‹
(
°d
::
°rög
 
§c
)

11 {  
P¨£r
::
	`‰om_c_°r
(
§c
.
	`c_°r
(), 
˘x
, "", 
	`Posôi⁄
()).
	`∑r£_compound_£À˘‹
(); 
	}
}

13 
Com∂ex_Sñe˘‹
* 
	$com∂ex_£À˘‹
(
°d
::
°rög
 
§c
)

14 {  
P¨£r
::
	`‰om_c_°r
(
§c
.
	`c_°r
(), 
˘x
, "", 
	`Posôi⁄
()).
	`∑r£_com∂ex_£À˘‹
(
Ál£
); 
	}
}

16 
	$check_compound
(
°d
::
°rög
 
s1
, std::°rög 
s2
)

18 
°d
::
cout
 << "Is "

19 << 
s1


21 << 
s2


23 << 
	`compound_£À˘‹
(
s1
 + ";")->
	`is_su≥r£À˘‹_of
(compound_£À˘‹(
s2
 + ";"))

24 << 
°d
::
ídl
;

25 
	}
}

27 
	$check_com∂ex
(
°d
::
°rög
 
s1
, std::°rög 
s2
)

29 
°d
::
cout
 << "Is "

30 << 
s1


32 << 
s2


34 << 
	`com∂ex_£À˘‹
(
s1
 + ";")->
	`is_su≥r£À˘‹_of
(com∂ex_£À˘‹(
s2
 + ";"))

35 << 
°d
::
ídl
;

36 
	}
}

38 
	$maö
()

40 
	`check_compound
(".foo", ".foo.bar");

41 
	`check_compound
(".foo.bar", ".foo");

42 
	`check_compound
(".foo.bar", "div.foo");

43 
	`check_compound
(".foo", "div.foo");

44 
	`check_compound
("div.foo", ".foo");

45 
	`check_compound
("div.foo", "div.bar.foo");

46 
	`check_compound
("p.foo", "div.bar.foo");

47 
	`check_compound
(".hux", ".mumble");

49 
°d
::
cout
 << std::
ídl
;

51 
	`check_com∂ex
(".foo ~ .bar", ".foo + .bar");

52 
	`check_com∂ex
(".foo .bar", ".foo + .bar");

53 
	`check_com∂ex
(".foo .bar", ".foo > .bar");

54 
	`check_com∂ex
(".foo .bar > .hux", ".foo.a .bar.b > .hux");

55 
	`check_com∂ex
(".foo ~ .bar .hux", ".foo.a + .bar.b > .hux");

56 
	`check_com∂ex
(".foo", ".bar .foo");

57 
	`check_com∂ex
(".foo", ".foo.a");

58 
	`check_com∂ex
(".foo.bar", ".foo");

59 
	`check_com∂ex
(".foo .bar .hux", ".bar .hux");

60 
	`check_com∂ex
(".foo ~ .bar .hux.x", ".foo.a + .bar.b > .hux.y");

61 
	`check_com∂ex
(".foo ~ .bar .hux", ".foo.a + .bar.b > .mumble");

62 
	`check_com∂ex
(".foo + .bar", ".foo ~ .bar");

63 
	`check_com∂ex
("a cÉ", "a b c dÉ");

64 
	`check_com∂ex
("cáÉ", "a b c dÉ");

67 
	}
}

	@node_modules/node-sass/src/libsass/test/test_unification.cpp

1 
	~"../a°.hµ
"

2 
	~"../c⁄ãxt.hµ
"

3 
	~"../∑r£r.hµ
"

4 
	~<°rög
>

6 
usög
 
«me•a˚
 
	gSass
;

8 
C⁄ãxt
 
	g˘x
 = C⁄ãxt(C⁄ãxt::
D©a
());

10 
Compound_Sñe˘‹
* 
	$£À˘‹
(
°d
::
°rög
 
§c
)

11 {  
P¨£r
::
	`‰om_c_°r
(
§c
.
	`c_°r
(), 
˘x
, "", 
	`Posôi⁄
()).
	`∑r£_compound_£À˘‹
(); 
	}
}

13 
	$unify
(
°d
::
°rög
 
lhs
, std::°rög 
rhs
)

15 
Compound_Sñe˘‹
* 
unifõd
 = 
	`£À˘‹
(
lhs
 + ";")->
	`unify_wôh
(£À˘‹(
rhs
 + ";"), 
˘x
);

16 
°d
::
cout
 << 
lhs
 << " UNIFIED WITH " << 
rhs
 << " =\t" << (
unifõd
 ? unifõd->
	`to_°rög
(Ë: "NOTHING"Ë<< std::
ídl
;

17 
	}
}

19 
	$maö
()

21 
	`unify
(".foo", ".foo.bar");

22 
	`unify
("div:nth-of-type(odd)", "div:first-child");

23 
	`unify
("div", "span:whatever");

24 
	`unify
("div", "span");

25 
	`unify
("foo:bar::after", "foo:bar::first-letter");

26 
	`unify
(".foo#bar.hux", ".hux.foo#bar");

27 
	`unify
(".foo#bar.hux", ".hux.foo#baz");

28 
	`unify
("*:blah:fudge", "p:fudge:blah");

31 
	}
}

	@node_modules/node-sass/src/sass_context_wrapper.cpp

1 
	~"ßss_c⁄ãxt_wøµî.h
"

4 
usög
 
«me•a˚
 
°d
;

6 
compûe_ô
(
uv_w‹k_t
* 
ªq
) {

7 
ßss_c⁄ãxt_wøµî
* 
˘x_w
 = (ßss_c⁄ãxt_wøµî*)
ªq
->
d©a
;

9 i‡(
˘x_w
->
d˘x
) {

10 
compûe_d©a
(
˘x_w
->
d˘x
);

12 i‡(
˘x_w
->
f˘x
) {

13 
compûe_fûe
(
˘x_w
->
f˘x
);

17 
compûe_d©a
(
Sass_D©a_C⁄ãxt
* 
d˘x
) {

18 
ßss_compûe_d©a_c⁄ãxt
(
d˘x
);

21 
compûe_fûe
(
Sass_Fûe_C⁄ãxt
* 
f˘x
) {

22 
ßss_compûe_fûe_c⁄ãxt
(
f˘x
);

25 
ßss_c⁄ãxt_wøµî
* 
ßss_make_c⁄ãxt_wøµî
() {

26  (
ßss_c⁄ãxt_wøµî
*)
ˇŒoc
(1, (sass_context_wrapper));

29 
ßss_‰ì_c⁄ãxt_wøµî
(
ßss_c⁄ãxt_wøµî
* 
˘x_w
) {

30 i‡(
˘x_w
->
d˘x
) {

31 
ßss_dñëe_d©a_c⁄ãxt
(
˘x_w
->
d˘x
);

33 i‡(
˘x_w
->
f˘x
) {

34 
ßss_dñëe_fûe_c⁄ãxt
(
˘x_w
->
f˘x
);

37 
dñëe
 
˘x_w
->
îr‹_ˇŒback
;

38 
dñëe
 
˘x_w
->
suc˚ss_ˇŒback
;

40 
˘x_w
->
ªsu…
.
Re£t
();

42 
‰ì
(
˘x_w
->
ö˛ude_∑th
);

43 
‰ì
(
˘x_w
->
löe„ed
);

44 
‰ì
(
˘x_w
->
out_fûe
);

45 
‰ì
(
˘x_w
->
sour˚_m≠
);

46 
‰ì
(
˘x_w
->
sour˚_m≠_roŸ
);

47 
‰ì
(
˘x_w
->
ödít
);

49 
°d
::
ve˘‹
<
Cu°omImp‹ãrBridge
 *>::
ôî©‹
 
imp_ô
 = 
˘x_w
->
imp‹ãr_bridges
.
begö
();

50 
imp_ô
 !
˘x_w
->
imp‹ãr_bridges
.
íd
()) {

51 
Cu°omImp‹ãrBridge
* 
p
 = *
imp_ô
;

52 
imp_ô
 = 
˘x_w
->
imp‹ãr_bridges
.
îa£
(imp_it);

53 
dñëe
 
p
;

55 
°d
::
ve˘‹
<
Cu°omFun˘i⁄Bridge
 *>::
ôî©‹
 
func_ô
 = 
˘x_w
->
fun˘i⁄_bridges
.
begö
();

56 
func_ô
 !
˘x_w
->
fun˘i⁄_bridges
.
íd
()) {

57 
Cu°omFun˘i⁄Bridge
* 
p
 = *
func_ô
;

58 
func_ô
 = 
˘x_w
->
fun˘i⁄_bridges
.
îa£
(func_it);

59 
dñëe
 
p
;

62 
‰ì
(
˘x_w
);

	@node_modules/node-sass/src/sass_context_wrapper.h

1 #i‚de‡
SASS_CONTEXT_WRAPPER


2 
	#SASS_CONTEXT_WRAPPER


	)

4 
	~<ve˘‹
>

5 
	~<mem‹y
>

6 
	~<«n.h
>

7 
	~<°dlib.h
>

8 
	~<ßss/c⁄ãxt.h
>

9 
	~"cu°om_fun˘i⁄_bridge.h
"

10 
	~"cu°om_imp‹ãr_bridge.h
"

12 #ifde‡
__˝lu•lus


16 
compûe_d©a
(
Sass_D©a_C⁄ãxt
* 
d˘x
);

17 
compûe_fûe
(
Sass_Fûe_C⁄ãxt
* 
f˘x
);

18 
compûe_ô
(
uv_w‹k_t
* 
ªq
);

20 
	sßss_c⁄ãxt_wøµî
 {

22 
boﬁ
 
is_sync
;

23 * 
cookõ
;

24 * 
fûe
;

25 * 
ö˛ude_∑th
;

26 * 
out_fûe
;

27 * 
sour˚_m≠
;

28 * 
sour˚_m≠_roŸ
;

29 * 
löe„ed
;

30 * 
ödít
;

33 
Sass_D©a_C⁄ãxt
* 
d˘x
;

34 
Sass_Fûe_C⁄ãxt
* 
f˘x
;

37 
uv_async_t
 
async
;

38 
uv_w‹k_t
 
ªque°
;

41 
N™
::
Pîsi°ít
<
v8
::
Obje˘
> 
ªsu…
;

42 
N™
::
CÆlback
* 
îr‹_ˇŒback
;

43 
N™
::
CÆlback
* 
suc˚ss_ˇŒback
;

45 
°d
::
ve˘‹
<
Cu°omFun˘i⁄Bridge
 *> 
fun˘i⁄_bridges
;

46 
°d
::
ve˘‹
<
Cu°omImp‹ãrBridge
 *> 
imp‹ãr_bridges
;

49 
ßss_c⁄ãxt_wøµî
* 
ßss_make_c⁄ãxt_wøµî
();

50 
ßss_‰ì_c⁄ãxt_wøµî
(
ßss_c⁄ãxt_wøµî
*);

52 #ifde‡
__˝lu•lus


	@node_modules/node-sass/src/sass_types/boolean.cpp

1 
	~<«n.h
>

2 
	~"boﬁón.h
"

4 
«me•a˚
 
	gSassTy≥s


6 
	gN™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
Boﬁón
::
c⁄°ru˘‹
;

7 
boﬁ
 
	gBoﬁón
::
c⁄°ru˘‹_locked
 = 
Ál£
;

9 
	gBoﬁón
::
Boﬁón
(
boﬁ
 
v
Ë: 
vÆue
(v) {}

11 
Boﬁón
& Boﬁón::
gë_sögÀt⁄
(
boﬁ
 
v
) {

12 
Boﬁón
 
ö°™˚_Ál£
(
Ál£
), 
ö°™˚_åue
(
åue
);

13  
	gv
 ? 
	gö°™˚_åue
 : 
ö°™˚_Ál£
;

16 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
Boﬁón
::
gë_c⁄°ru˘‹
() {

17 
N™
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

18 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
c⁄¶oˇl
;

19 i‡(
	gc⁄°ru˘‹
.
IsEm±y
()) {

20 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::FunctionTemplate>(New);

22 
	gçl
->
SëCœssName
(
N™
::
New
("SassBoﬁón").
ToLoˇlChecked
());

23 
	gçl
->
In°™˚Tem∂©e
()->
SëI¡î«lFõldCou¡
(1);

24 
	gN™
::
SëPrŸŸy≥Tem∂©e
(
çl
, "gëVÆue", 
N™
::
New
<
v8
::
Fun˘i⁄Tem∂©e
>(
GëVÆue
));

26 
	gc⁄¶oˇl
 = 
N™
::
GëFun˘i⁄
(
çl
).
ToLoˇlChecked
();

27 
	gc⁄°ru˘‹
.
Re£t
(
c⁄¶oˇl
);

29 
gë_sögÀt⁄
(
Ál£
).
	gjs_obje˘
.
Re£t
(
N™
::
NewIn°™˚
(
c⁄¶oˇl
).
ToLoˇlChecked
());

30 
	gN™
::
SëI¡î«lFõldPoöãr
(
N™
::
New
(
gë_sögÀt⁄
(
Ál£
).
js_obje˘
), 0, &get_singleton(false));

31 
	gN™
::
Së
(
c⁄¶oˇl
, 
N™
::
New
("FALSE").
ToLoˇlChecked
(), N™::New(
gë_sögÀt⁄
(
Ál£
).
js_obje˘
));

33 
gë_sögÀt⁄
(
åue
).
	gjs_obje˘
.
Re£t
(
N™
::
NewIn°™˚
(
c⁄¶oˇl
).
ToLoˇlChecked
());

34 
	gN™
::
SëI¡î«lFõldPoöãr
(
N™
::
New
(
gë_sögÀt⁄
(
åue
).
js_obje˘
), 0, &get_singleton(true));

35 
	gN™
::
Së
(
c⁄¶oˇl
, 
N™
::
New
("TRUE").
ToLoˇlChecked
(), N™::New(
gë_sögÀt⁄
(
åue
).
js_obje˘
));

37 
	gc⁄°ru˘‹_locked
 = 
åue
;

39 
	gc⁄¶oˇl
 = 
N™
::
New
(
c⁄°ru˘‹
);

42  
	gsc›e
.
Esˇ≥
(
c⁄¶oˇl
);

45 
Sass_VÆue
* 
	gBoﬁón
::
gë_ßss_vÆue
() {

46  
ßss_make_boﬁón
(
vÆue
);

49 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
Boﬁón
::
gë_js_obje˘
() {

50  
N™
::
New
(
this
->
js_obje˘
);

53 
NAN_METHOD
(
Boﬁón
::
New
) {

55 i‡(
öfo
.
IsC⁄°ru˘CÆl
()) {

56 i‡(
c⁄°ru˘‹_locked
) {

57  
N™
::
ThrowTy≥Eº‹
("Cannot instantiate SassBoolean");

61 i‡(
	göfo
.
Lígth
(Ë!1 || !
öfo
[0]->
IsBoﬁón
()) {

62  
N™
::
ThrowTy≥Eº‹
("Expected one booleanárgument");

65 
	göfo
.
GëRëu∫VÆue
().
Së
(
gë_sögÀt⁄
(
N™
::
To
<
boﬁ
>(
öfo
[0]).
FromJu°
()).
gë_js_obje˘
());

69 
NAN_METHOD
(
Boﬁón
::
GëVÆue
) {

70 
Boﬁón
 *
out
;

71 i‡((
	gout
 = 
°©ic_ˇ°
<
Boﬁón
*>(
Fa˘‹y
::
unwøp
(
öfo
.
This
())))) {

72 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
(
out
->
vÆue
));

	@node_modules/node-sass/src/sass_types/boolean.h

1 #i‚de‡
SASS_TYPES_BOOLEAN_H


2 
	#SASS_TYPES_BOOLEAN_H


	)

4 
	~<«n.h
>

5 
	~"vÆue.h
"

6 
	~"ßss_vÆue_wøµî.h
"

8 
«me•a˚
 
	gSassTy≥s


10 ˛as†
	cBoﬁón
 : 
public
 
SassTy≥s
::
VÆue
 {

11 
public
:

12 
Boﬁón
& 
gë_sögÀt⁄
(
boﬁ
);

13 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
gë_c⁄°ru˘‹
();

15 
Sass_VÆue
* 
gë_ßss_vÆue
();

16 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
gë_js_obje˘
();

18 
NAN_METHOD
(
New
);

19 
NAN_METHOD
(
GëVÆue
);

21 
	g¥iv©e
:

22 
Boﬁón
(
boﬁ
);

24 
boﬁ
 
	gvÆue
;

25 
	gN™
::
Pîsi°ít
<
v8
::
Obje˘
> 
js_obje˘
;

27 
	gN™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
c⁄°ru˘‹
;

28 
boﬁ
 
	gc⁄°ru˘‹_locked
;

	@node_modules/node-sass/src/sass_types/color.cpp

1 
	~<«n.h
>

2 
	~"cﬁ‹.h
"

4 
«me•a˚
 
	gSassTy≥s


6 
	gCﬁ‹
::
Cﬁ‹
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

8 
Sass_VÆue
* 
Cﬁ‹
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

9 
	ga
 = 1.0, 
	gr
 = 0, 
	gg
 = 0, 
	gb
 = 0;

10 
	g¨gb
;

12 
	gøw_vÆ
.
size
()) {

14 i‡(!
øw_vÆ
[0]->
IsNumbî
()) {

15  
Áû
("O∆yárgumíàshould bê™ i¡egî.", 
out
);

18 
	g¨gb
 = 
N™
::
To
<
öt32_t
>(
øw_vÆ
[0]).
FromJu°
();

19 
	ga
 = ()((
¨gb
 >> 030) & 0xff) / 0xff;

20 
	gr
 = ()((
¨gb
 >> 020) & 0xff);

21 
	gg
 = ()((
¨gb
 >> 010) & 0xff);

22 
	gb
 = ()(
¨gb
 & 0xff);

26 i‡(!
øw_vÆ
[3]->
IsNumbî
()) {

27  
Áû
("C⁄°ru˘‹árgumít†should bênumbî†ex˛usivñy.", 
out
);

30 
	ga
 = 
N™
::
To
<>(
øw_vÆ
[3]).
FromJu°
();

34 i‡(!
øw_vÆ
[0]->
IsNumbî
() || !raw_val[1]->IsNumber() || !raw_val[2]->IsNumber()) {

35  
Áû
("C⁄°ru˘‹árgumít†should bênumbî†ex˛usivñy.", 
out
);

38 
	gr
 = 
N™
::
To
<>(
øw_vÆ
[0]).
FromJu°
();

39 
	gg
 = 
N™
::
To
<>(
øw_vÆ
[1]).
FromJu°
();

40 
	gb
 = 
N™
::
To
<>(
øw_vÆ
[2]).
FromJu°
();

47  
Áû
("C⁄°ru˘‹ should bêövoked wôhÉôhî 0, 1, 3 o∏4árgumíts.", 
out
);

50  *
	gout
 = 
ßss_make_cﬁ‹
(
r
, 
g
, 
b
, 
a
);

53 
	gCﬁ‹
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
¥Ÿo
) {

54 
N™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëR", 
GëR
);

55 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëG", 
GëG
);

56 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëB", 
GëB
);

57 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëA", 
GëA
);

58 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tR", 
SëR
);

59 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tG", 
SëG
);

60 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tB", 
SëB
);

61 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tA", 
SëA
);

64 
NAN_METHOD
(
Cﬁ‹
::
GëR
) {

65 
öfo
.
GëRëu∫VÆue
().
Së
(
ßss_cﬁ‹_gë_r
(
unwøp
(öfo.
This
())->
vÆue
));

68 
NAN_METHOD
(
Cﬁ‹
::
GëG
) {

69 
öfo
.
GëRëu∫VÆue
().
Së
(
ßss_cﬁ‹_gë_g
(
unwøp
(öfo.
This
())->
vÆue
));

72 
NAN_METHOD
(
Cﬁ‹
::
GëB
) {

73 
öfo
.
GëRëu∫VÆue
().
Së
(
ßss_cﬁ‹_gë_b
(
unwøp
(öfo.
This
())->
vÆue
));

76 
NAN_METHOD
(
Cﬁ‹
::
GëA
) {

77 
öfo
.
GëRëu∫VÆue
().
Së
(
ßss_cﬁ‹_gë_a
(
unwøp
(öfo.
This
())->
vÆue
));

80 
NAN_METHOD
(
Cﬁ‹
::
SëR
) {

81 i‡(
öfo
.
Lígth
() != 1) {

82  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

85 i‡(!
	göfo
[0]->
IsNumbî
()) {

86  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beáÇumber");

89 
ßss_cﬁ‹_£t_r
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<>(öfo[0]).
FromJu°
());

92 
NAN_METHOD
(
Cﬁ‹
::
SëG
) {

93 i‡(
öfo
.
Lígth
() != 1) {

94  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

97 i‡(!
	göfo
[0]->
IsNumbî
()) {

98  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beáÇumber");

101 
ßss_cﬁ‹_£t_g
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<>(öfo[0]).
FromJu°
());

104 
NAN_METHOD
(
Cﬁ‹
::
SëB
) {

105 i‡(
öfo
.
Lígth
() != 1) {

106  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

109 i‡(!
	göfo
[0]->
IsNumbî
()) {

110  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beáÇumber");

113 
ßss_cﬁ‹_£t_b
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<>(öfo[0]).
FromJu°
());

116 
NAN_METHOD
(
Cﬁ‹
::
SëA
) {

117 i‡(
öfo
.
Lígth
() != 1) {

118  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

121 i‡(!
	göfo
[0]->
IsNumbî
()) {

122  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beáÇumber");

125 
ßss_cﬁ‹_£t_a
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<>(öfo[0]).
FromJu°
());

	@node_modules/node-sass/src/sass_types/color.h

1 #i‚de‡
SASS_TYPES_COLOR_H


2 
	#SASS_TYPES_COLOR_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


9 
˛ass
 
	gCﬁ‹
 : 
public
 
SassVÆueWøµî
<
Cﬁ‹
> {

10 
public
:

11 
Cﬁ‹
(
Sass_VÆue
*);

12 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassColor"; }

13 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_Value **);

15 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

17 
NAN_METHOD
(
GëR
);

18 
NAN_METHOD
(
GëG
);

19 
NAN_METHOD
(
GëB
);

20 
NAN_METHOD
(
GëA
);

21 
NAN_METHOD
(
SëR
);

22 
NAN_METHOD
(
SëG
);

23 
NAN_METHOD
(
SëB
);

24 
NAN_METHOD
(
SëA
);

	@node_modules/node-sass/src/sass_types/error.cpp

1 
	~<«n.h
>

2 
	~"îr‹.h
"

3 
	~"../¸óã_°rög.h
"

5 
«me•a˚
 
	gSassTy≥s


7 
	gEº‹
::
Eº‹
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

9 
Sass_VÆue
* 
Eº‹
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

10 c⁄°* 
	gvÆue
 = "";

12 i‡(
	gøw_vÆ
.
size
() >= 1) {

13 i‡(!
øw_vÆ
[0]->
IsSåög
()) {

14  
Áû
("Argumíàshould bê®°rög.", 
out
);

17 
	gvÆue
 = 
¸óã_°rög
(
øw_vÆ
[0]);

20  *
	gout
 = 
ßss_make_îr‹
(
vÆue
);

23 
	gEº‹
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>) {}

	@node_modules/node-sass/src/sass_types/error.h

1 #i‚de‡
SASS_TYPES_ERROR_H


2 
	#SASS_TYPES_ERROR_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


9 
˛ass
 
	gEº‹
 : 
public
 
SassVÆueWøµî
<
Eº‹
> {

10 
public
:

11 
Eº‹
(
Sass_VÆue
*);

12 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassError"; }

13 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_Value **);

15 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

	@node_modules/node-sass/src/sass_types/factory.cpp

1 
	~<«n.h
>

2 
	~"Á˘‹y.h
"

3 
	~"vÆue.h
"

4 
	~"numbî.h
"

5 
	~"°rög.h
"

6 
	~"cﬁ‹.h
"

7 
	~"boﬁón.h
"

8 
	~"li°.h
"

9 
	~"m≠.h
"

10 
	~"nuŒ.h
"

11 
	~"îr‹.h
"

13 
«me•a˚
 
	gSassTy≥s


15 
	gSassTy≥s
::
VÆue
* 
Fa˘‹y
::
¸óã
(
Sass_VÆue
* 
v
) {

16 
ßss_vÆue_gë_èg
(
v
)) {

17 
SASS_NUMBER
:

18  
√w
 
Numbî
(
v
);

20 
	gSASS_STRING
:

21  
√w
 
Såög
(
v
);

23 
	gSASS_COLOR
:

24  
√w
 
Cﬁ‹
(
v
);

26 
	gSASS_BOOLEAN
:

27  &
Boﬁón
::
gë_sögÀt⁄
(
ßss_boﬁón_gë_vÆue
(
v
));

29 
	gSASS_LIST
:

30  
√w
 
Li°
(
v
);

32 
	gSASS_MAP
:

33  
√w
 
M≠
(
v
);

35 
	gSASS_NULL
:

36  &
NuŒ
::
gë_sögÀt⁄
();

38 
	gSASS_ERROR
:

39  
√w
 
Eº‹
(
v
);

42 c⁄° *
msg
 = "UnknownÅypeÉncountered.";

43 
	gN™
::
ThrowTy≥Eº‹
(
msg
);

44  
√w
 
Eº‹
(
ßss_make_îr‹
(
msg
));

48 
NAN_MODULE_INIT
(
Fa˘‹y
::
öôExp‹ts
) {

49 
N™
::
H™dÀSc›e
 
sc›e
;

50 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
ty≥s
 = 
N™
::
New
<v8::Object>();

52 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Numbî").
ToLoˇlChecked
(), 
Numbî
::
gë_c⁄°ru˘‹
());

53 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Såög").
ToLoˇlChecked
(), 
Såög
::
gë_c⁄°ru˘‹
());

54 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Cﬁ‹").
ToLoˇlChecked
(), 
Cﬁ‹
::
gë_c⁄°ru˘‹
());

55 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Boﬁón").
ToLoˇlChecked
(), 
Boﬁón
::
gë_c⁄°ru˘‹
());

56 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Li°").
ToLoˇlChecked
(), 
Li°
::
gë_c⁄°ru˘‹
());

57 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("M≠").
ToLoˇlChecked
(), 
M≠
::
gë_c⁄°ru˘‹
());

58 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("NuŒ").
ToLoˇlChecked
(), 
NuŒ
::
gë_c⁄°ru˘‹
());

59 
	gN™
::
Së
(
ty≥s
, 
N™
::
New
("Eº‹").
ToLoˇlChecked
(), 
Eº‹
::
gë_c⁄°ru˘‹
());

60 
	gN™
::
Së
(
èrgë
, 
N™
::
New
<
v8
::
Såög
>("ty≥s").
ToLoˇlChecked
(), 
ty≥s
);

63 
VÆue
* 
	gFa˘‹y
::
unwøp
(
v8
::
Loˇl
<v8::VÆue> 
obj
) {

65 i‡(!
obj
->
IsObje˘
(Ë|| obj.
As
<
v8
::
Obje˘
>()->
I¡î«lFõldCou¡
() != 1) {

66  
NULL
;

69  
	g°©ic_ˇ°
<
	gVÆue
*>(
	gN™
::
GëI¡î«lFõldPoöãr
(
obj
.
As
<
v8
::
Obje˘
>(), 0));

	@node_modules/node-sass/src/sass_types/factory.h

1 #i‚de‡
SASS_TYPES_FACTORY_H


2 
	#SASS_TYPES_FACTORY_H


	)

4 
	~<«n.h
>

5 
	~<ßss/vÆues.h
>

6 
	~"vÆue.h
"

8 
«me•a˚
 
	gSassTy≥s


12 ˛as†
	cFa˘‹y
 {

13 
	gpublic
:

14 
NAN_MODULE_INIT
(
öôExp‹ts
);

15 
VÆue
* 
¸óã
(
Sass_VÆue
*);

16 
VÆue
* 
unwøp
(
v8
::
Loˇl
<v8::Value>);

	@node_modules/node-sass/src/sass_types/list.cpp

1 
	~<«n.h
>

2 
	~"li°.h
"

4 
«me•a˚
 
	gSassTy≥s


6 
	gLi°
::
Li°
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

8 
Sass_VÆue
* 
Li°
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

9 
size_t
 
	gÀngth
 = 0;

10 
boﬁ
 
	gcomma
 = 
åue
;

12 i‡(
	gøw_vÆ
.
size
() >= 1) {

13 i‡(!
øw_vÆ
[0]->
IsNumbî
()) {

14  
Áû
("Fú°árgumíàshould bê™ i¡egî.", 
out
);

17 
	gÀngth
 = 
N™
::
To
<
uöt32_t
>(
øw_vÆ
[0]).
FromJu°
();

19 i‡(
	gøw_vÆ
.
size
() >= 2) {

20 i‡(!
øw_vÆ
[1]->
IsBoﬁón
()) {

21  
Áû
("Sec⁄dárgumíàshould bê®boﬁón.", 
out
);

24 
	gcomma
 = 
N™
::
To
<
boﬁ
>(
øw_vÆ
[1]).
FromJu°
();

28  *
	gout
 = 
ßss_make_li°
(
Àngth
, 
comma
 ? 
SASS_COMMA
 : 
SASS_SPACE
);

31 
	gLi°
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
¥Ÿo
) {

32 
N™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëLígth", 
GëLígth
);

33 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëSï¨©‹", 
GëSï¨©‹
);

34 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tSï¨©‹", 
SëSï¨©‹
);

35 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëVÆue", 
GëVÆue
);

36 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tVÆue", 
SëVÆue
);

39 
NAN_METHOD
(
Li°
::
GëVÆue
) {

41 i‡(
öfo
.
Lígth
() != 1) {

42  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

45 i‡(!
	göfo
[0]->
IsNumbî
()) {

46  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

49 
Sass_VÆue
* 
	gli°
 = 
unwøp
(
öfo
.
This
())->
vÆue
;

50 
size_t
 
	gödex
 = 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
();

53 i‡(
	gödex
 >
ßss_li°_gë_Àngth
(
li°
)) {

54  
N™
::
ThrowR™geEº‹
(N™::
New
("Ouào‡bound index").
ToLoˇlChecked
());

57 
	göfo
.
GëRëu∫VÆue
().
Së
(
Fa˘‹y
::
¸óã
(
ßss_li°_gë_vÆue
(
li°
, 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
()))->
gë_js_obje˘
());

60 
NAN_METHOD
(
Li°
::
SëVÆue
) {

61 i‡(
öfo
.
Lígth
() != 2) {

62  
N™
::
ThrowTy≥Eº‹
("ExpectedÅwoárguments");

65 i‡(!
	göfo
[0]->
IsNumbî
()) {

66  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

69 i‡(!
	göfo
[1]->
IsObje˘
()) {

70  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá SassValue object");

73 
VÆue
* 
	gßss_vÆue
 = 
Fa˘‹y
::
unwøp
(
öfo
[1]);

74 i‡(
	gßss_vÆue
) {

75 
ßss_li°_£t_vÆue
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<
uöt32_t
>(öfo[0]).
FromJu°
(), 
ßss_vÆue
->
gë_ßss_vÆue
());

77 
	gN™
::
ThrowTy≥Eº‹
("A SassValue isÉxpectedásÅheÜist item");

81 
NAN_METHOD
(
Li°
::
GëSï¨©‹
) {

82 
öfo
.
GëRëu∫VÆue
().
Së
(
ßss_li°_gë_£∑øt‹
(
unwøp
(öfo.
This
())->
vÆue
Ë=
SASS_COMMA
);

85 
NAN_METHOD
(
Li°
::
SëSï¨©‹
) {

86 i‡(
öfo
.
Lígth
() != 1) {

87  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

90 i‡(!
	göfo
[0]->
IsBoﬁón
()) {

91  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá boolean");

94 
ßss_li°_£t_£∑øt‹
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<
boﬁ
>(öfo[0]).
FromJu°
(Ë? 
SASS_COMMA
 : 
SASS_SPACE
);

97 
NAN_METHOD
(
Li°
::
GëLígth
) {

98 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
<
v8
::
Numbî
>(
ßss_li°_gë_Àngth
(
unwøp
(öfo.
This
())->
vÆue
)));

	@node_modules/node-sass/src/sass_types/list.h

1 #i‚de‡
SASS_TYPES_LIST_H


2 
	#SASS_TYPES_LIST_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


9 
˛ass
 
	gLi°
 : 
public
 
SassVÆueWøµî
<
Li°
> {

10 
public
:

11 
Li°
(
Sass_VÆue
*);

12 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassList"; }

13 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_Value **);

15 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

17 
NAN_METHOD
(
GëVÆue
);

18 
NAN_METHOD
(
SëVÆue
);

19 
NAN_METHOD
(
GëSï¨©‹
);

20 
NAN_METHOD
(
SëSï¨©‹
);

21 
NAN_METHOD
(
GëLígth
);

	@node_modules/node-sass/src/sass_types/map.cpp

1 
	~<«n.h
>

2 
	~"m≠.h
"

4 
«me•a˚
 
	gSassTy≥s


6 
	gM≠
::
M≠
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

8 
Sass_VÆue
* 
M≠
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

9 
size_t
 
	gÀngth
 = 0;

11 i‡(
	gøw_vÆ
.
size
() >= 1) {

12 i‡(!
øw_vÆ
[0]->
IsNumbî
()) {

13  
Áû
("Fú°árgumíàshould bê™ i¡egî.", 
out
);

16 
	gÀngth
 = 
N™
::
To
<
uöt32_t
>(
øw_vÆ
[0]).
FromJu°
();

19  *
	gout
 = 
ßss_make_m≠
(
Àngth
);

22 
	gM≠
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
¥Ÿo
) {

23 
N™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëLígth", 
GëLígth
);

24 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëKey", 
GëKey
);

25 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tKey", 
SëKey
);

26 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëVÆue", 
GëVÆue
);

27 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tVÆue", 
SëVÆue
);

30 
NAN_METHOD
(
M≠
::
GëVÆue
) {

32 i‡(
öfo
.
Lígth
() != 1) {

33  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

36 i‡(!
	göfo
[0]->
IsNumbî
()) {

37  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

40 
Sass_VÆue
* 
	gm≠
 = 
unwøp
(
öfo
.
This
())->
vÆue
;

41 
size_t
 
	gödex
 = 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
();

44 i‡(
	gödex
 >
ßss_m≠_gë_Àngth
(
m≠
)) {

45  
N™
::
ThrowR™geEº‹
(N™::
New
("Ouào‡bound index").
ToLoˇlChecked
());

48 
	göfo
.
GëRëu∫VÆue
().
Së
(
Fa˘‹y
::
¸óã
(
ßss_m≠_gë_vÆue
(
m≠
, 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
()))->
gë_js_obje˘
());

51 
NAN_METHOD
(
M≠
::
SëVÆue
) {

52 i‡(
öfo
.
Lígth
() != 2) {

53  
N™
::
ThrowTy≥Eº‹
("ExpectedÅwoárguments");

56 i‡(!
	göfo
[0]->
IsNumbî
()) {

57  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

60 i‡(!
	göfo
[1]->
IsObje˘
()) {

61  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá SassValue object");

64 
VÆue
* 
	gßss_vÆue
 = 
Fa˘‹y
::
unwøp
(
öfo
[1]);

65 i‡(
	gßss_vÆue
) {

66 
ßss_m≠_£t_vÆue
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<
uöt32_t
>(öfo[0]).
FromJu°
(), 
ßss_vÆue
->
gë_ßss_vÆue
());

68 
	gN™
::
ThrowTy≥Eº‹
("A SassValue isÉxpectedásá map value");

72 
NAN_METHOD
(
M≠
::
GëKey
) {

74 i‡(
öfo
.
Lígth
() != 1) {

75  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

78 i‡(!
	göfo
[0]->
IsNumbî
()) {

79  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

82 
Sass_VÆue
* 
	gm≠
 = 
unwøp
(
öfo
.
This
())->
vÆue
;

83 
size_t
 
	gödex
 = 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
();

86 i‡(
	gödex
 >
ßss_m≠_gë_Àngth
(
m≠
)) {

87  
N™
::
ThrowR™geEº‹
(N™::
New
("Ouào‡bound index").
ToLoˇlChecked
());

90 
	göfo
.
GëRëu∫VÆue
().
Së
(
Fa˘‹y
::
¸óã
(
ßss_m≠_gë_key
(
m≠
, 
N™
::
To
<
uöt32_t
>(
öfo
[0]).
FromJu°
()))->
gë_js_obje˘
());

93 
NAN_METHOD
(
M≠
::
SëKey
) {

94 i‡(
öfo
.
Lígth
() != 2) {

95  
N™
::
ThrowTy≥Eº‹
("ExpectedÅwoárguments");

98 i‡(!
	göfo
[0]->
IsNumbî
()) {

99  
	gN™
::
ThrowTy≥Eº‹
("Supplied index should beán integer");

102 i‡(!
	göfo
[1]->
IsObje˘
()) {

103  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá SassValue object");

106 
VÆue
* 
	gßss_vÆue
 = 
Fa˘‹y
::
unwøp
(
öfo
[1]);

107 i‡(
	gßss_vÆue
) {

108 
ßss_m≠_£t_key
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<
uöt32_t
>(öfo[0]).
FromJu°
(), 
ßss_vÆue
->
gë_ßss_vÆue
());

110 
	gN™
::
ThrowTy≥Eº‹
("A SassValue isÉxpectedásá map key");

114 
NAN_METHOD
(
M≠
::
GëLígth
) {

115 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
<
v8
::
Numbî
>(
ßss_m≠_gë_Àngth
(
unwøp
(öfo.
This
())->
vÆue
)));

	@node_modules/node-sass/src/sass_types/map.h

1 #i‚de‡
SASS_TYPES_MAP_H


2 
	#SASS_TYPES_MAP_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


9 
˛ass
 
	gM≠
 : 
public
 
SassVÆueWøµî
<
M≠
> {

10 
public
:

11 
M≠
(
Sass_VÆue
*);

12 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassMap"; }

13 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_Value **);

15 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

17 
NAN_METHOD
(
GëVÆue
);

18 
NAN_METHOD
(
SëVÆue
);

19 
NAN_METHOD
(
GëKey
);

20 
NAN_METHOD
(
SëKey
);

21 
NAN_METHOD
(
GëLígth
);

	@node_modules/node-sass/src/sass_types/null.cpp

1 
	~<«n.h
>

2 
	~"nuŒ.h
"

4 
«me•a˚
 
	gSassTy≥s


6 
	gN™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
NuŒ
::
c⁄°ru˘‹
;

7 
boﬁ
 
	gNuŒ
::
c⁄°ru˘‹_locked
 = 
Ál£
;

9 
	gNuŒ
::
NuŒ
() {}

11 
NuŒ
& NuŒ::
gë_sögÀt⁄
() {

12 
NuŒ
 
sögÀt⁄_ö°™˚
;

13  
	gsögÀt⁄_ö°™˚
;

16 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
NuŒ
::
gë_c⁄°ru˘‹
() {

17 
N™
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

18 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
c⁄¶oˇl
;

19 i‡(
	gc⁄°ru˘‹
.
IsEm±y
()) {

20 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::FunctionTemplate>(New);

22 
	gçl
->
SëCœssName
(
N™
::
New
("SassNuŒ").
ToLoˇlChecked
());

23 
	gçl
->
In°™˚Tem∂©e
()->
SëI¡î«lFõldCou¡
(1);

25 
	gc⁄¶oˇl
 = 
N™
::
GëFun˘i⁄
(
çl
).
ToLoˇlChecked
();

26 
	gc⁄°ru˘‹
.
Re£t
(
c⁄¶oˇl
);

28 
gë_sögÀt⁄
().
	gjs_obje˘
.
Re£t
(
N™
::
NewIn°™˚
(
c⁄¶oˇl
).
ToLoˇlChecked
());

29 
	gN™
::
SëI¡î«lFõldPoöãr
(
N™
::
New
(
gë_sögÀt⁄
().
js_obje˘
), 0, &get_singleton());

30 
	gN™
::
Së
(
c⁄¶oˇl
, 
N™
::
New
("NULL").
ToLoˇlChecked
(), N™::New(
gë_sögÀt⁄
().
js_obje˘
));

32 
	gc⁄°ru˘‹_locked
 = 
åue
;

34 
	gc⁄¶oˇl
 = 
N™
::
New
(
c⁄°ru˘‹
);

37  
	gsc›e
.
Esˇ≥
(
c⁄¶oˇl
);

40 
Sass_VÆue
* 
	gNuŒ
::
gë_ßss_vÆue
() {

41  
ßss_make_nuŒ
();

44 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
NuŒ
::
gë_js_obje˘
() {

45  
N™
::
New
(
this
->
js_obje˘
);

48 
NAN_METHOD
(
NuŒ
::
New
) {

50 i‡(
öfo
.
IsC⁄°ru˘CÆl
()) {

51 i‡(
c⁄°ru˘‹_locked
) {

52  
N™
::
ThrowTy≥Eº‹
("Cannot instantiate SassNull");

56 
	göfo
.
GëRëu∫VÆue
().
Së
(
gë_sögÀt⁄
().
gë_js_obje˘
());

	@node_modules/node-sass/src/sass_types/null.h

1 #i‚de‡
SASS_TYPES_NULL_H


2 
	#SASS_TYPES_NULL_H


	)

4 
	~<«n.h
>

5 
	~"vÆue.h
"

7 
«me•a˚
 
	gSassTy≥s


9 ˛as†
	cNuŒ
 : 
public
 
SassTy≥s
::
VÆue
 {

10 
public
:

11 
NuŒ
& 
gë_sögÀt⁄
();

12 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
gë_c⁄°ru˘‹
();

14 
Sass_VÆue
* 
gë_ßss_vÆue
();

15 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
gë_js_obje˘
();

17 
NAN_METHOD
(
New
);

19 
	g¥iv©e
:

20 
NuŒ
();

22 
	gN™
::
Pîsi°ít
<
v8
::
Obje˘
> 
js_obje˘
;

24 
	gN™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
c⁄°ru˘‹
;

25 
boﬁ
 
	gc⁄°ru˘‹_locked
;

	@node_modules/node-sass/src/sass_types/number.cpp

1 
	~<«n.h
>

2 
	~"numbî.h
"

3 
	~"../¸óã_°rög.h
"

5 
«me•a˚
 
	gSassTy≥s


7 
	gNumbî
::
Numbî
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

9 
Sass_VÆue
* 
Numbî
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

10 
	gvÆue
 = 0;

11 c⁄°* 
	gunô
 = "";

13 i‡(
	gøw_vÆ
.
size
() >= 1) {

14 i‡(!
øw_vÆ
[0]->
IsNumbî
()) {

15  
Áû
("Fú°árgumíàshould bê®numbî.", 
out
);

18 
	gvÆue
 = 
N™
::
To
<>(
øw_vÆ
[0]).
FromJu°
();

20 i‡(
	gøw_vÆ
.
size
() >= 2) {

21 i‡(!
øw_vÆ
[1]->
IsSåög
()) {

22  
Áû
("Sec⁄dárgumíàshould bê®°rög.", 
out
);

25 
	gunô
 = 
¸óã_°rög
(
øw_vÆ
[1]);

29  *
	gout
 = 
ßss_make_numbî
(
vÆue
, 
unô
);

32 
	gNumbî
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
¥Ÿo
) {

33 
N™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëVÆue", 
GëVÆue
);

34 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëUnô", 
GëUnô
);

35 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tVÆue", 
SëVÆue
);

36 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tUnô", 
SëUnô
);

39 
NAN_METHOD
(
Numbî
::
GëVÆue
) {

40 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
<
v8
::
Numbî
>(
ßss_numbî_gë_vÆue
(
unwøp
(öfo.
This
())->
vÆue
)));

43 
NAN_METHOD
(
Numbî
::
GëUnô
) {

44 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
<
v8
::
Såög
>(
ßss_numbî_gë_unô
(
unwøp
(öfo.
This
())->
vÆue
)).
ToLoˇlChecked
());

47 
NAN_METHOD
(
Numbî
::
SëVÆue
) {

49 i‡(
öfo
.
Lígth
() != 1) {

50  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

53 i‡(!
	göfo
[0]->
IsNumbî
()) {

54  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beáÇumber");

57 
ßss_numbî_£t_vÆue
(
unwøp
(
öfo
.
This
())->
vÆue
, 
N™
::
To
<>(öfo[0]).
FromJu°
());

60 
NAN_METHOD
(
Numbî
::
SëUnô
) {

61 i‡(
öfo
.
Lígth
() != 1) {

62  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

65 i‡(!
	göfo
[0]->
IsSåög
()) {

66  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá string");

69 
ßss_numbî_£t_unô
(
unwøp
(
öfo
.
This
())->
vÆue
, 
¸óã_°rög
(info[0]));

	@node_modules/node-sass/src/sass_types/number.h

1 #i‚de‡
SASS_TYPES_NUMBER_H


2 
	#SASS_TYPES_NUMBER_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


10 
˛ass
 
	gNumbî
 : 
public
 
SassVÆueWøµî
<
Numbî
> {

11 
public
:

12 
Numbî
(
Sass_VÆue
*);

13 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassNumber"; }

14 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_VÆuê**
out
);

16 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

18 
NAN_METHOD
(
GëVÆue
);

19 
NAN_METHOD
(
GëUnô
);

20 
NAN_METHOD
(
SëVÆue
);

21 
NAN_METHOD
(
SëUnô
);

	@node_modules/node-sass/src/sass_types/sass_value_wrapper.h

1 #i‚de‡
SASS_TYPES_SASS_VALUE_WRAPPER_H


2 
	#SASS_TYPES_SASS_VALUE_WRAPPER_H


	)

4 
	~<°dex˚±
>

5 
	~<ve˘‹
>

6 
	~<«n.h
>

7 
	~"vÆue.h
"

8 
	~"Á˘‹y.h
"

10 
«me•a˚
 
	gSassTy≥s


14 
	gãm∂©e
 <
˛ass
 
	gT
>

15 ˛as†
	cSassVÆueWøµî
 : 
public
 
SassTy≥s
::
VÆue
 {

16 
public
:

17 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassValue"; }

19 
SassVÆueWøµî
(
Sass_VÆue
*);

20 
	gvútuÆ
 ~
SassVÆueWøµî
();

22 
Sass_VÆue
* 
gë_ßss_vÆue
();

23 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
gë_js_obje˘
();

25 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
gë_c⁄°ru˘‹
();

26 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
gë_c⁄°ru˘‹_ãm∂©e
();

27 
NAN_METHOD
(
New
);

28 
Sass_VÆue
 *
Áû
(const *, Sass_Value **);

30 
	g¥Ÿe˘ed
:

31 
Sass_VÆue
* 
vÆue
;

32 
T
* 
unwøp
(
v8
::
Loˇl
<v8::
Obje˘
>);

34 
	g¥iv©e
:

35 
N™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
c⁄°ru˘‹
;

36 
	gN™
::
Pîsi°ít
<
v8
::
Obje˘
> 
js_obje˘
;

39 
	gãm∂©e
 <
˛ass
 
	gT
>

40 
	gN™
::
Pîsi°ít
<
v8
::
Fun˘i⁄
> 
SassVÆueWøµî
<
T
>::
c⁄°ru˘‹
;

42 
	gãm∂©e
 <
˛ass
 
	gT
>

43 
	gSassVÆueWøµî
<
	gT
>::
	$SassVÆueWøµî
(
Sass_VÆue
* 
v
) {

44 
this
->
vÆue
 = 
	`ßss_˛⁄e_vÆue
(
v
);

45 
	}
}

47 
	gãm∂©e
 <
˛ass
 
	gT
>

48 
	gSassVÆueWøµî
<
	gT
>::~
	$SassVÆueWøµî
() {

49 
this
->
js_obje˘
.
	`Re£t
();

50 
	`ßss_dñëe_vÆue
(
this
->
vÆue
);

51 
	}
}

53 
	gãm∂©e
 <
˛ass
 
	gT
>

54 
Sass_VÆue
* 
	gSassVÆueWøµî
<
	gT
>::
	$gë_ßss_vÆue
() {

55  
	`ßss_˛⁄e_vÆue
(
this
->
vÆue
);

56 
	}
}

58 
	gãm∂©e
 <
˛ass
 
	gT
>

59 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
SassVÆueWøµî
<
T
>::
	$gë_js_obje˘
() {

60 i‡(
this
->
js_obje˘
.
	`IsEm±y
()) {

61 
v8
::
Loˇl
<v8::
Obje˘
> 
wøµî
 = 
N™
::
	`NewIn°™˚
(
T
::
	`gë_c⁄°ru˘‹
()).
	`ToLoˇlChecked
();

62 
dñëe
 
°©ic_ˇ°
<
T
*>(
N™
::
	`GëI¡î«lFõldPoöãr
(
wøµî
, 0));

63 
N™
::
	`SëI¡î«lFõldPoöãr
(
wøµî
, 0, 
this
);

64 
this
->
js_obje˘
.
	`Re£t
(
wøµî
);

67  
N™
::
	`New
(
this
->
js_obje˘
);

68 
	}
}

70 
	gãm∂©e
 <
˛ass
 
	gT
>

71 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄Tem∂©e
> 
SassVÆueWøµî
<
T
>::
	$gë_c⁄°ru˘‹_ãm∂©e
() {

72 
N™
::
Esˇ∑bÀH™dÀSc›e
 
sc›e
;

73 
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
çl
 = 
N™
::
New
<v8::FunctionTemplate>(New);

74 
çl
->
	`SëCœssName
(
N™
::
New
<
v8
::
Såög
>(
T
::
	`gë_c⁄°ru˘‹_«me
()).
	`ToLoˇlChecked
());

75 
çl
->
	`In°™˚Tem∂©e
()->
	`SëI¡î«lFõldCou¡
(1);

76 
T
::
	`öôPrŸŸy≥
(
çl
);

78  
sc›e
.
	`Esˇ≥
(
çl
);

79 
	}
}

81 
	gãm∂©e
 <
˛ass
 
	gT
>

82 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
SassVÆueWøµî
<
T
>::
	$gë_c⁄°ru˘‹
() {

83 i‡(
c⁄°ru˘‹
.
	`IsEm±y
()) {

84 
c⁄°ru˘‹
.
	`Re£t
(
N™
::
	`GëFun˘i⁄
(
T
::
	`gë_c⁄°ru˘‹_ãm∂©e
()).
	`ToLoˇlChecked
());

87  
N™
::
	`New
(
c⁄°ru˘‹
);

88 
	}
}

90 
	gãm∂©e
 <
˛ass
 
	gT
>

91 
NAN_METHOD
(
SassVÆueWøµî
<
T
>::
New
) {

92 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
loˇlArgs
(
öfo
.
Lígth
());

94 autÿ
	gi
 = 0; i < 
	göfo
.
Lígth
(); ++i) {

95 
	gloˇlArgs
[
i
] = 
öfo
[i];

97 i‡(
	göfo
.
IsC⁄°ru˘CÆl
()) {

98 
Sass_VÆue
* 
	gvÆue
;

99 i‡(
	gT
::
c⁄°ru˘
(
loˇlArgs
, &
vÆue
Ë!
NULL
) {

100 
T
* 
obj
 = 
√w
 T(
vÆue
);

101 
ßss_dñëe_vÆue
(
vÆue
);

103 
	gN™
::
SëI¡î«lFõldPoöãr
(
öfo
.
This
(), 0, 
obj
);

104 
	gobj
->
	gjs_obje˘
.
Re£t
(
öfo
.
This
());

106  
	gN™
::
ThrowEº‹
(
N™
::
New
<
v8
::
Såög
>(
ßss_îr‹_gë_mesßge
(
vÆue
)).
ToLoˇlChecked
());

109 
	gv8
::
Loˇl
<
v8
::
Fun˘i⁄
> 
c⁄s
 = 
T
::
gë_c⁄°ru˘‹
();

110 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
ö°
;

111 i‡(
	gN™
::
NewIn°™˚
(
c⁄s
, 
öfo
.
Lígth
(), &
loˇlArgs
[0]).
ToLoˇl
(&
ö°
)) {

112 
	göfo
.
GëRëu∫VÆue
().
Së
(
ö°
);

114 
	göfo
.
GëRëu∫VÆue
().
Së
(
N™
::
Undeföed
());

119 
	gãm∂©e
 <
˛ass
 
	gT
>

120 
T
* 
	gSassVÆueWøµî
<
	gT
>::
unwøp
(
v8
::
Loˇl
<v8::
Obje˘
> 
obj
) {

122  
°©ic_ˇ°
<
T
*>(
Fa˘‹y
::
unwøp
(
obj
));

125 
	gãm∂©e
 <
˛ass
 
	gT
>

126 
Sass_VÆue
 *
	gSassVÆueWøµî
<
	gT
>::
	$Áû
(c⁄° *
ªas⁄
, 
Sass_VÆue
 **
out
) {

127 *
out
 = 
	`ßss_make_îr‹
(
ªas⁄
);

128  
NULL
;

129 
	}
}

	@node_modules/node-sass/src/sass_types/string.cpp

1 
	~<«n.h
>

2 
	~"°rög.h
"

3 
	~"../¸óã_°rög.h
"

5 
«me•a˚
 
	gSassTy≥s


7 
	gSåög
::
Såög
(
Sass_VÆue
* 
v
Ë: 
SassVÆueWøµî
(v) {}

9 
Sass_VÆue
* 
Såög
::
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>> 
øw_vÆ
, Sass_VÆuê**
out
) {

10 c⁄°* 
	gvÆue
 = "";

12 i‡(
	gøw_vÆ
.
size
() >= 1) {

13 i‡(!
øw_vÆ
[0]->
IsSåög
()) {

14  
Áû
("Argumíàshould bê®°rög.", 
out
);

17 
	gvÆue
 = 
¸óã_°rög
(
øw_vÆ
[0]);

20  *
	gout
 = 
ßss_make_°rög
(
vÆue
);

23 
	gSåög
::
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
> 
¥Ÿo
) {

24 
N™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "gëVÆue", 
GëVÆue
);

25 
	gN™
::
SëPrŸŸy≥Mëhod
(
¥Ÿo
, "£tVÆue", 
SëVÆue
);

28 
NAN_METHOD
(
Såög
::
GëVÆue
) {

29 
öfo
.
GëRëu∫VÆue
().
Së
(
N™
::
New
<
v8
::
Såög
>(
ßss_°rög_gë_vÆue
(
unwøp
(öfo.
This
())->
vÆue
)).
ToLoˇlChecked
());

32 
NAN_METHOD
(
Såög
::
SëVÆue
) {

33 i‡(
öfo
.
Lígth
() != 1) {

34  
N™
::
ThrowTy≥Eº‹
("Expected just oneárgument");

37 i‡(!
	göfo
[0]->
IsSåög
()) {

38  
	gN™
::
ThrowTy≥Eº‹
("Supplied value should beá string");

41 
ßss_°rög_£t_vÆue
(
unwøp
(
öfo
.
This
())->
vÆue
, 
¸óã_°rög
(info[0]));

	@node_modules/node-sass/src/sass_types/string.h

1 #i‚de‡
SASS_TYPES_STRING_H


2 
	#SASS_TYPES_STRING_H


	)

4 
	~<«n.h
>

5 
	~"ßss_vÆue_wøµî.h
"

7 
«me•a˚
 
	gSassTy≥s


9 
˛ass
 
	gSåög
 : 
public
 
SassVÆueWøµî
<
Såög
> {

10 
public
:

11 
Såög
(
Sass_VÆue
*);

12 c⁄°* 
gë_c⁄°ru˘‹_«me
() {  "SassString"; }

13 
Sass_VÆue
* 
c⁄°ru˘
(c⁄° 
°d
::
ve˘‹
<
v8
::
Loˇl
<v8::
VÆue
>>, Sass_Value **);

15 
öôPrŸŸy≥
(
v8
::
Loˇl
<v8::
Fun˘i⁄Tem∂©e
>);

17 
NAN_METHOD
(
GëVÆue
);

18 
NAN_METHOD
(
SëVÆue
);

	@node_modules/node-sass/src/sass_types/value.h

1 #i‚de‡
SASS_TYPES_VALUE_H


2 
	#SASS_TYPES_VALUE_H


	)

4 
	~<«n.h
>

5 
	~<ßss/vÆues.h
>

7 
«me•a˚
 
	gSassTy≥s


10 ˛as†
	cVÆue
 {

11 
	gpublic
:

12 
vútuÆ
 
Sass_VÆue
* 
gë_ßss_vÆue
() =0;

13 
vútuÆ
 
	gv8
::
Loˇl
<
v8
::
Obje˘
> 
gë_js_obje˘
() =0;

	@node_modules/node-uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@node_modules/uuid/benchmark/benchmark-native.c

7 
	~<°dio.h
>

8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 
	~<uuid/uuid.h
>

12 
	$maö
() {

13 
uuid_t
 
myid
;

14 
buf
[36+1];

15 
i
;

16 
timevÆ
 
t
;

17 
°¨t
, 
föish
;

19 
	`gëtimeofday
(&
t
, 
NULL
);

20 
°¨t
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

22 
n
 = 2e5;

23 
i
 = 0; i < 
n
; i++) {

24 
	`uuid_gíî©e
(
myid
);

25 
	`uuid_u≈¨£
(
myid
, 
buf
);

28 
	`gëtimeofday
(&
t
, 
NULL
);

29 
föish
 = 
t
.
tv_£c
 +Å.
tv_u£c
/1e6;

30 
dur
 = 
föish
 - 
°¨t
;

32 
	`¥ötf
("%d uuids/£c", ()(
n
/
dur
));

34 
	}
}

	@
1
.
0
201
11485
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/fsevents.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_callbacks_pre_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters_43_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_converters_pre_43_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_implementation_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_implementation_pre_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_maybe_43_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_maybe_pre_43_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_new.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_object_wrap.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_persistent_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_persistent_pre_12_inl.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_string_bytes.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_typedarray_contents.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/nan/nan_weak.h
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/node_modules/node-uuid/benchmark/benchmark-native.c
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/async.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/constants.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/locking.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/methods.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/storage.cc
node_modules/browser-sync/node_modules/chokidar/node_modules/fsevents/src/thread.cc
node_modules/browser-sync/node_modules/localtunnel/node_modules/request/node_modules/node-uuid/benchmark/benchmark-native.c
node_modules/fsevents/fsevents.cc
node_modules/fsevents/node_modules/node-uuid/benchmark/benchmark-native.c
node_modules/fsevents/src/async.cc
node_modules/fsevents/src/constants.cc
node_modules/fsevents/src/locking.cc
node_modules/fsevents/src/methods.cc
node_modules/fsevents/src/storage.cc
node_modules/fsevents/src/thread.cc
node_modules/less/node_modules/request/node_modules/node-uuid/benchmark/benchmark-native.c
node_modules/nan/nan.h
node_modules/nan/nan_callbacks.h
node_modules/nan/nan_callbacks_12_inl.h
node_modules/nan/nan_callbacks_pre_12_inl.h
node_modules/nan/nan_converters.h
node_modules/nan/nan_converters_43_inl.h
node_modules/nan/nan_converters_pre_43_inl.h
node_modules/nan/nan_implementation_12_inl.h
node_modules/nan/nan_implementation_pre_12_inl.h
node_modules/nan/nan_maybe_43_inl.h
node_modules/nan/nan_maybe_pre_43_inl.h
node_modules/nan/nan_new.h
node_modules/nan/nan_object_wrap.h
node_modules/nan/nan_persistent_12_inl.h
node_modules/nan/nan_persistent_pre_12_inl.h
node_modules/nan/nan_string_bytes.h
node_modules/nan/nan_typedarray_contents.h
node_modules/nan/nan_weak.h
node_modules/node-gyp/gyp/data/win/large-pdb-shim.cc
node_modules/node-gyp/src/win_delay_load_hook.c
node_modules/node-sass/src/binding.cpp
node_modules/node-sass/src/callback_bridge.h
node_modules/node-sass/src/create_string.cpp
node_modules/node-sass/src/create_string.h
node_modules/node-sass/src/custom_function_bridge.cpp
node_modules/node-sass/src/custom_function_bridge.h
node_modules/node-sass/src/custom_importer_bridge.cpp
node_modules/node-sass/src/custom_importer_bridge.h
node_modules/node-sass/src/libsass/contrib/plugin.cpp
node_modules/node-sass/src/libsass/include/sass.h
node_modules/node-sass/src/libsass/include/sass/base.h
node_modules/node-sass/src/libsass/include/sass/context.h
node_modules/node-sass/src/libsass/include/sass/functions.h
node_modules/node-sass/src/libsass/include/sass/values.h
node_modules/node-sass/src/libsass/include/sass/version.h
node_modules/node-sass/src/libsass/include/sass2scss.h
node_modules/node-sass/src/libsass/src/ast.cpp
node_modules/node-sass/src/libsass/src/ast.hpp
node_modules/node-sass/src/libsass/src/ast_def_macros.hpp
node_modules/node-sass/src/libsass/src/ast_factory.hpp
node_modules/node-sass/src/libsass/src/ast_fwd_decl.hpp
node_modules/node-sass/src/libsass/src/b64/cencode.h
node_modules/node-sass/src/libsass/src/b64/encode.h
node_modules/node-sass/src/libsass/src/backtrace.hpp
node_modules/node-sass/src/libsass/src/base64vlq.cpp
node_modules/node-sass/src/libsass/src/base64vlq.hpp
node_modules/node-sass/src/libsass/src/bind.cpp
node_modules/node-sass/src/libsass/src/bind.hpp
node_modules/node-sass/src/libsass/src/c99func.c
node_modules/node-sass/src/libsass/src/cencode.c
node_modules/node-sass/src/libsass/src/color_maps.cpp
node_modules/node-sass/src/libsass/src/color_maps.hpp
node_modules/node-sass/src/libsass/src/constants.cpp
node_modules/node-sass/src/libsass/src/constants.hpp
node_modules/node-sass/src/libsass/src/context.cpp
node_modules/node-sass/src/libsass/src/context.hpp
node_modules/node-sass/src/libsass/src/cssize.cpp
node_modules/node-sass/src/libsass/src/cssize.hpp
node_modules/node-sass/src/libsass/src/debug.hpp
node_modules/node-sass/src/libsass/src/debugger.hpp
node_modules/node-sass/src/libsass/src/emitter.cpp
node_modules/node-sass/src/libsass/src/emitter.hpp
node_modules/node-sass/src/libsass/src/environment.cpp
node_modules/node-sass/src/libsass/src/environment.hpp
node_modules/node-sass/src/libsass/src/error_handling.cpp
node_modules/node-sass/src/libsass/src/error_handling.hpp
node_modules/node-sass/src/libsass/src/eval.cpp
node_modules/node-sass/src/libsass/src/eval.hpp
node_modules/node-sass/src/libsass/src/expand.cpp
node_modules/node-sass/src/libsass/src/expand.hpp
node_modules/node-sass/src/libsass/src/extend.cpp
node_modules/node-sass/src/libsass/src/extend.hpp
node_modules/node-sass/src/libsass/src/file.cpp
node_modules/node-sass/src/libsass/src/file.hpp
node_modules/node-sass/src/libsass/src/functions.cpp
node_modules/node-sass/src/libsass/src/functions.hpp
node_modules/node-sass/src/libsass/src/inspect.cpp
node_modules/node-sass/src/libsass/src/inspect.hpp
node_modules/node-sass/src/libsass/src/json.cpp
node_modules/node-sass/src/libsass/src/json.hpp
node_modules/node-sass/src/libsass/src/kwd_arg_macros.hpp
node_modules/node-sass/src/libsass/src/lexer.cpp
node_modules/node-sass/src/libsass/src/lexer.hpp
node_modules/node-sass/src/libsass/src/listize.cpp
node_modules/node-sass/src/libsass/src/listize.hpp
node_modules/node-sass/src/libsass/src/mapping.hpp
node_modules/node-sass/src/libsass/src/memory_manager.cpp
node_modules/node-sass/src/libsass/src/memory_manager.hpp
node_modules/node-sass/src/libsass/src/node.cpp
node_modules/node-sass/src/libsass/src/node.hpp
node_modules/node-sass/src/libsass/src/operation.hpp
node_modules/node-sass/src/libsass/src/output.cpp
node_modules/node-sass/src/libsass/src/output.hpp
node_modules/node-sass/src/libsass/src/parser.cpp
node_modules/node-sass/src/libsass/src/parser.hpp
node_modules/node-sass/src/libsass/src/paths.hpp
node_modules/node-sass/src/libsass/src/plugins.cpp
node_modules/node-sass/src/libsass/src/plugins.hpp
node_modules/node-sass/src/libsass/src/position.cpp
node_modules/node-sass/src/libsass/src/position.hpp
node_modules/node-sass/src/libsass/src/prelexer.cpp
node_modules/node-sass/src/libsass/src/prelexer.hpp
node_modules/node-sass/src/libsass/src/remove_placeholders.cpp
node_modules/node-sass/src/libsass/src/remove_placeholders.hpp
node_modules/node-sass/src/libsass/src/sass.cpp
node_modules/node-sass/src/libsass/src/sass.hpp
node_modules/node-sass/src/libsass/src/sass2scss.cpp
node_modules/node-sass/src/libsass/src/sass_context.cpp
node_modules/node-sass/src/libsass/src/sass_context.hpp
node_modules/node-sass/src/libsass/src/sass_functions.cpp
node_modules/node-sass/src/libsass/src/sass_functions.hpp
node_modules/node-sass/src/libsass/src/sass_util.cpp
node_modules/node-sass/src/libsass/src/sass_util.hpp
node_modules/node-sass/src/libsass/src/sass_values.cpp
node_modules/node-sass/src/libsass/src/sass_values.hpp
node_modules/node-sass/src/libsass/src/source_map.cpp
node_modules/node-sass/src/libsass/src/source_map.hpp
node_modules/node-sass/src/libsass/src/subset_map.hpp
node_modules/node-sass/src/libsass/src/to_c.cpp
node_modules/node-sass/src/libsass/src/to_c.hpp
node_modules/node-sass/src/libsass/src/to_value.cpp
node_modules/node-sass/src/libsass/src/to_value.hpp
node_modules/node-sass/src/libsass/src/units.cpp
node_modules/node-sass/src/libsass/src/units.hpp
node_modules/node-sass/src/libsass/src/utf8.h
node_modules/node-sass/src/libsass/src/utf8/checked.h
node_modules/node-sass/src/libsass/src/utf8/core.h
node_modules/node-sass/src/libsass/src/utf8/unchecked.h
node_modules/node-sass/src/libsass/src/utf8_string.cpp
node_modules/node-sass/src/libsass/src/utf8_string.hpp
node_modules/node-sass/src/libsass/src/util.cpp
node_modules/node-sass/src/libsass/src/util.hpp
node_modules/node-sass/src/libsass/src/values.cpp
node_modules/node-sass/src/libsass/src/values.hpp
node_modules/node-sass/src/libsass/test/test_node.cpp
node_modules/node-sass/src/libsass/test/test_paths.cpp
node_modules/node-sass/src/libsass/test/test_selector_difference.cpp
node_modules/node-sass/src/libsass/test/test_specificity.cpp
node_modules/node-sass/src/libsass/test/test_subset_map.cpp
node_modules/node-sass/src/libsass/test/test_superselector.cpp
node_modules/node-sass/src/libsass/test/test_unification.cpp
node_modules/node-sass/src/sass_context_wrapper.cpp
node_modules/node-sass/src/sass_context_wrapper.h
node_modules/node-sass/src/sass_types/boolean.cpp
node_modules/node-sass/src/sass_types/boolean.h
node_modules/node-sass/src/sass_types/color.cpp
node_modules/node-sass/src/sass_types/color.h
node_modules/node-sass/src/sass_types/error.cpp
node_modules/node-sass/src/sass_types/error.h
node_modules/node-sass/src/sass_types/factory.cpp
node_modules/node-sass/src/sass_types/factory.h
node_modules/node-sass/src/sass_types/list.cpp
node_modules/node-sass/src/sass_types/list.h
node_modules/node-sass/src/sass_types/map.cpp
node_modules/node-sass/src/sass_types/map.h
node_modules/node-sass/src/sass_types/null.cpp
node_modules/node-sass/src/sass_types/null.h
node_modules/node-sass/src/sass_types/number.cpp
node_modules/node-sass/src/sass_types/number.h
node_modules/node-sass/src/sass_types/sass_value_wrapper.h
node_modules/node-sass/src/sass_types/string.cpp
node_modules/node-sass/src/sass_types/string.h
node_modules/node-sass/src/sass_types/value.h
node_modules/node-uuid/benchmark/benchmark-native.c
node_modules/uuid/benchmark/benchmark-native.c
